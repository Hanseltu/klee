; ModuleID = 'klee_init_env.bc'
source_filename = "/home/haoxin/haoxin-data/smu-research/klee/runtime/POSIX/klee_init_env.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.exe_file_t.17 = type { i32, i32, i64, %struct.exe_disk_file_t.16* }
%struct.exe_disk_file_t.16 = type { i32, i8*, %struct.stat64.15* }
%struct.stat64.15 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec.14, %struct.timespec.14, %struct.timespec.14, [3 x i64] }
%struct.timespec.14 = type { i64, i64 }
%struct.exe_file_system_t.18 = type { i32, %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16*, i32, %struct.exe_disk_file_t.16*, i32, i32*, i32*, i32*, i32*, i32*, i32*, i32* }
%struct.cgc_prng = type { %struct.cgc_aes_state, [16 x i8], [16 x i8], i8 }
%struct.cgc_aes_state = type { [16 x i8], [16 x i8], [16 x i8] }
%struct.exe_sym_env_t.19 = type { [32 x %struct.exe_file_t.17], i32, i32, i32 }
%struct.__va_list_tag.13 = type { i32, i32, i8*, i8* }
%struct.statfs.11 = type { i64, i64, i64, i64, i64, i64, i64, %struct.__fsid_t.10, i64, i64, i64, [4 x i64] }
%struct.__fsid_t.10 = type { [2 x i32] }
%struct.dirent64.12 = type { i64, i64, i16, i8, [256 x i8] }
%struct.cgc_timeval = type { i32, i32 }
%struct.cgc_fd_set = type { [16 x i64] }
%struct.termios = type { i32, i32, i32, i32, i8, [32 x i8], i32, i32 }
%struct.winsize = type { i16, i16, i16, i16 }
%struct.sigaction = type { %union.anon, %struct.cgc_fd_set, i32, void ()* }
%union.anon = type { void (i32)* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.tms = type { i64, i64, i64, i64 }
%struct.utmpx = type opaque
%struct.utmp = type { i16, i32, [32 x i8], [4 x i8], [32 x i8], [256 x i8], %struct.exit_status, i32, %struct.cgc_timeval, [4 x i32], [20 x i8] }
%struct.exit_status = type { i16, i16 }
%struct.rusage = type { %struct.timespec.14, %struct.timespec.14, %union.anon.10, %union.anon.10, %union.anon.10, %union.anon.10, %union.anon.10, %union.anon.10, %union.anon.10, %union.anon.10, %union.anon.10, %union.anon.10, %union.anon.10, %union.anon.10, %union.anon.10, %union.anon.10 }
%union.anon.10 = type { i64 }
%struct.siginfo_t = type { i32, i32, i32, i32, %union.anon.0 }
%union.anon.0 = type { %struct.anon.3, [80 x i8] }
%struct.anon.3 = type { i32, i32, i32, i64, i64 }

@__const.klee_init_env.sym_arg_name = private unnamed_addr constant [6 x i8] c"arg\00\00\00", align 1
@.str = private unnamed_addr constant [7 x i8] c"--help\00", align 1
@.str.1 = private unnamed_addr constant [964 x i8] c"klee_init_env\0A\0Ausage: (klee_init_env) [options] [program arguments]\0A  -sym-arg <N>              - Replace by a symbolic argument with length N\0A  -sym-args <MIN> <MAX> <N> - Replace by at least MIN arguments and at most\0A                              MAX arguments, each with maximum length N\0A  -sym-files <NUM> <N>      - Make NUM symbolic files ('A', 'B', 'C', etc.),\0A                              each with size N\0A  -sym-stdin <N>            - Make stdin symbolic with size N.\0A  -sym-stdout               - Make stdout symbolic.\0A  -save-all-writes          - Allow write operations to execute as expected\0A                              even if they exceed the file size. If set to 0, all\0A                              writes exceeding the initial file size are discarded.\0A                              Note: file offset is always incremented.\0A  -max-fail <N>             - Allow up to N injected failures\0A  -fd-fail                  - Shortcut for '-max-fail 1'\0A\0A\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"--sym-arg\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"-sym-arg\00", align 1
@.str.4 = private unnamed_addr constant [48 x i8] c"--sym-arg expects an integer argument <max-len>\00", align 1
@.str.5 = private unnamed_addr constant [45 x i8] c"No more than 100 symbolic arguments allowed.\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"--sym-args\00", align 1
@.str.7 = private unnamed_addr constant [10 x i8] c"-sym-args\00", align 1
@.str.8 = private unnamed_addr constant [77 x i8] c"--sym-args expects three integer arguments <min-argvs> <max-argvs> <max-len>\00", align 1
@.str.9 = private unnamed_addr constant [28 x i8] c"Invalid range to --sym-args\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"n_args\00", align 1
@.str.11 = private unnamed_addr constant [12 x i8] c"--sym-files\00", align 1
@.str.12 = private unnamed_addr constant [11 x i8] c"-sym-files\00", align 1
@.str.13 = private unnamed_addr constant [72 x i8] c"--sym-files expects two integer arguments <no-sym-files> <sym-file-len>\00", align 1
@.str.14 = private unnamed_addr constant [39 x i8] c"Multiple --sym-files are not allowed.\0A\00", align 1
@.str.15 = private unnamed_addr constant [65 x i8] c"The first argument to --sym-files (number of files) cannot be 0\0A\00", align 1
@.str.16 = private unnamed_addr constant [60 x i8] c"The second argument to --sym-files (file size) cannot be 0\0A\00", align 1
@.str.17 = private unnamed_addr constant [12 x i8] c"--sym-stdin\00", align 1
@.str.18 = private unnamed_addr constant [11 x i8] c"-sym-stdin\00", align 1
@.str.19 = private unnamed_addr constant [57 x i8] c"--sym-stdin expects one integer argument <sym-stdin-len>\00", align 1
@.str.20 = private unnamed_addr constant [13 x i8] c"--sym-stdout\00", align 1
@.str.21 = private unnamed_addr constant [12 x i8] c"-sym-stdout\00", align 1
@.str.22 = private unnamed_addr constant [18 x i8] c"--save-all-writes\00", align 1
@.str.23 = private unnamed_addr constant [17 x i8] c"-save-all-writes\00", align 1
@.str.24 = private unnamed_addr constant [10 x i8] c"--fd-fail\00", align 1
@.str.25 = private unnamed_addr constant [9 x i8] c"-fd-fail\00", align 1
@.str.26 = private unnamed_addr constant [12 x i8] c"--bout-file\00", align 1
@.str.27 = private unnamed_addr constant [11 x i8] c"-bout-file\00", align 1
@.str.28 = private unnamed_addr constant [11 x i8] c"--max-fail\00", align 1
@.str.29 = private unnamed_addr constant [10 x i8] c"-max-fail\00", align 1
@.str.30 = private unnamed_addr constant [54 x i8] c"--max-fail expects an integer argument <max-failures>\00", align 1
@.str.31 = private unnamed_addr constant [73 x i8] c"/home/haoxin/haoxin-data/smu-research/klee/runtime/POSIX/klee_init_env.c\00", align 1
@.str.32 = private unnamed_addr constant [9 x i8] c"user.err\00", align 1
@.str.33 = private unnamed_addr constant [37 x i8] c"too many arguments for klee_init_env\00", align 1
@.str.34 = private unnamed_addr constant [32 x i8] c"\0AWelcome to Palindrome Finder\0A\0A\00", align 1
@.str.1.35 = private unnamed_addr constant [38 x i8] c"\09Please enter a possible palindrome: \00", align 1
@.str.2.36 = private unnamed_addr constant [34 x i8] c"\09\09Nope, that's not a palindrome\0A\0A\00", align 1
@.str.3.37 = private unnamed_addr constant [30 x i8] c"\09\09Yes, that's a palindrome!\0A\0A\00", align 1
@.str.4.38 = private unnamed_addr constant [16 x i8] c"\0A\0AEASTER EGG!\0A\0A\00", align 1
@__exe_env = dso_local global { <{ %struct.exe_file_t.17, %struct.exe_file_t.17, %struct.exe_file_t.17, [29 x %struct.exe_file_t.17] }>, i32, i32, i32, [4 x i8] } { <{ %struct.exe_file_t.17, %struct.exe_file_t.17, %struct.exe_file_t.17, [29 x %struct.exe_file_t.17] }> <{ %struct.exe_file_t.17 { i32 0, i32 5, i64 0, %struct.exe_disk_file_t.16* null }, %struct.exe_file_t.17 { i32 1, i32 9, i64 0, %struct.exe_disk_file_t.16* null }, %struct.exe_file_t.17 { i32 2, i32 9, i64 0, %struct.exe_disk_file_t.16* null }, [29 x %struct.exe_file_t.17] zeroinitializer }>, i32 18, i32 0, i32 0, [4 x i8] undef }, align 8, !dbg !0
@__exe_fs = common dso_local global %struct.exe_file_system_t.18 zeroinitializer, align 8, !dbg !6
@__const.klee_init_fds.name = private unnamed_addr constant [7 x i8] c"?-data\00", align 1
@.str.41 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.1.42 = private unnamed_addr constant [6 x i8] c"stdin\00", align 1
@.str.2.43 = private unnamed_addr constant [10 x i8] c"read_fail\00", align 1
@.str.3.44 = private unnamed_addr constant [11 x i8] c"write_fail\00", align 1
@.str.4.45 = private unnamed_addr constant [11 x i8] c"close_fail\00", align 1
@.str.5.46 = private unnamed_addr constant [15 x i8] c"ftruncate_fail\00", align 1
@.str.6.47 = private unnamed_addr constant [12 x i8] c"getcwd_fail\00", align 1
@.str.7.48 = private unnamed_addr constant [7 x i8] c"stdout\00", align 1
@.str.8.49 = private unnamed_addr constant [14 x i8] c"model_version\00", align 1
@.str.9.50 = private unnamed_addr constant [6 x i8] c"-stat\00", align 1
@.str.10.51 = private unnamed_addr constant [5 x i8] c"size\00", align 1
@.str.11.52 = private unnamed_addr constant [67 x i8] c"/home/haoxin/haoxin-data/smu-research/klee/runtime/POSIX/fd_init.c\00", align 1
@__PRETTY_FUNCTION__.__create_new_dfile = private unnamed_addr constant [88 x i8] c"void __create_new_dfile(exe_disk_file_t *, unsigned int, const char *, struct stat64 *)\00", align 1
@.str.55 = private unnamed_addr constant [74 x i8] c"/home/haoxin/haoxin-data/smu-research/klee/runtime/Intrinsic/klee_range.c\00", align 1
@.str.1.56 = private unnamed_addr constant [14 x i8] c"invalid range\00", align 1
@.str.2.57 = private unnamed_addr constant [5 x i8] c"user\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @cgc_initialize_flag_page, i8* null }]
@cgc_internal_prng = internal global %struct.cgc_prng* null, align 8
@__const.cgc_try_init_prng.prng_seed = private unnamed_addr constant <{ [32 x i8], [16 x i8] }> <{ [32 x i8] c"seedseedseedseed0123456789abcdef", [16 x i8] zeroinitializer }>, align 16
@.str.60 = private unnamed_addr constant [5 x i8] c"seed\00", align 1
@.str.1.61 = private unnamed_addr constant [6 x i8] c"%2hhx\00", align 1
@.str.70 = private unnamed_addr constant [46 x i8] c"Undefined call to open(): O_TRUNC | O_RDONLY\0A\00", align 1
@.str.1.71 = private unnamed_addr constant [47 x i8] c"Undefined call to open(): O_EXCL w/o O_RDONLY\0A\00", align 1
@.str.2.74 = private unnamed_addr constant [44 x i8] c"symbolic file descriptor, ignoring (ENOENT)\00", align 1
@close.n_calls = internal global i32 0, align 4, !dbg !100
@read.n_calls = internal global i32 0, align 4, !dbg !149
@.str.3.77 = private unnamed_addr constant [12 x i8] c"f->off >= 0\00", align 1
@.str.4.78 = private unnamed_addr constant [62 x i8] c"/home/haoxin/haoxin-data/smu-research/klee/runtime/POSIX/fd.c\00", align 1
@__PRETTY_FUNCTION__.read = private unnamed_addr constant [34 x i8] c"ssize_t read(int, void *, size_t)\00", align 1
@write.n_calls = internal global i32 0, align 4, !dbg !158
@.str.5.81 = private unnamed_addr constant [7 x i8] c"r >= 0\00", align 1
@__PRETTY_FUNCTION__.write = private unnamed_addr constant [41 x i8] c"ssize_t write(int, const void *, size_t)\00", align 1
@.str.6.82 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.7.83 = private unnamed_addr constant [24 x i8] c"write() ignores bytes.\0A\00", align 1
@.str.8.86 = private unnamed_addr constant [18 x i8] c"new_off == f->off\00", align 1
@__PRETTY_FUNCTION__.__fd_lseek = private unnamed_addr constant [38 x i8] c"off64_t __fd_lseek(int, off64_t, int)\00", align 1
@.str.9.91 = private unnamed_addr constant [33 x i8] c"symbolic file, ignoring (ENOENT)\00", align 1
@chmod.n_calls = internal global i32 0, align 4, !dbg !165
@fchmod.n_calls = internal global i32 0, align 4, !dbg !172
@.str.25.92 = private unnamed_addr constant [32 x i8] c"symbolic file, ignoring (EPERM)\00", align 1
@__fd_ftruncate.n_calls = internal global i32 0, align 4, !dbg !177
@.str.10.97 = private unnamed_addr constant [30 x i8] c"symbolic file, ignoring (EIO)\00", align 1
@.str.11.100 = private unnamed_addr constant [33 x i8] c"symbolic file, ignoring (EINVAL)\00", align 1
@.str.12.101 = private unnamed_addr constant [18 x i8] c"s != (off64_t) -1\00", align 1
@__PRETTY_FUNCTION__.__fd_getdents = private unnamed_addr constant [65 x i8] c"int __fd_getdents(unsigned int, struct dirent64 *, unsigned int)\00", align 1
@.str.13.102 = private unnamed_addr constant [22 x i8] c"f->off != (off64_t)-1\00", align 1
@.str.14.103 = private unnamed_addr constant [41 x i8] c"(TCGETS) symbolic file, incomplete model\00", align 1
@.str.15.104 = private unnamed_addr constant [42 x i8] c"(TCSETS) symbolic file, silently ignoring\00", align 1
@.str.16.105 = private unnamed_addr constant [43 x i8] c"(TCSETSW) symbolic file, silently ignoring\00", align 1
@.str.17.106 = private unnamed_addr constant [43 x i8] c"(TCSETSF) symbolic file, silently ignoring\00", align 1
@.str.18.107 = private unnamed_addr constant [45 x i8] c"(TIOCGWINSZ) symbolic file, incomplete model\00", align 1
@.str.19.108 = private unnamed_addr constant [46 x i8] c"(TIOCSWINSZ) symbolic file, ignoring (EINVAL)\00", align 1
@.str.20.109 = private unnamed_addr constant [43 x i8] c"(FIONREAD) symbolic file, incomplete model\00", align 1
@.str.21.110 = private unnamed_addr constant [44 x i8] c"(MTIOCGET) symbolic file, ignoring (EINVAL)\00", align 1
@.str.22.113 = private unnamed_addr constant [32 x i8] c"symbolic file, ignoring (EBADF)\00", align 1
@.str.23.114 = private unnamed_addr constant [17 x i8] c"ignoring (EPERM)\00", align 1
@getcwd.n_calls = internal global i32 0, align 4, !dbg !182
@.str.24.117 = private unnamed_addr constant [18 x i8] c"ignoring (ENOENT)\00", align 1
@.str.118 = private unnamed_addr constant [18 x i8] c"silently ignoring\00", align 1
@.str.1.119 = private unnamed_addr constant [24 x i8] c"ignoring (EAFNOSUPPORT)\00", align 1
@.str.2.120 = private unnamed_addr constant [15 x i8] c"ignoring (EIO)\00", align 1
@.str.3.121 = private unnamed_addr constant [18 x i8] c"ignoring (ENFILE)\00", align 1
@.str.4.122 = private unnamed_addr constant [17 x i8] c"ignoring (EPERM)\00", align 1
@.str.5.123 = private unnamed_addr constant [13 x i8] c"returning 0\0A\00", align 1
@.str.6.124 = private unnamed_addr constant [40 x i8] c"setting all times to 0 and returning 0\0A\00", align 1
@.str.7.125 = private unnamed_addr constant [17 x i8] c"ignoring (EBADF)\00", align 1
@.str.8.126 = private unnamed_addr constant [21 x i8] c"ignoring (-1 result)\00", align 1
@.str.9.127 = private unnamed_addr constant [18 x i8] c"ignoring (ECHILD)\00", align 1
@.str.10.128 = private unnamed_addr constant [32 x i8] c"silently ignoring (returning 0)\00", align 1
@state = internal global [4 x [4 x i8]]* null, align 8
@Key = internal global i8* null, align 8
@sbox = internal constant [256 x i8] c"c|w{\F2ko\C50\01g+\FE\D7\ABv\CA\82\C9}\FAYG\F0\AD\D4\A2\AF\9C\A4r\C0\B7\FD\93&6?\F7\CC4\A5\E5\F1q\D81\15\04\C7#\C3\18\96\05\9A\07\12\80\E2\EB'\B2u\09\83,\1A\1BnZ\A0R;\D6\B3)\E3/\84S\D1\00\ED \FC\B1[j\CB\BE9JLX\CF\D0\EF\AA\FBCM3\85E\F9\02\7FP<\9F\A8Q\A3@\8F\92\9D8\F5\BC\B6\DA!\10\FF\F3\D2\CD\0C\13\EC_\97D\17\C4\A7~=d]\19s`\81O\DC\22*\90\88F\EE\B8\14\DE^\0B\DB\E02:\0AI\06$\5C\C2\D3\ACb\91\95\E4y\E7\C87m\8D\D5N\A9lV\F4\EAez\AE\08\BAx%.\1C\A6\B4\C6\E8\DDt\1FK\BD\8B\8Ap>\B5fH\03\F6\0Ea5W\B9\86\C1\1D\9E\E1\F8\98\11i\D9\8E\94\9B\1E\87\E9\CEU(\DF\8C\A1\89\0D\BF\E6BhA\99-\0F\B0T\BB\16", align 16
@RoundKey = internal global [176 x i8] zeroinitializer, align 16
@Rcon = internal constant [255 x i8] c"\8D\01\02\04\08\10 @\80\1B6l\D8\ABM\9A/^\BCc\C6\975j\D4\B3}\FA\EF\C5\919r\E4\D3\BDa\C2\9F%J\943f\CC\83\1D:t\E8\CB\8D\01\02\04\08\10 @\80\1B6l\D8\ABM\9A/^\BCc\C6\975j\D4\B3}\FA\EF\C5\919r\E4\D3\BDa\C2\9F%J\943f\CC\83\1D:t\E8\CB\8D\01\02\04\08\10 @\80\1B6l\D8\ABM\9A/^\BCc\C6\975j\D4\B3}\FA\EF\C5\919r\E4\D3\BDa\C2\9F%J\943f\CC\83\1D:t\E8\CB\8D\01\02\04\08\10 @\80\1B6l\D8\ABM\9A/^\BCc\C6\975j\D4\B3}\FA\EF\C5\919r\E4\D3\BDa\C2\9F%J\943f\CC\83\1D:t\E8\CB\8D\01\02\04\08\10 @\80\1B6l\D8\ABM\9A/^\BCc\C6\975j\D4\B3}\FA\EF\C5\919r\E4\D3\BDa\C2\9F%J\943f\CC\83\1D:t\E8\CB", align 16
@rsbox = internal constant [256 x i8] c"R\09j\D506\A58\BF@\A3\9E\81\F3\D7\FB|\E39\82\9B/\FF\874\8ECD\C4\DE\E9\CBT{\942\A6\C2#=\EEL\95\0BB\FA\C3N\08.\A1f(\D9$\B2v[\A2Im\8B\D1%r\F8\F6d\86h\98\16\D4\A4\5C\CC]e\B6\92lpHP\FD\ED\B9\DA^\15FW\A7\8D\9D\84\90\D8\AB\00\8C\BC\D3\0A\F7\E4X\05\B8\B3E\06\D0,\1E\8F\CA?\0F\02\C1\AF\BD\03\01\13\8Ak:\91\11AOg\DC\EA\97\F2\CF\CE\F0\B4\E6s\96\ACt\22\E7\AD5\85\E2\F97\E8\1Cu\DFnG\F1\1Aq\1D)\C5\89o\B7b\0E\AA\18\BE\1B\FCV>K\C6\D2y \9A\DB\C0\FEx\CDZ\F4\1F\DD\A83\88\07\C71\B1\12\10Y'\80\EC_`Q\7F\A9\19\B5J\0D-\E5z\9F\93\C9\9C\EF\A0\E0;M\AE*\F5\B0\C8\EB\BB<\83S\99a\17+\04~\BAw\D6&\E1i\14cU!\0C}", align 16
@Iv = internal global i8* null, align 8
@.str.139 = private unnamed_addr constant [8 x i8] c"IGNORED\00", align 1
@.str.1.140 = private unnamed_addr constant [16 x i8] c"overshift error\00", align 1
@.str.2.141 = private unnamed_addr constant [14 x i8] c"overshift.err\00", align 1

@__getdents64 = dso_local alias i64 (i32, i8*, i64), i64 (i32, i8*, i64)* @getdents64

; Function Attrs: noinline nounwind uwtable
define dso_local void @klee_init_env(i32* %argcPtr, i8*** %argvPtr) #0 !dbg !283 {
entry:
  %argcPtr.addr = alloca i32*, align 8
  %argvPtr.addr = alloca i8***, align 8
  %argc = alloca i32, align 4
  %argv = alloca i8**, align 8
  %new_argc = alloca i32, align 4
  %n_args = alloca i32, align 4
  %new_argv = alloca [1024 x i8*], align 16
  %max_len = alloca i32, align 4
  %min_argvs = alloca i32, align 4
  %max_argvs = alloca i32, align 4
  %sym_files = alloca i32, align 4
  %sym_file_len = alloca i32, align 4
  %sym_stdin_len = alloca i32, align 4
  %sym_stdout_flag = alloca i32, align 4
  %save_all_writes_flag = alloca i32, align 4
  %fd_fail = alloca i32, align 4
  %final_argv = alloca i8**, align 8
  %sym_arg_name = alloca [6 x i8], align 1
  %sym_arg_num = alloca i32, align 4
  %k = alloca i32, align 4
  %i = alloca i32, align 4
  %msg = alloca i8*, align 8
  %msg40 = alloca i8*, align 8
  %msg105 = alloca i8*, align 8
  %msg145 = alloca i8*, align 8
  %msg215 = alloca i8*, align 8
  store i32* %argcPtr, i32** %argcPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %argcPtr.addr, metadata !288, metadata !DIExpression()), !dbg !289
  store i8*** %argvPtr, i8**** %argvPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8**** %argvPtr.addr, metadata !290, metadata !DIExpression()), !dbg !291
  call void @llvm.dbg.declare(metadata i32* %argc, metadata !292, metadata !DIExpression()), !dbg !293
  %0 = load i32*, i32** %argcPtr.addr, align 8, !dbg !294
  %1 = load i32, i32* %0, align 4, !dbg !295
  store i32 %1, i32* %argc, align 4, !dbg !293
  call void @llvm.dbg.declare(metadata i8*** %argv, metadata !296, metadata !DIExpression()), !dbg !297
  %2 = load i8***, i8**** %argvPtr.addr, align 8, !dbg !298
  %3 = load i8**, i8*** %2, align 8, !dbg !299
  store i8** %3, i8*** %argv, align 8, !dbg !297
  call void @llvm.dbg.declare(metadata i32* %new_argc, metadata !300, metadata !DIExpression()), !dbg !301
  store i32 0, i32* %new_argc, align 4, !dbg !301
  call void @llvm.dbg.declare(metadata i32* %n_args, metadata !302, metadata !DIExpression()), !dbg !303
  call void @llvm.dbg.declare(metadata [1024 x i8*]* %new_argv, metadata !304, metadata !DIExpression()), !dbg !308
  call void @llvm.dbg.declare(metadata i32* %max_len, metadata !309, metadata !DIExpression()), !dbg !310
  call void @llvm.dbg.declare(metadata i32* %min_argvs, metadata !311, metadata !DIExpression()), !dbg !312
  call void @llvm.dbg.declare(metadata i32* %max_argvs, metadata !313, metadata !DIExpression()), !dbg !314
  call void @llvm.dbg.declare(metadata i32* %sym_files, metadata !315, metadata !DIExpression()), !dbg !316
  store i32 0, i32* %sym_files, align 4, !dbg !316
  call void @llvm.dbg.declare(metadata i32* %sym_file_len, metadata !317, metadata !DIExpression()), !dbg !318
  store i32 0, i32* %sym_file_len, align 4, !dbg !318
  call void @llvm.dbg.declare(metadata i32* %sym_stdin_len, metadata !319, metadata !DIExpression()), !dbg !320
  store i32 0, i32* %sym_stdin_len, align 4, !dbg !320
  call void @llvm.dbg.declare(metadata i32* %sym_stdout_flag, metadata !321, metadata !DIExpression()), !dbg !322
  store i32 0, i32* %sym_stdout_flag, align 4, !dbg !322
  call void @llvm.dbg.declare(metadata i32* %save_all_writes_flag, metadata !323, metadata !DIExpression()), !dbg !324
  store i32 0, i32* %save_all_writes_flag, align 4, !dbg !324
  call void @llvm.dbg.declare(metadata i32* %fd_fail, metadata !325, metadata !DIExpression()), !dbg !326
  store i32 0, i32* %fd_fail, align 4, !dbg !326
  call void @llvm.dbg.declare(metadata i8*** %final_argv, metadata !327, metadata !DIExpression()), !dbg !328
  call void @llvm.dbg.declare(metadata [6 x i8]* %sym_arg_name, metadata !329, metadata !DIExpression()), !dbg !333
  %4 = bitcast [6 x i8]* %sym_arg_name to i8*, !dbg !333
  %5 = call i8* @memcpy(i8* %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__const.klee_init_env.sym_arg_name, i32 0, i32 0), i64 6), !dbg !333
  call void @llvm.dbg.declare(metadata i32* %sym_arg_num, metadata !334, metadata !DIExpression()), !dbg !335
  store i32 0, i32* %sym_arg_num, align 4, !dbg !335
  call void @llvm.dbg.declare(metadata i32* %k, metadata !336, metadata !DIExpression()), !dbg !337
  store i32 0, i32* %k, align 4, !dbg !337
  call void @llvm.dbg.declare(metadata i32* %i, metadata !338, metadata !DIExpression()), !dbg !339
  %arrayidx = getelementptr inbounds [6 x i8], [6 x i8]* %sym_arg_name, i64 0, i64 5, !dbg !340
  store i8 0, i8* %arrayidx, align 1, !dbg !341
  %6 = load i32, i32* %argc, align 4, !dbg !342
  %cmp = icmp eq i32 %6, 2, !dbg !344
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !345

land.lhs.true:                                    ; preds = %entry
  %7 = load i8**, i8*** %argv, align 8, !dbg !346
  %arrayidx1 = getelementptr inbounds i8*, i8** %7, i64 1, !dbg !346
  %8 = load i8*, i8** %arrayidx1, align 8, !dbg !346
  %call = call i32 @__streq(i8* %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0)), !dbg !347
  %tobool = icmp ne i32 %call, 0, !dbg !347
  br i1 %tobool, label %if.then, label %if.end, !dbg !348

if.then:                                          ; preds = %land.lhs.true
  call void @__emit_error(i8* getelementptr inbounds ([964 x i8], [964 x i8]* @.str.1, i64 0, i64 0)), !dbg !349
  br label %if.end, !dbg !351

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  br label %while.cond, !dbg !352

while.cond:                                       ; preds = %if.end239, %if.end
  %9 = load i32, i32* %k, align 4, !dbg !353
  %10 = load i32, i32* %argc, align 4, !dbg !354
  %cmp2 = icmp slt i32 %9, %10, !dbg !355
  br i1 %cmp2, label %while.body, label %while.end, !dbg !352

while.body:                                       ; preds = %while.cond
  %11 = load i8**, i8*** %argv, align 8, !dbg !356
  %12 = load i32, i32* %k, align 4, !dbg !359
  %idxprom = sext i32 %12 to i64, !dbg !356
  %arrayidx3 = getelementptr inbounds i8*, i8** %11, i64 %idxprom, !dbg !356
  %13 = load i8*, i8** %arrayidx3, align 8, !dbg !356
  %call4 = call i32 @__streq(i8* %13, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0)), !dbg !360
  %tobool5 = icmp ne i32 %call4, 0, !dbg !360
  br i1 %tobool5, label %if.then10, label %lor.lhs.false, !dbg !361

lor.lhs.false:                                    ; preds = %while.body
  %14 = load i8**, i8*** %argv, align 8, !dbg !362
  %15 = load i32, i32* %k, align 4, !dbg !363
  %idxprom6 = sext i32 %15 to i64, !dbg !362
  %arrayidx7 = getelementptr inbounds i8*, i8** %14, i64 %idxprom6, !dbg !362
  %16 = load i8*, i8** %arrayidx7, align 8, !dbg !362
  %call8 = call i32 @__streq(i8* %16, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0)), !dbg !364
  %tobool9 = icmp ne i32 %call8, 0, !dbg !364
  br i1 %tobool9, label %if.then10, label %if.else, !dbg !365

if.then10:                                        ; preds = %lor.lhs.false, %while.body
  call void @llvm.dbg.declare(metadata i8** %msg, metadata !366, metadata !DIExpression()), !dbg !368
  store i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4, i64 0, i64 0), i8** %msg, align 8, !dbg !368
  %17 = load i32, i32* %k, align 4, !dbg !369
  %inc = add nsw i32 %17, 1, !dbg !369
  store i32 %inc, i32* %k, align 4, !dbg !369
  %18 = load i32, i32* %argc, align 4, !dbg !371
  %cmp11 = icmp eq i32 %inc, %18, !dbg !372
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !373

if.then12:                                        ; preds = %if.then10
  %19 = load i8*, i8** %msg, align 8, !dbg !374
  call void @__emit_error(i8* %19), !dbg !375
  br label %if.end13, !dbg !375

if.end13:                                         ; preds = %if.then12, %if.then10
  %20 = load i8**, i8*** %argv, align 8, !dbg !376
  %21 = load i32, i32* %k, align 4, !dbg !377
  %inc14 = add nsw i32 %21, 1, !dbg !377
  store i32 %inc14, i32* %k, align 4, !dbg !377
  %idxprom15 = sext i32 %21 to i64, !dbg !376
  %arrayidx16 = getelementptr inbounds i8*, i8** %20, i64 %idxprom15, !dbg !376
  %22 = load i8*, i8** %arrayidx16, align 8, !dbg !376
  %23 = load i8*, i8** %msg, align 8, !dbg !378
  %call17 = call i64 @__str_to_int(i8* %22, i8* %23), !dbg !379
  %conv = trunc i64 %call17 to i32, !dbg !379
  store i32 %conv, i32* %max_len, align 4, !dbg !380
  %24 = load i32, i32* %sym_arg_num, align 4, !dbg !381
  %cmp18 = icmp ugt i32 %24, 99, !dbg !383
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !384

if.then20:                                        ; preds = %if.end13
  call void @__emit_error(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.5, i64 0, i64 0)), !dbg !385
  br label %if.end21, !dbg !385

if.end21:                                         ; preds = %if.then20, %if.end13
  %25 = load i32, i32* %sym_arg_num, align 4, !dbg !386
  %div = udiv i32 %25, 10, !dbg !387
  %add = add i32 48, %div, !dbg !388
  %conv22 = trunc i32 %add to i8, !dbg !389
  %arrayidx23 = getelementptr inbounds [6 x i8], [6 x i8]* %sym_arg_name, i64 0, i64 3, !dbg !390
  store i8 %conv22, i8* %arrayidx23, align 1, !dbg !391
  %26 = load i32, i32* %sym_arg_num, align 4, !dbg !392
  %rem = urem i32 %26, 10, !dbg !393
  %add24 = add i32 48, %rem, !dbg !394
  %conv25 = trunc i32 %add24 to i8, !dbg !395
  %arrayidx26 = getelementptr inbounds [6 x i8], [6 x i8]* %sym_arg_name, i64 0, i64 4, !dbg !396
  store i8 %conv25, i8* %arrayidx26, align 1, !dbg !397
  %27 = load i32, i32* %sym_arg_num, align 4, !dbg !398
  %inc27 = add i32 %27, 1, !dbg !398
  store i32 %inc27, i32* %sym_arg_num, align 4, !dbg !398
  %arraydecay = getelementptr inbounds [1024 x i8*], [1024 x i8*]* %new_argv, i64 0, i64 0, !dbg !399
  %28 = load i32, i32* %max_len, align 4, !dbg !400
  %arraydecay28 = getelementptr inbounds [6 x i8], [6 x i8]* %sym_arg_name, i64 0, i64 0, !dbg !401
  %call29 = call i8* @__get_sym_str(i32 %28, i8* %arraydecay28), !dbg !402
  call void @__add_arg(i32* %new_argc, i8** %arraydecay, i8* %call29, i32 1024), !dbg !403
  br label %if.end239, !dbg !404

if.else:                                          ; preds = %lor.lhs.false
  %29 = load i8**, i8*** %argv, align 8, !dbg !405
  %30 = load i32, i32* %k, align 4, !dbg !407
  %idxprom30 = sext i32 %30 to i64, !dbg !405
  %arrayidx31 = getelementptr inbounds i8*, i8** %29, i64 %idxprom30, !dbg !405
  %31 = load i8*, i8** %arrayidx31, align 8, !dbg !405
  %call32 = call i32 @__streq(i8* %31, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0)), !dbg !408
  %tobool33 = icmp ne i32 %call32, 0, !dbg !408
  br i1 %tobool33, label %if.then39, label %lor.lhs.false34, !dbg !409

lor.lhs.false34:                                  ; preds = %if.else
  %32 = load i8**, i8*** %argv, align 8, !dbg !410
  %33 = load i32, i32* %k, align 4, !dbg !411
  %idxprom35 = sext i32 %33 to i64, !dbg !410
  %arrayidx36 = getelementptr inbounds i8*, i8** %32, i64 %idxprom35, !dbg !410
  %34 = load i8*, i8** %arrayidx36, align 8, !dbg !410
  %call37 = call i32 @__streq(i8* %34, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i64 0, i64 0)), !dbg !412
  %tobool38 = icmp ne i32 %call37, 0, !dbg !412
  br i1 %tobool38, label %if.then39, label %if.else94, !dbg !413

if.then39:                                        ; preds = %lor.lhs.false34, %if.else
  call void @llvm.dbg.declare(metadata i8** %msg40, metadata !414, metadata !DIExpression()), !dbg !416
  store i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.8, i64 0, i64 0), i8** %msg40, align 8, !dbg !416
  %35 = load i32, i32* %k, align 4, !dbg !417
  %add41 = add nsw i32 %35, 3, !dbg !419
  %36 = load i32, i32* %argc, align 4, !dbg !420
  %cmp42 = icmp sge i32 %add41, %36, !dbg !421
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !422

if.then44:                                        ; preds = %if.then39
  %37 = load i8*, i8** %msg40, align 8, !dbg !423
  call void @__emit_error(i8* %37), !dbg !424
  br label %if.end45, !dbg !424

if.end45:                                         ; preds = %if.then44, %if.then39
  %38 = load i32, i32* %k, align 4, !dbg !425
  %inc46 = add nsw i32 %38, 1, !dbg !425
  store i32 %inc46, i32* %k, align 4, !dbg !425
  %39 = load i8**, i8*** %argv, align 8, !dbg !426
  %40 = load i32, i32* %k, align 4, !dbg !427
  %inc47 = add nsw i32 %40, 1, !dbg !427
  store i32 %inc47, i32* %k, align 4, !dbg !427
  %idxprom48 = sext i32 %40 to i64, !dbg !426
  %arrayidx49 = getelementptr inbounds i8*, i8** %39, i64 %idxprom48, !dbg !426
  %41 = load i8*, i8** %arrayidx49, align 8, !dbg !426
  %42 = load i8*, i8** %msg40, align 8, !dbg !428
  %call50 = call i64 @__str_to_int(i8* %41, i8* %42), !dbg !429
  %conv51 = trunc i64 %call50 to i32, !dbg !429
  store i32 %conv51, i32* %min_argvs, align 4, !dbg !430
  %43 = load i8**, i8*** %argv, align 8, !dbg !431
  %44 = load i32, i32* %k, align 4, !dbg !432
  %inc52 = add nsw i32 %44, 1, !dbg !432
  store i32 %inc52, i32* %k, align 4, !dbg !432
  %idxprom53 = sext i32 %44 to i64, !dbg !431
  %arrayidx54 = getelementptr inbounds i8*, i8** %43, i64 %idxprom53, !dbg !431
  %45 = load i8*, i8** %arrayidx54, align 8, !dbg !431
  %46 = load i8*, i8** %msg40, align 8, !dbg !433
  %call55 = call i64 @__str_to_int(i8* %45, i8* %46), !dbg !434
  %conv56 = trunc i64 %call55 to i32, !dbg !434
  store i32 %conv56, i32* %max_argvs, align 4, !dbg !435
  %47 = load i8**, i8*** %argv, align 8, !dbg !436
  %48 = load i32, i32* %k, align 4, !dbg !437
  %inc57 = add nsw i32 %48, 1, !dbg !437
  store i32 %inc57, i32* %k, align 4, !dbg !437
  %idxprom58 = sext i32 %48 to i64, !dbg !436
  %arrayidx59 = getelementptr inbounds i8*, i8** %47, i64 %idxprom58, !dbg !436
  %49 = load i8*, i8** %arrayidx59, align 8, !dbg !436
  %50 = load i8*, i8** %msg40, align 8, !dbg !438
  %call60 = call i64 @__str_to_int(i8* %49, i8* %50), !dbg !439
  %conv61 = trunc i64 %call60 to i32, !dbg !439
  store i32 %conv61, i32* %max_len, align 4, !dbg !440
  %51 = load i32, i32* %min_argvs, align 4, !dbg !441
  %52 = load i32, i32* %max_argvs, align 4, !dbg !443
  %cmp62 = icmp ugt i32 %51, %52, !dbg !444
  br i1 %cmp62, label %if.then70, label %lor.lhs.false64, !dbg !445

lor.lhs.false64:                                  ; preds = %if.end45
  %53 = load i32, i32* %min_argvs, align 4, !dbg !446
  %cmp65 = icmp eq i32 %53, 0, !dbg !447
  %54 = load i32, i32* %max_argvs, align 4, !dbg !448
  %cmp68 = icmp eq i32 %54, 0, !dbg !449
  %or.cond = and i1 %cmp65, %cmp68, !dbg !450
  br i1 %or.cond, label %if.then70, label %if.end71, !dbg !450

if.then70:                                        ; preds = %lor.lhs.false64, %if.end45
  call void @__emit_error(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.9, i64 0, i64 0)), !dbg !451
  br label %if.end71, !dbg !451

if.end71:                                         ; preds = %if.then70, %lor.lhs.false64
  %55 = load i32, i32* %min_argvs, align 4, !dbg !452
  %56 = load i32, i32* %max_argvs, align 4, !dbg !453
  %add72 = add i32 %56, 1, !dbg !454
  %call73 = call i32 @klee_range(i32 %55, i32 %add72, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0)), !dbg !455
  store i32 %call73, i32* %n_args, align 4, !dbg !456
  %57 = load i32, i32* %sym_arg_num, align 4, !dbg !457
  %58 = load i32, i32* %max_argvs, align 4, !dbg !459
  %add74 = add i32 %57, %58, !dbg !460
  %cmp75 = icmp ugt i32 %add74, 99, !dbg !461
  br i1 %cmp75, label %if.then77, label %if.end78, !dbg !462

if.then77:                                        ; preds = %if.end71
  call void @__emit_error(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.5, i64 0, i64 0)), !dbg !463
  br label %if.end78, !dbg !463

if.end78:                                         ; preds = %if.then77, %if.end71
  store i32 0, i32* %i, align 4, !dbg !464
  br label %for.cond, !dbg !466

for.cond:                                         ; preds = %for.body, %if.end78
  %59 = load i32, i32* %i, align 4, !dbg !467
  %60 = load i32, i32* %n_args, align 4, !dbg !469
  %cmp79 = icmp slt i32 %59, %60, !dbg !470
  br i1 %cmp79, label %for.body, label %if.end239, !dbg !471

for.body:                                         ; preds = %for.cond
  %61 = load i32, i32* %sym_arg_num, align 4, !dbg !472
  %div81 = udiv i32 %61, 10, !dbg !474
  %add82 = add i32 48, %div81, !dbg !475
  %conv83 = trunc i32 %add82 to i8, !dbg !476
  %arrayidx84 = getelementptr inbounds [6 x i8], [6 x i8]* %sym_arg_name, i64 0, i64 3, !dbg !477
  store i8 %conv83, i8* %arrayidx84, align 1, !dbg !478
  %62 = load i32, i32* %sym_arg_num, align 4, !dbg !479
  %rem85 = urem i32 %62, 10, !dbg !480
  %add86 = add i32 48, %rem85, !dbg !481
  %conv87 = trunc i32 %add86 to i8, !dbg !482
  %arrayidx88 = getelementptr inbounds [6 x i8], [6 x i8]* %sym_arg_name, i64 0, i64 4, !dbg !483
  store i8 %conv87, i8* %arrayidx88, align 1, !dbg !484
  %63 = load i32, i32* %sym_arg_num, align 4, !dbg !485
  %inc89 = add i32 %63, 1, !dbg !485
  store i32 %inc89, i32* %sym_arg_num, align 4, !dbg !485
  %arraydecay90 = getelementptr inbounds [1024 x i8*], [1024 x i8*]* %new_argv, i64 0, i64 0, !dbg !486
  %64 = load i32, i32* %max_len, align 4, !dbg !487
  %arraydecay91 = getelementptr inbounds [6 x i8], [6 x i8]* %sym_arg_name, i64 0, i64 0, !dbg !488
  %call92 = call i8* @__get_sym_str(i32 %64, i8* %arraydecay91), !dbg !489
  call void @__add_arg(i32* %new_argc, i8** %arraydecay90, i8* %call92, i32 1024), !dbg !490
  %65 = load i32, i32* %i, align 4, !dbg !491
  %inc93 = add nsw i32 %65, 1, !dbg !491
  store i32 %inc93, i32* %i, align 4, !dbg !491
  br label %for.cond, !dbg !492, !llvm.loop !493

if.else94:                                        ; preds = %lor.lhs.false34
  %66 = load i8**, i8*** %argv, align 8, !dbg !495
  %67 = load i32, i32* %k, align 4, !dbg !497
  %idxprom95 = sext i32 %67 to i64, !dbg !495
  %arrayidx96 = getelementptr inbounds i8*, i8** %66, i64 %idxprom95, !dbg !495
  %68 = load i8*, i8** %arrayidx96, align 8, !dbg !495
  %call97 = call i32 @__streq(i8* %68, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0)), !dbg !498
  %tobool98 = icmp ne i32 %call97, 0, !dbg !498
  br i1 %tobool98, label %if.then104, label %lor.lhs.false99, !dbg !499

lor.lhs.false99:                                  ; preds = %if.else94
  %69 = load i8**, i8*** %argv, align 8, !dbg !500
  %70 = load i32, i32* %k, align 4, !dbg !501
  %idxprom100 = sext i32 %70 to i64, !dbg !500
  %arrayidx101 = getelementptr inbounds i8*, i8** %69, i64 %idxprom100, !dbg !500
  %71 = load i8*, i8** %arrayidx101, align 8, !dbg !500
  %call102 = call i32 @__streq(i8* %71, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0)), !dbg !502
  %tobool103 = icmp ne i32 %call102, 0, !dbg !502
  br i1 %tobool103, label %if.then104, label %if.else134, !dbg !503

if.then104:                                       ; preds = %lor.lhs.false99, %if.else94
  call void @llvm.dbg.declare(metadata i8** %msg105, metadata !504, metadata !DIExpression()), !dbg !506
  store i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.13, i64 0, i64 0), i8** %msg105, align 8, !dbg !506
  %72 = load i32, i32* %k, align 4, !dbg !507
  %add106 = add nsw i32 %72, 2, !dbg !509
  %73 = load i32, i32* %argc, align 4, !dbg !510
  %cmp107 = icmp sge i32 %add106, %73, !dbg !511
  br i1 %cmp107, label %if.then109, label %if.end110, !dbg !512

if.then109:                                       ; preds = %if.then104
  %74 = load i8*, i8** %msg105, align 8, !dbg !513
  call void @__emit_error(i8* %74), !dbg !514
  br label %if.end110, !dbg !514

if.end110:                                        ; preds = %if.then109, %if.then104
  %75 = load i32, i32* %sym_files, align 4, !dbg !515
  %cmp111 = icmp ne i32 %75, 0, !dbg !517
  br i1 %cmp111, label %if.then113, label %if.end114, !dbg !518

if.then113:                                       ; preds = %if.end110
  call void @__emit_error(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.14, i64 0, i64 0)), !dbg !519
  br label %if.end114, !dbg !519

if.end114:                                        ; preds = %if.then113, %if.end110
  %76 = load i32, i32* %k, align 4, !dbg !520
  %inc115 = add nsw i32 %76, 1, !dbg !520
  store i32 %inc115, i32* %k, align 4, !dbg !520
  %77 = load i8**, i8*** %argv, align 8, !dbg !521
  %78 = load i32, i32* %k, align 4, !dbg !522
  %inc116 = add nsw i32 %78, 1, !dbg !522
  store i32 %inc116, i32* %k, align 4, !dbg !522
  %idxprom117 = sext i32 %78 to i64, !dbg !521
  %arrayidx118 = getelementptr inbounds i8*, i8** %77, i64 %idxprom117, !dbg !521
  %79 = load i8*, i8** %arrayidx118, align 8, !dbg !521
  %80 = load i8*, i8** %msg105, align 8, !dbg !523
  %call119 = call i64 @__str_to_int(i8* %79, i8* %80), !dbg !524
  %conv120 = trunc i64 %call119 to i32, !dbg !524
  store i32 %conv120, i32* %sym_files, align 4, !dbg !525
  %81 = load i8**, i8*** %argv, align 8, !dbg !526
  %82 = load i32, i32* %k, align 4, !dbg !527
  %inc121 = add nsw i32 %82, 1, !dbg !527
  store i32 %inc121, i32* %k, align 4, !dbg !527
  %idxprom122 = sext i32 %82 to i64, !dbg !526
  %arrayidx123 = getelementptr inbounds i8*, i8** %81, i64 %idxprom122, !dbg !526
  %83 = load i8*, i8** %arrayidx123, align 8, !dbg !526
  %84 = load i8*, i8** %msg105, align 8, !dbg !528
  %call124 = call i64 @__str_to_int(i8* %83, i8* %84), !dbg !529
  %conv125 = trunc i64 %call124 to i32, !dbg !529
  store i32 %conv125, i32* %sym_file_len, align 4, !dbg !530
  %85 = load i32, i32* %sym_files, align 4, !dbg !531
  %cmp126 = icmp eq i32 %85, 0, !dbg !533
  br i1 %cmp126, label %if.then128, label %if.end129, !dbg !534

if.then128:                                       ; preds = %if.end114
  call void @__emit_error(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.15, i64 0, i64 0)), !dbg !535
  br label %if.end129, !dbg !535

if.end129:                                        ; preds = %if.then128, %if.end114
  %86 = load i32, i32* %sym_file_len, align 4, !dbg !536
  %cmp130 = icmp eq i32 %86, 0, !dbg !538
  br i1 %cmp130, label %if.then132, label %if.end239, !dbg !539

if.then132:                                       ; preds = %if.end129
  call void @__emit_error(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.16, i64 0, i64 0)), !dbg !540
  br label %if.end239, !dbg !540

if.else134:                                       ; preds = %lor.lhs.false99
  %87 = load i8**, i8*** %argv, align 8, !dbg !541
  %88 = load i32, i32* %k, align 4, !dbg !543
  %idxprom135 = sext i32 %88 to i64, !dbg !541
  %arrayidx136 = getelementptr inbounds i8*, i8** %87, i64 %idxprom135, !dbg !541
  %89 = load i8*, i8** %arrayidx136, align 8, !dbg !541
  %call137 = call i32 @__streq(i8* %89, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0)), !dbg !544
  %tobool138 = icmp ne i32 %call137, 0, !dbg !544
  br i1 %tobool138, label %if.then144, label %lor.lhs.false139, !dbg !545

lor.lhs.false139:                                 ; preds = %if.else134
  %90 = load i8**, i8*** %argv, align 8, !dbg !546
  %91 = load i32, i32* %k, align 4, !dbg !547
  %idxprom140 = sext i32 %91 to i64, !dbg !546
  %arrayidx141 = getelementptr inbounds i8*, i8** %90, i64 %idxprom140, !dbg !546
  %92 = load i8*, i8** %arrayidx141, align 8, !dbg !546
  %call142 = call i32 @__streq(i8* %92, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i64 0, i64 0)), !dbg !548
  %tobool143 = icmp ne i32 %call142, 0, !dbg !548
  br i1 %tobool143, label %if.then144, label %if.else156, !dbg !549

if.then144:                                       ; preds = %lor.lhs.false139, %if.else134
  call void @llvm.dbg.declare(metadata i8** %msg145, metadata !550, metadata !DIExpression()), !dbg !552
  store i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.19, i64 0, i64 0), i8** %msg145, align 8, !dbg !552
  %93 = load i32, i32* %k, align 4, !dbg !553
  %inc146 = add nsw i32 %93, 1, !dbg !553
  store i32 %inc146, i32* %k, align 4, !dbg !553
  %94 = load i32, i32* %argc, align 4, !dbg !555
  %cmp147 = icmp eq i32 %inc146, %94, !dbg !556
  br i1 %cmp147, label %if.then149, label %if.end150, !dbg !557

if.then149:                                       ; preds = %if.then144
  %95 = load i8*, i8** %msg145, align 8, !dbg !558
  call void @__emit_error(i8* %95), !dbg !559
  br label %if.end150, !dbg !559

if.end150:                                        ; preds = %if.then149, %if.then144
  %96 = load i8**, i8*** %argv, align 8, !dbg !560
  %97 = load i32, i32* %k, align 4, !dbg !561
  %inc151 = add nsw i32 %97, 1, !dbg !561
  store i32 %inc151, i32* %k, align 4, !dbg !561
  %idxprom152 = sext i32 %97 to i64, !dbg !560
  %arrayidx153 = getelementptr inbounds i8*, i8** %96, i64 %idxprom152, !dbg !560
  %98 = load i8*, i8** %arrayidx153, align 8, !dbg !560
  %99 = load i8*, i8** %msg145, align 8, !dbg !562
  %call154 = call i64 @__str_to_int(i8* %98, i8* %99), !dbg !563
  %conv155 = trunc i64 %call154 to i32, !dbg !563
  store i32 %conv155, i32* %sym_stdin_len, align 4, !dbg !564
  br label %if.end239, !dbg !565

if.else156:                                       ; preds = %lor.lhs.false139
  %100 = load i8**, i8*** %argv, align 8, !dbg !566
  %101 = load i32, i32* %k, align 4, !dbg !568
  %idxprom157 = sext i32 %101 to i64, !dbg !566
  %arrayidx158 = getelementptr inbounds i8*, i8** %100, i64 %idxprom157, !dbg !566
  %102 = load i8*, i8** %arrayidx158, align 8, !dbg !566
  %call159 = call i32 @__streq(i8* %102, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20, i64 0, i64 0)), !dbg !569
  %tobool160 = icmp ne i32 %call159, 0, !dbg !569
  br i1 %tobool160, label %if.then166, label %lor.lhs.false161, !dbg !570

lor.lhs.false161:                                 ; preds = %if.else156
  %103 = load i8**, i8*** %argv, align 8, !dbg !571
  %104 = load i32, i32* %k, align 4, !dbg !572
  %idxprom162 = sext i32 %104 to i64, !dbg !571
  %arrayidx163 = getelementptr inbounds i8*, i8** %103, i64 %idxprom162, !dbg !571
  %105 = load i8*, i8** %arrayidx163, align 8, !dbg !571
  %call164 = call i32 @__streq(i8* %105, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.21, i64 0, i64 0)), !dbg !573
  %tobool165 = icmp ne i32 %call164, 0, !dbg !573
  br i1 %tobool165, label %if.then166, label %if.else168, !dbg !574

if.then166:                                       ; preds = %lor.lhs.false161, %if.else156
  store i32 1, i32* %sym_stdout_flag, align 4, !dbg !575
  %106 = load i32, i32* %k, align 4, !dbg !577
  %inc167 = add nsw i32 %106, 1, !dbg !577
  store i32 %inc167, i32* %k, align 4, !dbg !577
  br label %if.end239, !dbg !578

if.else168:                                       ; preds = %lor.lhs.false161
  %107 = load i8**, i8*** %argv, align 8, !dbg !579
  %108 = load i32, i32* %k, align 4, !dbg !581
  %idxprom169 = sext i32 %108 to i64, !dbg !579
  %arrayidx170 = getelementptr inbounds i8*, i8** %107, i64 %idxprom169, !dbg !579
  %109 = load i8*, i8** %arrayidx170, align 8, !dbg !579
  %call171 = call i32 @__streq(i8* %109, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.22, i64 0, i64 0)), !dbg !582
  %tobool172 = icmp ne i32 %call171, 0, !dbg !582
  br i1 %tobool172, label %if.then178, label %lor.lhs.false173, !dbg !583

lor.lhs.false173:                                 ; preds = %if.else168
  %110 = load i8**, i8*** %argv, align 8, !dbg !584
  %111 = load i32, i32* %k, align 4, !dbg !585
  %idxprom174 = sext i32 %111 to i64, !dbg !584
  %arrayidx175 = getelementptr inbounds i8*, i8** %110, i64 %idxprom174, !dbg !584
  %112 = load i8*, i8** %arrayidx175, align 8, !dbg !584
  %call176 = call i32 @__streq(i8* %112, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23, i64 0, i64 0)), !dbg !586
  %tobool177 = icmp ne i32 %call176, 0, !dbg !586
  br i1 %tobool177, label %if.then178, label %if.else180, !dbg !587

if.then178:                                       ; preds = %lor.lhs.false173, %if.else168
  store i32 1, i32* %save_all_writes_flag, align 4, !dbg !588
  %113 = load i32, i32* %k, align 4, !dbg !590
  %inc179 = add nsw i32 %113, 1, !dbg !590
  store i32 %inc179, i32* %k, align 4, !dbg !590
  br label %if.end239, !dbg !591

if.else180:                                       ; preds = %lor.lhs.false173
  %114 = load i8**, i8*** %argv, align 8, !dbg !592
  %115 = load i32, i32* %k, align 4, !dbg !594
  %idxprom181 = sext i32 %115 to i64, !dbg !592
  %arrayidx182 = getelementptr inbounds i8*, i8** %114, i64 %idxprom181, !dbg !592
  %116 = load i8*, i8** %arrayidx182, align 8, !dbg !592
  %call183 = call i32 @__streq(i8* %116, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i64 0, i64 0)), !dbg !595
  %tobool184 = icmp ne i32 %call183, 0, !dbg !595
  br i1 %tobool184, label %if.then190, label %lor.lhs.false185, !dbg !596

lor.lhs.false185:                                 ; preds = %if.else180
  %117 = load i8**, i8*** %argv, align 8, !dbg !597
  %118 = load i32, i32* %k, align 4, !dbg !598
  %idxprom186 = sext i32 %118 to i64, !dbg !597
  %arrayidx187 = getelementptr inbounds i8*, i8** %117, i64 %idxprom186, !dbg !597
  %119 = load i8*, i8** %arrayidx187, align 8, !dbg !597
  %call188 = call i32 @__streq(i8* %119, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25, i64 0, i64 0)), !dbg !599
  %tobool189 = icmp ne i32 %call188, 0, !dbg !599
  br i1 %tobool189, label %if.then190, label %if.else192, !dbg !600

if.then190:                                       ; preds = %lor.lhs.false185, %if.else180
  store i32 1, i32* %fd_fail, align 4, !dbg !601
  %120 = load i32, i32* %k, align 4, !dbg !603
  %inc191 = add nsw i32 %120, 1, !dbg !603
  store i32 %inc191, i32* %k, align 4, !dbg !603
  br label %if.end239, !dbg !604

if.else192:                                       ; preds = %lor.lhs.false185
  %121 = load i8**, i8*** %argv, align 8, !dbg !605
  %122 = load i32, i32* %k, align 4, !dbg !607
  %idxprom193 = sext i32 %122 to i64, !dbg !605
  %arrayidx194 = getelementptr inbounds i8*, i8** %121, i64 %idxprom193, !dbg !605
  %123 = load i8*, i8** %arrayidx194, align 8, !dbg !605
  %call195 = call i32 @__streq(i8* %123, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.26, i64 0, i64 0)), !dbg !608
  %tobool196 = icmp ne i32 %call195, 0, !dbg !608
  br i1 %tobool196, label %if.then202, label %lor.lhs.false197, !dbg !609

lor.lhs.false197:                                 ; preds = %if.else192
  %124 = load i8**, i8*** %argv, align 8, !dbg !610
  %125 = load i32, i32* %k, align 4, !dbg !611
  %idxprom198 = sext i32 %125 to i64, !dbg !610
  %arrayidx199 = getelementptr inbounds i8*, i8** %124, i64 %idxprom198, !dbg !610
  %126 = load i8*, i8** %arrayidx199, align 8, !dbg !610
  %call200 = call i32 @__streq(i8* %126, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.27, i64 0, i64 0)), !dbg !612
  %tobool201 = icmp ne i32 %call200, 0, !dbg !612
  br i1 %tobool201, label %if.then202, label %if.else204, !dbg !613

if.then202:                                       ; preds = %lor.lhs.false197, %if.else192
  %127 = load i32, i32* %k, align 4, !dbg !614
  %add203 = add nsw i32 %127, 2, !dbg !614
  store i32 %add203, i32* %k, align 4, !dbg !614
  br label %if.end239, !dbg !616

if.else204:                                       ; preds = %lor.lhs.false197
  %128 = load i8**, i8*** %argv, align 8, !dbg !617
  %129 = load i32, i32* %k, align 4, !dbg !619
  %idxprom205 = sext i32 %129 to i64, !dbg !617
  %arrayidx206 = getelementptr inbounds i8*, i8** %128, i64 %idxprom205, !dbg !617
  %130 = load i8*, i8** %arrayidx206, align 8, !dbg !617
  %call207 = call i32 @__streq(i8* %130, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28, i64 0, i64 0)), !dbg !620
  %tobool208 = icmp ne i32 %call207, 0, !dbg !620
  br i1 %tobool208, label %if.then214, label %lor.lhs.false209, !dbg !621

lor.lhs.false209:                                 ; preds = %if.else204
  %131 = load i8**, i8*** %argv, align 8, !dbg !622
  %132 = load i32, i32* %k, align 4, !dbg !623
  %idxprom210 = sext i32 %132 to i64, !dbg !622
  %arrayidx211 = getelementptr inbounds i8*, i8** %131, i64 %idxprom210, !dbg !622
  %133 = load i8*, i8** %arrayidx211, align 8, !dbg !622
  %call212 = call i32 @__streq(i8* %133, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.29, i64 0, i64 0)), !dbg !624
  %tobool213 = icmp ne i32 %call212, 0, !dbg !624
  br i1 %tobool213, label %if.then214, label %if.else226, !dbg !625

if.then214:                                       ; preds = %lor.lhs.false209, %if.else204
  call void @llvm.dbg.declare(metadata i8** %msg215, metadata !626, metadata !DIExpression()), !dbg !628
  store i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.30, i64 0, i64 0), i8** %msg215, align 8, !dbg !628
  %134 = load i32, i32* %k, align 4, !dbg !629
  %inc216 = add nsw i32 %134, 1, !dbg !629
  store i32 %inc216, i32* %k, align 4, !dbg !629
  %135 = load i32, i32* %argc, align 4, !dbg !631
  %cmp217 = icmp eq i32 %inc216, %135, !dbg !632
  br i1 %cmp217, label %if.then219, label %if.end220, !dbg !633

if.then219:                                       ; preds = %if.then214
  %136 = load i8*, i8** %msg215, align 8, !dbg !634
  call void @__emit_error(i8* %136), !dbg !635
  br label %if.end220, !dbg !635

if.end220:                                        ; preds = %if.then219, %if.then214
  %137 = load i8**, i8*** %argv, align 8, !dbg !636
  %138 = load i32, i32* %k, align 4, !dbg !637
  %inc221 = add nsw i32 %138, 1, !dbg !637
  store i32 %inc221, i32* %k, align 4, !dbg !637
  %idxprom222 = sext i32 %138 to i64, !dbg !636
  %arrayidx223 = getelementptr inbounds i8*, i8** %137, i64 %idxprom222, !dbg !636
  %139 = load i8*, i8** %arrayidx223, align 8, !dbg !636
  %140 = load i8*, i8** %msg215, align 8, !dbg !638
  %call224 = call i64 @__str_to_int(i8* %139, i8* %140), !dbg !639
  %conv225 = trunc i64 %call224 to i32, !dbg !639
  store i32 %conv225, i32* %fd_fail, align 4, !dbg !640
  br label %if.end239, !dbg !641

if.else226:                                       ; preds = %lor.lhs.false209
  %arraydecay227 = getelementptr inbounds [1024 x i8*], [1024 x i8*]* %new_argv, i64 0, i64 0, !dbg !642
  %141 = load i8**, i8*** %argv, align 8, !dbg !644
  %142 = load i32, i32* %k, align 4, !dbg !645
  %inc228 = add nsw i32 %142, 1, !dbg !645
  store i32 %inc228, i32* %k, align 4, !dbg !645
  %idxprom229 = sext i32 %142 to i64, !dbg !644
  %arrayidx230 = getelementptr inbounds i8*, i8** %141, i64 %idxprom229, !dbg !644
  %143 = load i8*, i8** %arrayidx230, align 8, !dbg !644
  call void @__add_arg(i32* %new_argc, i8** %arraydecay227, i8* %143, i32 1024), !dbg !646
  br label %if.end239

if.end239:                                        ; preds = %for.cond, %if.end150, %if.then178, %if.then202, %if.else226, %if.end220, %if.then190, %if.then166, %if.end129, %if.then132, %if.end21
  br label %while.cond, !dbg !352, !llvm.loop !647

while.end:                                        ; preds = %while.cond
  %144 = load i32, i32* %new_argc, align 4, !dbg !649
  %add240 = add nsw i32 %144, 1, !dbg !650
  %conv241 = sext i32 %add240 to i64, !dbg !651
  %mul = mul i64 %conv241, 8, !dbg !652
  %call242 = call noalias i8* @malloc(i64 %mul) #8, !dbg !653
  %145 = bitcast i8* %call242 to i8**, !dbg !654
  store i8** %145, i8*** %final_argv, align 8, !dbg !655
  %146 = load i8**, i8*** %final_argv, align 8, !dbg !656
  %147 = bitcast i8** %146 to i8*, !dbg !656
  call void @klee_mark_global(i8* %147), !dbg !657
  %148 = load i8**, i8*** %final_argv, align 8, !dbg !658
  %149 = bitcast i8** %148 to i8*, !dbg !659
  %arraydecay243 = getelementptr inbounds [1024 x i8*], [1024 x i8*]* %new_argv, i64 0, i64 0, !dbg !659
  %150 = bitcast i8** %arraydecay243 to i8*, !dbg !659
  %151 = load i32, i32* %new_argc, align 4, !dbg !660
  %conv244 = sext i32 %151 to i64, !dbg !660
  %mul245 = mul i64 %conv244, 8, !dbg !661
  %152 = call i8* @memcpy(i8* %149, i8* %150, i64 %mul245), !dbg !659
  %153 = load i8**, i8*** %final_argv, align 8, !dbg !662
  %154 = load i32, i32* %new_argc, align 4, !dbg !663
  %idxprom246 = sext i32 %154 to i64, !dbg !662
  %arrayidx247 = getelementptr inbounds i8*, i8** %153, i64 %idxprom246, !dbg !662
  store i8* null, i8** %arrayidx247, align 8, !dbg !664
  %155 = load i32, i32* %new_argc, align 4, !dbg !665
  %156 = load i32*, i32** %argcPtr.addr, align 8, !dbg !666
  store i32 %155, i32* %156, align 4, !dbg !667
  %157 = load i8**, i8*** %final_argv, align 8, !dbg !668
  %158 = load i8***, i8**** %argvPtr.addr, align 8, !dbg !669
  store i8** %157, i8*** %158, align 8, !dbg !670
  %159 = load i32, i32* %sym_files, align 4, !dbg !671
  %160 = load i32, i32* %sym_file_len, align 4, !dbg !672
  %161 = load i32, i32* %sym_stdin_len, align 4, !dbg !673
  %162 = load i32, i32* %sym_stdout_flag, align 4, !dbg !674
  %163 = load i32, i32* %save_all_writes_flag, align 4, !dbg !675
  %164 = load i32, i32* %fd_fail, align 4, !dbg !676
  call void @klee_init_fds(i32 %159, i32 %160, i32 %161, i32 %162, i32 %163, i32 %164), !dbg !677
  ret void, !dbg !678
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @__streq(i8* %a, i8* %b) #0 !dbg !679 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !682, metadata !DIExpression()), !dbg !683
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !684, metadata !DIExpression()), !dbg !685
  br label %while.cond, !dbg !686

while.cond:                                       ; preds = %if.end, %entry
  %0 = load i8*, i8** %a.addr, align 8, !dbg !687
  %1 = load i8, i8* %0, align 1, !dbg !688
  %conv = sext i8 %1 to i32, !dbg !688
  %2 = load i8*, i8** %b.addr, align 8, !dbg !689
  %3 = load i8, i8* %2, align 1, !dbg !690
  %conv1 = sext i8 %3 to i32, !dbg !690
  %cmp = icmp eq i32 %conv, %conv1, !dbg !691
  br i1 %cmp, label %while.body, label %while.end, !dbg !686

while.body:                                       ; preds = %while.cond
  %4 = load i8*, i8** %a.addr, align 8, !dbg !692
  %5 = load i8, i8* %4, align 1, !dbg !695
  %tobool = icmp ne i8 %5, 0, !dbg !695
  br i1 %tobool, label %if.end, label %if.then, !dbg !696

if.then:                                          ; preds = %while.body
  store i32 1, i32* %retval, align 4, !dbg !697
  br label %return, !dbg !697

if.end:                                           ; preds = %while.body
  %6 = load i8*, i8** %a.addr, align 8, !dbg !698
  %incdec.ptr = getelementptr inbounds i8, i8* %6, i32 1, !dbg !698
  store i8* %incdec.ptr, i8** %a.addr, align 8, !dbg !698
  %7 = load i8*, i8** %b.addr, align 8, !dbg !699
  %incdec.ptr3 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !699
  store i8* %incdec.ptr3, i8** %b.addr, align 8, !dbg !699
  br label %while.cond, !dbg !686, !llvm.loop !700

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !702
  br label %return, !dbg !702

return:                                           ; preds = %while.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !703
  ret i32 %8, !dbg !703
}

; Function Attrs: noinline nounwind uwtable
define internal void @__emit_error(i8* %msg) #0 !dbg !704 {
entry:
  %msg.addr = alloca i8*, align 8
  store i8* %msg, i8** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %msg.addr, metadata !707, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %msg.addr, align 8, !dbg !709
  call void @klee_report_error(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.31, i64 0, i64 0), i32 24, i8* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.32, i64 0, i64 0)) #14, !dbg !710
  unreachable, !dbg !710
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @__str_to_int(i8* %s, i8* %error_msg) #0 !dbg !711 {
entry:
  %s.addr = alloca i8*, align 8
  %error_msg.addr = alloca i8*, align 8
  %res = alloca i64, align 8
  %c = alloca i8, align 1
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !714, metadata !DIExpression()), !dbg !715
  store i8* %error_msg, i8** %error_msg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %error_msg.addr, metadata !716, metadata !DIExpression()), !dbg !717
  call void @llvm.dbg.declare(metadata i64* %res, metadata !718, metadata !DIExpression()), !dbg !719
  store i64 0, i64* %res, align 8, !dbg !719
  call void @llvm.dbg.declare(metadata i8* %c, metadata !720, metadata !DIExpression()), !dbg !721
  %0 = load i8*, i8** %s.addr, align 8, !dbg !722
  %1 = load i8, i8* %0, align 1, !dbg !724
  %tobool = icmp ne i8 %1, 0, !dbg !724
  br i1 %tobool, label %if.end, label %if.then, !dbg !725

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %error_msg.addr, align 8, !dbg !726
  call void @__emit_error(i8* %2), !dbg !727
  br label %if.end, !dbg !727

if.end:                                           ; preds = %if.then, %entry
  br label %while.cond, !dbg !728

while.cond:                                       ; preds = %if.end15, %if.end
  %3 = load i8*, i8** %s.addr, align 8, !dbg !729
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !729
  store i8* %incdec.ptr, i8** %s.addr, align 8, !dbg !729
  %4 = load i8, i8* %3, align 1, !dbg !730
  store i8 %4, i8* %c, align 1, !dbg !731
  %tobool1 = icmp ne i8 %4, 0, !dbg !728
  br i1 %tobool1, label %while.body, label %while.end, !dbg !728

while.body:                                       ; preds = %while.cond
  %5 = load i8, i8* %c, align 1, !dbg !732
  %conv = sext i8 %5 to i32, !dbg !732
  %cmp = icmp eq i32 %conv, 0, !dbg !735
  br i1 %cmp, label %while.end, label %if.else, !dbg !736

if.else:                                          ; preds = %while.body
  %6 = load i8, i8* %c, align 1, !dbg !737
  %conv4 = sext i8 %6 to i32, !dbg !737
  %cmp5 = icmp sge i32 %conv4, 48, !dbg !739
  br i1 %cmp5, label %land.lhs.true, label %if.else13, !dbg !740

land.lhs.true:                                    ; preds = %if.else
  %7 = load i8, i8* %c, align 1, !dbg !741
  %conv7 = sext i8 %7 to i32, !dbg !741
  %cmp8 = icmp sle i32 %conv7, 57, !dbg !742
  br i1 %cmp8, label %if.then10, label %if.else13, !dbg !743

if.then10:                                        ; preds = %land.lhs.true
  %8 = load i64, i64* %res, align 8, !dbg !744
  %mul = mul nsw i64 %8, 10, !dbg !746
  %9 = load i8, i8* %c, align 1, !dbg !747
  %conv11 = sext i8 %9 to i32, !dbg !747
  %sub = sub nsw i32 %conv11, 48, !dbg !748
  %conv12 = sext i32 %sub to i64, !dbg !749
  %add = add nsw i64 %mul, %conv12, !dbg !750
  store i64 %add, i64* %res, align 8, !dbg !751
  br label %if.end15, !dbg !752

if.else13:                                        ; preds = %land.lhs.true, %if.else
  %10 = load i8*, i8** %error_msg.addr, align 8, !dbg !753
  call void @__emit_error(i8* %10), !dbg !755
  br label %if.end15

if.end15:                                         ; preds = %if.then10, %if.else13
  br label %while.cond, !dbg !728, !llvm.loop !756

while.end:                                        ; preds = %while.body, %while.cond
  %11 = load i64, i64* %res, align 8, !dbg !758
  ret i64 %11, !dbg !759
}

; Function Attrs: noinline nounwind uwtable
define internal void @__add_arg(i32* %argc, i8** %argv, i8* %arg, i32 %argcMax) #0 !dbg !760 {
entry:
  %argc.addr = alloca i32*, align 8
  %argv.addr = alloca i8**, align 8
  %arg.addr = alloca i8*, align 8
  %argcMax.addr = alloca i32, align 4
  store i32* %argc, i32** %argc.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %argc.addr, metadata !763, metadata !DIExpression()), !dbg !764
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !765, metadata !DIExpression()), !dbg !766
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !767, metadata !DIExpression()), !dbg !768
  store i32 %argcMax, i32* %argcMax.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argcMax.addr, metadata !769, metadata !DIExpression()), !dbg !770
  %0 = load i32*, i32** %argc.addr, align 8, !dbg !771
  %1 = load i32, i32* %0, align 4, !dbg !773
  %2 = load i32, i32* %argcMax.addr, align 4, !dbg !774
  %cmp = icmp eq i32 %1, %2, !dbg !775
  br i1 %cmp, label %if.then, label %if.else, !dbg !776

if.then:                                          ; preds = %entry
  call void @__emit_error(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.33, i64 0, i64 0)), !dbg !777
  br label %if.end, !dbg !779

if.else:                                          ; preds = %entry
  %3 = load i8*, i8** %arg.addr, align 8, !dbg !780
  %4 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %5 = load i32*, i32** %argc.addr, align 8, !dbg !783
  %6 = load i32, i32* %5, align 4, !dbg !784
  %idxprom = sext i32 %6 to i64, !dbg !782
  %arrayidx = getelementptr inbounds i8*, i8** %4, i64 %idxprom, !dbg !782
  store i8* %3, i8** %arrayidx, align 8, !dbg !785
  %7 = load i32*, i32** %argc.addr, align 8, !dbg !786
  %8 = load i32, i32* %7, align 4, !dbg !787
  %inc = add nsw i32 %8, 1, !dbg !787
  store i32 %inc, i32* %7, align 4, !dbg !787
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !788
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @__get_sym_str(i32 %numChars, i8* %name) #0 !dbg !789 {
entry:
  %numChars.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %s = alloca i8*, align 8
  store i32 %numChars, i32* %numChars.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numChars.addr, metadata !792, metadata !DIExpression()), !dbg !793
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !794, metadata !DIExpression()), !dbg !795
  call void @llvm.dbg.declare(metadata i32* %i, metadata !796, metadata !DIExpression()), !dbg !797
  call void @llvm.dbg.declare(metadata i8** %s, metadata !798, metadata !DIExpression()), !dbg !799
  %0 = load i32, i32* %numChars.addr, align 4, !dbg !800
  %add = add nsw i32 %0, 1, !dbg !801
  %conv = sext i32 %add to i64, !dbg !800
  %call = call noalias i8* @malloc(i64 %conv) #8, !dbg !802
  store i8* %call, i8** %s, align 8, !dbg !799
  %1 = load i8*, i8** %s, align 8, !dbg !803
  call void @klee_mark_global(i8* %1), !dbg !804
  %2 = load i8*, i8** %s, align 8, !dbg !805
  %3 = load i32, i32* %numChars.addr, align 4, !dbg !806
  %add1 = add nsw i32 %3, 1, !dbg !807
  %conv2 = sext i32 %add1 to i64, !dbg !806
  %4 = load i8*, i8** %name.addr, align 8, !dbg !808
  call void @klee_make_symbolic(i8* %2, i64 %conv2, i8* %4), !dbg !809
  store i32 0, i32* %i, align 4, !dbg !810
  br label %for.cond, !dbg !812

for.cond:                                         ; preds = %for.body, %entry
  %5 = load i32, i32* %i, align 4, !dbg !813
  %6 = load i32, i32* %numChars.addr, align 4, !dbg !815
  %cmp = icmp slt i32 %5, %6, !dbg !816
  %7 = load i8*, i8** %s, align 8, !dbg !817
  br i1 %cmp, label %for.body, label %for.end, !dbg !818

for.body:                                         ; preds = %for.cond
  %8 = load i8*, i8** %s, align 8, !dbg !819
  %9 = load i32, i32* %i, align 4, !dbg !820
  %idxprom = sext i32 %9 to i64, !dbg !819
  %arrayidx = getelementptr inbounds i8, i8* %8, i64 %idxprom, !dbg !819
  %10 = load i8, i8* %arrayidx, align 1, !dbg !819
  %call4 = call i32 @__isprint(i8 signext %10), !dbg !821
  %conv5 = sext i32 %call4 to i64, !dbg !821
  call void @klee_posix_prefer_cex(i8* %7, i64 %conv5), !dbg !822
  %11 = load i32, i32* %i, align 4, !dbg !823
  %inc = add nsw i32 %11, 1, !dbg !823
  store i32 %inc, i32* %i, align 4, !dbg !823
  br label %for.cond, !dbg !824, !llvm.loop !825

for.end:                                          ; preds = %for.cond
  %12 = load i32, i32* %numChars.addr, align 4, !dbg !827
  %idxprom6 = sext i32 %12 to i64, !dbg !828
  %arrayidx7 = getelementptr inbounds i8, i8* %7, i64 %idxprom6, !dbg !828
  store i8 0, i8* %arrayidx7, align 1, !dbg !829
  %13 = load i8*, i8** %s, align 8, !dbg !830
  ret i8* %13, !dbg !831
}

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #3

declare dso_local void @klee_mark_global(i8*) #4

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @main(i32 %argcPtr, i8** %argvPtr, i8** %envp) #0 !dbg !832 {
entry:
  call void @klee.ctor_stub()
  %argcPtr.addr = alloca i32, align 4
  %argvPtr.addr = alloca i8**, align 8
  %envp.addr = alloca i8**, align 8
  store i32 %argcPtr, i32* %argcPtr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argcPtr.addr, metadata !835, metadata !DIExpression()), !dbg !836
  store i8** %argvPtr, i8*** %argvPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argvPtr.addr, metadata !837, metadata !DIExpression()), !dbg !838
  store i8** %envp, i8*** %envp.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %envp.addr, metadata !839, metadata !DIExpression()), !dbg !840
  call void @klee_init_env(i32* %argcPtr.addr, i8*** %argvPtr.addr), !dbg !841
  %0 = load i32, i32* %argcPtr.addr, align 4, !dbg !842
  %1 = load i8**, i8*** %argvPtr.addr, align 8, !dbg !843
  %2 = load i8**, i8*** %envp.addr, align 8, !dbg !844
  %call = call i32 bitcast (i32 (i32, i8**)* @__klee_posix_wrapped_main to i32 (i32, i8**, i8**)*)(i32 %0, i8** %1, i8** %2), !dbg !845
  ret i32 %call, !dbg !846
}

; Function Attrs: noreturn
declare dso_local void @klee_report_error(i8*, i32, i8*, i8*) #5

declare dso_local void @klee_make_symbolic(i8*, i64, i8*) #4

declare dso_local void @klee_posix_prefer_cex(i8*, i64) #4

; Function Attrs: noinline nounwind uwtable
define internal i32 @__isprint(i8 signext %c) #0 !dbg !847 {
entry:
  %c.addr = alloca i8, align 1
  store i8 %c, i8* %c.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %c.addr, metadata !850, metadata !DIExpression()), !dbg !851
  %0 = load i8, i8* %c.addr, align 1, !dbg !852
  %conv = sext i8 %0 to i32, !dbg !852
  %cmp = icmp sle i32 32, %conv, !dbg !853
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !854

land.rhs:                                         ; preds = %entry
  %1 = load i8, i8* %c.addr, align 1, !dbg !855
  %conv2 = sext i8 %1 to i32, !dbg !855
  %cmp3 = icmp sle i32 %conv2, 126, !dbg !856
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %cmp3, %land.rhs ], !dbg !857
  %land.ext = zext i1 %2 to i32, !dbg !854
  ret i32 %land.ext, !dbg !858
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @cgc_transmit_all(i32 %fd, i8* %buf, i64 %size) #6 !dbg !859 {
entry:
  %retval = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %sent = alloca i64, align 8
  %sent_now = alloca i64, align 8
  %ret = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !866, metadata !DIExpression()), !dbg !867
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !868, metadata !DIExpression()), !dbg !869
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !870, metadata !DIExpression()), !dbg !871
  call void @llvm.dbg.declare(metadata i64* %sent, metadata !872, metadata !DIExpression()), !dbg !873
  store i64 0, i64* %sent, align 8, !dbg !873
  call void @llvm.dbg.declare(metadata i64* %sent_now, metadata !874, metadata !DIExpression()), !dbg !875
  store i64 0, i64* %sent_now, align 8, !dbg !875
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !876, metadata !DIExpression()), !dbg !877
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !878
  %tobool = icmp ne i8* %0, null, !dbg !878
  br i1 %tobool, label %if.end, label %if.then, !dbg !880

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !881
  br label %return, !dbg !881

if.end:                                           ; preds = %entry
  %1 = load i64, i64* %size.addr, align 8, !dbg !882
  %tobool1 = icmp ne i64 %1, 0, !dbg !882
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !884

if.then2:                                         ; preds = %if.end
  store i32 2, i32* %retval, align 4, !dbg !885
  br label %return, !dbg !885

if.end3:                                          ; preds = %if.end
  br label %while.cond, !dbg !886

while.cond:                                       ; preds = %if.end9, %if.end3
  %2 = load i64, i64* %sent, align 8, !dbg !887
  %3 = load i64, i64* %size.addr, align 8, !dbg !888
  %cmp = icmp ult i64 %2, %3, !dbg !889
  br i1 %cmp, label %while.body, label %while.end, !dbg !886

while.body:                                       ; preds = %while.cond
  %4 = load i32, i32* %fd.addr, align 4, !dbg !890
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !892
  %6 = load i64, i64* %sent, align 8, !dbg !893
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %6, !dbg !894
  %7 = load i64, i64* %size.addr, align 8, !dbg !895
  %8 = load i64, i64* %sent, align 8, !dbg !896
  %sub = sub i64 %7, %8, !dbg !897
  %call = call i32 @cgc_transmit(i32 %4, i8* %add.ptr, i64 %sub, i64* %sent_now) #15, !dbg !898
  store i32 %call, i32* %ret, align 4, !dbg !899
  %9 = load i64, i64* %sent_now, align 8, !dbg !900
  %cmp4 = icmp eq i64 %9, 0, !dbg !902
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !903

if.then5:                                         ; preds = %while.body
  store i32 3, i32* %retval, align 4, !dbg !904
  br label %return, !dbg !904

if.end6:                                          ; preds = %while.body
  %10 = load i32, i32* %ret, align 4, !dbg !906
  %cmp7 = icmp ne i32 %10, 0, !dbg !908
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !909

if.then8:                                         ; preds = %if.end6
  store i32 3, i32* %retval, align 4, !dbg !910
  br label %return, !dbg !910

if.end9:                                          ; preds = %if.end6
  %11 = load i64, i64* %sent_now, align 8, !dbg !912
  %12 = load i64, i64* %sent, align 8, !dbg !913
  %add = add i64 %12, %11, !dbg !913
  store i64 %add, i64* %sent, align 8, !dbg !913
  br label %while.cond, !dbg !886, !llvm.loop !914

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !916
  br label %return, !dbg !916

return:                                           ; preds = %while.end, %if.then8, %if.then5, %if.then2, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !917
  ret i32 %13, !dbg !917
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @cgc_receive_delim(i32 %fd, i8* %buf, i64 %size, i8 signext %delim) #6 !dbg !918 {
entry:
  %retval = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %delim.addr = alloca i8, align 1
  %rx = alloca i64, align 8
  %rx_now = alloca i64, align 8
  %ret = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !921, metadata !DIExpression()), !dbg !922
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !923, metadata !DIExpression()), !dbg !924
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !925, metadata !DIExpression()), !dbg !926
  store i8 %delim, i8* %delim.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %delim.addr, metadata !927, metadata !DIExpression()), !dbg !928
  call void @llvm.dbg.declare(metadata i64* %rx, metadata !929, metadata !DIExpression()), !dbg !930
  store i64 0, i64* %rx, align 8, !dbg !930
  call void @llvm.dbg.declare(metadata i64* %rx_now, metadata !931, metadata !DIExpression()), !dbg !932
  store i64 0, i64* %rx_now, align 8, !dbg !932
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !933, metadata !DIExpression()), !dbg !934
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !935
  %tobool = icmp ne i8* %0, null, !dbg !935
  br i1 %tobool, label %if.end, label %if.then, !dbg !937

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !938
  br label %return, !dbg !938

if.end:                                           ; preds = %entry
  %1 = load i64, i64* %size.addr, align 8, !dbg !939
  %tobool1 = icmp ne i64 %1, 0, !dbg !939
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !941

if.then2:                                         ; preds = %if.end
  store i32 2, i32* %retval, align 4, !dbg !942
  br label %return, !dbg !942

if.end3:                                          ; preds = %if.end
  br label %while.cond, !dbg !943

while.cond:                                       ; preds = %if.end14, %if.end3
  %2 = load i64, i64* %rx, align 8, !dbg !944
  %3 = load i64, i64* %size.addr, align 8, !dbg !945
  %cmp = icmp ult i64 %2, %3, !dbg !946
  br i1 %cmp, label %while.body, label %while.end, !dbg !943

while.body:                                       ; preds = %while.cond
  %4 = load i32, i32* %fd.addr, align 4, !dbg !947
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !949
  %6 = load i64, i64* %rx, align 8, !dbg !950
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %6, !dbg !951
  %call = call i32 @cgc_receive(i32 %4, i8* %add.ptr, i64 1, i64* %rx_now) #15, !dbg !952
  store i32 %call, i32* %ret, align 4, !dbg !953
  %7 = load i64, i64* %rx_now, align 8, !dbg !954
  %cmp4 = icmp eq i64 %7, 0, !dbg !956
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !957

if.then5:                                         ; preds = %while.body
  store i32 3, i32* %retval, align 4, !dbg !958
  br label %return, !dbg !958

if.end6:                                          ; preds = %while.body
  %8 = load i32, i32* %ret, align 4, !dbg !960
  %cmp7 = icmp ne i32 %8, 0, !dbg !962
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !963

if.then8:                                         ; preds = %if.end6
  store i32 3, i32* %retval, align 4, !dbg !964
  br label %return, !dbg !964

if.end9:                                          ; preds = %if.end6
  %9 = load i8*, i8** %buf.addr, align 8, !dbg !966
  %10 = load i64, i64* %rx, align 8, !dbg !968
  %arrayidx = getelementptr inbounds i8, i8* %9, i64 %10, !dbg !966
  %11 = load i8, i8* %arrayidx, align 1, !dbg !966
  %conv = sext i8 %11 to i32, !dbg !966
  %12 = load i8, i8* %delim.addr, align 1, !dbg !969
  %conv10 = sext i8 %12 to i32, !dbg !969
  %cmp11 = icmp eq i32 %conv, %conv10, !dbg !970
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !971

if.then13:                                        ; preds = %if.end9
  br label %while.end, !dbg !972

if.end14:                                         ; preds = %if.end9
  %13 = load i64, i64* %rx_now, align 8, !dbg !974
  %14 = load i64, i64* %rx, align 8, !dbg !975
  %add = add i64 %14, %13, !dbg !975
  store i64 %add, i64* %rx, align 8, !dbg !975
  br label %while.cond, !dbg !943, !llvm.loop !976

while.end:                                        ; preds = %if.then13, %while.cond
  store i32 0, i32* %retval, align 4, !dbg !978
  br label %return, !dbg !978

return:                                           ; preds = %while.end, %if.then8, %if.then5, %if.then2, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !979
  ret i32 %15, !dbg !979
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @__klee_posix_wrapped_main(i32 %cgc_argc, i8** %cgc_argv) #6 !dbg !980 {
entry:
  %retval = alloca i32, align 4
  %cgc_argc.addr = alloca i32, align 4
  %cgc_argv.addr = alloca i8**, align 8
  %r = alloca i32, align 4
  store i32 0, i32* %retval, align 4
  store i32 %cgc_argc, i32* %cgc_argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cgc_argc.addr, metadata !984, metadata !DIExpression()), !dbg !985
  store i8** %cgc_argv, i8*** %cgc_argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %cgc_argv.addr, metadata !986, metadata !DIExpression()), !dbg !987
  call void @llvm.dbg.declare(metadata i32* %r, metadata !988, metadata !DIExpression()), !dbg !989
  %call = call i32 @cgc_transmit_all(i32 1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.34, i64 0, i64 0), i64 31) #15, !dbg !990
  %cmp = icmp ne i32 %call, 0, !dbg !992
  br i1 %cmp, label %if.then, label %if.end, !dbg !993

if.then:                                          ; preds = %entry
  call void @cgc__terminate(i32 0) #16, !dbg !994
  unreachable, !dbg !994

if.end:                                           ; preds = %entry
  br label %while.body, !dbg !996

while.body:                                       ; preds = %if.end, %if.end20
  %call1 = call i32 @cgc_transmit_all(i32 1, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1.35, i64 0, i64 0), i64 37) #15, !dbg !997
  %cmp2 = icmp ne i32 %call1, 0, !dbg !1000
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !1001

if.then3:                                         ; preds = %while.body
  call void @cgc__terminate(i32 0) #16, !dbg !1002
  unreachable, !dbg !1002

if.end4:                                          ; preds = %while.body
  %call5 = call i32 @cgc_check() #15, !dbg !1004
  store i32 %call5, i32* %r, align 4, !dbg !1005
  %0 = load i32, i32* %r, align 4, !dbg !1006
  %cmp6 = icmp eq i32 %0, -1, !dbg !1008
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !1009

if.then7:                                         ; preds = %if.end4
  br label %while.end, !dbg !1010

if.else:                                          ; preds = %if.end4
  %1 = load i32, i32* %r, align 4, !dbg !1012
  %cmp8 = icmp eq i32 %1, 0, !dbg !1014
  br i1 %cmp8, label %if.then9, label %if.else14, !dbg !1015

if.then9:                                         ; preds = %if.else
  %call10 = call i32 @cgc_transmit_all(i32 1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2.36, i64 0, i64 0), i64 33) #15, !dbg !1016
  %cmp11 = icmp ne i32 %call10, 0, !dbg !1019
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !1020

if.then12:                                        ; preds = %if.then9
  call void @cgc__terminate(i32 0) #16, !dbg !1021
  unreachable, !dbg !1021

if.end13:                                         ; preds = %if.then9
  br label %if.end19, !dbg !1023

if.else14:                                        ; preds = %if.else
  %call15 = call i32 @cgc_transmit_all(i32 1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.3.37, i64 0, i64 0), i64 29) #15, !dbg !1024
  %cmp16 = icmp ne i32 %call15, 0, !dbg !1027
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !1028

if.then17:                                        ; preds = %if.else14
  call void @cgc__terminate(i32 0) #16, !dbg !1029
  unreachable, !dbg !1029

if.end18:                                         ; preds = %if.else14
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.end13
  br label %if.end20

if.end20:                                         ; preds = %if.end19
  br label %while.body, !dbg !996, !llvm.loop !1031

while.end:                                        ; preds = %if.then7
  ret i32 0, !dbg !1033
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @cgc_check() #6 !dbg !1034 {
entry:
  %retval = alloca i32, align 4
  %len = alloca i32, align 4
  %i = alloca i32, align 4
  %pal = alloca i32, align 4
  %string = alloca [64 x i8], align 16
  %steps = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %len, metadata !1037, metadata !DIExpression()), !dbg !1038
  store i32 -1, i32* %len, align 4, !dbg !1038
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1039, metadata !DIExpression()), !dbg !1040
  call void @llvm.dbg.declare(metadata i32* %pal, metadata !1041, metadata !DIExpression()), !dbg !1042
  store i32 1, i32* %pal, align 4, !dbg !1042
  call void @llvm.dbg.declare(metadata [64 x i8]* %string, metadata !1043, metadata !DIExpression()), !dbg !1047
  store i32 0, i32* %i, align 4, !dbg !1048
  br label %for.cond, !dbg !1050

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !1051
  %conv = sext i32 %0 to i64, !dbg !1051
  %cmp = icmp ult i64 %conv, 64, !dbg !1053
  br i1 %cmp, label %for.body, label %for.end, !dbg !1054

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !1055
  %idxprom = sext i32 %1 to i64, !dbg !1056
  %arrayidx = getelementptr inbounds [64 x i8], [64 x i8]* %string, i64 0, i64 %idxprom, !dbg !1056
  store i8 0, i8* %arrayidx, align 1, !dbg !1057
  br label %for.inc, !dbg !1056

for.inc:                                          ; preds = %for.body
  %2 = load i32, i32* %i, align 4, !dbg !1058
  %inc = add nsw i32 %2, 1, !dbg !1058
  store i32 %inc, i32* %i, align 4, !dbg !1058
  br label %for.cond, !dbg !1059, !llvm.loop !1060

for.end:                                          ; preds = %for.cond
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %string, i64 0, i64 0, !dbg !1062
  %call = call i32 @cgc_receive_delim(i32 0, i8* %arraydecay, i64 128, i8 signext 10) #15, !dbg !1064
  %cmp2 = icmp ne i32 %call, 0, !dbg !1065
  br i1 %cmp2, label %if.then, label %if.end, !dbg !1066

if.then:                                          ; preds = %for.end
  store i32 -1, i32* %retval, align 4, !dbg !1067
  br label %return, !dbg !1067

if.end:                                           ; preds = %for.end
  store i32 0, i32* %i, align 4, !dbg !1068
  br label %for.cond4, !dbg !1070

for.cond4:                                        ; preds = %for.inc12, %if.end
  %3 = load i32, i32* %i, align 4, !dbg !1071
  %idxprom5 = sext i32 %3 to i64, !dbg !1073
  %arrayidx6 = getelementptr inbounds [64 x i8], [64 x i8]* %string, i64 0, i64 %idxprom5, !dbg !1073
  %4 = load i8, i8* %arrayidx6, align 1, !dbg !1073
  %conv7 = sext i8 %4 to i32, !dbg !1073
  %cmp8 = icmp ne i32 %conv7, 0, !dbg !1074
  br i1 %cmp8, label %for.body10, label %for.end14, !dbg !1075

for.body10:                                       ; preds = %for.cond4
  %5 = load i32, i32* %len, align 4, !dbg !1076
  %inc11 = add nsw i32 %5, 1, !dbg !1076
  store i32 %inc11, i32* %len, align 4, !dbg !1076
  br label %for.inc12, !dbg !1078

for.inc12:                                        ; preds = %for.body10
  %6 = load i32, i32* %i, align 4, !dbg !1079
  %inc13 = add nsw i32 %6, 1, !dbg !1079
  store i32 %inc13, i32* %i, align 4, !dbg !1079
  br label %for.cond4, !dbg !1080, !llvm.loop !1081

for.end14:                                        ; preds = %for.cond4
  call void @llvm.dbg.declare(metadata i32* %steps, metadata !1083, metadata !DIExpression()), !dbg !1084
  %7 = load i32, i32* %len, align 4, !dbg !1085
  store i32 %7, i32* %steps, align 4, !dbg !1084
  %8 = load i32, i32* %len, align 4, !dbg !1086
  %rem = srem i32 %8, 2, !dbg !1088
  %cmp15 = icmp eq i32 %rem, 1, !dbg !1089
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !1090

if.then17:                                        ; preds = %for.end14
  %9 = load i32, i32* %steps, align 4, !dbg !1091
  %dec = add nsw i32 %9, -1, !dbg !1091
  store i32 %dec, i32* %steps, align 4, !dbg !1091
  br label %if.end18, !dbg !1093

if.end18:                                         ; preds = %if.then17, %for.end14
  store i32 0, i32* %i, align 4, !dbg !1094
  br label %for.cond19, !dbg !1096

for.cond19:                                       ; preds = %for.inc34, %if.end18
  %10 = load i32, i32* %i, align 4, !dbg !1097
  %11 = load i32, i32* %steps, align 4, !dbg !1099
  %div = sdiv i32 %11, 2, !dbg !1100
  %cmp20 = icmp sle i32 %10, %div, !dbg !1101
  br i1 %cmp20, label %for.body22, label %for.end36, !dbg !1102

for.body22:                                       ; preds = %for.cond19
  %12 = load i32, i32* %i, align 4, !dbg !1103
  %idxprom23 = sext i32 %12 to i64, !dbg !1106
  %arrayidx24 = getelementptr inbounds [64 x i8], [64 x i8]* %string, i64 0, i64 %idxprom23, !dbg !1106
  %13 = load i8, i8* %arrayidx24, align 1, !dbg !1106
  %conv25 = sext i8 %13 to i32, !dbg !1106
  %14 = load i32, i32* %len, align 4, !dbg !1107
  %sub = sub nsw i32 %14, 1, !dbg !1108
  %15 = load i32, i32* %i, align 4, !dbg !1109
  %sub26 = sub nsw i32 %sub, %15, !dbg !1110
  %idxprom27 = sext i32 %sub26 to i64, !dbg !1111
  %arrayidx28 = getelementptr inbounds [64 x i8], [64 x i8]* %string, i64 0, i64 %idxprom27, !dbg !1111
  %16 = load i8, i8* %arrayidx28, align 1, !dbg !1111
  %conv29 = sext i8 %16 to i32, !dbg !1111
  %cmp30 = icmp ne i32 %conv25, %conv29, !dbg !1112
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !1113

if.then32:                                        ; preds = %for.body22
  store i32 0, i32* %pal, align 4, !dbg !1114
  br label %if.end33, !dbg !1116

if.end33:                                         ; preds = %if.then32, %for.body22
  br label %for.inc34, !dbg !1117

for.inc34:                                        ; preds = %if.end33
  %17 = load i32, i32* %i, align 4, !dbg !1118
  %inc35 = add nsw i32 %17, 1, !dbg !1118
  store i32 %inc35, i32* %i, align 4, !dbg !1118
  br label %for.cond19, !dbg !1119, !llvm.loop !1120

for.end36:                                        ; preds = %for.cond19
  %arrayidx37 = getelementptr inbounds [64 x i8], [64 x i8]* %string, i64 0, i64 0, !dbg !1122
  %18 = load i8, i8* %arrayidx37, align 16, !dbg !1122
  %conv38 = sext i8 %18 to i32, !dbg !1122
  %cmp39 = icmp eq i32 %conv38, 94, !dbg !1124
  br i1 %cmp39, label %if.then41, label %if.end47, !dbg !1125

if.then41:                                        ; preds = %for.end36
  %call42 = call i32 @cgc_transmit_all(i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4.38, i64 0, i64 0), i64 15) #15, !dbg !1126
  %cmp43 = icmp ne i32 %call42, 0, !dbg !1129
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !1130

if.then45:                                        ; preds = %if.then41
  call void @cgc__terminate(i32 0) #16, !dbg !1131
  unreachable, !dbg !1131

if.end46:                                         ; preds = %if.then41
  br label %if.end47, !dbg !1133

if.end47:                                         ; preds = %if.end46, %for.end36
  %19 = load i32, i32* %pal, align 4, !dbg !1134
  store i32 %19, i32* %retval, align 4, !dbg !1135
  br label %return, !dbg !1135

return:                                           ; preds = %if.end47, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !1136
  ret i32 %20, !dbg !1136
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @klee_init_fds(i32 %n_files, i32 %file_length, i32 %stdin_length, i32 %sym_stdout_flag, i32 %save_all_writes_flag, i32 %max_failures) #0 !dbg !1137 {
entry:
  %n_files.addr = alloca i32, align 4
  %file_length.addr = alloca i32, align 4
  %stdin_length.addr = alloca i32, align 4
  %sym_stdout_flag.addr = alloca i32, align 4
  %save_all_writes_flag.addr = alloca i32, align 4
  %max_failures.addr = alloca i32, align 4
  %k = alloca i32, align 4
  %name = alloca [7 x i8], align 1
  %s = alloca %struct.stat64.15, align 8
  store i32 %n_files, i32* %n_files.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n_files.addr, metadata !1140, metadata !DIExpression()), !dbg !1141
  store i32 %file_length, i32* %file_length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %file_length.addr, metadata !1142, metadata !DIExpression()), !dbg !1143
  store i32 %stdin_length, i32* %stdin_length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stdin_length.addr, metadata !1144, metadata !DIExpression()), !dbg !1145
  store i32 %sym_stdout_flag, i32* %sym_stdout_flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sym_stdout_flag.addr, metadata !1146, metadata !DIExpression()), !dbg !1147
  store i32 %save_all_writes_flag, i32* %save_all_writes_flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %save_all_writes_flag.addr, metadata !1148, metadata !DIExpression()), !dbg !1149
  store i32 %max_failures, i32* %max_failures.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max_failures.addr, metadata !1150, metadata !DIExpression()), !dbg !1151
  call void @llvm.dbg.declare(metadata i32* %k, metadata !1152, metadata !DIExpression()), !dbg !1153
  call void @llvm.dbg.declare(metadata [7 x i8]* %name, metadata !1154, metadata !DIExpression()), !dbg !1158
  %0 = bitcast [7 x i8]* %name to i8*, !dbg !1158
  %1 = call i8* @memcpy(i8* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__const.klee_init_fds.name, i32 0, i32 0), i64 7), !dbg !1158
  call void @llvm.dbg.declare(metadata %struct.stat64.15* %s, metadata !1159, metadata !DIExpression()), !dbg !1160
  %call = call i32 @stat64(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.41, i64 0, i64 0), %struct.stat64.15* %s) #8, !dbg !1161
  %2 = load i32, i32* %n_files.addr, align 4, !dbg !1162
  store i32 %2, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 0), align 8, !dbg !1163
  %3 = load i32, i32* %n_files.addr, align 4, !dbg !1164
  %conv = zext i32 %3 to i64, !dbg !1164
  %mul = mul i64 24, %conv, !dbg !1165
  %call1 = call noalias i8* @malloc(i64 %mul) #8, !dbg !1166
  %4 = bitcast i8* %call1 to %struct.exe_disk_file_t.16*, !dbg !1166
  store %struct.exe_disk_file_t.16* %4, %struct.exe_disk_file_t.16** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 4), align 8, !dbg !1167
  store i32 0, i32* %k, align 4, !dbg !1168
  br label %for.cond, !dbg !1170

for.cond:                                         ; preds = %for.body, %entry
  %5 = load i32, i32* %k, align 4, !dbg !1171
  %6 = load i32, i32* %n_files.addr, align 4, !dbg !1173
  %cmp = icmp ult i32 %5, %6, !dbg !1174
  br i1 %cmp, label %for.body, label %for.end, !dbg !1175

for.body:                                         ; preds = %for.cond
  %7 = load i32, i32* %k, align 4, !dbg !1176
  %add = add i32 65, %7, !dbg !1178
  %conv3 = trunc i32 %add to i8, !dbg !1179
  %arrayidx = getelementptr inbounds [7 x i8], [7 x i8]* %name, i64 0, i64 0, !dbg !1180
  store i8 %conv3, i8* %arrayidx, align 1, !dbg !1181
  %8 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 4), align 8, !dbg !1182
  %9 = load i32, i32* %k, align 4, !dbg !1183
  %idxprom = zext i32 %9 to i64, !dbg !1184
  %arrayidx4 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %8, i64 %idxprom, !dbg !1184
  %10 = load i32, i32* %file_length.addr, align 4, !dbg !1185
  %arraydecay = getelementptr inbounds [7 x i8], [7 x i8]* %name, i64 0, i64 0, !dbg !1186
  call void @__create_new_dfile(%struct.exe_disk_file_t.16* %arrayidx4, i32 %10, i8* %arraydecay, %struct.stat64.15* %s), !dbg !1187
  %11 = load i32, i32* %k, align 4, !dbg !1188
  %inc = add i32 %11, 1, !dbg !1188
  store i32 %inc, i32* %k, align 4, !dbg !1188
  br label %for.cond, !dbg !1189, !llvm.loop !1190

for.end:                                          ; preds = %for.cond
  %12 = load i32, i32* %stdin_length.addr, align 4, !dbg !1192
  %tobool = icmp ne i32 %12, 0, !dbg !1192
  br i1 %tobool, label %if.then, label %if.else, !dbg !1194

if.then:                                          ; preds = %for.end
  %call5 = call noalias i8* @malloc(i64 24) #8, !dbg !1195
  %13 = bitcast i8* %call5 to %struct.exe_disk_file_t.16*, !dbg !1195
  store %struct.exe_disk_file_t.16* %13, %struct.exe_disk_file_t.16** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 1), align 8, !dbg !1197
  %14 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 1), align 8, !dbg !1198
  %15 = load i32, i32* %stdin_length.addr, align 4, !dbg !1199
  call void @__create_new_dfile(%struct.exe_disk_file_t.16* %14, i32 %15, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.42, i64 0, i64 0), %struct.stat64.15* %s), !dbg !1200
  %16 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 1), align 8, !dbg !1201
  store %struct.exe_disk_file_t.16* %16, %struct.exe_disk_file_t.16** getelementptr inbounds (%struct.exe_sym_env_t.19, %struct.exe_sym_env_t.19* bitcast ({ <{ %struct.exe_file_t.17, %struct.exe_file_t.17, %struct.exe_file_t.17, [29 x %struct.exe_file_t.17] }>, i32, i32, i32, [4 x i8] }* @__exe_env to %struct.exe_sym_env_t.19*), i32 0, i32 0, i64 0, i32 3), align 8, !dbg !1202
  br label %if.end, !dbg !1203

if.else:                                          ; preds = %for.end
  store %struct.exe_disk_file_t.16* null, %struct.exe_disk_file_t.16** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 1), align 8, !dbg !1204
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %17 = load i32, i32* %max_failures.addr, align 4, !dbg !1205
  store i32 %17, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 5), align 8, !dbg !1206
  %18 = load i32, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 5), align 8, !dbg !1207
  %tobool6 = icmp ne i32 %18, 0, !dbg !1209
  br i1 %tobool6, label %if.then7, label %if.end13, !dbg !1210

if.then7:                                         ; preds = %if.end
  %call8 = call noalias i8* @malloc(i64 4) #8, !dbg !1211
  %19 = bitcast i8* %call8 to i32*, !dbg !1211
  store i32* %19, i32** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 6), align 8, !dbg !1213
  %call9 = call noalias i8* @malloc(i64 4) #8, !dbg !1214
  %20 = bitcast i8* %call9 to i32*, !dbg !1214
  store i32* %20, i32** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 7), align 8, !dbg !1215
  %call10 = call noalias i8* @malloc(i64 4) #8, !dbg !1216
  %21 = bitcast i8* %call10 to i32*, !dbg !1216
  store i32* %21, i32** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 8), align 8, !dbg !1217
  %call11 = call noalias i8* @malloc(i64 4) #8, !dbg !1218
  %22 = bitcast i8* %call11 to i32*, !dbg !1218
  store i32* %22, i32** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 9), align 8, !dbg !1219
  %call12 = call noalias i8* @malloc(i64 4) #8, !dbg !1220
  %23 = bitcast i8* %call12 to i32*, !dbg !1220
  store i32* %23, i32** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 10), align 8, !dbg !1221
  %24 = load i32*, i32** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 6), align 8, !dbg !1222
  %25 = bitcast i32* %24 to i8*, !dbg !1223
  call void @klee_make_symbolic(i8* %25, i64 4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2.43, i64 0, i64 0)), !dbg !1224
  %26 = load i32*, i32** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 7), align 8, !dbg !1225
  %27 = bitcast i32* %26 to i8*, !dbg !1226
  call void @klee_make_symbolic(i8* %27, i64 4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3.44, i64 0, i64 0)), !dbg !1227
  %28 = load i32*, i32** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 8), align 8, !dbg !1228
  %29 = bitcast i32* %28 to i8*, !dbg !1229
  call void @klee_make_symbolic(i8* %29, i64 4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4.45, i64 0, i64 0)), !dbg !1230
  %30 = load i32*, i32** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 9), align 8, !dbg !1231
  %31 = bitcast i32* %30 to i8*, !dbg !1232
  call void @klee_make_symbolic(i8* %31, i64 4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5.46, i64 0, i64 0)), !dbg !1233
  %32 = load i32*, i32** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 10), align 8, !dbg !1234
  %33 = bitcast i32* %32 to i8*, !dbg !1235
  call void @klee_make_symbolic(i8* %33, i64 4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6.47, i64 0, i64 0)), !dbg !1236
  br label %if.end13, !dbg !1237

if.end13:                                         ; preds = %if.then7, %if.end
  %34 = load i32, i32* %sym_stdout_flag.addr, align 4, !dbg !1238
  %tobool14 = icmp ne i32 %34, 0, !dbg !1238
  br i1 %tobool14, label %if.then15, label %if.else17, !dbg !1240

if.then15:                                        ; preds = %if.end13
  %call16 = call noalias i8* @malloc(i64 24) #8, !dbg !1241
  %35 = bitcast i8* %call16 to %struct.exe_disk_file_t.16*, !dbg !1241
  store %struct.exe_disk_file_t.16* %35, %struct.exe_disk_file_t.16** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 2), align 8, !dbg !1243
  %36 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 2), align 8, !dbg !1244
  call void @__create_new_dfile(%struct.exe_disk_file_t.16* %36, i32 1024, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.48, i64 0, i64 0), %struct.stat64.15* %s), !dbg !1245
  %37 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 2), align 8, !dbg !1246
  store %struct.exe_disk_file_t.16* %37, %struct.exe_disk_file_t.16** getelementptr inbounds (%struct.exe_sym_env_t.19, %struct.exe_sym_env_t.19* bitcast ({ <{ %struct.exe_file_t.17, %struct.exe_file_t.17, %struct.exe_file_t.17, [29 x %struct.exe_file_t.17] }>, i32, i32, i32, [4 x i8] }* @__exe_env to %struct.exe_sym_env_t.19*), i32 0, i32 0, i64 1, i32 3), align 8, !dbg !1247
  store i32 0, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 3), align 8, !dbg !1248
  br label %if.end18, !dbg !1249

if.else17:                                        ; preds = %if.end13
  store %struct.exe_disk_file_t.16* null, %struct.exe_disk_file_t.16** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 2), align 8, !dbg !1250
  br label %if.end18

if.end18:                                         ; preds = %if.else17, %if.then15
  %38 = load i32, i32* %save_all_writes_flag.addr, align 4, !dbg !1251
  store i32 %38, i32* getelementptr inbounds (%struct.exe_sym_env_t.19, %struct.exe_sym_env_t.19* bitcast ({ <{ %struct.exe_file_t.17, %struct.exe_file_t.17, %struct.exe_file_t.17, [29 x %struct.exe_file_t.17] }>, i32, i32, i32, [4 x i8] }* @__exe_env to %struct.exe_sym_env_t.19*), i32 0, i32 3), align 8, !dbg !1252
  %call19 = call i32 @__sym_uint32(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8.49, i64 0, i64 0)), !dbg !1253
  store i32 %call19, i32* getelementptr inbounds (%struct.exe_sym_env_t.19, %struct.exe_sym_env_t.19* bitcast ({ <{ %struct.exe_file_t.17, %struct.exe_file_t.17, %struct.exe_file_t.17, [29 x %struct.exe_file_t.17] }>, i32, i32, i32, [4 x i8] }* @__exe_env to %struct.exe_sym_env_t.19*), i32 0, i32 2), align 4, !dbg !1254
  %39 = load i32, i32* getelementptr inbounds (%struct.exe_sym_env_t.19, %struct.exe_sym_env_t.19* bitcast ({ <{ %struct.exe_file_t.17, %struct.exe_file_t.17, %struct.exe_file_t.17, [29 x %struct.exe_file_t.17] }>, i32, i32, i32, [4 x i8] }* @__exe_env to %struct.exe_sym_env_t.19*), i32 0, i32 2), align 4, !dbg !1255
  %cmp20 = icmp eq i32 %39, 1, !dbg !1256
  %conv21 = zext i1 %cmp20 to i32, !dbg !1256
  %conv22 = sext i32 %conv21 to i64, !dbg !1257
  call void @klee_assume(i64 %conv22), !dbg !1258
  ret void, !dbg !1259
}

; Function Attrs: noinline nounwind uwtable
define internal void @__create_new_dfile(%struct.exe_disk_file_t.16* %dfile, i32 %size, i8* %name, %struct.stat64.15* %defaults) #0 !dbg !1260 {
entry:
  %dfile.addr = alloca %struct.exe_disk_file_t.16*, align 8
  %size.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %defaults.addr = alloca %struct.stat64.15*, align 8
  %s = alloca %struct.stat64.15*, align 8
  %sp = alloca i8*, align 8
  %sname = alloca [64 x i8], align 16
  store %struct.exe_disk_file_t.16* %dfile, %struct.exe_disk_file_t.16** %dfile.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.exe_disk_file_t.16** %dfile.addr, metadata !1263, metadata !DIExpression()), !dbg !1264
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !1265, metadata !DIExpression()), !dbg !1266
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !1267, metadata !DIExpression()), !dbg !1268
  store %struct.stat64.15* %defaults, %struct.stat64.15** %defaults.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat64.15** %defaults.addr, metadata !1269, metadata !DIExpression()), !dbg !1270
  call void @llvm.dbg.declare(metadata %struct.stat64.15** %s, metadata !1271, metadata !DIExpression()), !dbg !1272
  %call = call noalias i8* @malloc(i64 144) #8, !dbg !1273
  %0 = bitcast i8* %call to %struct.stat64.15*, !dbg !1273
  store %struct.stat64.15* %0, %struct.stat64.15** %s, align 8, !dbg !1272
  call void @llvm.dbg.declare(metadata i8** %sp, metadata !1274, metadata !DIExpression()), !dbg !1275
  call void @llvm.dbg.declare(metadata [64 x i8]* %sname, metadata !1276, metadata !DIExpression()), !dbg !1277
  %1 = load i8*, i8** %name.addr, align 8, !dbg !1278
  store i8* %1, i8** %sp, align 8, !dbg !1280
  br label %for.cond, !dbg !1281

for.cond:                                         ; preds = %for.body, %entry
  %2 = load i8*, i8** %sp, align 8, !dbg !1282
  %3 = load i8, i8* %2, align 1, !dbg !1284
  %tobool = icmp ne i8 %3, 0, !dbg !1285
  %4 = load i8*, i8** %sp, align 8, !dbg !1286
  br i1 %tobool, label %for.body, label %for.end, !dbg !1285

for.body:                                         ; preds = %for.cond
  %5 = load i8, i8* %4, align 1, !dbg !1287
  %6 = load i8*, i8** %sp, align 8, !dbg !1288
  %7 = load i8*, i8** %name.addr, align 8, !dbg !1289
  %sub.ptr.lhs.cast = ptrtoint i8* %6 to i64, !dbg !1290
  %sub.ptr.rhs.cast = ptrtoint i8* %7 to i64, !dbg !1290
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !1290
  %arrayidx = getelementptr inbounds [64 x i8], [64 x i8]* %sname, i64 0, i64 %sub.ptr.sub, !dbg !1291
  store i8 %5, i8* %arrayidx, align 1, !dbg !1292
  %8 = load i8*, i8** %sp, align 8, !dbg !1293
  %incdec.ptr = getelementptr inbounds i8, i8* %8, i32 1, !dbg !1293
  store i8* %incdec.ptr, i8** %sp, align 8, !dbg !1293
  br label %for.cond, !dbg !1294, !llvm.loop !1295

for.end:                                          ; preds = %for.cond
  %9 = load i8*, i8** %name.addr, align 8, !dbg !1297
  %sub.ptr.lhs.cast1 = ptrtoint i8* %4 to i64, !dbg !1298
  %sub.ptr.rhs.cast2 = ptrtoint i8* %9 to i64, !dbg !1298
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.rhs.cast2, !dbg !1298
  %arrayidx4 = getelementptr inbounds [64 x i8], [64 x i8]* %sname, i64 0, i64 %sub.ptr.sub3, !dbg !1299
  %10 = call i8* @memcpy(i8* %arrayidx4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9.50, i64 0, i64 0), i64 6), !dbg !1300
  %11 = load i32, i32* %size.addr, align 4, !dbg !1301
  %tobool5 = icmp ne i32 %11, 0, !dbg !1301
  br i1 %tobool5, label %if.end, label %if.else, !dbg !1304

if.else:                                          ; preds = %for.end
  call void @__assert_fail(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10.51, i64 0, i64 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.11.52, i64 0, i64 0), i32 55, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @__PRETTY_FUNCTION__.__create_new_dfile, i64 0, i64 0)) #17, !dbg !1301
  unreachable, !dbg !1301

if.end:                                           ; preds = %for.end
  %12 = load i32, i32* %size.addr, align 4, !dbg !1305
  %13 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile.addr, align 8, !dbg !1306
  %size6 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %13, i32 0, i32 0, !dbg !1307
  store i32 %12, i32* %size6, align 8, !dbg !1308
  %14 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile.addr, align 8, !dbg !1309
  %size7 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %14, i32 0, i32 0, !dbg !1310
  %15 = load i32, i32* %size7, align 8, !dbg !1310
  %conv = zext i32 %15 to i64, !dbg !1309
  %call8 = call noalias i8* @malloc(i64 %conv) #8, !dbg !1311
  %16 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile.addr, align 8, !dbg !1312
  %contents = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %16, i32 0, i32 1, !dbg !1313
  store i8* %call8, i8** %contents, align 8, !dbg !1314
  %17 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile.addr, align 8, !dbg !1315
  %contents9 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %17, i32 0, i32 1, !dbg !1316
  %18 = load i8*, i8** %contents9, align 8, !dbg !1316
  %19 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile.addr, align 8, !dbg !1317
  %size10 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %19, i32 0, i32 0, !dbg !1318
  %20 = load i32, i32* %size10, align 8, !dbg !1318
  %conv11 = zext i32 %20 to i64, !dbg !1317
  %21 = load i8*, i8** %name.addr, align 8, !dbg !1319
  call void @klee_make_symbolic(i8* %18, i64 %conv11, i8* %21), !dbg !1320
  %22 = load %struct.stat64.15*, %struct.stat64.15** %s, align 8, !dbg !1321
  %23 = bitcast %struct.stat64.15* %22 to i8*, !dbg !1321
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %sname, i64 0, i64 0, !dbg !1322
  call void @klee_make_symbolic(i8* %23, i64 144, i8* %arraydecay), !dbg !1323
  %24 = load %struct.stat64.15*, %struct.stat64.15** %s, align 8, !dbg !1324
  %st_ino = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %24, i32 0, i32 1, !dbg !1326
  %25 = load i64, i64* %st_ino, align 8, !dbg !1326
  %call12 = call i32 @klee_is_symbolic(i64 %25), !dbg !1327
  %tobool13 = icmp ne i32 %call12, 0, !dbg !1327
  br i1 %tobool13, label %if.end19, label %land.lhs.true, !dbg !1328

land.lhs.true:                                    ; preds = %if.end
  %26 = load %struct.stat64.15*, %struct.stat64.15** %s, align 8, !dbg !1329
  %st_ino14 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %26, i32 0, i32 1, !dbg !1330
  %27 = load i64, i64* %st_ino14, align 8, !dbg !1330
  %and = and i64 %27, 2147483647, !dbg !1331
  %cmp = icmp eq i64 %and, 0, !dbg !1332
  br i1 %cmp, label %if.then16, label %if.end19, !dbg !1333

if.then16:                                        ; preds = %land.lhs.true
  %28 = load %struct.stat64.15*, %struct.stat64.15** %defaults.addr, align 8, !dbg !1334
  %st_ino17 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %28, i32 0, i32 1, !dbg !1335
  %29 = load i64, i64* %st_ino17, align 8, !dbg !1335
  %30 = load %struct.stat64.15*, %struct.stat64.15** %s, align 8, !dbg !1336
  %st_ino18 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %30, i32 0, i32 1, !dbg !1337
  store i64 %29, i64* %st_ino18, align 8, !dbg !1338
  br label %if.end19, !dbg !1336

if.end19:                                         ; preds = %if.then16, %land.lhs.true, %if.end
  %31 = load %struct.stat64.15*, %struct.stat64.15** %s, align 8, !dbg !1339
  %st_ino20 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %31, i32 0, i32 1, !dbg !1340
  %32 = load i64, i64* %st_ino20, align 8, !dbg !1340
  %and21 = and i64 %32, 2147483647, !dbg !1341
  %cmp22 = icmp ne i64 %and21, 0, !dbg !1342
  %conv23 = zext i1 %cmp22 to i32, !dbg !1342
  %conv24 = sext i32 %conv23 to i64, !dbg !1343
  call void @klee_assume(i64 %conv24), !dbg !1344
  %33 = load %struct.stat64.15*, %struct.stat64.15** %s, align 8, !dbg !1345
  %st_blksize = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %33, i32 0, i32 9, !dbg !1346
  %34 = load i64, i64* %st_blksize, align 8, !dbg !1346
  %and25 = and i64 %34, -65536, !dbg !1347
  %cmp26 = icmp eq i64 %and25, 0, !dbg !1348
  %conv27 = zext i1 %cmp26 to i32, !dbg !1348
  %conv28 = sext i32 %conv27 to i64, !dbg !1349
  call void @klee_assume(i64 %conv28), !dbg !1350
  %35 = load %struct.stat64.15*, %struct.stat64.15** %s, align 8, !dbg !1351
  %36 = bitcast %struct.stat64.15* %35 to i8*, !dbg !1351
  %37 = load %struct.stat64.15*, %struct.stat64.15** %s, align 8, !dbg !1352
  %st_mode = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %37, i32 0, i32 3, !dbg !1353
  %38 = load i32, i32* %st_mode, align 8, !dbg !1353
  %and29 = and i32 %38, -61952, !dbg !1354
  %tobool30 = icmp ne i32 %and29, 0, !dbg !1355
  %lnot = xor i1 %tobool30, true, !dbg !1355
  %lnot.ext = zext i1 %lnot to i32, !dbg !1355
  %conv31 = sext i32 %lnot.ext to i64, !dbg !1355
  call void @klee_prefer_cex(i8* %36, i64 %conv31), !dbg !1356
  %39 = load %struct.stat64.15*, %struct.stat64.15** %s, align 8, !dbg !1357
  %40 = bitcast %struct.stat64.15* %39 to i8*, !dbg !1357
  %41 = load %struct.stat64.15*, %struct.stat64.15** %s, align 8, !dbg !1358
  %st_dev = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %41, i32 0, i32 0, !dbg !1359
  %42 = load i64, i64* %st_dev, align 8, !dbg !1359
  %43 = load %struct.stat64.15*, %struct.stat64.15** %defaults.addr, align 8, !dbg !1360
  %st_dev32 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %43, i32 0, i32 0, !dbg !1361
  %44 = load i64, i64* %st_dev32, align 8, !dbg !1361
  %cmp33 = icmp eq i64 %42, %44, !dbg !1362
  %conv34 = zext i1 %cmp33 to i32, !dbg !1362
  %conv35 = sext i32 %conv34 to i64, !dbg !1358
  call void @klee_prefer_cex(i8* %40, i64 %conv35), !dbg !1363
  %45 = load %struct.stat64.15*, %struct.stat64.15** %s, align 8, !dbg !1364
  %46 = bitcast %struct.stat64.15* %45 to i8*, !dbg !1364
  %47 = load %struct.stat64.15*, %struct.stat64.15** %s, align 8, !dbg !1365
  %st_rdev = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %47, i32 0, i32 7, !dbg !1366
  %48 = load i64, i64* %st_rdev, align 8, !dbg !1366
  %49 = load %struct.stat64.15*, %struct.stat64.15** %defaults.addr, align 8, !dbg !1367
  %st_rdev36 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %49, i32 0, i32 7, !dbg !1368
  %50 = load i64, i64* %st_rdev36, align 8, !dbg !1368
  %cmp37 = icmp eq i64 %48, %50, !dbg !1369
  %conv38 = zext i1 %cmp37 to i32, !dbg !1369
  %conv39 = sext i32 %conv38 to i64, !dbg !1365
  call void @klee_prefer_cex(i8* %46, i64 %conv39), !dbg !1370
  %51 = load %struct.stat64.15*, %struct.stat64.15** %s, align 8, !dbg !1371
  %52 = bitcast %struct.stat64.15* %51 to i8*, !dbg !1371
  %53 = load %struct.stat64.15*, %struct.stat64.15** %s, align 8, !dbg !1372
  %st_mode40 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %53, i32 0, i32 3, !dbg !1373
  %54 = load i32, i32* %st_mode40, align 8, !dbg !1373
  %and41 = and i32 %54, 448, !dbg !1374
  %cmp42 = icmp eq i32 %and41, 384, !dbg !1375
  %conv43 = zext i1 %cmp42 to i32, !dbg !1375
  %conv44 = sext i32 %conv43 to i64, !dbg !1376
  call void @klee_prefer_cex(i8* %52, i64 %conv44), !dbg !1377
  %55 = load %struct.stat64.15*, %struct.stat64.15** %s, align 8, !dbg !1378
  %56 = bitcast %struct.stat64.15* %55 to i8*, !dbg !1378
  %57 = load %struct.stat64.15*, %struct.stat64.15** %s, align 8, !dbg !1379
  %st_mode45 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %57, i32 0, i32 3, !dbg !1380
  %58 = load i32, i32* %st_mode45, align 8, !dbg !1380
  %and46 = and i32 %58, 56, !dbg !1381
  %cmp47 = icmp eq i32 %and46, 32, !dbg !1382
  %conv48 = zext i1 %cmp47 to i32, !dbg !1382
  %conv49 = sext i32 %conv48 to i64, !dbg !1383
  call void @klee_prefer_cex(i8* %56, i64 %conv49), !dbg !1384
  %59 = load %struct.stat64.15*, %struct.stat64.15** %s, align 8, !dbg !1385
  %60 = bitcast %struct.stat64.15* %59 to i8*, !dbg !1385
  %61 = load %struct.stat64.15*, %struct.stat64.15** %s, align 8, !dbg !1386
  %st_mode50 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %61, i32 0, i32 3, !dbg !1387
  %62 = load i32, i32* %st_mode50, align 8, !dbg !1387
  %and51 = and i32 %62, 7, !dbg !1388
  %cmp52 = icmp eq i32 %and51, 4, !dbg !1389
  %conv53 = zext i1 %cmp52 to i32, !dbg !1389
  %conv54 = sext i32 %conv53 to i64, !dbg !1390
  call void @klee_prefer_cex(i8* %60, i64 %conv54), !dbg !1391
  %63 = load %struct.stat64.15*, %struct.stat64.15** %s, align 8, !dbg !1392
  %64 = bitcast %struct.stat64.15* %63 to i8*, !dbg !1392
  %65 = load %struct.stat64.15*, %struct.stat64.15** %s, align 8, !dbg !1393
  %st_mode55 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %65, i32 0, i32 3, !dbg !1394
  %66 = load i32, i32* %st_mode55, align 8, !dbg !1394
  %and56 = and i32 %66, 61440, !dbg !1395
  %cmp57 = icmp eq i32 %and56, 32768, !dbg !1396
  %conv58 = zext i1 %cmp57 to i32, !dbg !1396
  %conv59 = sext i32 %conv58 to i64, !dbg !1397
  call void @klee_prefer_cex(i8* %64, i64 %conv59), !dbg !1398
  %67 = load %struct.stat64.15*, %struct.stat64.15** %s, align 8, !dbg !1399
  %68 = bitcast %struct.stat64.15* %67 to i8*, !dbg !1399
  %69 = load %struct.stat64.15*, %struct.stat64.15** %s, align 8, !dbg !1400
  %st_nlink = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %69, i32 0, i32 2, !dbg !1401
  %70 = load i64, i64* %st_nlink, align 8, !dbg !1401
  %cmp60 = icmp eq i64 %70, 1, !dbg !1402
  %conv61 = zext i1 %cmp60 to i32, !dbg !1402
  %conv62 = sext i32 %conv61 to i64, !dbg !1400
  call void @klee_prefer_cex(i8* %68, i64 %conv62), !dbg !1403
  %71 = load %struct.stat64.15*, %struct.stat64.15** %s, align 8, !dbg !1404
  %72 = bitcast %struct.stat64.15* %71 to i8*, !dbg !1404
  %73 = load %struct.stat64.15*, %struct.stat64.15** %s, align 8, !dbg !1405
  %st_uid = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %73, i32 0, i32 4, !dbg !1406
  %74 = load i32, i32* %st_uid, align 4, !dbg !1406
  %75 = load %struct.stat64.15*, %struct.stat64.15** %defaults.addr, align 8, !dbg !1407
  %st_uid63 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %75, i32 0, i32 4, !dbg !1408
  %76 = load i32, i32* %st_uid63, align 4, !dbg !1408
  %cmp64 = icmp eq i32 %74, %76, !dbg !1409
  %conv65 = zext i1 %cmp64 to i32, !dbg !1409
  %conv66 = sext i32 %conv65 to i64, !dbg !1405
  call void @klee_prefer_cex(i8* %72, i64 %conv66), !dbg !1410
  %77 = load %struct.stat64.15*, %struct.stat64.15** %s, align 8, !dbg !1411
  %78 = bitcast %struct.stat64.15* %77 to i8*, !dbg !1411
  %79 = load %struct.stat64.15*, %struct.stat64.15** %s, align 8, !dbg !1412
  %st_gid = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %79, i32 0, i32 5, !dbg !1413
  %80 = load i32, i32* %st_gid, align 8, !dbg !1413
  %81 = load %struct.stat64.15*, %struct.stat64.15** %defaults.addr, align 8, !dbg !1414
  %st_gid67 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %81, i32 0, i32 5, !dbg !1415
  %82 = load i32, i32* %st_gid67, align 8, !dbg !1415
  %cmp68 = icmp eq i32 %80, %82, !dbg !1416
  %conv69 = zext i1 %cmp68 to i32, !dbg !1416
  %conv70 = sext i32 %conv69 to i64, !dbg !1412
  call void @klee_prefer_cex(i8* %78, i64 %conv70), !dbg !1417
  %83 = load %struct.stat64.15*, %struct.stat64.15** %s, align 8, !dbg !1418
  %84 = bitcast %struct.stat64.15* %83 to i8*, !dbg !1418
  %85 = load %struct.stat64.15*, %struct.stat64.15** %s, align 8, !dbg !1419
  %st_blksize71 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %85, i32 0, i32 9, !dbg !1420
  %86 = load i64, i64* %st_blksize71, align 8, !dbg !1420
  %cmp72 = icmp eq i64 %86, 4096, !dbg !1421
  %conv73 = zext i1 %cmp72 to i32, !dbg !1421
  %conv74 = sext i32 %conv73 to i64, !dbg !1419
  call void @klee_prefer_cex(i8* %84, i64 %conv74), !dbg !1422
  %87 = load %struct.stat64.15*, %struct.stat64.15** %s, align 8, !dbg !1423
  %88 = bitcast %struct.stat64.15* %87 to i8*, !dbg !1423
  %89 = load %struct.stat64.15*, %struct.stat64.15** %s, align 8, !dbg !1424
  %st_atim = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %89, i32 0, i32 11, !dbg !1425
  %tv_sec = getelementptr inbounds %struct.timespec.14, %struct.timespec.14* %st_atim, i32 0, i32 0, !dbg !1425
  %90 = load i64, i64* %tv_sec, align 8, !dbg !1425
  %91 = load %struct.stat64.15*, %struct.stat64.15** %defaults.addr, align 8, !dbg !1426
  %st_atim75 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %91, i32 0, i32 11, !dbg !1427
  %tv_sec76 = getelementptr inbounds %struct.timespec.14, %struct.timespec.14* %st_atim75, i32 0, i32 0, !dbg !1427
  %92 = load i64, i64* %tv_sec76, align 8, !dbg !1427
  %cmp77 = icmp eq i64 %90, %92, !dbg !1428
  %conv78 = zext i1 %cmp77 to i32, !dbg !1428
  %conv79 = sext i32 %conv78 to i64, !dbg !1424
  call void @klee_prefer_cex(i8* %88, i64 %conv79), !dbg !1429
  %93 = load %struct.stat64.15*, %struct.stat64.15** %s, align 8, !dbg !1430
  %94 = bitcast %struct.stat64.15* %93 to i8*, !dbg !1430
  %95 = load %struct.stat64.15*, %struct.stat64.15** %s, align 8, !dbg !1431
  %st_mtim = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %95, i32 0, i32 12, !dbg !1432
  %tv_sec80 = getelementptr inbounds %struct.timespec.14, %struct.timespec.14* %st_mtim, i32 0, i32 0, !dbg !1432
  %96 = load i64, i64* %tv_sec80, align 8, !dbg !1432
  %97 = load %struct.stat64.15*, %struct.stat64.15** %defaults.addr, align 8, !dbg !1433
  %st_mtim81 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %97, i32 0, i32 12, !dbg !1434
  %tv_sec82 = getelementptr inbounds %struct.timespec.14, %struct.timespec.14* %st_mtim81, i32 0, i32 0, !dbg !1434
  %98 = load i64, i64* %tv_sec82, align 8, !dbg !1434
  %cmp83 = icmp eq i64 %96, %98, !dbg !1435
  %conv84 = zext i1 %cmp83 to i32, !dbg !1435
  %conv85 = sext i32 %conv84 to i64, !dbg !1431
  call void @klee_prefer_cex(i8* %94, i64 %conv85), !dbg !1436
  %99 = load %struct.stat64.15*, %struct.stat64.15** %s, align 8, !dbg !1437
  %100 = bitcast %struct.stat64.15* %99 to i8*, !dbg !1437
  %101 = load %struct.stat64.15*, %struct.stat64.15** %s, align 8, !dbg !1438
  %st_ctim = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %101, i32 0, i32 13, !dbg !1439
  %tv_sec86 = getelementptr inbounds %struct.timespec.14, %struct.timespec.14* %st_ctim, i32 0, i32 0, !dbg !1439
  %102 = load i64, i64* %tv_sec86, align 8, !dbg !1439
  %103 = load %struct.stat64.15*, %struct.stat64.15** %defaults.addr, align 8, !dbg !1440
  %st_ctim87 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %103, i32 0, i32 13, !dbg !1441
  %tv_sec88 = getelementptr inbounds %struct.timespec.14, %struct.timespec.14* %st_ctim87, i32 0, i32 0, !dbg !1441
  %104 = load i64, i64* %tv_sec88, align 8, !dbg !1441
  %cmp89 = icmp eq i64 %102, %104, !dbg !1442
  %conv90 = zext i1 %cmp89 to i32, !dbg !1442
  %conv91 = sext i32 %conv90 to i64, !dbg !1438
  call void @klee_prefer_cex(i8* %100, i64 %conv91), !dbg !1443
  %105 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile.addr, align 8, !dbg !1444
  %size92 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %105, i32 0, i32 0, !dbg !1445
  %106 = load i32, i32* %size92, align 8, !dbg !1445
  %conv93 = zext i32 %106 to i64, !dbg !1444
  %107 = load %struct.stat64.15*, %struct.stat64.15** %s, align 8, !dbg !1446
  %st_size = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %107, i32 0, i32 8, !dbg !1447
  store i64 %conv93, i64* %st_size, align 8, !dbg !1448
  %108 = load %struct.stat64.15*, %struct.stat64.15** %s, align 8, !dbg !1449
  %st_blocks = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %108, i32 0, i32 10, !dbg !1450
  store i64 8, i64* %st_blocks, align 8, !dbg !1451
  %109 = load %struct.stat64.15*, %struct.stat64.15** %s, align 8, !dbg !1452
  %110 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile.addr, align 8, !dbg !1453
  %stat = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %110, i32 0, i32 2, !dbg !1454
  store %struct.stat64.15* %109, %struct.stat64.15** %stat, align 8, !dbg !1455
  ret void, !dbg !1456
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @__sym_uint32(i8* %name) #0 !dbg !1457 {
entry:
  %name.addr = alloca i8*, align 8
  %x = alloca i32, align 4
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !1460, metadata !DIExpression()), !dbg !1461
  call void @llvm.dbg.declare(metadata i32* %x, metadata !1462, metadata !DIExpression()), !dbg !1463
  %0 = bitcast i32* %x to i8*, !dbg !1464
  %1 = load i8*, i8** %name.addr, align 8, !dbg !1465
  call void @klee_make_symbolic(i8* %0, i64 4, i8* %1), !dbg !1466
  %2 = load i32, i32* %x, align 4, !dbg !1467
  ret i32 %2, !dbg !1468
}

declare dso_local void @klee_assume(i64) #4

; Function Attrs: noreturn nounwind
declare dso_local void @__assert_fail(i8*, i8*, i32, i8*) #7

declare dso_local i32 @klee_is_symbolic(i64) #4

declare dso_local void @klee_prefer_cex(i8*, i64) #4

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @klee_range(i32 %start, i32 %end, i8* %name) #0 !dbg !1469 {
entry:
  %retval = alloca i32, align 4
  %start.addr = alloca i32, align 4
  %end.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %x = alloca i32, align 4
  store i32 %start, i32* %start.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start.addr, metadata !1473, metadata !DIExpression()), !dbg !1474
  store i32 %end, i32* %end.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %end.addr, metadata !1475, metadata !DIExpression()), !dbg !1476
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !1477, metadata !DIExpression()), !dbg !1478
  call void @llvm.dbg.declare(metadata i32* %x, metadata !1479, metadata !DIExpression()), !dbg !1480
  %0 = load i32, i32* %start.addr, align 4, !dbg !1481
  %1 = load i32, i32* %end.addr, align 4, !dbg !1483
  %cmp = icmp sge i32 %0, %1, !dbg !1484
  br i1 %cmp, label %if.then, label %if.end, !dbg !1485

if.then:                                          ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.55, i64 0, i64 0), i32 18, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.56, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.57, i64 0, i64 0)) #14, !dbg !1486
  unreachable, !dbg !1486

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %start.addr, align 4, !dbg !1487
  %add = add nsw i32 %2, 1, !dbg !1489
  %3 = load i32, i32* %end.addr, align 4, !dbg !1490
  %cmp1 = icmp eq i32 %add, %3, !dbg !1491
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !1492

if.then2:                                         ; preds = %if.end
  %4 = load i32, i32* %start.addr, align 4, !dbg !1493
  store i32 %4, i32* %retval, align 4, !dbg !1495
  br label %return, !dbg !1495

if.else:                                          ; preds = %if.end
  %5 = bitcast i32* %x to i8*, !dbg !1496
  %6 = load i8*, i8** %name.addr, align 8, !dbg !1498
  call void @klee_make_symbolic(i8* %5, i64 4, i8* %6), !dbg !1499
  %7 = load i32, i32* %start.addr, align 4, !dbg !1500
  %cmp3 = icmp eq i32 %7, 0, !dbg !1502
  br i1 %cmp3, label %if.then4, label %if.else7, !dbg !1503

if.then4:                                         ; preds = %if.else
  %8 = load i32, i32* %x, align 4, !dbg !1504
  %9 = load i32, i32* %end.addr, align 4, !dbg !1506
  %cmp5 = icmp ult i32 %8, %9, !dbg !1507
  %conv = zext i1 %cmp5 to i32, !dbg !1507
  %conv6 = sext i32 %conv to i64, !dbg !1508
  call void @klee_assume(i64 %conv6), !dbg !1509
  br label %if.end14, !dbg !1510

if.else7:                                         ; preds = %if.else
  %10 = load i32, i32* %start.addr, align 4, !dbg !1511
  %11 = load i32, i32* %x, align 4, !dbg !1513
  %cmp8 = icmp sle i32 %10, %11, !dbg !1514
  %conv9 = zext i1 %cmp8 to i32, !dbg !1514
  %conv10 = sext i32 %conv9 to i64, !dbg !1511
  call void @klee_assume(i64 %conv10), !dbg !1515
  %12 = load i32, i32* %x, align 4, !dbg !1516
  %13 = load i32, i32* %end.addr, align 4, !dbg !1517
  %cmp11 = icmp slt i32 %12, %13, !dbg !1518
  %conv12 = zext i1 %cmp11 to i32, !dbg !1518
  %conv13 = sext i32 %conv12 to i64, !dbg !1516
  call void @klee_assume(i64 %conv13), !dbg !1519
  br label %if.end14

if.end14:                                         ; preds = %if.else7, %if.then4
  %14 = load i32, i32* %x, align 4, !dbg !1520
  store i32 %14, i32* %retval, align 4, !dbg !1521
  br label %return, !dbg !1521

return:                                           ; preds = %if.end14, %if.then2
  %15 = load i32, i32* %retval, align 4, !dbg !1522
  ret i32 %15, !dbg !1522
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @open64(i8* nonnull %pathname, i32 %flags, ...) #0 !dbg !1523 {
entry:
  %pathname.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %mode = alloca i32, align 4
  %ap = alloca [1 x %struct.__va_list_tag.13], align 16
  store i8* %pathname, i8** %pathname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pathname.addr, metadata !1527, metadata !DIExpression()), !dbg !1528
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !1529, metadata !DIExpression()), !dbg !1530
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !1531, metadata !DIExpression()), !dbg !1532
  store i32 0, i32* %mode, align 4, !dbg !1532
  %0 = load i32, i32* %flags.addr, align 4, !dbg !1533
  %and = and i32 %0, 64, !dbg !1535
  %tobool = icmp ne i32 %and, 0, !dbg !1535
  br i1 %tobool, label %if.then, label %if.end, !dbg !1536

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag.13]* %ap, metadata !1537, metadata !DIExpression()), !dbg !1553
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag.13], [1 x %struct.__va_list_tag.13]* %ap, i64 0, i64 0, !dbg !1554
  %arraydecay1 = bitcast %struct.__va_list_tag.13* %arraydecay to i8*, !dbg !1554
  call void @llvm.va_start(i8* %arraydecay1), !dbg !1554
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag.13], [1 x %struct.__va_list_tag.13]* %ap, i64 0, i64 0, !dbg !1555
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag.13, %struct.__va_list_tag.13* %arraydecay2, i32 0, i32 0, !dbg !1555
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !1555
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !1555
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !1555

vaarg.in_reg:                                     ; preds = %if.then
  %1 = getelementptr inbounds %struct.__va_list_tag.13, %struct.__va_list_tag.13* %arraydecay2, i32 0, i32 3, !dbg !1555
  %reg_save_area = load i8*, i8** %1, align 16, !dbg !1555
  %2 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !1555
  %3 = bitcast i8* %2 to i32*, !dbg !1555
  %4 = add i32 %gp_offset, 8, !dbg !1555
  store i32 %4, i32* %gp_offset_p, align 16, !dbg !1555
  br label %vaarg.end, !dbg !1555

vaarg.in_mem:                                     ; preds = %if.then
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag.13, %struct.__va_list_tag.13* %arraydecay2, i32 0, i32 2, !dbg !1555
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !1555
  %5 = bitcast i8* %overflow_arg_area to i32*, !dbg !1555
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !1555
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !1555
  br label %vaarg.end, !dbg !1555

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i32* [ %3, %vaarg.in_reg ], [ %5, %vaarg.in_mem ], !dbg !1555
  %6 = load i32, i32* %vaarg.addr, align 4, !dbg !1555
  store i32 %6, i32* %mode, align 4, !dbg !1556
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag.13], [1 x %struct.__va_list_tag.13]* %ap, i64 0, i64 0, !dbg !1557
  %arraydecay34 = bitcast %struct.__va_list_tag.13* %arraydecay3 to i8*, !dbg !1557
  call void @llvm.va_end(i8* %arraydecay34), !dbg !1557
  br label %if.end, !dbg !1558

if.end:                                           ; preds = %vaarg.end, %entry
  %7 = load i8*, i8** %pathname.addr, align 8, !dbg !1559
  %8 = load i32, i32* %flags.addr, align 4, !dbg !1560
  %9 = load i32, i32* %mode, align 4, !dbg !1561
  %call = call i32 @__fd_open(i8* %7, i32 %8, i32 %9), !dbg !1562
  ret i32 %call, !dbg !1563
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #8

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #8

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @openat64(i32 %fd, i8* nonnull %pathname, i32 %flags, ...) #0 !dbg !1564 {
entry:
  %fd.addr = alloca i32, align 4
  %pathname.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %mode = alloca i32, align 4
  %ap = alloca [1 x %struct.__va_list_tag.13], align 16
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !1567, metadata !DIExpression()), !dbg !1568
  store i8* %pathname, i8** %pathname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pathname.addr, metadata !1569, metadata !DIExpression()), !dbg !1570
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !1571, metadata !DIExpression()), !dbg !1572
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !1573, metadata !DIExpression()), !dbg !1574
  store i32 0, i32* %mode, align 4, !dbg !1574
  %0 = load i32, i32* %flags.addr, align 4, !dbg !1575
  %and = and i32 %0, 64, !dbg !1577
  %tobool = icmp ne i32 %and, 0, !dbg !1577
  br i1 %tobool, label %if.then, label %if.end, !dbg !1578

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag.13]* %ap, metadata !1579, metadata !DIExpression()), !dbg !1581
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag.13], [1 x %struct.__va_list_tag.13]* %ap, i64 0, i64 0, !dbg !1582
  %arraydecay1 = bitcast %struct.__va_list_tag.13* %arraydecay to i8*, !dbg !1582
  call void @llvm.va_start(i8* %arraydecay1), !dbg !1582
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag.13], [1 x %struct.__va_list_tag.13]* %ap, i64 0, i64 0, !dbg !1583
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag.13, %struct.__va_list_tag.13* %arraydecay2, i32 0, i32 0, !dbg !1583
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !1583
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !1583
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !1583

vaarg.in_reg:                                     ; preds = %if.then
  %1 = getelementptr inbounds %struct.__va_list_tag.13, %struct.__va_list_tag.13* %arraydecay2, i32 0, i32 3, !dbg !1583
  %reg_save_area = load i8*, i8** %1, align 16, !dbg !1583
  %2 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !1583
  %3 = bitcast i8* %2 to i32*, !dbg !1583
  %4 = add i32 %gp_offset, 8, !dbg !1583
  store i32 %4, i32* %gp_offset_p, align 16, !dbg !1583
  br label %vaarg.end, !dbg !1583

vaarg.in_mem:                                     ; preds = %if.then
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag.13, %struct.__va_list_tag.13* %arraydecay2, i32 0, i32 2, !dbg !1583
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !1583
  %5 = bitcast i8* %overflow_arg_area to i32*, !dbg !1583
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !1583
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !1583
  br label %vaarg.end, !dbg !1583

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i32* [ %3, %vaarg.in_reg ], [ %5, %vaarg.in_mem ], !dbg !1583
  %6 = load i32, i32* %vaarg.addr, align 4, !dbg !1583
  store i32 %6, i32* %mode, align 4, !dbg !1584
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag.13], [1 x %struct.__va_list_tag.13]* %ap, i64 0, i64 0, !dbg !1585
  %arraydecay34 = bitcast %struct.__va_list_tag.13* %arraydecay3 to i8*, !dbg !1585
  call void @llvm.va_end(i8* %arraydecay34), !dbg !1585
  br label %if.end, !dbg !1586

if.end:                                           ; preds = %vaarg.end, %entry
  %7 = load i32, i32* %fd.addr, align 4, !dbg !1587
  %8 = load i8*, i8** %pathname.addr, align 8, !dbg !1588
  %9 = load i32, i32* %flags.addr, align 4, !dbg !1589
  %10 = load i32, i32* %mode, align 4, !dbg !1590
  %call = call i32 @__fd_openat(i32 %7, i8* %8, i32 %9, i32 %10), !dbg !1591
  ret i32 %call, !dbg !1592
}

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @lseek64(i32 %fd, i64 %offset, i32 %whence) #0 !dbg !1593 {
entry:
  %fd.addr = alloca i32, align 4
  %offset.addr = alloca i64, align 8
  %whence.addr = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !1596, metadata !DIExpression()), !dbg !1597
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !1598, metadata !DIExpression()), !dbg !1599
  store i32 %whence, i32* %whence.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %whence.addr, metadata !1600, metadata !DIExpression()), !dbg !1601
  %0 = load i32, i32* %fd.addr, align 4, !dbg !1602
  %1 = load i64, i64* %offset.addr, align 8, !dbg !1603
  %2 = load i32, i32* %whence.addr, align 4, !dbg !1604
  %call = call i64 @__fd_lseek(i32 %0, i64 %1, i32 %2), !dbg !1605
  ret i64 %call, !dbg !1606
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @__xstat64(i32 %vers, i8* nonnull %path, %struct.stat64.15* nonnull %buf) #0 !dbg !1607 {
entry:
  %vers.addr = alloca i32, align 4
  %path.addr = alloca i8*, align 8
  %buf.addr = alloca %struct.stat64.15*, align 8
  store i32 %vers, i32* %vers.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vers.addr, metadata !1628, metadata !DIExpression()), !dbg !1629
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !1630, metadata !DIExpression()), !dbg !1631
  store %struct.stat64.15* %buf, %struct.stat64.15** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat64.15** %buf.addr, metadata !1632, metadata !DIExpression()), !dbg !1633
  %0 = load i8*, i8** %path.addr, align 8, !dbg !1634
  %1 = load %struct.stat64.15*, %struct.stat64.15** %buf.addr, align 8, !dbg !1635
  %2 = bitcast %struct.stat64.15* %1 to %struct.stat64.15*, !dbg !1636
  %call = call i32 @__fd_stat(i8* %0, %struct.stat64.15* %2), !dbg !1637
  ret i32 %call, !dbg !1638
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @stat64(i8* nonnull %path, %struct.stat64.15* nonnull %buf) #0 !dbg !1639 {
entry:
  %path.addr = alloca i8*, align 8
  %buf.addr = alloca %struct.stat64.15*, align 8
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !1642, metadata !DIExpression()), !dbg !1643
  store %struct.stat64.15* %buf, %struct.stat64.15** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat64.15** %buf.addr, metadata !1644, metadata !DIExpression()), !dbg !1645
  %0 = load i8*, i8** %path.addr, align 8, !dbg !1646
  %1 = load %struct.stat64.15*, %struct.stat64.15** %buf.addr, align 8, !dbg !1647
  %2 = bitcast %struct.stat64.15* %1 to %struct.stat64.15*, !dbg !1648
  %call = call i32 @__fd_stat(i8* %0, %struct.stat64.15* %2), !dbg !1649
  ret i32 %call, !dbg !1650
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @__lxstat64(i32 %vers, i8* nonnull %path, %struct.stat64.15* nonnull %buf) #0 !dbg !1651 {
entry:
  %vers.addr = alloca i32, align 4
  %path.addr = alloca i8*, align 8
  %buf.addr = alloca %struct.stat64.15*, align 8
  store i32 %vers, i32* %vers.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vers.addr, metadata !1652, metadata !DIExpression()), !dbg !1653
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !1654, metadata !DIExpression()), !dbg !1655
  store %struct.stat64.15* %buf, %struct.stat64.15** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat64.15** %buf.addr, metadata !1656, metadata !DIExpression()), !dbg !1657
  %0 = load i8*, i8** %path.addr, align 8, !dbg !1658
  %1 = load %struct.stat64.15*, %struct.stat64.15** %buf.addr, align 8, !dbg !1659
  %2 = bitcast %struct.stat64.15* %1 to %struct.stat64.15*, !dbg !1660
  %call = call i32 @__fd_lstat(i8* %0, %struct.stat64.15* %2), !dbg !1661
  ret i32 %call, !dbg !1662
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @lstat64(i8* nonnull %path, %struct.stat64.15* nonnull %buf) #0 !dbg !1663 {
entry:
  %path.addr = alloca i8*, align 8
  %buf.addr = alloca %struct.stat64.15*, align 8
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !1664, metadata !DIExpression()), !dbg !1665
  store %struct.stat64.15* %buf, %struct.stat64.15** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat64.15** %buf.addr, metadata !1666, metadata !DIExpression()), !dbg !1667
  %0 = load i8*, i8** %path.addr, align 8, !dbg !1668
  %1 = load %struct.stat64.15*, %struct.stat64.15** %buf.addr, align 8, !dbg !1669
  %2 = bitcast %struct.stat64.15* %1 to %struct.stat64.15*, !dbg !1670
  %call = call i32 @__fd_lstat(i8* %0, %struct.stat64.15* %2), !dbg !1671
  ret i32 %call, !dbg !1672
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @__fxstat64(i32 %vers, i32 %fd, %struct.stat64.15* nonnull %buf) #0 !dbg !1673 {
entry:
  %vers.addr = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %buf.addr = alloca %struct.stat64.15*, align 8
  store i32 %vers, i32* %vers.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vers.addr, metadata !1676, metadata !DIExpression()), !dbg !1677
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !1678, metadata !DIExpression()), !dbg !1679
  store %struct.stat64.15* %buf, %struct.stat64.15** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat64.15** %buf.addr, metadata !1680, metadata !DIExpression()), !dbg !1681
  %0 = load i32, i32* %fd.addr, align 4, !dbg !1682
  %1 = load %struct.stat64.15*, %struct.stat64.15** %buf.addr, align 8, !dbg !1683
  %2 = bitcast %struct.stat64.15* %1 to %struct.stat64.15*, !dbg !1684
  %call = call i32 @__fd_fstat(i32 %0, %struct.stat64.15* %2), !dbg !1685
  ret i32 %call, !dbg !1686
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @fstat64(i32 %fd, %struct.stat64.15* nonnull %buf) #0 !dbg !1687 {
entry:
  %fd.addr = alloca i32, align 4
  %buf.addr = alloca %struct.stat64.15*, align 8
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !1690, metadata !DIExpression()), !dbg !1691
  store %struct.stat64.15* %buf, %struct.stat64.15** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat64.15** %buf.addr, metadata !1692, metadata !DIExpression()), !dbg !1693
  %0 = load i32, i32* %fd.addr, align 4, !dbg !1694
  %1 = load %struct.stat64.15*, %struct.stat64.15** %buf.addr, align 8, !dbg !1695
  %2 = bitcast %struct.stat64.15* %1 to %struct.stat64.15*, !dbg !1696
  %call = call i32 @__fd_fstat(i32 %0, %struct.stat64.15* %2), !dbg !1697
  ret i32 %call, !dbg !1698
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ftruncate64(i32 %fd, i64 %length) #0 !dbg !1699 {
entry:
  %fd.addr = alloca i32, align 4
  %length.addr = alloca i64, align 8
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !1700, metadata !DIExpression()), !dbg !1701
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !1702, metadata !DIExpression()), !dbg !1703
  %0 = load i32, i32* %fd.addr, align 4, !dbg !1704
  %1 = load i64, i64* %length.addr, align 8, !dbg !1705
  %call = call i32 @__fd_ftruncate(i32 %0, i64 %1), !dbg !1706
  ret i32 %call, !dbg !1707
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @statfs64(i8* nonnull %path, %struct.statfs.11* nonnull %buf) #0 !dbg !1708 {
entry:
  %path.addr = alloca i8*, align 8
  %buf.addr = alloca %struct.statfs.11*, align 8
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !1740, metadata !DIExpression()), !dbg !1741
  store %struct.statfs.11* %buf, %struct.statfs.11** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.statfs.11** %buf.addr, metadata !1742, metadata !DIExpression()), !dbg !1743
  %0 = load i8*, i8** %path.addr, align 8, !dbg !1744
  %1 = load %struct.statfs.11*, %struct.statfs.11** %buf.addr, align 8, !dbg !1745
  %call = call i32 @__fd_statfs(i8* %0, %struct.statfs.11* %1), !dbg !1746
  ret i32 %call, !dbg !1747
}

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @getdents64(i32 %fd, i8* %dirp, i64 %count) #0 !dbg !1748 {
entry:
  %fd.addr = alloca i32, align 4
  %dirp.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !1749, metadata !DIExpression()), !dbg !1750
  store i8* %dirp, i8** %dirp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dirp.addr, metadata !1751, metadata !DIExpression()), !dbg !1752
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !1753, metadata !DIExpression()), !dbg !1754
  %0 = load i32, i32* %fd.addr, align 4, !dbg !1755
  %1 = load i8*, i8** %dirp.addr, align 8, !dbg !1756
  %2 = bitcast i8* %1 to %struct.dirent64.12*, !dbg !1757
  %3 = load i64, i64* %count.addr, align 8, !dbg !1758
  %conv = trunc i64 %3 to i32, !dbg !1758
  %call = call i32 @__fd_getdents(i32 %0, %struct.dirent64.12* %2, i32 %conv), !dbg !1759
  %conv1 = sext i32 %call to i64, !dbg !1759
  ret i64 %conv1, !dbg !1760
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @cgc_initialize_flag_page() #6 {
entry:
  %mmap_addr = alloca i8*, align 8
  %call = call noalias i8* @malloc(i64 4096) #18
  store i8* %call, i8** %mmap_addr, align 8
  call void @cgc_try_init_prng() #15
  %0 = load %struct.cgc_prng*, %struct.cgc_prng** @cgc_internal_prng, align 8
  %1 = load i8*, i8** %mmap_addr, align 8
  call void @cgc_aes_get_bytes(%struct.cgc_prng* %0, i32 4096, i8* %1) #15
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @cgc_try_init_prng() #6 {
entry:
  %prng_seed = alloca [48 x i8], align 16
  %prng_seed_hex = alloca i8*, align 8
  %pos = alloca i8*, align 8
  %i = alloca i32, align 4
  %seed = alloca %struct.cgc_aes_state*, align 8
  %0 = load %struct.cgc_prng*, %struct.cgc_prng** @cgc_internal_prng, align 8
  %cmp = icmp ne %struct.cgc_prng* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %1 = bitcast [48 x i8]* %prng_seed to i8*
  %2 = call i8* @memcpy(i8* %1, i8* getelementptr inbounds (<{ [32 x i8], [16 x i8] }>, <{ [32 x i8], [16 x i8] }>* @__const.cgc_try_init_prng.prng_seed, i32 0, i32 0, i32 0), i64 48)
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.60, i64 0, i64 0)) #18
  store i8* %call, i8** %prng_seed_hex, align 8
  %3 = load i8*, i8** %prng_seed_hex, align 8
  %cmp1 = icmp ne i8* %3, null
  br i1 %cmp1, label %land.lhs.true, label %if.end7

land.lhs.true:                                    ; preds = %if.end
  %4 = load i8*, i8** %prng_seed_hex, align 8
  %call2 = call i64 @strlen(i8* %4) #19
  %cmp3 = icmp eq i64 %call2, 96
  br i1 %cmp3, label %if.then4, label %if.end7

if.then4:                                         ; preds = %land.lhs.true
  %5 = load i8*, i8** %prng_seed_hex, align 8
  store i8* %5, i8** %pos, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then4
  %6 = load i32, i32* %i, align 4
  %cmp5 = icmp slt i32 %6, 48
  br i1 %cmp5, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %7 = load i8*, i8** %pos, align 8
  %8 = load i32, i32* %i, align 4
  %idxprom = sext i32 %8 to i64
  %arrayidx = getelementptr inbounds [48 x i8], [48 x i8]* %prng_seed, i64 0, i64 %idxprom
  %call6 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %7, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.61, i64 0, i64 0), i8* %arrayidx) #18
  %9 = load i8*, i8** %pos, align 8
  %add.ptr = getelementptr inbounds i8, i8* %9, i64 2
  store i8* %add.ptr, i8** %pos, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %i, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end7

if.end7:                                          ; preds = %for.end, %land.lhs.true, %if.end
  %call8 = call noalias i8* @malloc(i64 81) #18
  %11 = bitcast i8* %call8 to %struct.cgc_prng*
  store %struct.cgc_prng* %11, %struct.cgc_prng** @cgc_internal_prng, align 8
  %arraydecay = getelementptr inbounds [48 x i8], [48 x i8]* %prng_seed, i64 0, i64 0
  %12 = bitcast i8* %arraydecay to %struct.cgc_aes_state*
  store %struct.cgc_aes_state* %12, %struct.cgc_aes_state** %seed, align 8
  %13 = load %struct.cgc_prng*, %struct.cgc_prng** @cgc_internal_prng, align 8
  %14 = load %struct.cgc_aes_state*, %struct.cgc_aes_state** %seed, align 8
  call void @cgc_init_prng(%struct.cgc_prng* %13, %struct.cgc_aes_state* %14) #15
  br label %return

return:                                           ; preds = %if.end7, %if.then
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @cgc_aes_get_bytes(%struct.cgc_prng* %prng, i32 %len, i8* %buf) #6 {
entry:
  %prng.addr = alloca %struct.cgc_prng*, align 8
  %len.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %buf_idx = alloca i32, align 4
  store %struct.cgc_prng* %prng, %struct.cgc_prng** %prng.addr, align 8
  store i32 %len, i32* %len.addr, align 4
  store i8* %buf, i8** %buf.addr, align 8
  store i32 0, i32* %buf_idx, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.end, %entry
  %0 = load i32, i32* %buf_idx, align 4
  %1 = load i32, i32* %len.addr, align 4
  %cmp = icmp ult i32 %0, %1
  br i1 %cmp, label %while.body, label %while.end15

while.body:                                       ; preds = %while.cond
  %2 = load %struct.cgc_prng*, %struct.cgc_prng** %prng.addr, align 8
  %random_idx = getelementptr inbounds %struct.cgc_prng, %struct.cgc_prng* %2, i32 0, i32 3
  %3 = load i8, i8* %random_idx, align 1
  %conv = zext i8 %3 to i32
  %cmp1 = icmp sge i32 %conv, 16
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %while.body
  %4 = load %struct.cgc_prng*, %struct.cgc_prng** %prng.addr, align 8
  call void @cgc_gen_block(%struct.cgc_prng* %4) #15
  br label %if.end

if.end:                                           ; preds = %if.then, %while.body
  br label %while.cond3

while.cond3:                                      ; preds = %while.body10, %if.end
  %5 = load %struct.cgc_prng*, %struct.cgc_prng** %prng.addr, align 8
  %random_idx4 = getelementptr inbounds %struct.cgc_prng, %struct.cgc_prng* %5, i32 0, i32 3
  %6 = load i8, i8* %random_idx4, align 1
  %conv5 = zext i8 %6 to i32
  %cmp6 = icmp slt i32 %conv5, 16
  br i1 %cmp6, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond3
  %7 = load i32, i32* %buf_idx, align 4
  %8 = load i32, i32* %len.addr, align 4
  %cmp8 = icmp ult i32 %7, %8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond3
  %9 = phi i1 [ false, %while.cond3 ], [ %cmp8, %land.rhs ]
  br i1 %9, label %while.body10, label %while.end

while.body10:                                     ; preds = %land.end
  %10 = load %struct.cgc_prng*, %struct.cgc_prng** %prng.addr, align 8
  %random_data = getelementptr inbounds %struct.cgc_prng, %struct.cgc_prng* %10, i32 0, i32 2
  %11 = load %struct.cgc_prng*, %struct.cgc_prng** %prng.addr, align 8
  %random_idx11 = getelementptr inbounds %struct.cgc_prng, %struct.cgc_prng* %11, i32 0, i32 3
  %12 = load i8, i8* %random_idx11, align 1
  %inc = add i8 %12, 1
  store i8 %inc, i8* %random_idx11, align 1
  %idxprom = zext i8 %12 to i64
  %arrayidx = getelementptr inbounds [16 x i8], [16 x i8]* %random_data, i64 0, i64 %idxprom
  %13 = load i8, i8* %arrayidx, align 1
  %14 = load i8*, i8** %buf.addr, align 8
  %15 = load i32, i32* %buf_idx, align 4
  %inc12 = add i32 %15, 1
  store i32 %inc12, i32* %buf_idx, align 4
  %idxprom13 = zext i32 %15 to i64
  %arrayidx14 = getelementptr inbounds i8, i8* %14, i64 %idxprom13
  store i8 %13, i8* %arrayidx14, align 1
  br label %while.cond3

while.end:                                        ; preds = %land.end
  br label %while.cond

while.end15:                                      ; preds = %while.cond
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @cgc_gen_block(%struct.cgc_prng* %prng) #6 {
entry:
  %prng.addr = alloca %struct.cgc_prng*, align 8
  %tmp = alloca [16 x i8], align 16
  %i = alloca i8, align 1
  store %struct.cgc_prng* %prng, %struct.cgc_prng** %prng.addr, align 8
  %0 = load %struct.cgc_prng*, %struct.cgc_prng** %prng.addr, align 8
  %state = getelementptr inbounds %struct.cgc_prng, %struct.cgc_prng* %0, i32 0, i32 0
  %datetime = getelementptr inbounds %struct.cgc_aes_state, %struct.cgc_aes_state* %state, i32 0, i32 2
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %datetime, i64 0, i64 0
  %1 = load %struct.cgc_prng*, %struct.cgc_prng** %prng.addr, align 8
  %state1 = getelementptr inbounds %struct.cgc_prng, %struct.cgc_prng* %1, i32 0, i32 0
  %key = getelementptr inbounds %struct.cgc_aes_state, %struct.cgc_aes_state* %state1, i32 0, i32 1
  %arraydecay2 = getelementptr inbounds [16 x i8], [16 x i8]* %key, i64 0, i64 0
  %2 = load %struct.cgc_prng*, %struct.cgc_prng** %prng.addr, align 8
  %intermediate = getelementptr inbounds %struct.cgc_prng, %struct.cgc_prng* %2, i32 0, i32 1
  %arraydecay3 = getelementptr inbounds [16 x i8], [16 x i8]* %intermediate, i64 0, i64 0
  call void @AES128_ECB_encrypt(i8* %arraydecay, i8* %arraydecay2, i8* %arraydecay3) #15
  %3 = load %struct.cgc_prng*, %struct.cgc_prng** %prng.addr, align 8
  %intermediate4 = getelementptr inbounds %struct.cgc_prng, %struct.cgc_prng* %3, i32 0, i32 1
  %arraydecay5 = getelementptr inbounds [16 x i8], [16 x i8]* %intermediate4, i64 0, i64 0
  %4 = load %struct.cgc_prng*, %struct.cgc_prng** %prng.addr, align 8
  %state6 = getelementptr inbounds %struct.cgc_prng, %struct.cgc_prng* %4, i32 0, i32 0
  %vec = getelementptr inbounds %struct.cgc_aes_state, %struct.cgc_aes_state* %state6, i32 0, i32 0
  %arraydecay7 = getelementptr inbounds [16 x i8], [16 x i8]* %vec, i64 0, i64 0
  %arraydecay8 = getelementptr inbounds [16 x i8], [16 x i8]* %tmp, i64 0, i64 0
  call void @cgc_xor(i8* %arraydecay5, i8* %arraydecay7, i8* %arraydecay8) #15
  %arraydecay9 = getelementptr inbounds [16 x i8], [16 x i8]* %tmp, i64 0, i64 0
  %5 = load %struct.cgc_prng*, %struct.cgc_prng** %prng.addr, align 8
  %state10 = getelementptr inbounds %struct.cgc_prng, %struct.cgc_prng* %5, i32 0, i32 0
  %key11 = getelementptr inbounds %struct.cgc_aes_state, %struct.cgc_aes_state* %state10, i32 0, i32 1
  %arraydecay12 = getelementptr inbounds [16 x i8], [16 x i8]* %key11, i64 0, i64 0
  %6 = load %struct.cgc_prng*, %struct.cgc_prng** %prng.addr, align 8
  %random_data = getelementptr inbounds %struct.cgc_prng, %struct.cgc_prng* %6, i32 0, i32 2
  %arraydecay13 = getelementptr inbounds [16 x i8], [16 x i8]* %random_data, i64 0, i64 0
  call void @AES128_ECB_encrypt(i8* %arraydecay9, i8* %arraydecay12, i8* %arraydecay13) #15
  %7 = load %struct.cgc_prng*, %struct.cgc_prng** %prng.addr, align 8
  %random_idx = getelementptr inbounds %struct.cgc_prng, %struct.cgc_prng* %7, i32 0, i32 3
  store i8 0, i8* %random_idx, align 1
  %8 = load %struct.cgc_prng*, %struct.cgc_prng** %prng.addr, align 8
  %intermediate14 = getelementptr inbounds %struct.cgc_prng, %struct.cgc_prng* %8, i32 0, i32 1
  %arraydecay15 = getelementptr inbounds [16 x i8], [16 x i8]* %intermediate14, i64 0, i64 0
  %9 = load %struct.cgc_prng*, %struct.cgc_prng** %prng.addr, align 8
  %random_data16 = getelementptr inbounds %struct.cgc_prng, %struct.cgc_prng* %9, i32 0, i32 2
  %arraydecay17 = getelementptr inbounds [16 x i8], [16 x i8]* %random_data16, i64 0, i64 0
  %arraydecay18 = getelementptr inbounds [16 x i8], [16 x i8]* %tmp, i64 0, i64 0
  call void @cgc_xor(i8* %arraydecay15, i8* %arraydecay17, i8* %arraydecay18) #15
  %arraydecay19 = getelementptr inbounds [16 x i8], [16 x i8]* %tmp, i64 0, i64 0
  %10 = load %struct.cgc_prng*, %struct.cgc_prng** %prng.addr, align 8
  %state20 = getelementptr inbounds %struct.cgc_prng, %struct.cgc_prng* %10, i32 0, i32 0
  %key21 = getelementptr inbounds %struct.cgc_aes_state, %struct.cgc_aes_state* %state20, i32 0, i32 1
  %arraydecay22 = getelementptr inbounds [16 x i8], [16 x i8]* %key21, i64 0, i64 0
  %11 = load %struct.cgc_prng*, %struct.cgc_prng** %prng.addr, align 8
  %state23 = getelementptr inbounds %struct.cgc_prng, %struct.cgc_prng* %11, i32 0, i32 0
  %vec24 = getelementptr inbounds %struct.cgc_aes_state, %struct.cgc_aes_state* %state23, i32 0, i32 0
  %arraydecay25 = getelementptr inbounds [16 x i8], [16 x i8]* %vec24, i64 0, i64 0
  call void @AES128_ECB_encrypt(i8* %arraydecay19, i8* %arraydecay22, i8* %arraydecay25) #15
  store i8 15, i8* %i, align 1
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry
  %12 = load i8, i8* %i, align 1
  %conv = zext i8 %12 to i32
  %cmp = icmp sge i32 %conv, 0
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %13 = load %struct.cgc_prng*, %struct.cgc_prng** %prng.addr, align 8
  %state27 = getelementptr inbounds %struct.cgc_prng, %struct.cgc_prng* %13, i32 0, i32 0
  %datetime28 = getelementptr inbounds %struct.cgc_aes_state, %struct.cgc_aes_state* %state27, i32 0, i32 2
  %14 = load i8, i8* %i, align 1
  %idxprom = zext i8 %14 to i64
  %arrayidx = getelementptr inbounds [16 x i8], [16 x i8]* %datetime28, i64 0, i64 %idxprom
  %15 = load i8, i8* %arrayidx, align 1
  %inc = add i8 %15, 1
  store i8 %inc, i8* %arrayidx, align 1
  %16 = load %struct.cgc_prng*, %struct.cgc_prng** %prng.addr, align 8
  %state29 = getelementptr inbounds %struct.cgc_prng, %struct.cgc_prng* %16, i32 0, i32 0
  %datetime30 = getelementptr inbounds %struct.cgc_aes_state, %struct.cgc_aes_state* %state29, i32 0, i32 2
  %17 = load i8, i8* %i, align 1
  %idxprom31 = zext i8 %17 to i64
  %arrayidx32 = getelementptr inbounds [16 x i8], [16 x i8]* %datetime30, i64 0, i64 %idxprom31
  %18 = load i8, i8* %arrayidx32, align 1
  %conv33 = zext i8 %18 to i32
  %cmp34 = icmp ne i32 %conv33, 0
  br i1 %cmp34, label %if.then, label %if.end

if.then:                                          ; preds = %while.body
  br label %while.end

if.end:                                           ; preds = %while.body
  %19 = load i8, i8* %i, align 1
  %conv36 = zext i8 %19 to i32
  %sub = sub nsw i32 %conv36, 1
  %conv37 = trunc i32 %sub to i8
  store i8 %conv37, i8* %i, align 1
  br label %while.cond

while.end:                                        ; preds = %if.then, %while.cond
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @cgc_xor(i8* %a, i8* %b, i8* %buf) #6 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %buf.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store i8* %a, i8** %a.addr, align 8
  store i8* %b, i8** %b.addr, align 8
  store i8* %buf, i8** %buf.addr, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 16
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load i8*, i8** %a.addr, align 8
  %2 = load i32, i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %idxprom
  %3 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %3 to i32
  %4 = load i8*, i8** %b.addr, align 8
  %5 = load i32, i32* %i, align 4
  %idxprom1 = sext i32 %5 to i64
  %arrayidx2 = getelementptr inbounds i8, i8* %4, i64 %idxprom1
  %6 = load i8, i8* %arrayidx2, align 1
  %conv3 = zext i8 %6 to i32
  %xor = xor i32 %conv, %conv3
  %conv4 = trunc i32 %xor to i8
  %7 = load i8*, i8** %buf.addr, align 8
  %8 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %8 to i64
  %arrayidx6 = getelementptr inbounds i8, i8* %7, i64 %idxprom5
  store i8 %conv4, i8* %arrayidx6, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %9 = load i32, i32* %i, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind
declare i8* @getenv(i8*) #3

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #9

; Function Attrs: nounwind
declare i32 @__isoc99_sscanf(i8*, i8*, ...) #3

; Function Attrs: noinline nounwind optnone uwtable
define void @cgc_init_prng(%struct.cgc_prng* %prng, %struct.cgc_aes_state* %seed) #6 {
entry:
  %prng.addr = alloca %struct.cgc_prng*, align 8
  %seed.addr = alloca %struct.cgc_aes_state*, align 8
  store %struct.cgc_prng* %prng, %struct.cgc_prng** %prng.addr, align 8
  store %struct.cgc_aes_state* %seed, %struct.cgc_aes_state** %seed.addr, align 8
  %0 = load %struct.cgc_prng*, %struct.cgc_prng** %prng.addr, align 8
  %1 = bitcast %struct.cgc_prng* %0 to i8*
  %call = call i8* @memset(i8* %1, i32 0, i64 81) #18
  %2 = load %struct.cgc_prng*, %struct.cgc_prng** %prng.addr, align 8
  %state = getelementptr inbounds %struct.cgc_prng, %struct.cgc_prng* %2, i32 0, i32 0
  %3 = bitcast %struct.cgc_aes_state* %state to i8*
  %4 = load %struct.cgc_aes_state*, %struct.cgc_aes_state** %seed.addr, align 8
  %5 = bitcast %struct.cgc_aes_state* %4 to i8*
  %call1 = call i8* @memcpy(i8* %3, i8* %5, i64 48) #18
  %6 = load %struct.cgc_prng*, %struct.cgc_prng** %prng.addr, align 8
  %random_idx = getelementptr inbounds %struct.cgc_prng, %struct.cgc_prng* %6, i32 0, i32 3
  store i8 16, i8* %random_idx, align 1
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @cgc_check_timeout(%struct.cgc_timeval* %timeout) #6 {
entry:
  %retval = alloca i32, align 4
  %timeout.addr = alloca %struct.cgc_timeval*, align 8
  store %struct.cgc_timeval* %timeout, %struct.cgc_timeval** %timeout.addr, align 8
  %0 = load %struct.cgc_timeval*, %struct.cgc_timeval** %timeout.addr, align 8
  %tobool = icmp ne %struct.cgc_timeval* %0, null
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %entry
  %1 = load %struct.cgc_timeval*, %struct.cgc_timeval** %timeout.addr, align 8
  %tv_sec = getelementptr inbounds %struct.cgc_timeval, %struct.cgc_timeval* %1, i32 0, i32 0
  %2 = load i32, i32* %tv_sec, align 4
  %cmp = icmp sgt i32 0, %2
  br i1 %cmp, label %if.then2, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else
  %3 = load %struct.cgc_timeval*, %struct.cgc_timeval** %timeout.addr, align 8
  %tv_usec = getelementptr inbounds %struct.cgc_timeval, %struct.cgc_timeval* %3, i32 0, i32 1
  %4 = load i32, i32* %tv_usec, align 4
  %cmp1 = icmp sgt i32 0, %4
  br i1 %cmp1, label %if.then2, label %if.else3

if.then2:                                         ; preds = %lor.lhs.false, %if.else
  store i32 3, i32* %retval, align 4
  br label %return

if.else3:                                         ; preds = %lor.lhs.false
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.else3, %if.then2, %if.then
  %5 = load i32, i32* %retval, align 4
  ret i32 %5
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define void @cgc__terminate(i32 %status) #10 {
entry:
  %status.addr = alloca i32, align 4
  store i32 %status, i32* %status.addr, align 4
  %0 = load i32, i32* %status.addr, align 4
  call void @exit(i32 %0) #20
  unreachable
}

; Function Attrs: noreturn nounwind
declare void @exit(i32) #7

; Function Attrs: noinline nounwind optnone uwtable
define i32 @cgc_transmit(i32 %fd, i8* %buf, i64 %count, i64* %tx_bytes) #6 {
entry:
  %retval = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %tx_bytes.addr = alloca i64*, align 8
  %ret = alloca i64, align 8
  store i32 %fd, i32* %fd.addr, align 4
  store i8* %buf, i8** %buf.addr, align 8
  store i64 %count, i64* %count.addr, align 8
  store i64* %tx_bytes, i64** %tx_bytes.addr, align 8
  %0 = load i32, i32* %fd.addr, align 4
  %1 = load i8*, i8** %buf.addr, align 8
  %2 = load i64, i64* %count.addr, align 8
  %call = call i64 @write(i32 %0, i8* %1, i64 %2) #15
  store i64 %call, i64* %ret, align 8
  %3 = load i64, i64* %ret, align 8
  %cmp = icmp slt i64 %3, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #21
  %4 = load i32, i32* %call1, align 4
  store i32 %4, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %entry
  %5 = load i64*, i64** %tx_bytes.addr, align 8
  %cmp2 = icmp ne i64* %5, null
  br i1 %cmp2, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.else
  %6 = load i64, i64* %ret, align 8
  %7 = load i64*, i64** %tx_bytes.addr, align 8
  store i64 %6, i64* %7, align 8
  br label %if.end

if.end:                                           ; preds = %if.then3, %if.else
  br label %if.end4

if.end4:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end4, %if.then
  %8 = load i32, i32* %retval, align 4
  ret i32 %8
}

; Function Attrs: nounwind readnone
declare i32* @__errno_location() #11

; Function Attrs: noinline nounwind optnone uwtable
define i32 @cgc_receive(i32 %fd, i8* %buf, i64 %count, i64* %rx_bytes) #6 {
entry:
  %retval = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %rx_bytes.addr = alloca i64*, align 8
  %ret = alloca i64, align 8
  store i32 %fd, i32* %fd.addr, align 4
  store i8* %buf, i8** %buf.addr, align 8
  store i64 %count, i64* %count.addr, align 8
  store i64* %rx_bytes, i64** %rx_bytes.addr, align 8
  %0 = load i32, i32* %fd.addr, align 4
  %1 = load i8*, i8** %buf.addr, align 8
  %2 = load i64, i64* %count.addr, align 8
  %call = call i64 @read(i32 %0, i8* %1, i64 %2) #15
  store i64 %call, i64* %ret, align 8
  %3 = load i64, i64* %ret, align 8
  %cmp = icmp slt i64 %3, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #21
  %4 = load i32, i32* %call1, align 4
  store i32 %4, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %entry
  %5 = load i64*, i64** %rx_bytes.addr, align 8
  %cmp2 = icmp ne i64* %5, null
  br i1 %cmp2, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.else
  %6 = load i64, i64* %ret, align 8
  %7 = load i64*, i64** %rx_bytes.addr, align 8
  store i64 %6, i64* %7, align 8
  br label %if.end

if.end:                                           ; preds = %if.then3, %if.else
  br label %if.end4

if.end4:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end4, %if.then
  %8 = load i32, i32* %retval, align 4
  ret i32 %8
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @cgc_fdwait(i32 %nfds, %struct.cgc_fd_set* %readfds, %struct.cgc_fd_set* %writefds, %struct.cgc_timeval* %timeout, i32* %readyfds) #6 {
entry:
  %retval = alloca i32, align 4
  %nfds.addr = alloca i32, align 4
  %readfds.addr = alloca %struct.cgc_fd_set*, align 8
  %writefds.addr = alloca %struct.cgc_fd_set*, align 8
  %timeout.addr = alloca %struct.cgc_timeval*, align 8
  %readyfds.addr = alloca i32*, align 8
  %ret = alloca i32, align 4
  %actual_num_fds = alloca i32, align 4
  %max_wait_time = alloca %struct.timespec.14, align 8
  %read_fds = alloca %struct.cgc_fd_set, align 8
  %write_fds = alloca %struct.cgc_fd_set, align 8
  %__d0 = alloca i32, align 4
  %__d1 = alloca i32, align 4
  %__d07 = alloca i32, align 4
  %__d18 = alloca i32, align 4
  %__i = alloca i32, align 4
  %__i46 = alloca i32, align 4
  %num_selected_fds = alloca i32, align 4
  store i32 %nfds, i32* %nfds.addr, align 4
  store %struct.cgc_fd_set* %readfds, %struct.cgc_fd_set** %readfds.addr, align 8
  store %struct.cgc_fd_set* %writefds, %struct.cgc_fd_set** %writefds.addr, align 8
  store %struct.cgc_timeval* %timeout, %struct.cgc_timeval** %timeout.addr, align 8
  store i32* %readyfds, i32** %readyfds.addr, align 8
  %0 = load %struct.cgc_timeval*, %struct.cgc_timeval** %timeout.addr, align 8
  %call = call i32 @cgc_check_timeout(%struct.cgc_timeval* %0) #15
  store i32 %call, i32* %ret, align 4
  store i32 0, i32* %actual_num_fds, align 4
  %1 = bitcast %struct.timespec.14* %max_wait_time to i8*
  %2 = call i8* @memset(i8* %1, i32 0, i64 16)
  %3 = load i32, i32* %ret, align 4
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %ret, align 4
  store i32 %4, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %entry
  %5 = load i32, i32* %nfds.addr, align 4
  %cmp = icmp sgt i32 0, %5
  br i1 %cmp, label %if.then3, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else
  %6 = load i32, i32* %nfds.addr, align 4
  %conv = sext i32 %6 to i64
  %cmp1 = icmp ult i64 64, %conv
  br i1 %cmp1, label %if.then3, label %if.end

if.then3:                                         ; preds = %lor.lhs.false, %if.else
  store i32 3, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  br label %if.end4

if.end4:                                          ; preds = %if.end
  br label %do.body

do.body:                                          ; preds = %if.end4
  %__fds_bits = getelementptr inbounds %struct.cgc_fd_set, %struct.cgc_fd_set* %read_fds, i32 0, i32 0
  %arrayidx = getelementptr inbounds [16 x i64], [16 x i64]* %__fds_bits, i64 0, i64 0
  %7 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %arrayidx) #8, !srcloc !1761
  %asmresult = extractvalue { i64, i64* } %7, 0
  %asmresult5 = extractvalue { i64, i64* } %7, 1
  %8 = trunc i64 %asmresult to i32
  store i32 %8, i32* %__d0, align 4
  %9 = ptrtoint i64* %asmresult5 to i64
  %10 = trunc i64 %9 to i32
  store i32 %10, i32* %__d1, align 4
  br label %do.end

do.end:                                           ; preds = %do.body
  br label %do.body6

do.body6:                                         ; preds = %do.end
  %__fds_bits9 = getelementptr inbounds %struct.cgc_fd_set, %struct.cgc_fd_set* %write_fds, i32 0, i32 0
  %arrayidx10 = getelementptr inbounds [16 x i64], [16 x i64]* %__fds_bits9, i64 0, i64 0
  %11 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %arrayidx10) #8, !srcloc !1762
  %asmresult11 = extractvalue { i64, i64* } %11, 0
  %asmresult12 = extractvalue { i64, i64* } %11, 1
  %12 = trunc i64 %asmresult11 to i32
  store i32 %12, i32* %__d07, align 4
  %13 = ptrtoint i64* %asmresult12 to i64
  %14 = trunc i64 %13 to i32
  store i32 %14, i32* %__d18, align 4
  br label %do.end13

do.end13:                                         ; preds = %do.body6
  %15 = load %struct.cgc_fd_set*, %struct.cgc_fd_set** %readfds.addr, align 8
  %tobool14 = icmp ne %struct.cgc_fd_set* %15, null
  br i1 %tobool14, label %if.then15, label %if.end21

if.then15:                                        ; preds = %do.end13
  %16 = load %struct.cgc_fd_set*, %struct.cgc_fd_set** %readfds.addr, align 8
  %call16 = call i32 @cgc_copy_cgc_fd_set(%struct.cgc_fd_set* %16, %struct.cgc_fd_set* %read_fds, i32* %actual_num_fds) #15
  store i32 %call16, i32* %ret, align 4
  %cmp17 = icmp ne i32 0, %call16
  br i1 %cmp17, label %if.then19, label %if.end20

if.then19:                                        ; preds = %if.then15
  %17 = load i32, i32* %ret, align 4
  store i32 %17, i32* %retval, align 4
  br label %return

if.end20:                                         ; preds = %if.then15
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %do.end13
  %18 = load %struct.cgc_fd_set*, %struct.cgc_fd_set** %writefds.addr, align 8
  %tobool22 = icmp ne %struct.cgc_fd_set* %18, null
  br i1 %tobool22, label %if.then23, label %if.end29

if.then23:                                        ; preds = %if.end21
  %19 = load %struct.cgc_fd_set*, %struct.cgc_fd_set** %writefds.addr, align 8
  %call24 = call i32 @cgc_copy_cgc_fd_set(%struct.cgc_fd_set* %19, %struct.cgc_fd_set* %write_fds, i32* %actual_num_fds) #15
  store i32 %call24, i32* %ret, align 4
  %cmp25 = icmp ne i32 0, %call24
  br i1 %cmp25, label %if.then27, label %if.end28

if.then27:                                        ; preds = %if.then23
  %20 = load i32, i32* %ret, align 4
  store i32 %20, i32* %retval, align 4
  br label %return

if.end28:                                         ; preds = %if.then23
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.end21
  %21 = load i32, i32* %actual_num_fds, align 4
  %22 = load i32, i32* %nfds.addr, align 4
  %cmp30 = icmp ne i32 %21, %22
  br i1 %cmp30, label %if.then32, label %if.end33

if.then32:                                        ; preds = %if.end29
  store i32 22, i32* %retval, align 4
  br label %return

if.end33:                                         ; preds = %if.end29
  %23 = load %struct.cgc_fd_set*, %struct.cgc_fd_set** %readfds.addr, align 8
  %tobool34 = icmp ne %struct.cgc_fd_set* %23, null
  br i1 %tobool34, label %if.then35, label %if.end42

if.then35:                                        ; preds = %if.end33
  br label %do.body36

do.body36:                                        ; preds = %if.then35
  store i32 0, i32* %__i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %do.body36
  %24 = load i32, i32* %__i, align 4
  %conv37 = sext i32 %24 to i64
  %cmp38 = icmp ult i64 %conv37, 16
  br i1 %cmp38, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %25 = load %struct.cgc_fd_set*, %struct.cgc_fd_set** %readfds.addr, align 8
  %_fd_bits = getelementptr inbounds %struct.cgc_fd_set, %struct.cgc_fd_set* %25, i32 0, i32 0
  %26 = load i32, i32* %__i, align 4
  %idxprom = sext i32 %26 to i64
  %arrayidx40 = getelementptr inbounds [16 x i64], [16 x i64]* %_fd_bits, i64 0, i64 %idxprom
  store i64 0, i64* %arrayidx40, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %27 = load i32, i32* %__i, align 4
  %inc = add nsw i32 %27, 1
  store i32 %inc, i32* %__i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %do.end41

do.end41:                                         ; preds = %for.end
  br label %if.end42

if.end42:                                         ; preds = %do.end41, %if.end33
  %28 = load %struct.cgc_fd_set*, %struct.cgc_fd_set** %writefds.addr, align 8
  %tobool43 = icmp ne %struct.cgc_fd_set* %28, null
  br i1 %tobool43, label %if.then44, label %if.end59

if.then44:                                        ; preds = %if.end42
  br label %do.body45

do.body45:                                        ; preds = %if.then44
  store i32 0, i32* %__i46, align 4
  br label %for.cond47

for.cond47:                                       ; preds = %for.inc55, %do.body45
  %29 = load i32, i32* %__i46, align 4
  %conv48 = sext i32 %29 to i64
  %cmp49 = icmp ult i64 %conv48, 16
  br i1 %cmp49, label %for.body51, label %for.end57

for.body51:                                       ; preds = %for.cond47
  %30 = load %struct.cgc_fd_set*, %struct.cgc_fd_set** %writefds.addr, align 8
  %_fd_bits52 = getelementptr inbounds %struct.cgc_fd_set, %struct.cgc_fd_set* %30, i32 0, i32 0
  %31 = load i32, i32* %__i46, align 4
  %idxprom53 = sext i32 %31 to i64
  %arrayidx54 = getelementptr inbounds [16 x i64], [16 x i64]* %_fd_bits52, i64 0, i64 %idxprom53
  store i64 0, i64* %arrayidx54, align 8
  br label %for.inc55

for.inc55:                                        ; preds = %for.body51
  %32 = load i32, i32* %__i46, align 4
  %inc56 = add nsw i32 %32, 1
  store i32 %inc56, i32* %__i46, align 4
  br label %for.cond47

for.end57:                                        ; preds = %for.cond47
  br label %do.end58

do.end58:                                         ; preds = %for.end57
  br label %if.end59

if.end59:                                         ; preds = %do.end58, %if.end42
  %33 = load %struct.cgc_timeval*, %struct.cgc_timeval** %timeout.addr, align 8
  %tobool60 = icmp ne %struct.cgc_timeval* %33, null
  br i1 %tobool60, label %if.then61, label %if.end66

if.then61:                                        ; preds = %if.end59
  %34 = load %struct.cgc_timeval*, %struct.cgc_timeval** %timeout.addr, align 8
  %tv_sec = getelementptr inbounds %struct.cgc_timeval, %struct.cgc_timeval* %34, i32 0, i32 0
  %35 = load i32, i32* %tv_sec, align 4
  %conv62 = sext i32 %35 to i64
  %tv_sec63 = getelementptr inbounds %struct.timespec.14, %struct.timespec.14* %max_wait_time, i32 0, i32 0
  store i64 %conv62, i64* %tv_sec63, align 8
  %36 = load %struct.cgc_timeval*, %struct.cgc_timeval** %timeout.addr, align 8
  %tv_usec = getelementptr inbounds %struct.cgc_timeval, %struct.cgc_timeval* %36, i32 0, i32 1
  %37 = load i32, i32* %tv_usec, align 4
  %conv64 = sext i32 %37 to i64
  %tv_usec65 = getelementptr inbounds %struct.timespec.14, %struct.timespec.14* %max_wait_time, i32 0, i32 1
  store i64 %conv64, i64* %tv_usec65, align 8
  br label %if.end66

if.end66:                                         ; preds = %if.then61, %if.end59
  %38 = load i32, i32* %nfds.addr, align 4
  %39 = load %struct.cgc_fd_set*, %struct.cgc_fd_set** %readfds.addr, align 8
  %tobool67 = icmp ne %struct.cgc_fd_set* %39, null
  br i1 %tobool67, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end66
  br label %cond.end

cond.false:                                       ; preds = %if.end66
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.cgc_fd_set* [ %read_fds, %cond.true ], [ null, %cond.false ]
  %40 = load %struct.cgc_fd_set*, %struct.cgc_fd_set** %writefds.addr, align 8
  %tobool68 = icmp ne %struct.cgc_fd_set* %40, null
  br i1 %tobool68, label %cond.true69, label %cond.false70

cond.true69:                                      ; preds = %cond.end
  br label %cond.end71

cond.false70:                                     ; preds = %cond.end
  br label %cond.end71

cond.end71:                                       ; preds = %cond.false70, %cond.true69
  %cond72 = phi %struct.cgc_fd_set* [ %write_fds, %cond.true69 ], [ null, %cond.false70 ]
  %41 = load %struct.cgc_timeval*, %struct.cgc_timeval** %timeout.addr, align 8
  %tobool73 = icmp ne %struct.cgc_timeval* %41, null
  br i1 %tobool73, label %cond.true74, label %cond.false75

cond.true74:                                      ; preds = %cond.end71
  br label %cond.end76

cond.false75:                                     ; preds = %cond.end71
  br label %cond.end76

cond.end76:                                       ; preds = %cond.false75, %cond.true74
  %cond77 = phi %struct.timespec.14* [ %max_wait_time, %cond.true74 ], [ null, %cond.false75 ]
  %call78 = call i32 @select(i32 %38, %struct.cgc_fd_set* %cond, %struct.cgc_fd_set* %cond72, %struct.cgc_fd_set* null, %struct.timespec.14* %cond77) #15
  store i32 %call78, i32* %num_selected_fds, align 4
  %42 = load i32, i32* %num_selected_fds, align 4
  %cmp79 = icmp slt i32 %42, 0
  br i1 %cmp79, label %if.then81, label %if.end83

if.then81:                                        ; preds = %cond.end76
  %call82 = call i32* @__errno_location() #21
  %43 = load i32, i32* %call82, align 4
  store i32 %43, i32* %retval, align 4
  br label %return

if.end83:                                         ; preds = %cond.end76
  %44 = load %struct.cgc_fd_set*, %struct.cgc_fd_set** %readfds.addr, align 8
  %tobool84 = icmp ne %struct.cgc_fd_set* %44, null
  br i1 %tobool84, label %if.then85, label %if.end86

if.then85:                                        ; preds = %if.end83
  %45 = load %struct.cgc_fd_set*, %struct.cgc_fd_set** %readfds.addr, align 8
  call void @cgc_copy_os_fd_set(%struct.cgc_fd_set* %read_fds, %struct.cgc_fd_set* %45) #15
  br label %if.end86

if.end86:                                         ; preds = %if.then85, %if.end83
  %46 = load %struct.cgc_fd_set*, %struct.cgc_fd_set** %writefds.addr, align 8
  %tobool87 = icmp ne %struct.cgc_fd_set* %46, null
  br i1 %tobool87, label %if.then88, label %if.end89

if.then88:                                        ; preds = %if.end86
  %47 = load %struct.cgc_fd_set*, %struct.cgc_fd_set** %writefds.addr, align 8
  call void @cgc_copy_os_fd_set(%struct.cgc_fd_set* %write_fds, %struct.cgc_fd_set* %47) #15
  br label %if.end89

if.end89:                                         ; preds = %if.then88, %if.end86
  %48 = load i32*, i32** %readyfds.addr, align 8
  %tobool90 = icmp ne i32* %48, null
  br i1 %tobool90, label %if.then91, label %if.end92

if.then91:                                        ; preds = %if.end89
  %49 = load i32, i32* %num_selected_fds, align 4
  %50 = load i32*, i32** %readyfds.addr, align 8
  store i32 %49, i32* %50, align 4
  br label %if.end92

if.end92:                                         ; preds = %if.then91, %if.end89
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end92, %if.then81, %if.then32, %if.then27, %if.then19, %if.then3, %if.then
  %51 = load i32, i32* %retval, align 4
  ret i32 %51
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @cgc_copy_cgc_fd_set(%struct.cgc_fd_set* %cgc_fds, %struct.cgc_fd_set* %os_fds, i32* %num_fds) #6 {
entry:
  %retval = alloca i32, align 4
  %cgc_fds.addr = alloca %struct.cgc_fd_set*, align 8
  %os_fds.addr = alloca %struct.cgc_fd_set*, align 8
  %num_fds.addr = alloca i32*, align 8
  %fd = alloca i32, align 4
  store %struct.cgc_fd_set* %cgc_fds, %struct.cgc_fd_set** %cgc_fds.addr, align 8
  store %struct.cgc_fd_set* %os_fds, %struct.cgc_fd_set** %os_fds.addr, align 8
  store i32* %num_fds, i32** %num_fds.addr, align 8
  store i32 0, i32* %fd, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %fd, align 4
  %conv = zext i32 %0 to i64
  %cmp = icmp ult i64 %conv, 64
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load %struct.cgc_fd_set*, %struct.cgc_fd_set** %cgc_fds.addr, align 8
  %_fd_bits = getelementptr inbounds %struct.cgc_fd_set, %struct.cgc_fd_set* %1, i32 0, i32 0
  %2 = load i32, i32* %fd, align 4
  %conv2 = zext i32 %2 to i64
  %div = udiv i64 %conv2, 64
  %arrayidx = getelementptr inbounds [16 x i64], [16 x i64]* %_fd_bits, i64 0, i64 %div
  %3 = load i64, i64* %arrayidx, align 8
  %4 = load i32, i32* %fd, align 4
  %conv3 = zext i32 %4 to i64
  %and = and i64 %conv3, 63
  %sh_prom = trunc i64 %and to i32
  %int_cast_to_i64 = zext i32 %sh_prom to i64
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i64)
  %shl = shl i32 1, %sh_prom, !klee.check.shift !1763
  %conv4 = sext i32 %shl to i64
  %and5 = and i64 %3, %conv4
  %tobool = icmp ne i64 %and5, 0
  br i1 %tobool, label %if.then, label %if.end17

if.then:                                          ; preds = %for.body
  %5 = load i32, i32* %fd, align 4
  %cmp6 = icmp uge i32 %5, 23
  br i1 %cmp6, label %if.then8, label %if.end

if.then8:                                         ; preds = %if.then
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %if.then
  %6 = load i32, i32* %fd, align 4
  %cmp9 = icmp ugt i32 %6, 64
  br i1 %cmp9, label %if.then11, label %if.end12

if.then11:                                        ; preds = %if.end
  br label %for.inc

if.end12:                                         ; preds = %if.end
  %7 = load i32, i32* %fd, align 4
  %rem = urem i32 %7, 64
  %sh_prom13 = zext i32 %rem to i64
  call void @klee_overshift_check(i64 64, i64 %sh_prom13)
  %shl14 = shl i64 1, %sh_prom13, !klee.check.shift !1763
  %8 = load %struct.cgc_fd_set*, %struct.cgc_fd_set** %os_fds.addr, align 8
  %__fds_bits = getelementptr inbounds %struct.cgc_fd_set, %struct.cgc_fd_set* %8, i32 0, i32 0
  %9 = load i32, i32* %fd, align 4
  %div15 = udiv i32 %9, 64
  %idxprom = zext i32 %div15 to i64
  %arrayidx16 = getelementptr inbounds [16 x i64], [16 x i64]* %__fds_bits, i64 0, i64 %idxprom
  %10 = load i64, i64* %arrayidx16, align 8
  %or = or i64 %10, %shl14
  store i64 %or, i64* %arrayidx16, align 8
  %11 = load i32*, i32** %num_fds.addr, align 8
  %12 = load i32, i32* %11, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %11, align 4
  br label %if.end17

if.end17:                                         ; preds = %if.end12, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end17, %if.then11
  %13 = load i32, i32* %fd, align 4
  %inc18 = add i32 %13, 1
  store i32 %inc18, i32* %fd, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then8
  %14 = load i32, i32* %retval, align 4
  ret i32 %14
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @cgc_copy_os_fd_set(%struct.cgc_fd_set* %os_fds, %struct.cgc_fd_set* %cgc_fds) #6 {
entry:
  %os_fds.addr = alloca %struct.cgc_fd_set*, align 8
  %cgc_fds.addr = alloca %struct.cgc_fd_set*, align 8
  %fd = alloca i32, align 4
  store %struct.cgc_fd_set* %os_fds, %struct.cgc_fd_set** %os_fds.addr, align 8
  store %struct.cgc_fd_set* %cgc_fds, %struct.cgc_fd_set** %cgc_fds.addr, align 8
  store i32 0, i32* %fd, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %fd, align 4
  %conv = zext i32 %0 to i64
  %cmp = icmp ult i64 %conv, 64
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load %struct.cgc_fd_set*, %struct.cgc_fd_set** %os_fds.addr, align 8
  %__fds_bits = getelementptr inbounds %struct.cgc_fd_set, %struct.cgc_fd_set* %1, i32 0, i32 0
  %2 = load i32, i32* %fd, align 4
  %div = udiv i32 %2, 64
  %idxprom = zext i32 %div to i64
  %arrayidx = getelementptr inbounds [16 x i64], [16 x i64]* %__fds_bits, i64 0, i64 %idxprom
  %3 = load i64, i64* %arrayidx, align 8
  %4 = load i32, i32* %fd, align 4
  %rem = urem i32 %4, 64
  %sh_prom = zext i32 %rem to i64
  call void @klee_overshift_check(i64 64, i64 %sh_prom)
  %shl = shl i64 1, %sh_prom, !klee.check.shift !1763
  %and = and i64 %3, %shl
  %cmp2 = icmp ne i64 %and, 0
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %5 = load i32, i32* %fd, align 4
  %conv4 = zext i32 %5 to i64
  %and5 = and i64 %conv4, 63
  %sh_prom6 = trunc i64 %and5 to i32
  %int_cast_to_i64 = zext i32 %sh_prom6 to i64
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i64)
  %shl7 = shl i32 1, %sh_prom6, !klee.check.shift !1763
  %conv8 = sext i32 %shl7 to i64
  %6 = load %struct.cgc_fd_set*, %struct.cgc_fd_set** %cgc_fds.addr, align 8
  %_fd_bits = getelementptr inbounds %struct.cgc_fd_set, %struct.cgc_fd_set* %6, i32 0, i32 0
  %7 = load i32, i32* %fd, align 4
  %conv9 = zext i32 %7 to i64
  %div10 = udiv i64 %conv9, 64
  %arrayidx11 = getelementptr inbounds [16 x i64], [16 x i64]* %_fd_bits, i64 0, i64 %div10
  %8 = load i64, i64* %arrayidx11, align 8
  %or = or i64 %8, %conv8
  store i64 %or, i64* %arrayidx11, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %9 = load i32, i32* %fd, align 4
  %inc = add i32 %9, 1
  store i32 %inc, i32* %fd, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @cgc_allocate(i64 %length, i32 %is_executable, i8** %addr) #6 {
entry:
  %retval = alloca i32, align 4
  %length.addr = alloca i64, align 8
  %is_executable.addr = alloca i32, align 4
  %addr.addr = alloca i8**, align 8
  %page_perms = alloca i32, align 4
  %return_address = alloca i8*, align 8
  store i64 %length, i64* %length.addr, align 8
  store i32 %is_executable, i32* %is_executable.addr, align 4
  store i8** %addr, i8*** %addr.addr, align 8
  store i32 3, i32* %page_perms, align 4
  %0 = load i32, i32* %is_executable.addr, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %page_perms, align 4
  %or = or i32 %1, 4
  store i32 %or, i32* %page_perms, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = load i64, i64* %length.addr, align 8
  %call = call noalias i8* @malloc(i64 %2) #18
  store i8* %call, i8** %return_address, align 8
  %3 = load i8*, i8** %return_address, align 8
  %cmp = icmp eq i8* %3, null
  br i1 %cmp, label %if.then1, label %if.end3

if.then1:                                         ; preds = %if.end
  %call2 = call i32* @__errno_location() #21
  %4 = load i32, i32* %call2, align 4
  store i32 %4, i32* %retval, align 4
  br label %return

if.end3:                                          ; preds = %if.end
  %5 = load i8*, i8** %return_address, align 8
  %6 = load i64, i64* %length.addr, align 8
  %7 = load i32, i32* %page_perms, align 4
  %call4 = call i32 @mprotect(i8* %5, i64 %6, i32 %7) #18
  %8 = load i8**, i8*** %addr.addr, align 8
  %tobool5 = icmp ne i8** %8, null
  br i1 %tobool5, label %if.then6, label %if.end7

if.then6:                                         ; preds = %if.end3
  %9 = load i8*, i8** %return_address, align 8
  %10 = load i8**, i8*** %addr.addr, align 8
  store i8* %9, i8** %10, align 8
  br label %if.end7

if.end7:                                          ; preds = %if.then6, %if.end3
  %11 = load i8*, i8** %return_address, align 8
  %12 = load i64, i64* %length.addr, align 8
  %call8 = call i8* @memset(i8* %11, i32 0, i64 %12) #18
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end7, %if.then1
  %13 = load i32, i32* %retval, align 4
  ret i32 %13
}

; Function Attrs: nounwind
declare i32 @mprotect(i8*, i64, i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define i32 @cgc_deallocate(i8* %addr, i64 %length) #6 {
entry:
  %retval = alloca i32, align 4
  %addr.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  %ret = alloca i32, align 4
  store i8* %addr, i8** %addr.addr, align 8
  store i64 %length, i64* %length.addr, align 8
  %0 = load i8*, i8** %addr.addr, align 8
  %1 = load i64, i64* %length.addr, align 8
  %call = call i32 @munmap(i8* %0, i64 %1) #18
  store i32 %call, i32* %ret, align 4
  %2 = load i32, i32* %ret, align 4
  %cmp = icmp slt i32 %2, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #21
  %3 = load i32, i32* %call1, align 4
  store i32 %3, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4
  ret i32 %4
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @cgc_random(i8* %buf, i64 %count, i64* %rnd_bytes) #6 {
entry:
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %rnd_bytes.addr = alloca i64*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  store i64 %count, i64* %count.addr, align 8
  store i64* %rnd_bytes, i64** %rnd_bytes.addr, align 8
  call void @cgc_try_init_prng() #15
  %0 = load %struct.cgc_prng*, %struct.cgc_prng** @cgc_internal_prng, align 8
  %1 = load i64, i64* %count.addr, align 8
  %conv = trunc i64 %1 to i32
  %2 = load i8*, i8** %buf.addr, align 8
  call void @cgc_aes_get_bytes(%struct.cgc_prng* %0, i32 %conv, i8* %2) #15
  %3 = load i64*, i64** %rnd_bytes.addr, align 8
  %tobool = icmp ne i64* %3, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load i64, i64* %count.addr, align 8
  %5 = load i64*, i64** %rnd_bytes.addr, align 8
  store i64 %4, i64* %5, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret i32 0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @access(i8* nonnull %pathname, i32 %mode) #0 !dbg !1764 {
entry:
  %retval = alloca i32, align 4
  %pathname.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  %dfile = alloca %struct.exe_disk_file_t.16*, align 8
  store i8* %pathname, i8** %pathname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pathname.addr, metadata !1767, metadata !DIExpression()), !dbg !1768
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !1769, metadata !DIExpression()), !dbg !1770
  call void @llvm.dbg.declare(metadata %struct.exe_disk_file_t.16** %dfile, metadata !1771, metadata !DIExpression()), !dbg !1797
  %0 = load i8*, i8** %pathname.addr, align 8, !dbg !1798
  %call = call %struct.exe_disk_file_t.16* @__get_sym_file(i8* %0), !dbg !1799
  store %struct.exe_disk_file_t.16* %call, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !1797
  %1 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !1800
  %tobool = icmp ne %struct.exe_disk_file_t.16* %1, null, !dbg !1800
  br i1 %tobool, label %if.then, label %if.end, !dbg !1802

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !1803
  br label %return, !dbg !1803

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %pathname.addr, align 8, !dbg !1805
  %call1 = call i8* @__concretize_string(i8* %2), !dbg !1806
  %3 = load i32, i32* %mode.addr, align 4, !dbg !1807
  %call2 = call i64 (i64, ...) @syscall(i64 21, i8* %call1, i32 %3) #8, !dbg !1808
  %conv = trunc i64 %call2 to i32, !dbg !1808
  store i32 %conv, i32* %retval, align 4, !dbg !1809
  br label %return, !dbg !1809

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !1810
  ret i32 %4, !dbg !1810
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.exe_disk_file_t.16* @__get_sym_file(i8* %pathname) #0 !dbg !1811 {
entry:
  %retval = alloca %struct.exe_disk_file_t.16*, align 8
  %pathname.addr = alloca i8*, align 8
  %c = alloca i8, align 1
  %i = alloca i32, align 4
  %df = alloca %struct.exe_disk_file_t.16*, align 8
  store i8* %pathname, i8** %pathname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pathname.addr, metadata !1814, metadata !DIExpression()), !dbg !1815
  %0 = load i8*, i8** %pathname.addr, align 8, !dbg !1816
  %tobool = icmp ne i8* %0, null, !dbg !1816
  br i1 %tobool, label %if.end, label %if.then, !dbg !1818

if.then:                                          ; preds = %entry
  store %struct.exe_disk_file_t.16* null, %struct.exe_disk_file_t.16** %retval, align 8, !dbg !1819
  br label %return, !dbg !1819

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %c, metadata !1820, metadata !DIExpression()), !dbg !1821
  %1 = load i8*, i8** %pathname.addr, align 8, !dbg !1822
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !1822
  %2 = load i8, i8* %arrayidx, align 1, !dbg !1822
  store i8 %2, i8* %c, align 1, !dbg !1821
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1823, metadata !DIExpression()), !dbg !1824
  %3 = load i8, i8* %c, align 1, !dbg !1825
  %conv = sext i8 %3 to i32, !dbg !1825
  %cmp = icmp eq i32 %conv, 0, !dbg !1827
  br i1 %cmp, label %if.then6, label %lor.lhs.false, !dbg !1828

lor.lhs.false:                                    ; preds = %if.end
  %4 = load i8*, i8** %pathname.addr, align 8, !dbg !1829
  %arrayidx2 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !1829
  %5 = load i8, i8* %arrayidx2, align 1, !dbg !1829
  %conv3 = sext i8 %5 to i32, !dbg !1829
  %cmp4 = icmp ne i32 %conv3, 0, !dbg !1830
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !1831

if.then6:                                         ; preds = %lor.lhs.false, %if.end
  store %struct.exe_disk_file_t.16* null, %struct.exe_disk_file_t.16** %retval, align 8, !dbg !1832
  br label %return, !dbg !1832

if.end7:                                          ; preds = %lor.lhs.false
  store i32 0, i32* %i, align 4, !dbg !1833
  br label %for.cond, !dbg !1835

for.cond:                                         ; preds = %for.inc, %if.end7
  %6 = load i32, i32* %i, align 4, !dbg !1836
  %7 = load i32, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 0), align 8, !dbg !1838
  %cmp8 = icmp ult i32 %6, %7, !dbg !1839
  br i1 %cmp8, label %for.body, label %for.end, !dbg !1840

for.body:                                         ; preds = %for.cond
  %8 = load i8, i8* %c, align 1, !dbg !1841
  %conv10 = sext i8 %8 to i32, !dbg !1841
  %9 = load i32, i32* %i, align 4, !dbg !1844
  %conv11 = trunc i32 %9 to i8, !dbg !1845
  %conv12 = sext i8 %conv11 to i32, !dbg !1845
  %add = add nsw i32 65, %conv12, !dbg !1846
  %cmp13 = icmp eq i32 %conv10, %add, !dbg !1847
  br i1 %cmp13, label %if.then15, label %for.inc, !dbg !1848

if.then15:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.exe_disk_file_t.16** %df, metadata !1849, metadata !DIExpression()), !dbg !1851
  %10 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 4), align 8, !dbg !1852
  %11 = load i32, i32* %i, align 4, !dbg !1853
  %idxprom = zext i32 %11 to i64, !dbg !1854
  %arrayidx16 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %10, i64 %idxprom, !dbg !1854
  store %struct.exe_disk_file_t.16* %arrayidx16, %struct.exe_disk_file_t.16** %df, align 8, !dbg !1851
  %12 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %df, align 8, !dbg !1855
  %stat = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %12, i32 0, i32 2, !dbg !1857
  %13 = load %struct.stat64.15*, %struct.stat64.15** %stat, align 8, !dbg !1857
  %st_ino = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %13, i32 0, i32 1, !dbg !1858
  %14 = load i64, i64* %st_ino, align 8, !dbg !1858
  %cmp17 = icmp eq i64 %14, 0, !dbg !1859
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !1860

if.then19:                                        ; preds = %if.then15
  store %struct.exe_disk_file_t.16* null, %struct.exe_disk_file_t.16** %retval, align 8, !dbg !1861
  br label %return, !dbg !1861

if.end20:                                         ; preds = %if.then15
  %15 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %df, align 8, !dbg !1862
  store %struct.exe_disk_file_t.16* %15, %struct.exe_disk_file_t.16** %retval, align 8, !dbg !1863
  br label %return, !dbg !1863

for.inc:                                          ; preds = %for.body
  %16 = load i32, i32* %i, align 4, !dbg !1864
  %inc = add i32 %16, 1, !dbg !1864
  store i32 %inc, i32* %i, align 4, !dbg !1864
  br label %for.cond, !dbg !1865, !llvm.loop !1866

for.end:                                          ; preds = %for.cond
  store %struct.exe_disk_file_t.16* null, %struct.exe_disk_file_t.16** %retval, align 8, !dbg !1868
  br label %return, !dbg !1868

return:                                           ; preds = %for.end, %if.end20, %if.then19, %if.then6, %if.then
  %17 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %retval, align 8, !dbg !1869
  ret %struct.exe_disk_file_t.16* %17, !dbg !1869
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @__concretize_string(i8* %s) #0 !dbg !1870 {
entry:
  %s.addr = alloca i8*, align 8
  %sc = alloca i8*, align 8
  %i = alloca i32, align 4
  %c = alloca i8, align 1
  %cc = alloca i8, align 1
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !1873, metadata !DIExpression()), !dbg !1874
  call void @llvm.dbg.declare(metadata i8** %sc, metadata !1875, metadata !DIExpression()), !dbg !1876
  %0 = load i8*, i8** %s.addr, align 8, !dbg !1877
  %call = call i8* @__concretize_ptr(i8* %0), !dbg !1878
  store i8* %call, i8** %sc, align 8, !dbg !1876
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1879, metadata !DIExpression()), !dbg !1880
  store i32 0, i32* %i, align 4, !dbg !1881
  br label %for.cond, !dbg !1883

for.cond:                                         ; preds = %for.inc, %entry
  call void @llvm.dbg.declare(metadata i8* %c, metadata !1884, metadata !DIExpression()), !dbg !1887
  %1 = load i8*, i8** %sc, align 8, !dbg !1888
  %2 = load i8, i8* %1, align 1, !dbg !1889
  store i8 %2, i8* %c, align 1, !dbg !1887
  %3 = load i8, i8* %c, align 1, !dbg !1890
  %conv = sext i8 %3 to i64, !dbg !1890
  %call1 = call i32 @klee_is_symbolic(i64 %conv), !dbg !1892
  %tobool = icmp ne i32 %call1, 0, !dbg !1892
  br i1 %tobool, label %if.end4, label %if.then, !dbg !1893

if.then:                                          ; preds = %for.cond
  %4 = load i8, i8* %c, align 1, !dbg !1894
  %tobool2 = icmp ne i8 %4, 0, !dbg !1894
  br i1 %tobool2, label %for.inc, label %for.end, !dbg !1897

if.end4:                                          ; preds = %for.cond
  %5 = load i32, i32* %i, align 4, !dbg !1898
  %6 = load i32, i32* %i, align 4, !dbg !1900
  %sub = sub i32 %6, 1, !dbg !1901
  %and = and i32 %5, %sub, !dbg !1902
  %tobool5 = icmp ne i32 %and, 0, !dbg !1902
  %7 = load i8, i8* %c, align 1, !dbg !1903
  br i1 %tobool5, label %if.else14, label %if.then6, !dbg !1904

if.then6:                                         ; preds = %if.end4
  %tobool7 = icmp ne i8 %7, 0, !dbg !1905
  br i1 %tobool7, label %if.else, label %if.then8, !dbg !1908

if.then8:                                         ; preds = %if.then6
  %8 = load i8*, i8** %sc, align 8, !dbg !1909
  store i8 0, i8* %8, align 1, !dbg !1911
  br label %for.end, !dbg !1912

if.else:                                          ; preds = %if.then6
  %9 = load i8, i8* %c, align 1, !dbg !1913
  %conv9 = sext i8 %9 to i32, !dbg !1913
  %cmp = icmp eq i32 %conv9, 47, !dbg !1915
  br i1 %cmp, label %if.then11, label %for.inc, !dbg !1916

if.then11:                                        ; preds = %if.else
  %10 = load i8*, i8** %sc, align 8, !dbg !1917
  store i8 47, i8* %10, align 1, !dbg !1919
  br label %for.inc, !dbg !1920

if.else14:                                        ; preds = %if.end4
  call void @llvm.dbg.declare(metadata i8* %cc, metadata !1921, metadata !DIExpression()), !dbg !1923
  %conv15 = sext i8 %7 to i64, !dbg !1924
  %call16 = call i64 @klee_get_valuel(i64 %conv15), !dbg !1925
  %conv17 = trunc i64 %call16 to i8, !dbg !1926
  store i8 %conv17, i8* %cc, align 1, !dbg !1923
  %11 = load i8, i8* %cc, align 1, !dbg !1927
  %conv18 = sext i8 %11 to i32, !dbg !1927
  %12 = load i8, i8* %c, align 1, !dbg !1928
  %conv19 = sext i8 %12 to i32, !dbg !1928
  %cmp20 = icmp eq i32 %conv18, %conv19, !dbg !1929
  %conv21 = zext i1 %cmp20 to i32, !dbg !1929
  %conv22 = sext i32 %conv21 to i64, !dbg !1927
  call void @klee_assume(i64 %conv22), !dbg !1930
  %13 = load i8, i8* %cc, align 1, !dbg !1931
  %14 = load i8*, i8** %sc, align 8, !dbg !1932
  store i8 %13, i8* %14, align 1, !dbg !1933
  %15 = load i8, i8* %cc, align 1, !dbg !1934
  %tobool23 = icmp ne i8 %15, 0, !dbg !1934
  br i1 %tobool23, label %for.inc, label %for.end, !dbg !1936

for.inc:                                          ; preds = %if.else, %if.then11, %if.else14, %if.then
  %16 = load i32, i32* %i, align 4, !dbg !1937
  %inc = add i32 %16, 1, !dbg !1937
  store i32 %inc, i32* %i, align 4, !dbg !1937
  %17 = load i8*, i8** %sc, align 8, !dbg !1938
  %incdec.ptr = getelementptr inbounds i8, i8* %17, i32 1, !dbg !1938
  store i8* %incdec.ptr, i8** %sc, align 8, !dbg !1938
  br label %for.cond, !dbg !1939, !llvm.loop !1940

for.end:                                          ; preds = %if.else14, %if.then, %if.then8
  %18 = load i8*, i8** %s.addr, align 8, !dbg !1943
  ret i8* %18, !dbg !1944
}

; Function Attrs: nounwind
declare dso_local i64 @syscall(i64, ...) #3

; Function Attrs: noinline nounwind uwtable
define internal i8* @__concretize_ptr(i8* %p) #0 !dbg !1945 {
entry:
  %p.addr = alloca i8*, align 8
  %pc = alloca i8*, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !1948, metadata !DIExpression()), !dbg !1949
  call void @llvm.dbg.declare(metadata i8** %pc, metadata !1950, metadata !DIExpression()), !dbg !1951
  %0 = load i8*, i8** %p.addr, align 8, !dbg !1952
  %1 = ptrtoint i8* %0 to i64, !dbg !1953
  %call = call i64 @klee_get_valuel(i64 %1), !dbg !1954
  %2 = inttoptr i64 %call to i8*, !dbg !1955
  store i8* %2, i8** %pc, align 8, !dbg !1951
  %3 = load i8*, i8** %pc, align 8, !dbg !1956
  %4 = load i8*, i8** %p.addr, align 8, !dbg !1957
  %cmp = icmp eq i8* %3, %4, !dbg !1958
  %conv = zext i1 %cmp to i32, !dbg !1958
  %conv1 = sext i32 %conv to i64, !dbg !1956
  call void @klee_assume(i64 %conv1), !dbg !1959
  %5 = load i8*, i8** %pc, align 8, !dbg !1960
  ret i8* %5, !dbg !1961
}

declare dso_local i64 @klee_get_valuel(i64) #4

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @umask(i32 %mask) #0 !dbg !1962 {
entry:
  %mask.addr = alloca i32, align 4
  %r = alloca i32, align 4
  store i32 %mask, i32* %mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mask.addr, metadata !1965, metadata !DIExpression()), !dbg !1966
  call void @llvm.dbg.declare(metadata i32* %r, metadata !1967, metadata !DIExpression()), !dbg !1968
  %0 = load i32, i32* getelementptr inbounds (%struct.exe_sym_env_t.19, %struct.exe_sym_env_t.19* bitcast ({ <{ %struct.exe_file_t.17, %struct.exe_file_t.17, %struct.exe_file_t.17, [29 x %struct.exe_file_t.17] }>, i32, i32, i32, [4 x i8] }* @__exe_env to %struct.exe_sym_env_t.19*), i32 0, i32 1), align 8, !dbg !1969
  store i32 %0, i32* %r, align 4, !dbg !1968
  %1 = load i32, i32* %mask.addr, align 4, !dbg !1970
  %and = and i32 %1, 511, !dbg !1971
  store i32 %and, i32* getelementptr inbounds (%struct.exe_sym_env_t.19, %struct.exe_sym_env_t.19* bitcast ({ <{ %struct.exe_file_t.17, %struct.exe_file_t.17, %struct.exe_file_t.17, [29 x %struct.exe_file_t.17] }>, i32, i32, i32, [4 x i8] }* @__exe_env to %struct.exe_sym_env_t.19*), i32 0, i32 1), align 8, !dbg !1972
  %2 = load i32, i32* %r, align 4, !dbg !1973
  ret i32 %2, !dbg !1974
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @__fd_open(i8* %pathname, i32 %flags, i32 %mode) #0 !dbg !1975 {
entry:
  %retval = alloca i32, align 4
  %pathname.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %df = alloca %struct.exe_disk_file_t.16*, align 8
  %f = alloca %struct.exe_file_t.17*, align 8
  %fd = alloca i32, align 4
  %os_fd = alloca i32, align 4
  store i8* %pathname, i8** %pathname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pathname.addr, metadata !1978, metadata !DIExpression()), !dbg !1979
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !1980, metadata !DIExpression()), !dbg !1981
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !1982, metadata !DIExpression()), !dbg !1983
  call void @llvm.dbg.declare(metadata %struct.exe_disk_file_t.16** %df, metadata !1984, metadata !DIExpression()), !dbg !1985
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %f, metadata !1986, metadata !DIExpression()), !dbg !1995
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !1996, metadata !DIExpression()), !dbg !1997
  store i32 0, i32* %fd, align 4, !dbg !1998
  br label %for.cond, !dbg !2000

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %fd, align 4, !dbg !2001
  %cmp = icmp slt i32 %0, 32, !dbg !2003
  br i1 %cmp, label %for.body, label %for.end, !dbg !2004

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %fd, align 4, !dbg !2005
  %idxprom = sext i32 %1 to i64, !dbg !2007
  %arrayidx = getelementptr inbounds [32 x %struct.exe_file_t.17], [32 x %struct.exe_file_t.17]* getelementptr inbounds (%struct.exe_sym_env_t.19, %struct.exe_sym_env_t.19* bitcast ({ <{ %struct.exe_file_t.17, %struct.exe_file_t.17, %struct.exe_file_t.17, [29 x %struct.exe_file_t.17] }>, i32, i32, i32, [4 x i8] }* @__exe_env to %struct.exe_sym_env_t.19*), i32 0, i32 0), i64 0, i64 %idxprom, !dbg !2007
  %flags1 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %arrayidx, i32 0, i32 1, !dbg !2008
  %2 = load i32, i32* %flags1, align 4, !dbg !2008
  %and = and i32 %2, 1, !dbg !2009
  %tobool = icmp ne i32 %and, 0, !dbg !2009
  br i1 %tobool, label %for.inc, label %for.end, !dbg !2010

for.inc:                                          ; preds = %for.body
  %3 = load i32, i32* %fd, align 4, !dbg !2011
  %inc = add nsw i32 %3, 1, !dbg !2011
  store i32 %inc, i32* %fd, align 4, !dbg !2011
  br label %for.cond, !dbg !2012, !llvm.loop !2013

for.end:                                          ; preds = %for.body, %for.cond
  %4 = load i32, i32* %fd, align 4, !dbg !2015
  %cmp2 = icmp eq i32 %4, 32, !dbg !2017
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !2018

if.then3:                                         ; preds = %for.end
  %call = call i32* @__errno_location() #22, !dbg !2019
  store i32 24, i32* %call, align 4, !dbg !2021
  store i32 -1, i32* %retval, align 4, !dbg !2022
  br label %return, !dbg !2022

if.end4:                                          ; preds = %for.end
  %5 = load i32, i32* %fd, align 4, !dbg !2023
  %idxprom5 = sext i32 %5 to i64, !dbg !2024
  %arrayidx6 = getelementptr inbounds [32 x %struct.exe_file_t.17], [32 x %struct.exe_file_t.17]* getelementptr inbounds (%struct.exe_sym_env_t.19, %struct.exe_sym_env_t.19* bitcast ({ <{ %struct.exe_file_t.17, %struct.exe_file_t.17, %struct.exe_file_t.17, [29 x %struct.exe_file_t.17] }>, i32, i32, i32, [4 x i8] }* @__exe_env to %struct.exe_sym_env_t.19*), i32 0, i32 0), i64 0, i64 %idxprom5, !dbg !2024
  store %struct.exe_file_t.17* %arrayidx6, %struct.exe_file_t.17** %f, align 8, !dbg !2025
  %6 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2026
  %7 = bitcast %struct.exe_file_t.17* %6 to i8*, !dbg !2027
  %8 = call i8* @memset(i8* %7, i32 0, i64 24), !dbg !2027
  %9 = load i8*, i8** %pathname.addr, align 8, !dbg !2028
  %call7 = call %struct.exe_disk_file_t.16* @__get_sym_file(i8* %9), !dbg !2029
  store %struct.exe_disk_file_t.16* %call7, %struct.exe_disk_file_t.16** %df, align 8, !dbg !2030
  %10 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %df, align 8, !dbg !2031
  %tobool8 = icmp ne %struct.exe_disk_file_t.16* %10, null, !dbg !2031
  br i1 %tobool8, label %if.then9, label %if.else45, !dbg !2033

if.then9:                                         ; preds = %if.end4
  %11 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %df, align 8, !dbg !2034
  %12 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2036
  %dfile = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %12, i32 0, i32 3, !dbg !2037
  store %struct.exe_disk_file_t.16* %11, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !2038
  %13 = load i32, i32* %flags.addr, align 4, !dbg !2039
  %and10 = and i32 %13, 64, !dbg !2041
  %tobool11 = icmp ne i32 %and10, 0, !dbg !2041
  br i1 %tobool11, label %land.lhs.true, label %if.end16, !dbg !2042

land.lhs.true:                                    ; preds = %if.then9
  %14 = load i32, i32* %flags.addr, align 4, !dbg !2043
  %and12 = and i32 %14, 128, !dbg !2044
  %tobool13 = icmp ne i32 %and12, 0, !dbg !2044
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !2045

if.then14:                                        ; preds = %land.lhs.true
  %call15 = call i32* @__errno_location() #22, !dbg !2046
  store i32 17, i32* %call15, align 4, !dbg !2048
  store i32 -1, i32* %retval, align 4, !dbg !2049
  br label %return, !dbg !2049

if.end16:                                         ; preds = %land.lhs.true, %if.then9
  %15 = load i32, i32* %flags.addr, align 4, !dbg !2050
  %and17 = and i32 %15, 512, !dbg !2052
  %tobool18 = icmp ne i32 %and17, 0, !dbg !2052
  br i1 %tobool18, label %land.lhs.true19, label %if.end24, !dbg !2053

land.lhs.true19:                                  ; preds = %if.end16
  %16 = load i32, i32* %flags.addr, align 4, !dbg !2054
  %and20 = and i32 %16, 0, !dbg !2055
  %tobool21 = icmp ne i32 %and20, 0, !dbg !2055
  br i1 %tobool21, label %if.then22, label %if.end24, !dbg !2056

if.then22:                                        ; preds = %land.lhs.true19
  call void @klee_warning(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.70, i64 0, i64 0)), !dbg !2057
  %call23 = call i32* @__errno_location() #22, !dbg !2059
  store i32 13, i32* %call23, align 4, !dbg !2060
  store i32 -1, i32* %retval, align 4, !dbg !2061
  br label %return, !dbg !2061

if.end24:                                         ; preds = %land.lhs.true19, %if.end16
  %17 = load i32, i32* %flags.addr, align 4, !dbg !2062
  %and25 = and i32 %17, 128, !dbg !2064
  %tobool26 = icmp ne i32 %and25, 0, !dbg !2064
  br i1 %tobool26, label %land.lhs.true27, label %if.end32, !dbg !2065

land.lhs.true27:                                  ; preds = %if.end24
  %18 = load i32, i32* %flags.addr, align 4, !dbg !2066
  %and28 = and i32 %18, 64, !dbg !2067
  %tobool29 = icmp ne i32 %and28, 0, !dbg !2067
  br i1 %tobool29, label %if.end32, label %if.then30, !dbg !2068

if.then30:                                        ; preds = %land.lhs.true27
  call void @klee_warning(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1.71, i64 0, i64 0)), !dbg !2069
  %call31 = call i32* @__errno_location() #22, !dbg !2071
  store i32 13, i32* %call31, align 4, !dbg !2072
  store i32 -1, i32* %retval, align 4, !dbg !2073
  br label %return, !dbg !2073

if.end32:                                         ; preds = %land.lhs.true27, %if.end24
  %19 = load i32, i32* %flags.addr, align 4, !dbg !2074
  %20 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %df, align 8, !dbg !2076
  %stat = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %20, i32 0, i32 2, !dbg !2077
  %21 = load %struct.stat64.15*, %struct.stat64.15** %stat, align 8, !dbg !2077
  %call33 = call i32 @has_permission(i32 %19, %struct.stat64.15* %21), !dbg !2078
  %tobool34 = icmp ne i32 %call33, 0, !dbg !2078
  br i1 %tobool34, label %if.else, label %if.then35, !dbg !2079

if.then35:                                        ; preds = %if.end32
  %call36 = call i32* @__errno_location() #22, !dbg !2080
  store i32 13, i32* %call36, align 4, !dbg !2082
  store i32 -1, i32* %retval, align 4, !dbg !2083
  br label %return, !dbg !2083

if.else:                                          ; preds = %if.end32
  %22 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2084
  %dfile37 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %22, i32 0, i32 3, !dbg !2085
  %23 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile37, align 8, !dbg !2085
  %stat38 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %23, i32 0, i32 2, !dbg !2086
  %24 = load %struct.stat64.15*, %struct.stat64.15** %stat38, align 8, !dbg !2086
  %st_mode = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %24, i32 0, i32 3, !dbg !2087
  %25 = load i32, i32* %st_mode, align 8, !dbg !2087
  %and39 = and i32 %25, -512, !dbg !2088
  %26 = load i32, i32* %mode.addr, align 4, !dbg !2089
  %27 = load i32, i32* getelementptr inbounds (%struct.exe_sym_env_t.19, %struct.exe_sym_env_t.19* bitcast ({ <{ %struct.exe_file_t.17, %struct.exe_file_t.17, %struct.exe_file_t.17, [29 x %struct.exe_file_t.17] }>, i32, i32, i32, [4 x i8] }* @__exe_env to %struct.exe_sym_env_t.19*), i32 0, i32 1), align 8, !dbg !2090
  %neg = xor i32 %27, -1, !dbg !2091
  %and40 = and i32 %26, %neg, !dbg !2092
  %or = or i32 %and39, %and40, !dbg !2093
  %28 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2094
  %dfile41 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %28, i32 0, i32 3, !dbg !2095
  %29 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile41, align 8, !dbg !2095
  %stat42 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %29, i32 0, i32 2, !dbg !2096
  %30 = load %struct.stat64.15*, %struct.stat64.15** %stat42, align 8, !dbg !2096
  %st_mode43 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %30, i32 0, i32 3, !dbg !2097
  store i32 %or, i32* %st_mode43, align 8, !dbg !2098
  br label %if.end53, !dbg !2099

if.else45:                                        ; preds = %if.end4
  call void @llvm.dbg.declare(metadata i32* %os_fd, metadata !2100, metadata !DIExpression()), !dbg !2102
  %31 = load i8*, i8** %pathname.addr, align 8, !dbg !2103
  %call46 = call i8* @__concretize_string(i8* %31), !dbg !2104
  %32 = load i32, i32* %flags.addr, align 4, !dbg !2105
  %33 = load i32, i32* %mode.addr, align 4, !dbg !2106
  %call47 = call i64 (i64, ...) @syscall(i64 2, i8* %call46, i32 %32, i32 %33) #8, !dbg !2107
  %conv = trunc i64 %call47 to i32, !dbg !2107
  store i32 %conv, i32* %os_fd, align 4, !dbg !2102
  %34 = load i32, i32* %os_fd, align 4, !dbg !2108
  %cmp48 = icmp eq i32 %34, -1, !dbg !2110
  br i1 %cmp48, label %if.then50, label %if.end51, !dbg !2111

if.then50:                                        ; preds = %if.else45
  store i32 -1, i32* %retval, align 4, !dbg !2112
  br label %return, !dbg !2112

if.end51:                                         ; preds = %if.else45
  %35 = load i32, i32* %os_fd, align 4, !dbg !2113
  %36 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2114
  %fd52 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %36, i32 0, i32 0, !dbg !2115
  store i32 %35, i32* %fd52, align 8, !dbg !2116
  br label %if.end53

if.end53:                                         ; preds = %if.end51, %if.else
  %37 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2117
  %flags54 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %37, i32 0, i32 1, !dbg !2118
  store i32 1, i32* %flags54, align 4, !dbg !2119
  %38 = load i32, i32* %flags.addr, align 4, !dbg !2120
  %and55 = and i32 %38, 3, !dbg !2122
  %cmp56 = icmp eq i32 %and55, 0, !dbg !2123
  br i1 %cmp56, label %if.then58, label %if.else61, !dbg !2124

if.then58:                                        ; preds = %if.end53
  %39 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2125
  %flags59 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %39, i32 0, i32 1, !dbg !2127
  %40 = load i32, i32* %flags59, align 4, !dbg !2128
  %or60 = or i32 %40, 4, !dbg !2128
  store i32 %or60, i32* %flags59, align 4, !dbg !2128
  br label %if.end72, !dbg !2129

if.else61:                                        ; preds = %if.end53
  %41 = load i32, i32* %flags.addr, align 4, !dbg !2130
  %and62 = and i32 %41, 3, !dbg !2132
  %cmp63 = icmp eq i32 %and62, 1, !dbg !2133
  %42 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2134
  %flags66 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %42, i32 0, i32 1, !dbg !2134
  %43 = load i32, i32* %flags66, align 4, !dbg !2134
  br i1 %cmp63, label %if.then65, label %if.else68, !dbg !2135

if.then65:                                        ; preds = %if.else61
  %or67 = or i32 %43, 8, !dbg !2136
  store i32 %or67, i32* %flags66, align 4, !dbg !2136
  br label %if.end72, !dbg !2138

if.else68:                                        ; preds = %if.else61
  %or70 = or i32 %43, 12, !dbg !2139
  store i32 %or70, i32* %flags66, align 4, !dbg !2139
  br label %if.end72

if.end72:                                         ; preds = %if.then65, %if.else68, %if.then58
  %44 = load i32, i32* %fd, align 4, !dbg !2141
  store i32 %44, i32* %retval, align 4, !dbg !2142
  br label %return, !dbg !2142

return:                                           ; preds = %if.end72, %if.then50, %if.then35, %if.then30, %if.then22, %if.then14, %if.then3
  %45 = load i32, i32* %retval, align 4, !dbg !2143
  ret i32 %45, !dbg !2143
}

declare dso_local void @klee_warning(i8*) #4

; Function Attrs: noinline nounwind uwtable
define internal i32 @has_permission(i32 %flags, %struct.stat64.15* %s) #0 !dbg !2144 {
entry:
  %retval = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %s.addr = alloca %struct.stat64.15*, align 8
  %write_access = alloca i32, align 4
  %read_access = alloca i32, align 4
  %mode = alloca i32, align 4
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !2147, metadata !DIExpression()), !dbg !2148
  store %struct.stat64.15* %s, %struct.stat64.15** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat64.15** %s.addr, metadata !2149, metadata !DIExpression()), !dbg !2150
  call void @llvm.dbg.declare(metadata i32* %write_access, metadata !2151, metadata !DIExpression()), !dbg !2152
  call void @llvm.dbg.declare(metadata i32* %read_access, metadata !2153, metadata !DIExpression()), !dbg !2154
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !2155, metadata !DIExpression()), !dbg !2156
  %0 = load %struct.stat64.15*, %struct.stat64.15** %s.addr, align 8, !dbg !2157
  %st_mode = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %0, i32 0, i32 3, !dbg !2158
  %1 = load i32, i32* %st_mode, align 8, !dbg !2158
  store i32 %1, i32* %mode, align 4, !dbg !2156
  %2 = load i32, i32* %flags.addr, align 4, !dbg !2159
  %and = and i32 %2, 0, !dbg !2161
  %tobool = icmp ne i32 %and, 0, !dbg !2161
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !2162

lor.lhs.false:                                    ; preds = %entry
  %3 = load i32, i32* %flags.addr, align 4, !dbg !2163
  %and1 = and i32 %3, 2, !dbg !2164
  %tobool2 = icmp ne i32 %and1, 0, !dbg !2164
  br i1 %tobool2, label %if.then, label %if.else, !dbg !2165

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 1, i32* %read_access, align 4, !dbg !2166
  br label %if.end, !dbg !2167

if.else:                                          ; preds = %lor.lhs.false
  store i32 0, i32* %read_access, align 4, !dbg !2168
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = load i32, i32* %flags.addr, align 4, !dbg !2169
  %and3 = and i32 %4, 1, !dbg !2171
  %tobool4 = icmp ne i32 %and3, 0, !dbg !2171
  br i1 %tobool4, label %if.then8, label %lor.lhs.false5, !dbg !2172

lor.lhs.false5:                                   ; preds = %if.end
  %5 = load i32, i32* %flags.addr, align 4, !dbg !2173
  %and6 = and i32 %5, 2, !dbg !2174
  %tobool7 = icmp ne i32 %and6, 0, !dbg !2174
  br i1 %tobool7, label %if.then8, label %if.else9, !dbg !2175

if.then8:                                         ; preds = %lor.lhs.false5, %if.end
  store i32 1, i32* %write_access, align 4, !dbg !2176
  br label %if.end10, !dbg !2177

if.else9:                                         ; preds = %lor.lhs.false5
  store i32 0, i32* %write_access, align 4, !dbg !2178
  br label %if.end10

if.end10:                                         ; preds = %if.else9, %if.then8
  %6 = load i32, i32* %read_access, align 4, !dbg !2179
  %tobool11 = icmp ne i32 %6, 0, !dbg !2179
  br i1 %tobool11, label %land.lhs.true, label %if.end18, !dbg !2181

land.lhs.true:                                    ; preds = %if.end10
  %7 = load i32, i32* %mode, align 4, !dbg !2182
  %and12 = and i32 %7, 256, !dbg !2183
  %8 = load i32, i32* %mode, align 4, !dbg !2184
  %and13 = and i32 %8, 32, !dbg !2185
  %or = or i32 %and12, %and13, !dbg !2186
  %9 = load i32, i32* %mode, align 4, !dbg !2187
  %and14 = and i32 %9, 4, !dbg !2188
  %or15 = or i32 %or, %and14, !dbg !2189
  %tobool16 = icmp ne i32 %or15, 0, !dbg !2189
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !2190

if.then17:                                        ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !2191
  br label %return, !dbg !2191

if.end18:                                         ; preds = %land.lhs.true, %if.end10
  %10 = load i32, i32* %write_access, align 4, !dbg !2192
  %tobool19 = icmp ne i32 %10, 0, !dbg !2192
  br i1 %tobool19, label %land.lhs.true20, label %if.end28, !dbg !2194

land.lhs.true20:                                  ; preds = %if.end18
  %11 = load i32, i32* %mode, align 4, !dbg !2195
  %and21 = and i32 %11, 128, !dbg !2196
  %12 = load i32, i32* %mode, align 4, !dbg !2197
  %and22 = and i32 %12, 16, !dbg !2198
  %or23 = or i32 %and21, %and22, !dbg !2199
  %13 = load i32, i32* %mode, align 4, !dbg !2200
  %and24 = and i32 %13, 2, !dbg !2201
  %or25 = or i32 %or23, %and24, !dbg !2202
  %tobool26 = icmp ne i32 %or25, 0, !dbg !2202
  br i1 %tobool26, label %if.end28, label %if.then27, !dbg !2203

if.then27:                                        ; preds = %land.lhs.true20
  store i32 0, i32* %retval, align 4, !dbg !2204
  br label %return, !dbg !2204

if.end28:                                         ; preds = %land.lhs.true20, %if.end18
  store i32 1, i32* %retval, align 4, !dbg !2205
  br label %return, !dbg !2205

return:                                           ; preds = %if.end28, %if.then27, %if.then17
  %14 = load i32, i32* %retval, align 4, !dbg !2206
  ret i32 %14, !dbg !2206
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @__fd_openat(i32 %basefd, i8* %pathname, i32 %flags, i32 %mode) #0 !dbg !2207 {
entry:
  %retval = alloca i32, align 4
  %basefd.addr = alloca i32, align 4
  %pathname.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %f = alloca %struct.exe_file_t.17*, align 8
  %fd = alloca i32, align 4
  %bf = alloca %struct.exe_file_t.17*, align 8
  %os_fd = alloca i32, align 4
  store i32 %basefd, i32* %basefd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %basefd.addr, metadata !2210, metadata !DIExpression()), !dbg !2211
  store i8* %pathname, i8** %pathname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pathname.addr, metadata !2212, metadata !DIExpression()), !dbg !2213
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !2214, metadata !DIExpression()), !dbg !2215
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !2216, metadata !DIExpression()), !dbg !2217
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %f, metadata !2218, metadata !DIExpression()), !dbg !2219
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !2220, metadata !DIExpression()), !dbg !2221
  %0 = load i32, i32* %basefd.addr, align 4, !dbg !2222
  %cmp = icmp ne i32 %0, -100, !dbg !2224
  br i1 %cmp, label %if.then, label %if.end8, !dbg !2225

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %bf, metadata !2226, metadata !DIExpression()), !dbg !2228
  %1 = load i32, i32* %basefd.addr, align 4, !dbg !2229
  %call = call %struct.exe_file_t.17* @__get_file(i32 %1), !dbg !2230
  store %struct.exe_file_t.17* %call, %struct.exe_file_t.17** %bf, align 8, !dbg !2228
  %2 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %bf, align 8, !dbg !2231
  %tobool = icmp ne %struct.exe_file_t.17* %2, null, !dbg !2231
  br i1 %tobool, label %if.else, label %if.then1, !dbg !2233

if.then1:                                         ; preds = %if.then
  %call2 = call i32* @__errno_location() #22, !dbg !2234
  store i32 9, i32* %call2, align 4, !dbg !2236
  store i32 -1, i32* %retval, align 4, !dbg !2237
  br label %return, !dbg !2237

if.else:                                          ; preds = %if.then
  %3 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %bf, align 8, !dbg !2238
  %dfile = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %3, i32 0, i32 3, !dbg !2240
  %4 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !2240
  %tobool3 = icmp ne %struct.exe_disk_file_t.16* %4, null, !dbg !2238
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !2241

if.then4:                                         ; preds = %if.else
  call void @klee_warning(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2.74, i64 0, i64 0)), !dbg !2242
  %call5 = call i32* @__errno_location() #22, !dbg !2244
  store i32 2, i32* %call5, align 4, !dbg !2245
  store i32 -1, i32* %retval, align 4, !dbg !2246
  br label %return, !dbg !2246

if.end6:                                          ; preds = %if.else
  %5 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %bf, align 8, !dbg !2247
  %fd7 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %5, i32 0, i32 0, !dbg !2248
  %6 = load i32, i32* %fd7, align 8, !dbg !2248
  store i32 %6, i32* %basefd.addr, align 4, !dbg !2249
  br label %if.end8, !dbg !2250

if.end8:                                          ; preds = %if.end6, %entry
  %7 = load i8*, i8** %pathname.addr, align 8, !dbg !2251
  %call9 = call %struct.exe_disk_file_t.16* @__get_sym_file(i8* %7), !dbg !2253
  %tobool10 = icmp ne %struct.exe_disk_file_t.16* %call9, null, !dbg !2253
  br i1 %tobool10, label %if.then11, label %if.end13, !dbg !2254

if.then11:                                        ; preds = %if.end8
  %8 = load i8*, i8** %pathname.addr, align 8, !dbg !2255
  %9 = load i32, i32* %flags.addr, align 4, !dbg !2257
  %10 = load i32, i32* %mode.addr, align 4, !dbg !2258
  %call12 = call i32 @__fd_open(i8* %8, i32 %9, i32 %10), !dbg !2259
  store i32 %call12, i32* %retval, align 4, !dbg !2260
  br label %return, !dbg !2260

if.end13:                                         ; preds = %if.end8
  store i32 0, i32* %fd, align 4, !dbg !2261
  br label %for.cond, !dbg !2263

for.cond:                                         ; preds = %for.inc, %if.end13
  %11 = load i32, i32* %fd, align 4, !dbg !2264
  %cmp14 = icmp slt i32 %11, 32, !dbg !2266
  br i1 %cmp14, label %for.body, label %for.end, !dbg !2267

for.body:                                         ; preds = %for.cond
  %12 = load i32, i32* %fd, align 4, !dbg !2268
  %idxprom = sext i32 %12 to i64, !dbg !2270
  %arrayidx = getelementptr inbounds [32 x %struct.exe_file_t.17], [32 x %struct.exe_file_t.17]* getelementptr inbounds (%struct.exe_sym_env_t.19, %struct.exe_sym_env_t.19* bitcast ({ <{ %struct.exe_file_t.17, %struct.exe_file_t.17, %struct.exe_file_t.17, [29 x %struct.exe_file_t.17] }>, i32, i32, i32, [4 x i8] }* @__exe_env to %struct.exe_sym_env_t.19*), i32 0, i32 0), i64 0, i64 %idxprom, !dbg !2270
  %flags15 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %arrayidx, i32 0, i32 1, !dbg !2271
  %13 = load i32, i32* %flags15, align 4, !dbg !2271
  %and = and i32 %13, 1, !dbg !2272
  %tobool16 = icmp ne i32 %and, 0, !dbg !2272
  br i1 %tobool16, label %for.inc, label %for.end, !dbg !2273

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %fd, align 4, !dbg !2274
  %inc = add nsw i32 %14, 1, !dbg !2274
  store i32 %inc, i32* %fd, align 4, !dbg !2274
  br label %for.cond, !dbg !2275, !llvm.loop !2276

for.end:                                          ; preds = %for.body, %for.cond
  %15 = load i32, i32* %fd, align 4, !dbg !2278
  %cmp19 = icmp eq i32 %15, 32, !dbg !2280
  br i1 %cmp19, label %if.then20, label %if.end22, !dbg !2281

if.then20:                                        ; preds = %for.end
  %call21 = call i32* @__errno_location() #22, !dbg !2282
  store i32 24, i32* %call21, align 4, !dbg !2284
  store i32 -1, i32* %retval, align 4, !dbg !2285
  br label %return, !dbg !2285

if.end22:                                         ; preds = %for.end
  %16 = load i32, i32* %fd, align 4, !dbg !2286
  %idxprom23 = sext i32 %16 to i64, !dbg !2287
  %arrayidx24 = getelementptr inbounds [32 x %struct.exe_file_t.17], [32 x %struct.exe_file_t.17]* getelementptr inbounds (%struct.exe_sym_env_t.19, %struct.exe_sym_env_t.19* bitcast ({ <{ %struct.exe_file_t.17, %struct.exe_file_t.17, %struct.exe_file_t.17, [29 x %struct.exe_file_t.17] }>, i32, i32, i32, [4 x i8] }* @__exe_env to %struct.exe_sym_env_t.19*), i32 0, i32 0), i64 0, i64 %idxprom23, !dbg !2287
  store %struct.exe_file_t.17* %arrayidx24, %struct.exe_file_t.17** %f, align 8, !dbg !2288
  %17 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2289
  %18 = bitcast %struct.exe_file_t.17* %17 to i8*, !dbg !2290
  %19 = call i8* @memset(i8* %18, i32 0, i64 24), !dbg !2290
  call void @llvm.dbg.declare(metadata i32* %os_fd, metadata !2291, metadata !DIExpression()), !dbg !2292
  %20 = load i32, i32* %basefd.addr, align 4, !dbg !2293
  %conv = sext i32 %20 to i64, !dbg !2294
  %21 = load i8*, i8** %pathname.addr, align 8, !dbg !2295
  %call25 = call i8* @__concretize_string(i8* %21), !dbg !2296
  %22 = load i32, i32* %flags.addr, align 4, !dbg !2297
  %conv26 = sext i32 %22 to i64, !dbg !2298
  %23 = load i32, i32* %mode.addr, align 4, !dbg !2299
  %call27 = call i64 (i64, ...) @syscall(i64 257, i64 %conv, i8* %call25, i64 %conv26, i32 %23) #8, !dbg !2300
  %conv28 = trunc i64 %call27 to i32, !dbg !2300
  store i32 %conv28, i32* %os_fd, align 4, !dbg !2292
  %24 = load i32, i32* %os_fd, align 4, !dbg !2301
  %cmp29 = icmp eq i32 %24, -1, !dbg !2303
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !2304

if.then31:                                        ; preds = %if.end22
  store i32 -1, i32* %retval, align 4, !dbg !2305
  br label %return, !dbg !2305

if.end32:                                         ; preds = %if.end22
  %25 = load i32, i32* %os_fd, align 4, !dbg !2306
  %26 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2307
  %fd33 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %26, i32 0, i32 0, !dbg !2308
  store i32 %25, i32* %fd33, align 8, !dbg !2309
  %27 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2310
  %flags34 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %27, i32 0, i32 1, !dbg !2311
  store i32 1, i32* %flags34, align 4, !dbg !2312
  %28 = load i32, i32* %flags.addr, align 4, !dbg !2313
  %and35 = and i32 %28, 3, !dbg !2315
  %cmp36 = icmp eq i32 %and35, 0, !dbg !2316
  br i1 %cmp36, label %if.then38, label %if.else40, !dbg !2317

if.then38:                                        ; preds = %if.end32
  %29 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2318
  %flags39 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %29, i32 0, i32 1, !dbg !2320
  %30 = load i32, i32* %flags39, align 4, !dbg !2321
  %or = or i32 %30, 4, !dbg !2321
  store i32 %or, i32* %flags39, align 4, !dbg !2321
  br label %if.end51, !dbg !2322

if.else40:                                        ; preds = %if.end32
  %31 = load i32, i32* %flags.addr, align 4, !dbg !2323
  %and41 = and i32 %31, 3, !dbg !2325
  %cmp42 = icmp eq i32 %and41, 1, !dbg !2326
  %32 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2327
  %flags45 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %32, i32 0, i32 1, !dbg !2327
  %33 = load i32, i32* %flags45, align 4, !dbg !2327
  br i1 %cmp42, label %if.then44, label %if.else47, !dbg !2328

if.then44:                                        ; preds = %if.else40
  %or46 = or i32 %33, 8, !dbg !2329
  store i32 %or46, i32* %flags45, align 4, !dbg !2329
  br label %if.end51, !dbg !2331

if.else47:                                        ; preds = %if.else40
  %or49 = or i32 %33, 12, !dbg !2332
  store i32 %or49, i32* %flags45, align 4, !dbg !2332
  br label %if.end51

if.end51:                                         ; preds = %if.then44, %if.else47, %if.then38
  %34 = load i32, i32* %fd, align 4, !dbg !2334
  store i32 %34, i32* %retval, align 4, !dbg !2335
  br label %return, !dbg !2335

return:                                           ; preds = %if.end51, %if.then31, %if.then20, %if.then11, %if.then4, %if.then1
  %35 = load i32, i32* %retval, align 4, !dbg !2336
  ret i32 %35, !dbg !2336
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.exe_file_t.17* @__get_file(i32 %fd) #0 !dbg !2337 {
entry:
  %retval = alloca %struct.exe_file_t.17*, align 8
  %fd.addr = alloca i32, align 4
  %f = alloca %struct.exe_file_t.17*, align 8
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !2340, metadata !DIExpression()), !dbg !2341
  %0 = load i32, i32* %fd.addr, align 4, !dbg !2342
  %cmp = icmp sge i32 %0, 0, !dbg !2344
  %1 = load i32, i32* %fd.addr, align 4, !dbg !2345
  %cmp1 = icmp slt i32 %1, 32, !dbg !2346
  %or.cond = and i1 %cmp, %cmp1, !dbg !2347
  br i1 %or.cond, label %if.then, label %if.end3, !dbg !2347

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %f, metadata !2348, metadata !DIExpression()), !dbg !2350
  %2 = load i32, i32* %fd.addr, align 4, !dbg !2351
  %idxprom = sext i32 %2 to i64, !dbg !2352
  %arrayidx = getelementptr inbounds [32 x %struct.exe_file_t.17], [32 x %struct.exe_file_t.17]* getelementptr inbounds (%struct.exe_sym_env_t.19, %struct.exe_sym_env_t.19* bitcast ({ <{ %struct.exe_file_t.17, %struct.exe_file_t.17, %struct.exe_file_t.17, [29 x %struct.exe_file_t.17] }>, i32, i32, i32, [4 x i8] }* @__exe_env to %struct.exe_sym_env_t.19*), i32 0, i32 0), i64 0, i64 %idxprom, !dbg !2352
  store %struct.exe_file_t.17* %arrayidx, %struct.exe_file_t.17** %f, align 8, !dbg !2350
  %3 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2353
  %flags = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %3, i32 0, i32 1, !dbg !2355
  %4 = load i32, i32* %flags, align 4, !dbg !2355
  %and = and i32 %4, 1, !dbg !2356
  %tobool = icmp ne i32 %and, 0, !dbg !2356
  br i1 %tobool, label %if.then2, label %if.end3, !dbg !2357

if.then2:                                         ; preds = %if.then
  %5 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2358
  store %struct.exe_file_t.17* %5, %struct.exe_file_t.17** %retval, align 8, !dbg !2359
  br label %return, !dbg !2359

if.end3:                                          ; preds = %if.then, %entry
  store %struct.exe_file_t.17* null, %struct.exe_file_t.17** %retval, align 8, !dbg !2360
  br label %return, !dbg !2360

return:                                           ; preds = %if.end3, %if.then2
  %6 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %retval, align 8, !dbg !2361
  ret %struct.exe_file_t.17* %6, !dbg !2361
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @utimes(i8* nonnull %path, %struct.timespec.14* %times) #0 !dbg !2362 {
entry:
  %retval = alloca i32, align 4
  %path.addr = alloca i8*, align 8
  %times.addr = alloca %struct.timespec.14*, align 8
  %dfile = alloca %struct.exe_disk_file_t.16*, align 8
  %newTimes = alloca [2 x %struct.timespec.14], align 16
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !2373, metadata !DIExpression()), !dbg !2374
  store %struct.timespec.14* %times, %struct.timespec.14** %times.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec.14** %times.addr, metadata !2375, metadata !DIExpression()), !dbg !2376
  call void @llvm.dbg.declare(metadata %struct.exe_disk_file_t.16** %dfile, metadata !2377, metadata !DIExpression()), !dbg !2378
  %0 = load i8*, i8** %path.addr, align 8, !dbg !2379
  %call = call %struct.exe_disk_file_t.16* @__get_sym_file(i8* %0), !dbg !2380
  store %struct.exe_disk_file_t.16* %call, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !2378
  %1 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !2381
  %tobool = icmp ne %struct.exe_disk_file_t.16* %1, null, !dbg !2381
  br i1 %tobool, label %if.then, label %if.end12, !dbg !2383

if.then:                                          ; preds = %entry
  %2 = load %struct.timespec.14*, %struct.timespec.14** %times.addr, align 8, !dbg !2384
  %tobool1 = icmp ne %struct.timespec.14* %2, null, !dbg !2384
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !2387

if.then2:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec.14]* %newTimes, metadata !2388, metadata !DIExpression()), !dbg !2391
  %arrayidx = getelementptr inbounds [2 x %struct.timespec.14], [2 x %struct.timespec.14]* %newTimes, i64 0, i64 0, !dbg !2392
  %call3 = call i32 @gettimeofday(%struct.timespec.14* %arrayidx, %struct.cgc_timeval* null) #8, !dbg !2393
  %arrayidx4 = getelementptr inbounds [2 x %struct.timespec.14], [2 x %struct.timespec.14]* %newTimes, i64 0, i64 1, !dbg !2394
  %arrayidx5 = getelementptr inbounds [2 x %struct.timespec.14], [2 x %struct.timespec.14]* %newTimes, i64 0, i64 0, !dbg !2395
  %3 = bitcast %struct.timespec.14* %arrayidx4 to i8*, !dbg !2395
  %4 = bitcast %struct.timespec.14* %arrayidx5 to i8*, !dbg !2395
  %5 = call i8* @memcpy(i8* %3, i8* %4, i64 16), !dbg !2395
  %arraydecay = getelementptr inbounds [2 x %struct.timespec.14], [2 x %struct.timespec.14]* %newTimes, i64 0, i64 0, !dbg !2396
  store %struct.timespec.14* %arraydecay, %struct.timespec.14** %times.addr, align 8, !dbg !2397
  br label %if.end, !dbg !2398

if.end:                                           ; preds = %if.then2, %if.then
  %6 = load %struct.timespec.14*, %struct.timespec.14** %times.addr, align 8, !dbg !2399
  %arrayidx6 = getelementptr inbounds %struct.timespec.14, %struct.timespec.14* %6, i64 0, !dbg !2399
  %tv_sec = getelementptr inbounds %struct.timespec.14, %struct.timespec.14* %arrayidx6, i32 0, i32 0, !dbg !2400
  %7 = load i64, i64* %tv_sec, align 8, !dbg !2400
  %8 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !2401
  %stat = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %8, i32 0, i32 2, !dbg !2402
  %9 = load %struct.stat64.15*, %struct.stat64.15** %stat, align 8, !dbg !2402
  %st_atim = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %9, i32 0, i32 11, !dbg !2403
  %tv_sec7 = getelementptr inbounds %struct.timespec.14, %struct.timespec.14* %st_atim, i32 0, i32 0, !dbg !2403
  store i64 %7, i64* %tv_sec7, align 8, !dbg !2404
  %10 = load %struct.timespec.14*, %struct.timespec.14** %times.addr, align 8, !dbg !2405
  %arrayidx8 = getelementptr inbounds %struct.timespec.14, %struct.timespec.14* %10, i64 1, !dbg !2405
  %tv_sec9 = getelementptr inbounds %struct.timespec.14, %struct.timespec.14* %arrayidx8, i32 0, i32 0, !dbg !2406
  %11 = load i64, i64* %tv_sec9, align 8, !dbg !2406
  %12 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !2407
  %stat10 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %12, i32 0, i32 2, !dbg !2408
  %13 = load %struct.stat64.15*, %struct.stat64.15** %stat10, align 8, !dbg !2408
  %st_mtim = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %13, i32 0, i32 12, !dbg !2409
  %tv_sec11 = getelementptr inbounds %struct.timespec.14, %struct.timespec.14* %st_mtim, i32 0, i32 0, !dbg !2409
  store i64 %11, i64* %tv_sec11, align 8, !dbg !2410
  store i32 0, i32* %retval, align 4, !dbg !2411
  br label %return, !dbg !2411

if.end12:                                         ; preds = %entry
  %14 = load i8*, i8** %path.addr, align 8, !dbg !2412
  %call13 = call i8* @__concretize_string(i8* %14), !dbg !2413
  %15 = load %struct.timespec.14*, %struct.timespec.14** %times.addr, align 8, !dbg !2414
  %call14 = call i64 (i64, ...) @syscall(i64 235, i8* %call13, %struct.timespec.14* %15) #8, !dbg !2415
  %conv = trunc i64 %call14 to i32, !dbg !2415
  store i32 %conv, i32* %retval, align 4, !dbg !2416
  br label %return, !dbg !2416

return:                                           ; preds = %if.end12, %if.end
  %16 = load i32, i32* %retval, align 4, !dbg !2417
  ret i32 %16, !dbg !2417
}

; Function Attrs: nounwind
declare dso_local i32 @gettimeofday(%struct.timespec.14*, %struct.cgc_timeval*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @futimesat(i32 %fd, i8* %path, %struct.timespec.14* %times) #0 !dbg !2418 {
entry:
  %retval = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %path.addr = alloca i8*, align 8
  %times.addr = alloca %struct.timespec.14*, align 8
  %f = alloca %struct.exe_file_t.17*, align 8
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !2421, metadata !DIExpression()), !dbg !2422
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !2423, metadata !DIExpression()), !dbg !2424
  store %struct.timespec.14* %times, %struct.timespec.14** %times.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec.14** %times.addr, metadata !2425, metadata !DIExpression()), !dbg !2426
  %0 = load i32, i32* %fd.addr, align 4, !dbg !2427
  %cmp = icmp ne i32 %0, -100, !dbg !2429
  br i1 %cmp, label %if.then, label %if.end8, !dbg !2430

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %f, metadata !2431, metadata !DIExpression()), !dbg !2433
  %1 = load i32, i32* %fd.addr, align 4, !dbg !2434
  %call = call %struct.exe_file_t.17* @__get_file(i32 %1), !dbg !2435
  store %struct.exe_file_t.17* %call, %struct.exe_file_t.17** %f, align 8, !dbg !2433
  %2 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2436
  %tobool = icmp ne %struct.exe_file_t.17* %2, null, !dbg !2436
  br i1 %tobool, label %if.else, label %if.then1, !dbg !2438

if.then1:                                         ; preds = %if.then
  %call2 = call i32* @__errno_location() #22, !dbg !2439
  store i32 9, i32* %call2, align 4, !dbg !2441
  store i32 -1, i32* %retval, align 4, !dbg !2442
  br label %return, !dbg !2442

if.else:                                          ; preds = %if.then
  %3 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2443
  %dfile = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %3, i32 0, i32 3, !dbg !2445
  %4 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !2445
  %tobool3 = icmp ne %struct.exe_disk_file_t.16* %4, null, !dbg !2443
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !2446

if.then4:                                         ; preds = %if.else
  call void @klee_warning(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2.74, i64 0, i64 0)), !dbg !2447
  %call5 = call i32* @__errno_location() #22, !dbg !2449
  store i32 2, i32* %call5, align 4, !dbg !2450
  store i32 -1, i32* %retval, align 4, !dbg !2451
  br label %return, !dbg !2451

if.end6:                                          ; preds = %if.else
  %5 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2452
  %fd7 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %5, i32 0, i32 0, !dbg !2453
  %6 = load i32, i32* %fd7, align 8, !dbg !2453
  store i32 %6, i32* %fd.addr, align 4, !dbg !2454
  br label %if.end8, !dbg !2455

if.end8:                                          ; preds = %if.end6, %entry
  %7 = load i8*, i8** %path.addr, align 8, !dbg !2456
  %call9 = call %struct.exe_disk_file_t.16* @__get_sym_file(i8* %7), !dbg !2458
  %tobool10 = icmp ne %struct.exe_disk_file_t.16* %call9, null, !dbg !2458
  br i1 %tobool10, label %if.then11, label %if.end13, !dbg !2459

if.then11:                                        ; preds = %if.end8
  %8 = load i8*, i8** %path.addr, align 8, !dbg !2460
  %9 = load %struct.timespec.14*, %struct.timespec.14** %times.addr, align 8, !dbg !2462
  %call12 = call i32 @utimes(i8* %8, %struct.timespec.14* %9) #8, !dbg !2463
  store i32 %call12, i32* %retval, align 4, !dbg !2464
  br label %return, !dbg !2464

if.end13:                                         ; preds = %if.end8
  %10 = load i32, i32* %fd.addr, align 4, !dbg !2465
  %conv = sext i32 %10 to i64, !dbg !2466
  %11 = load i8*, i8** %path.addr, align 8, !dbg !2467
  %tobool14 = icmp ne i8* %11, null, !dbg !2467
  br i1 %tobool14, label %cond.true, label %cond.end, !dbg !2467

cond.true:                                        ; preds = %if.end13
  %12 = load i8*, i8** %path.addr, align 8, !dbg !2468
  %call15 = call i8* @__concretize_string(i8* %12), !dbg !2469
  br label %cond.end, !dbg !2467

cond.end:                                         ; preds = %if.end13, %cond.true
  %cond = phi i8* [ %call15, %cond.true ], [ null, %if.end13 ], !dbg !2467
  %13 = load %struct.timespec.14*, %struct.timespec.14** %times.addr, align 8, !dbg !2470
  %call16 = call i64 (i64, ...) @syscall(i64 261, i64 %conv, i8* %cond, %struct.timespec.14* %13) #8, !dbg !2471
  %conv17 = trunc i64 %call16 to i32, !dbg !2471
  store i32 %conv17, i32* %retval, align 4, !dbg !2472
  br label %return, !dbg !2472

return:                                           ; preds = %cond.end, %if.then11, %if.then4, %if.then1
  %14 = load i32, i32* %retval, align 4, !dbg !2473
  ret i32 %14, !dbg !2473
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @close(i32 %fd) #0 !dbg !102 {
entry:
  %retval = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %f = alloca %struct.exe_file_t.17*, align 8
  %r = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !2474, metadata !DIExpression()), !dbg !2475
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %f, metadata !2476, metadata !DIExpression()), !dbg !2477
  call void @llvm.dbg.declare(metadata i32* %r, metadata !2478, metadata !DIExpression()), !dbg !2479
  store i32 0, i32* %r, align 4, !dbg !2479
  %0 = load i32, i32* @close.n_calls, align 4, !dbg !2480
  %inc = add nsw i32 %0, 1, !dbg !2480
  store i32 %inc, i32* @close.n_calls, align 4, !dbg !2480
  %1 = load i32, i32* %fd.addr, align 4, !dbg !2481
  %call = call %struct.exe_file_t.17* @__get_file(i32 %1), !dbg !2482
  store %struct.exe_file_t.17* %call, %struct.exe_file_t.17** %f, align 8, !dbg !2483
  %2 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2484
  %tobool = icmp ne %struct.exe_file_t.17* %2, null, !dbg !2484
  br i1 %tobool, label %if.end, label %if.then, !dbg !2486

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #22, !dbg !2487
  store i32 9, i32* %call1, align 4, !dbg !2489
  store i32 -1, i32* %retval, align 4, !dbg !2490
  br label %return, !dbg !2490

if.end:                                           ; preds = %entry
  %3 = load i32, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 5), align 8, !dbg !2491
  %tobool2 = icmp ne i32 %3, 0, !dbg !2493
  br i1 %tobool2, label %land.lhs.true, label %if.end5, !dbg !2494

land.lhs.true:                                    ; preds = %if.end
  %4 = load i32*, i32** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 8), align 8, !dbg !2495
  %5 = load i32, i32* %4, align 4, !dbg !2496
  %6 = load i32, i32* @close.n_calls, align 4, !dbg !2497
  %cmp = icmp eq i32 %5, %6, !dbg !2498
  br i1 %cmp, label %if.then3, label %if.end5, !dbg !2499

if.then3:                                         ; preds = %land.lhs.true
  %7 = load i32, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 5), align 8, !dbg !2500
  %dec = add i32 %7, -1, !dbg !2500
  store i32 %dec, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 5), align 8, !dbg !2500
  %call4 = call i32* @__errno_location() #22, !dbg !2502
  store i32 5, i32* %call4, align 4, !dbg !2503
  store i32 -1, i32* %retval, align 4, !dbg !2504
  br label %return, !dbg !2504

if.end5:                                          ; preds = %land.lhs.true, %if.end
  %8 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2505
  %9 = bitcast %struct.exe_file_t.17* %8 to i8*, !dbg !2506
  %10 = call i8* @memset(i8* %9, i32 0, i64 24), !dbg !2506
  %11 = load i32, i32* %r, align 4, !dbg !2507
  store i32 %11, i32* %retval, align 4, !dbg !2508
  br label %return, !dbg !2508

return:                                           ; preds = %if.end5, %if.then3, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !2509
  ret i32 %12, !dbg !2509
}

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @read(i32 %fd, i8* %buf, i64 %count) #0 !dbg !151 {
entry:
  %retval = alloca i64, align 8
  %fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %f = alloca %struct.exe_file_t.17*, align 8
  %r = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !2510, metadata !DIExpression()), !dbg !2511
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !2512, metadata !DIExpression()), !dbg !2513
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !2514, metadata !DIExpression()), !dbg !2515
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %f, metadata !2516, metadata !DIExpression()), !dbg !2517
  %0 = load i32, i32* @read.n_calls, align 4, !dbg !2518
  %inc = add nsw i32 %0, 1, !dbg !2518
  store i32 %inc, i32* @read.n_calls, align 4, !dbg !2518
  %1 = load i64, i64* %count.addr, align 8, !dbg !2519
  %cmp = icmp eq i64 %1, 0, !dbg !2521
  br i1 %cmp, label %if.then, label %if.end, !dbg !2522

if.then:                                          ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !2523
  br label %return, !dbg !2523

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !2524
  %cmp1 = icmp eq i8* %2, null, !dbg !2526
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !2527

if.then2:                                         ; preds = %if.end
  %call = call i32* @__errno_location() #22, !dbg !2528
  store i32 14, i32* %call, align 4, !dbg !2530
  store i64 -1, i64* %retval, align 8, !dbg !2531
  br label %return, !dbg !2531

if.end3:                                          ; preds = %if.end
  %3 = load i32, i32* %fd.addr, align 4, !dbg !2532
  %call4 = call %struct.exe_file_t.17* @__get_file(i32 %3), !dbg !2533
  store %struct.exe_file_t.17* %call4, %struct.exe_file_t.17** %f, align 8, !dbg !2534
  %4 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2535
  %tobool = icmp ne %struct.exe_file_t.17* %4, null, !dbg !2535
  br i1 %tobool, label %if.end7, label %if.then5, !dbg !2537

if.then5:                                         ; preds = %if.end3
  %call6 = call i32* @__errno_location() #22, !dbg !2538
  store i32 9, i32* %call6, align 4, !dbg !2540
  store i64 -1, i64* %retval, align 8, !dbg !2541
  br label %return, !dbg !2541

if.end7:                                          ; preds = %if.end3
  %5 = load i32, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 5), align 8, !dbg !2542
  %tobool8 = icmp ne i32 %5, 0, !dbg !2544
  br i1 %tobool8, label %land.lhs.true, label %if.end12, !dbg !2545

land.lhs.true:                                    ; preds = %if.end7
  %6 = load i32*, i32** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 6), align 8, !dbg !2546
  %7 = load i32, i32* %6, align 4, !dbg !2547
  %8 = load i32, i32* @read.n_calls, align 4, !dbg !2548
  %cmp9 = icmp eq i32 %7, %8, !dbg !2549
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !2550

if.then10:                                        ; preds = %land.lhs.true
  %9 = load i32, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 5), align 8, !dbg !2551
  %dec = add i32 %9, -1, !dbg !2551
  store i32 %dec, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 5), align 8, !dbg !2551
  %call11 = call i32* @__errno_location() #22, !dbg !2553
  store i32 5, i32* %call11, align 4, !dbg !2554
  store i64 -1, i64* %retval, align 8, !dbg !2555
  br label %return, !dbg !2555

if.end12:                                         ; preds = %land.lhs.true, %if.end7
  %10 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2556
  %dfile = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %10, i32 0, i32 3, !dbg !2558
  %11 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !2558
  %tobool13 = icmp ne %struct.exe_disk_file_t.16* %11, null, !dbg !2556
  br i1 %tobool13, label %if.else38, label %if.then14, !dbg !2559

if.then14:                                        ; preds = %if.end12
  call void @llvm.dbg.declare(metadata i32* %r, metadata !2560, metadata !DIExpression()), !dbg !2562
  %12 = load i8*, i8** %buf.addr, align 8, !dbg !2563
  %call15 = call i8* @__concretize_ptr(i8* %12), !dbg !2564
  store i8* %call15, i8** %buf.addr, align 8, !dbg !2565
  %13 = load i64, i64* %count.addr, align 8, !dbg !2566
  %call16 = call i64 @__concretize_size(i64 %13), !dbg !2567
  store i64 %call16, i64* %count.addr, align 8, !dbg !2568
  %14 = load i8*, i8** %buf.addr, align 8, !dbg !2569
  %15 = load i64, i64* %count.addr, align 8, !dbg !2570
  call void @klee_check_memory_access(i8* %14, i64 %15), !dbg !2571
  %16 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2572
  %fd17 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %16, i32 0, i32 0, !dbg !2574
  %17 = load i32, i32* %fd17, align 8, !dbg !2574
  %cmp18 = icmp eq i32 %17, 0, !dbg !2575
  %18 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2576
  %fd20 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %18, i32 0, i32 0, !dbg !2576
  %19 = load i32, i32* %fd20, align 8, !dbg !2576
  %20 = load i8*, i8** %buf.addr, align 8, !dbg !2576
  %21 = load i64, i64* %count.addr, align 8, !dbg !2576
  br i1 %cmp18, label %if.then19, label %if.else, !dbg !2577

if.then19:                                        ; preds = %if.then14
  %call21 = call i64 (i64, ...) @syscall(i64 0, i32 %19, i8* %20, i64 %21) #8, !dbg !2578
  %conv = trunc i64 %call21 to i32, !dbg !2578
  store i32 %conv, i32* %r, align 4, !dbg !2579
  br label %if.end25, !dbg !2580

if.else:                                          ; preds = %if.then14
  %22 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2581
  %off = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %22, i32 0, i32 2, !dbg !2582
  %23 = load i64, i64* %off, align 8, !dbg !2582
  %call23 = call i64 (i64, ...) @syscall(i64 17, i32 %19, i8* %20, i64 %21, i64 %23) #8, !dbg !2583
  %conv24 = trunc i64 %call23 to i32, !dbg !2583
  store i32 %conv24, i32* %r, align 4, !dbg !2584
  br label %if.end25

if.end25:                                         ; preds = %if.else, %if.then19
  %24 = load i32, i32* %r, align 4, !dbg !2585
  %cmp26 = icmp eq i32 %24, -1, !dbg !2587
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !2588

if.then28:                                        ; preds = %if.end25
  store i64 -1, i64* %retval, align 8, !dbg !2589
  br label %return, !dbg !2589

if.end29:                                         ; preds = %if.end25
  %25 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2590
  %fd30 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %25, i32 0, i32 0, !dbg !2592
  %26 = load i32, i32* %fd30, align 8, !dbg !2592
  %cmp31 = icmp ne i32 %26, 0, !dbg !2593
  br i1 %cmp31, label %if.then33, label %if.end36, !dbg !2594

if.then33:                                        ; preds = %if.end29
  %27 = load i32, i32* %r, align 4, !dbg !2595
  %conv34 = sext i32 %27 to i64, !dbg !2595
  %28 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2596
  %off35 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %28, i32 0, i32 2, !dbg !2597
  %29 = load i64, i64* %off35, align 8, !dbg !2598
  %add = add nsw i64 %29, %conv34, !dbg !2598
  store i64 %add, i64* %off35, align 8, !dbg !2598
  br label %if.end36, !dbg !2596

if.end36:                                         ; preds = %if.then33, %if.end29
  %30 = load i32, i32* %r, align 4, !dbg !2599
  %conv37 = sext i32 %30 to i64, !dbg !2599
  store i64 %conv37, i64* %retval, align 8, !dbg !2600
  br label %return, !dbg !2600

if.else38:                                        ; preds = %if.end12
  %31 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2601
  %off39 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %31, i32 0, i32 2, !dbg !2601
  %32 = load i64, i64* %off39, align 8, !dbg !2601
  %cmp40 = icmp sge i64 %32, 0, !dbg !2601
  br i1 %cmp40, label %if.end44, label %if.else43, !dbg !2605

if.else43:                                        ; preds = %if.else38
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.77, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4.78, i64 0, i64 0), i32 377, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__PRETTY_FUNCTION__.read, i64 0, i64 0)) #17, !dbg !2601
  unreachable, !dbg !2601

if.end44:                                         ; preds = %if.else38
  %33 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2606
  %dfile45 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %33, i32 0, i32 3, !dbg !2608
  %34 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile45, align 8, !dbg !2608
  %size = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %34, i32 0, i32 0, !dbg !2609
  %35 = load i32, i32* %size, align 8, !dbg !2609
  %conv46 = zext i32 %35 to i64, !dbg !2610
  %36 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2611
  %off47 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %36, i32 0, i32 2, !dbg !2612
  %37 = load i64, i64* %off47, align 8, !dbg !2612
  %cmp48 = icmp slt i64 %conv46, %37, !dbg !2613
  br i1 %cmp48, label %if.then50, label %if.end51, !dbg !2614

if.then50:                                        ; preds = %if.end44
  store i64 0, i64* %retval, align 8, !dbg !2615
  br label %return, !dbg !2615

if.end51:                                         ; preds = %if.end44
  %38 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2616
  %off52 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %38, i32 0, i32 2, !dbg !2618
  %39 = load i64, i64* %off52, align 8, !dbg !2618
  %40 = load i64, i64* %count.addr, align 8, !dbg !2619
  %add53 = add i64 %39, %40, !dbg !2620
  %41 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2621
  %dfile54 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %41, i32 0, i32 3, !dbg !2622
  %42 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile54, align 8, !dbg !2622
  %size55 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %42, i32 0, i32 0, !dbg !2623
  %43 = load i32, i32* %size55, align 8, !dbg !2623
  %conv56 = zext i32 %43 to i64, !dbg !2621
  %cmp57 = icmp ugt i64 %add53, %conv56, !dbg !2624
  br i1 %cmp57, label %if.then59, label %if.end64, !dbg !2625

if.then59:                                        ; preds = %if.end51
  %44 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2626
  %dfile60 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %44, i32 0, i32 3, !dbg !2628
  %45 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile60, align 8, !dbg !2628
  %size61 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %45, i32 0, i32 0, !dbg !2629
  %46 = load i32, i32* %size61, align 8, !dbg !2629
  %conv62 = zext i32 %46 to i64, !dbg !2626
  %47 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2630
  %off63 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %47, i32 0, i32 2, !dbg !2631
  %48 = load i64, i64* %off63, align 8, !dbg !2631
  %sub = sub nsw i64 %conv62, %48, !dbg !2632
  store i64 %sub, i64* %count.addr, align 8, !dbg !2633
  br label %if.end64, !dbg !2634

if.end64:                                         ; preds = %if.then59, %if.end51
  %49 = load i8*, i8** %buf.addr, align 8, !dbg !2635
  %50 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2636
  %dfile65 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %50, i32 0, i32 3, !dbg !2637
  %51 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile65, align 8, !dbg !2637
  %contents = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %51, i32 0, i32 1, !dbg !2638
  %52 = load i8*, i8** %contents, align 8, !dbg !2638
  %53 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2639
  %off66 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %53, i32 0, i32 2, !dbg !2640
  %54 = load i64, i64* %off66, align 8, !dbg !2640
  %add.ptr = getelementptr inbounds i8, i8* %52, i64 %54, !dbg !2641
  %55 = load i64, i64* %count.addr, align 8, !dbg !2642
  %56 = call i8* @memcpy(i8* %49, i8* %add.ptr, i64 %55), !dbg !2643
  %57 = load i64, i64* %count.addr, align 8, !dbg !2644
  %58 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2645
  %off67 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %58, i32 0, i32 2, !dbg !2646
  %59 = load i64, i64* %off67, align 8, !dbg !2647
  %add68 = add i64 %59, %57, !dbg !2647
  store i64 %add68, i64* %off67, align 8, !dbg !2647
  %60 = load i64, i64* %count.addr, align 8, !dbg !2648
  store i64 %60, i64* %retval, align 8, !dbg !2649
  br label %return, !dbg !2649

return:                                           ; preds = %if.end64, %if.then50, %if.end36, %if.then28, %if.then10, %if.then5, %if.then2, %if.then
  %61 = load i64, i64* %retval, align 8, !dbg !2650
  ret i64 %61, !dbg !2650
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @__concretize_size(i64 %s) #0 !dbg !2651 {
entry:
  %s.addr = alloca i64, align 8
  %sc = alloca i64, align 8
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !2654, metadata !DIExpression()), !dbg !2655
  call void @llvm.dbg.declare(metadata i64* %sc, metadata !2656, metadata !DIExpression()), !dbg !2657
  %0 = load i64, i64* %s.addr, align 8, !dbg !2658
  %call = call i64 @klee_get_valuel(i64 %0), !dbg !2659
  store i64 %call, i64* %sc, align 8, !dbg !2657
  %1 = load i64, i64* %sc, align 8, !dbg !2660
  %2 = load i64, i64* %s.addr, align 8, !dbg !2661
  %cmp = icmp eq i64 %1, %2, !dbg !2662
  %conv = zext i1 %cmp to i32, !dbg !2662
  %conv1 = sext i32 %conv to i64, !dbg !2660
  call void @klee_assume(i64 %conv1), !dbg !2663
  %3 = load i64, i64* %sc, align 8, !dbg !2664
  ret i64 %3, !dbg !2665
}

declare dso_local void @klee_check_memory_access(i8*, i64) #4

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @write(i32 %fd, i8* %buf, i64 %count) #0 !dbg !160 {
entry:
  %retval = alloca i64, align 8
  %fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %f = alloca %struct.exe_file_t.17*, align 8
  %r = alloca i32, align 4
  %actual_count = alloca i64, align 8
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !2666, metadata !DIExpression()), !dbg !2667
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !2668, metadata !DIExpression()), !dbg !2669
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !2670, metadata !DIExpression()), !dbg !2671
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %f, metadata !2672, metadata !DIExpression()), !dbg !2673
  %0 = load i32, i32* @write.n_calls, align 4, !dbg !2674
  %inc = add nsw i32 %0, 1, !dbg !2674
  store i32 %inc, i32* @write.n_calls, align 4, !dbg !2674
  %1 = load i32, i32* %fd.addr, align 4, !dbg !2675
  %call = call %struct.exe_file_t.17* @__get_file(i32 %1), !dbg !2676
  store %struct.exe_file_t.17* %call, %struct.exe_file_t.17** %f, align 8, !dbg !2677
  %2 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2678
  %tobool = icmp ne %struct.exe_file_t.17* %2, null, !dbg !2678
  br i1 %tobool, label %if.end, label %if.then, !dbg !2680

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #22, !dbg !2681
  store i32 9, i32* %call1, align 4, !dbg !2683
  store i64 -1, i64* %retval, align 8, !dbg !2684
  br label %return, !dbg !2684

if.end:                                           ; preds = %entry
  %3 = load i32, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 5), align 8, !dbg !2685
  %tobool2 = icmp ne i32 %3, 0, !dbg !2687
  br i1 %tobool2, label %land.lhs.true, label %if.end5, !dbg !2688

land.lhs.true:                                    ; preds = %if.end
  %4 = load i32*, i32** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 7), align 8, !dbg !2689
  %5 = load i32, i32* %4, align 4, !dbg !2690
  %6 = load i32, i32* @write.n_calls, align 4, !dbg !2691
  %cmp = icmp eq i32 %5, %6, !dbg !2692
  br i1 %cmp, label %if.then3, label %if.end5, !dbg !2693

if.then3:                                         ; preds = %land.lhs.true
  %7 = load i32, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 5), align 8, !dbg !2694
  %dec = add i32 %7, -1, !dbg !2694
  store i32 %dec, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 5), align 8, !dbg !2694
  %call4 = call i32* @__errno_location() #22, !dbg !2696
  store i32 5, i32* %call4, align 4, !dbg !2697
  store i64 -1, i64* %retval, align 8, !dbg !2698
  br label %return, !dbg !2698

if.end5:                                          ; preds = %land.lhs.true, %if.end
  %8 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2699
  %dfile = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %8, i32 0, i32 3, !dbg !2701
  %9 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !2701
  %tobool6 = icmp ne %struct.exe_disk_file_t.16* %9, null, !dbg !2699
  br i1 %tobool6, label %if.else42, label %if.then7, !dbg !2702

if.then7:                                         ; preds = %if.end5
  call void @llvm.dbg.declare(metadata i32* %r, metadata !2703, metadata !DIExpression()), !dbg !2705
  %10 = load i8*, i8** %buf.addr, align 8, !dbg !2706
  %call8 = call i8* @__concretize_ptr(i8* %10), !dbg !2707
  store i8* %call8, i8** %buf.addr, align 8, !dbg !2708
  %11 = load i64, i64* %count.addr, align 8, !dbg !2709
  %call9 = call i64 @__concretize_size(i64 %11), !dbg !2710
  store i64 %call9, i64* %count.addr, align 8, !dbg !2711
  %12 = load i8*, i8** %buf.addr, align 8, !dbg !2712
  %13 = load i64, i64* %count.addr, align 8, !dbg !2713
  call void @klee_check_memory_access(i8* %12, i64 %13), !dbg !2714
  %14 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2715
  %fd10 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %14, i32 0, i32 0, !dbg !2717
  %15 = load i32, i32* %fd10, align 8, !dbg !2717
  %cmp11 = icmp eq i32 %15, 1, !dbg !2718
  br i1 %cmp11, label %if.then14, label %lor.lhs.false, !dbg !2719

lor.lhs.false:                                    ; preds = %if.then7
  %16 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2720
  %fd12 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %16, i32 0, i32 0, !dbg !2721
  %17 = load i32, i32* %fd12, align 8, !dbg !2721
  %cmp13 = icmp eq i32 %17, 2, !dbg !2722
  br i1 %cmp13, label %if.then14, label %if.else, !dbg !2723

if.then14:                                        ; preds = %lor.lhs.false, %if.then7
  %18 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2724
  %fd15 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %18, i32 0, i32 0, !dbg !2725
  %19 = load i32, i32* %fd15, align 8, !dbg !2725
  %20 = load i8*, i8** %buf.addr, align 8, !dbg !2726
  %21 = load i64, i64* %count.addr, align 8, !dbg !2727
  %call16 = call i64 (i64, ...) @syscall(i64 1, i32 %19, i8* %20, i64 %21) #8, !dbg !2728
  %conv = trunc i64 %call16 to i32, !dbg !2728
  store i32 %conv, i32* %r, align 4, !dbg !2729
  br label %if.end20, !dbg !2730

if.else:                                          ; preds = %lor.lhs.false
  %22 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2731
  %fd17 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %22, i32 0, i32 0, !dbg !2732
  %23 = load i32, i32* %fd17, align 8, !dbg !2732
  %24 = load i8*, i8** %buf.addr, align 8, !dbg !2733
  %25 = load i64, i64* %count.addr, align 8, !dbg !2734
  %26 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2735
  %off = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %26, i32 0, i32 2, !dbg !2736
  %27 = load i64, i64* %off, align 8, !dbg !2736
  %call18 = call i64 (i64, ...) @syscall(i64 18, i32 %23, i8* %24, i64 %25, i64 %27) #8, !dbg !2737
  %conv19 = trunc i64 %call18 to i32, !dbg !2737
  store i32 %conv19, i32* %r, align 4, !dbg !2738
  br label %if.end20

if.end20:                                         ; preds = %if.else, %if.then14
  %28 = load i32, i32* %r, align 4, !dbg !2739
  %cmp21 = icmp eq i32 %28, -1, !dbg !2741
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !2742

if.then23:                                        ; preds = %if.end20
  store i64 -1, i64* %retval, align 8, !dbg !2743
  br label %return, !dbg !2743

if.end24:                                         ; preds = %if.end20
  %29 = load i32, i32* %r, align 4, !dbg !2744
  %cmp25 = icmp sge i32 %29, 0, !dbg !2744
  br i1 %cmp25, label %if.end29, label %if.else28, !dbg !2747

if.else28:                                        ; preds = %if.end24
  call void @__assert_fail(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5.81, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4.78, i64 0, i64 0), i32 429, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @__PRETTY_FUNCTION__.write, i64 0, i64 0)) #17, !dbg !2744
  unreachable, !dbg !2744

if.end29:                                         ; preds = %if.end24
  %30 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2748
  %fd30 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %30, i32 0, i32 0, !dbg !2750
  %31 = load i32, i32* %fd30, align 8, !dbg !2750
  %cmp31 = icmp ne i32 %31, 1, !dbg !2751
  br i1 %cmp31, label %land.lhs.true33, label %if.end40, !dbg !2752

land.lhs.true33:                                  ; preds = %if.end29
  %32 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2753
  %fd34 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %32, i32 0, i32 0, !dbg !2754
  %33 = load i32, i32* %fd34, align 8, !dbg !2754
  %cmp35 = icmp ne i32 %33, 2, !dbg !2755
  br i1 %cmp35, label %if.then37, label %if.end40, !dbg !2756

if.then37:                                        ; preds = %land.lhs.true33
  %34 = load i32, i32* %r, align 4, !dbg !2757
  %conv38 = sext i32 %34 to i64, !dbg !2757
  %35 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2758
  %off39 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %35, i32 0, i32 2, !dbg !2759
  %36 = load i64, i64* %off39, align 8, !dbg !2760
  %add = add nsw i64 %36, %conv38, !dbg !2760
  store i64 %add, i64* %off39, align 8, !dbg !2760
  br label %if.end40, !dbg !2758

if.end40:                                         ; preds = %if.then37, %land.lhs.true33, %if.end29
  %37 = load i32, i32* %r, align 4, !dbg !2761
  %conv41 = sext i32 %37 to i64, !dbg !2761
  store i64 %conv41, i64* %retval, align 8, !dbg !2762
  br label %return, !dbg !2762

if.else42:                                        ; preds = %if.end5
  call void @llvm.dbg.declare(metadata i64* %actual_count, metadata !2763, metadata !DIExpression()), !dbg !2765
  store i64 0, i64* %actual_count, align 8, !dbg !2765
  %38 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2766
  %off43 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %38, i32 0, i32 2, !dbg !2768
  %39 = load i64, i64* %off43, align 8, !dbg !2768
  %40 = load i64, i64* %count.addr, align 8, !dbg !2769
  %add44 = add i64 %39, %40, !dbg !2770
  %41 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2771
  %dfile45 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %41, i32 0, i32 3, !dbg !2772
  %42 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile45, align 8, !dbg !2772
  %size = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %42, i32 0, i32 0, !dbg !2773
  %43 = load i32, i32* %size, align 8, !dbg !2773
  %conv46 = zext i32 %43 to i64, !dbg !2771
  %cmp47 = icmp ule i64 %add44, %conv46, !dbg !2774
  br i1 %cmp47, label %if.then49, label %if.else50, !dbg !2775

if.then49:                                        ; preds = %if.else42
  %44 = load i64, i64* %count.addr, align 8, !dbg !2776
  store i64 %44, i64* %actual_count, align 8, !dbg !2777
  br label %if.end67, !dbg !2778

if.else50:                                        ; preds = %if.else42
  %45 = load i32, i32* getelementptr inbounds (%struct.exe_sym_env_t.19, %struct.exe_sym_env_t.19* bitcast ({ <{ %struct.exe_file_t.17, %struct.exe_file_t.17, %struct.exe_file_t.17, [29 x %struct.exe_file_t.17] }>, i32, i32, i32, [4 x i8] }* @__exe_env to %struct.exe_sym_env_t.19*), i32 0, i32 3), align 8, !dbg !2779
  %tobool51 = icmp ne i32 %45, 0, !dbg !2782
  br i1 %tobool51, label %if.then52, label %if.else53, !dbg !2783

if.then52:                                        ; preds = %if.else50
  call void @__assert_fail(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.82, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4.78, i64 0, i64 0), i32 442, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @__PRETTY_FUNCTION__.write, i64 0, i64 0)) #17, !dbg !2784
  unreachable, !dbg !2784

if.else53:                                        ; preds = %if.else50
  %46 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2787
  %off54 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %46, i32 0, i32 2, !dbg !2790
  %47 = load i64, i64* %off54, align 8, !dbg !2790
  %48 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2791
  %dfile55 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %48, i32 0, i32 3, !dbg !2792
  %49 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile55, align 8, !dbg !2792
  %size56 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %49, i32 0, i32 0, !dbg !2793
  %50 = load i32, i32* %size56, align 8, !dbg !2793
  %conv57 = zext i32 %50 to i64, !dbg !2794
  %cmp58 = icmp slt i64 %47, %conv57, !dbg !2795
  br i1 %cmp58, label %if.then60, label %if.end67, !dbg !2796

if.then60:                                        ; preds = %if.else53
  %51 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2797
  %dfile61 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %51, i32 0, i32 3, !dbg !2798
  %52 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile61, align 8, !dbg !2798
  %size62 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %52, i32 0, i32 0, !dbg !2799
  %53 = load i32, i32* %size62, align 8, !dbg !2799
  %conv63 = zext i32 %53 to i64, !dbg !2797
  %54 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2800
  %off64 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %54, i32 0, i32 2, !dbg !2801
  %55 = load i64, i64* %off64, align 8, !dbg !2801
  %sub = sub nsw i64 %conv63, %55, !dbg !2802
  store i64 %sub, i64* %actual_count, align 8, !dbg !2803
  br label %if.end67, !dbg !2804

if.end67:                                         ; preds = %if.then60, %if.else53, %if.then49
  %56 = load i64, i64* %actual_count, align 8, !dbg !2805
  %tobool68 = icmp ne i64 %56, 0, !dbg !2805
  br i1 %tobool68, label %if.then69, label %if.end72, !dbg !2807

if.then69:                                        ; preds = %if.end67
  %57 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2808
  %dfile70 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %57, i32 0, i32 3, !dbg !2809
  %58 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile70, align 8, !dbg !2809
  %contents = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %58, i32 0, i32 1, !dbg !2810
  %59 = load i8*, i8** %contents, align 8, !dbg !2810
  %60 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2811
  %off71 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %60, i32 0, i32 2, !dbg !2812
  %61 = load i64, i64* %off71, align 8, !dbg !2812
  %add.ptr = getelementptr inbounds i8, i8* %59, i64 %61, !dbg !2813
  %62 = load i8*, i8** %buf.addr, align 8, !dbg !2814
  %63 = load i64, i64* %actual_count, align 8, !dbg !2815
  %64 = call i8* @memcpy(i8* %add.ptr, i8* %62, i64 %63), !dbg !2816
  br label %if.end72, !dbg !2816

if.end72:                                         ; preds = %if.then69, %if.end67
  %65 = load i64, i64* %count.addr, align 8, !dbg !2817
  %66 = load i64, i64* %actual_count, align 8, !dbg !2819
  %cmp73 = icmp ne i64 %65, %66, !dbg !2820
  br i1 %cmp73, label %if.then75, label %if.end76, !dbg !2821

if.then75:                                        ; preds = %if.end72
  call void @klee_warning(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.83, i64 0, i64 0)), !dbg !2822
  br label %if.end76, !dbg !2822

if.end76:                                         ; preds = %if.then75, %if.end72
  %67 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2823
  %dfile77 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %67, i32 0, i32 3, !dbg !2825
  %68 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile77, align 8, !dbg !2825
  %69 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 2), align 8, !dbg !2826
  %cmp78 = icmp eq %struct.exe_disk_file_t.16* %68, %69, !dbg !2827
  br i1 %cmp78, label %if.then80, label %if.end84, !dbg !2828

if.then80:                                        ; preds = %if.end76
  %70 = load i64, i64* %actual_count, align 8, !dbg !2829
  %71 = load i32, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 3), align 8, !dbg !2830
  %conv81 = zext i32 %71 to i64, !dbg !2830
  %add82 = add i64 %conv81, %70, !dbg !2830
  %conv83 = trunc i64 %add82 to i32, !dbg !2830
  store i32 %conv83, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 3), align 8, !dbg !2830
  br label %if.end84, !dbg !2831

if.end84:                                         ; preds = %if.then80, %if.end76
  %72 = load i64, i64* %count.addr, align 8, !dbg !2832
  %73 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2833
  %off85 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %73, i32 0, i32 2, !dbg !2834
  %74 = load i64, i64* %off85, align 8, !dbg !2835
  %add86 = add i64 %74, %72, !dbg !2835
  store i64 %add86, i64* %off85, align 8, !dbg !2835
  %75 = load i64, i64* %count.addr, align 8, !dbg !2836
  store i64 %75, i64* %retval, align 8, !dbg !2837
  br label %return, !dbg !2837

return:                                           ; preds = %if.end84, %if.end40, %if.then23, %if.then3, %if.then
  %76 = load i64, i64* %retval, align 8, !dbg !2838
  ret i64 %76, !dbg !2838
}

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @__fd_lseek(i32 %fd, i64 %offset, i32 %whence) #0 !dbg !2839 {
entry:
  %retval = alloca i64, align 8
  %fd.addr = alloca i32, align 4
  %offset.addr = alloca i64, align 8
  %whence.addr = alloca i32, align 4
  %new_off = alloca i64, align 8
  %f = alloca %struct.exe_file_t.17*, align 8
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !2842, metadata !DIExpression()), !dbg !2843
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !2844, metadata !DIExpression()), !dbg !2845
  store i32 %whence, i32* %whence.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %whence.addr, metadata !2846, metadata !DIExpression()), !dbg !2847
  call void @llvm.dbg.declare(metadata i64* %new_off, metadata !2848, metadata !DIExpression()), !dbg !2849
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %f, metadata !2850, metadata !DIExpression()), !dbg !2851
  %0 = load i32, i32* %fd.addr, align 4, !dbg !2852
  %call = call %struct.exe_file_t.17* @__get_file(i32 %0), !dbg !2853
  store %struct.exe_file_t.17* %call, %struct.exe_file_t.17** %f, align 8, !dbg !2851
  %1 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2854
  %tobool = icmp ne %struct.exe_file_t.17* %1, null, !dbg !2854
  br i1 %tobool, label %if.end, label %if.then, !dbg !2856

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #22, !dbg !2857
  store i32 9, i32* %call1, align 4, !dbg !2859
  store i64 -1, i64* %retval, align 8, !dbg !2860
  br label %return, !dbg !2860

if.end:                                           ; preds = %entry
  %2 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2861
  %dfile = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %2, i32 0, i32 3, !dbg !2863
  %3 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !2863
  %tobool2 = icmp ne %struct.exe_disk_file_t.16* %3, null, !dbg !2861
  %4 = load i32, i32* %whence.addr, align 4, !dbg !2864
  br i1 %tobool2, label %if.end24, label %if.then3, !dbg !2865

if.then3:                                         ; preds = %if.end
  %cmp = icmp eq i32 %4, 0, !dbg !2866
  %5 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2869
  %fd5 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %5, i32 0, i32 0, !dbg !2869
  %6 = load i32, i32* %fd5, align 8, !dbg !2869
  br i1 %cmp, label %if.then4, label %if.else, !dbg !2870

if.then4:                                         ; preds = %if.then3
  %7 = load i64, i64* %offset.addr, align 8, !dbg !2871
  %call6 = call i64 (i64, ...) @syscall(i64 8, i32 %6, i64 %7, i32 0) #8, !dbg !2873
  store i64 %call6, i64* %new_off, align 8, !dbg !2874
  br label %if.end19, !dbg !2875

if.else:                                          ; preds = %if.then3
  %8 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2876
  %off = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %8, i32 0, i32 2, !dbg !2878
  %9 = load i64, i64* %off, align 8, !dbg !2878
  %call8 = call i64 (i64, ...) @syscall(i64 8, i32 %6, i64 %9, i32 0) #8, !dbg !2879
  store i64 %call8, i64* %new_off, align 8, !dbg !2880
  %10 = load i64, i64* %new_off, align 8, !dbg !2881
  %cmp9 = icmp ne i64 %10, -1, !dbg !2883
  br i1 %cmp9, label %if.then10, label %if.end19, !dbg !2884

if.then10:                                        ; preds = %if.else
  %11 = load i64, i64* %new_off, align 8, !dbg !2885
  %12 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2885
  %off11 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %12, i32 0, i32 2, !dbg !2885
  %13 = load i64, i64* %off11, align 8, !dbg !2885
  %cmp12 = icmp eq i64 %11, %13, !dbg !2885
  br i1 %cmp12, label %if.end15, label %if.else14, !dbg !2889

if.else14:                                        ; preds = %if.then10
  call void @__assert_fail(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8.86, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4.78, i64 0, i64 0), i32 488, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @__PRETTY_FUNCTION__.__fd_lseek, i64 0, i64 0)) #17, !dbg !2885
  unreachable, !dbg !2885

if.end15:                                         ; preds = %if.then10
  %14 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2890
  %fd16 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %14, i32 0, i32 0, !dbg !2891
  %15 = load i32, i32* %fd16, align 8, !dbg !2891
  %16 = load i64, i64* %offset.addr, align 8, !dbg !2892
  %17 = load i32, i32* %whence.addr, align 4, !dbg !2893
  %call17 = call i64 (i64, ...) @syscall(i64 8, i32 %15, i64 %16, i32 %17) #8, !dbg !2894
  store i64 %call17, i64* %new_off, align 8, !dbg !2895
  br label %if.end19, !dbg !2896

if.end19:                                         ; preds = %if.else, %if.end15, %if.then4
  %18 = load i64, i64* %new_off, align 8, !dbg !2897
  %cmp20 = icmp eq i64 %18, -1, !dbg !2899
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !2900

if.then21:                                        ; preds = %if.end19
  store i64 -1, i64* %retval, align 8, !dbg !2901
  br label %return, !dbg !2901

if.end22:                                         ; preds = %if.end19
  %19 = load i64, i64* %new_off, align 8, !dbg !2902
  %20 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2903
  %off23 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %20, i32 0, i32 2, !dbg !2904
  store i64 %19, i64* %off23, align 8, !dbg !2905
  %21 = load i64, i64* %new_off, align 8, !dbg !2906
  store i64 %21, i64* %retval, align 8, !dbg !2907
  br label %return, !dbg !2907

if.end24:                                         ; preds = %if.end
  switch i32 %4, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb25
    i32 2, label %sw.bb27
  ], !dbg !2908

sw.bb:                                            ; preds = %if.end24
  %22 = load i64, i64* %offset.addr, align 8, !dbg !2909
  store i64 %22, i64* %new_off, align 8, !dbg !2911
  br label %sw.epilog, !dbg !2912

sw.bb25:                                          ; preds = %if.end24
  %23 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2913
  %off26 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %23, i32 0, i32 2, !dbg !2914
  %24 = load i64, i64* %off26, align 8, !dbg !2914
  %25 = load i64, i64* %offset.addr, align 8, !dbg !2915
  %add = add nsw i64 %24, %25, !dbg !2916
  store i64 %add, i64* %new_off, align 8, !dbg !2917
  br label %sw.epilog, !dbg !2918

sw.bb27:                                          ; preds = %if.end24
  %26 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2919
  %dfile28 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %26, i32 0, i32 3, !dbg !2920
  %27 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile28, align 8, !dbg !2920
  %size = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %27, i32 0, i32 0, !dbg !2921
  %28 = load i32, i32* %size, align 8, !dbg !2921
  %conv = zext i32 %28 to i64, !dbg !2919
  %29 = load i64, i64* %offset.addr, align 8, !dbg !2922
  %add29 = add nsw i64 %conv, %29, !dbg !2923
  store i64 %add29, i64* %new_off, align 8, !dbg !2924
  br label %sw.epilog, !dbg !2925

sw.default:                                       ; preds = %if.end24
  %call30 = call i32* @__errno_location() #22, !dbg !2926
  store i32 22, i32* %call30, align 4, !dbg !2928
  store i64 -1, i64* %retval, align 8, !dbg !2929
  br label %return, !dbg !2929

sw.epilog:                                        ; preds = %sw.bb27, %sw.bb25, %sw.bb
  %30 = load i64, i64* %new_off, align 8, !dbg !2930
  %cmp31 = icmp slt i64 %30, 0, !dbg !2932
  br i1 %cmp31, label %if.then33, label %if.end35, !dbg !2933

if.then33:                                        ; preds = %sw.epilog
  %call34 = call i32* @__errno_location() #22, !dbg !2934
  store i32 22, i32* %call34, align 4, !dbg !2936
  store i64 -1, i64* %retval, align 8, !dbg !2937
  br label %return, !dbg !2937

if.end35:                                         ; preds = %sw.epilog
  %31 = load i64, i64* %new_off, align 8, !dbg !2938
  %32 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2939
  %off36 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %32, i32 0, i32 2, !dbg !2940
  store i64 %31, i64* %off36, align 8, !dbg !2941
  %33 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2942
  %off37 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %33, i32 0, i32 2, !dbg !2943
  %34 = load i64, i64* %off37, align 8, !dbg !2943
  store i64 %34, i64* %retval, align 8, !dbg !2944
  br label %return, !dbg !2944

return:                                           ; preds = %if.end35, %if.then33, %sw.default, %if.end22, %if.then21, %if.then
  %35 = load i64, i64* %retval, align 8, !dbg !2945
  ret i64 %35, !dbg !2945
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @__fd_stat(i8* %path, %struct.stat64.15* %buf) #0 !dbg !2946 {
entry:
  %retval = alloca i32, align 4
  %path.addr = alloca i8*, align 8
  %buf.addr = alloca %struct.stat64.15*, align 8
  %dfile = alloca %struct.exe_disk_file_t.16*, align 8
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !2949, metadata !DIExpression()), !dbg !2950
  store %struct.stat64.15* %buf, %struct.stat64.15** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat64.15** %buf.addr, metadata !2951, metadata !DIExpression()), !dbg !2952
  call void @llvm.dbg.declare(metadata %struct.exe_disk_file_t.16** %dfile, metadata !2953, metadata !DIExpression()), !dbg !2954
  %0 = load i8*, i8** %path.addr, align 8, !dbg !2955
  %call = call %struct.exe_disk_file_t.16* @__get_sym_file(i8* %0), !dbg !2956
  store %struct.exe_disk_file_t.16* %call, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !2954
  %1 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !2957
  %tobool = icmp ne %struct.exe_disk_file_t.16* %1, null, !dbg !2957
  br i1 %tobool, label %if.then, label %if.end, !dbg !2959

if.then:                                          ; preds = %entry
  %2 = load %struct.stat64.15*, %struct.stat64.15** %buf.addr, align 8, !dbg !2960
  %3 = bitcast %struct.stat64.15* %2 to i8*, !dbg !2962
  %4 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !2963
  %stat = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %4, i32 0, i32 2, !dbg !2964
  %5 = load %struct.stat64.15*, %struct.stat64.15** %stat, align 8, !dbg !2964
  %6 = bitcast %struct.stat64.15* %5 to i8*, !dbg !2962
  %7 = call i8* @memcpy(i8* %3, i8* %6, i64 144), !dbg !2962
  store i32 0, i32* %retval, align 4, !dbg !2965
  br label %return, !dbg !2965

if.end:                                           ; preds = %entry
  %8 = load i8*, i8** %path.addr, align 8, !dbg !2966
  %call1 = call i8* @__concretize_string(i8* %8), !dbg !2968
  %9 = load %struct.stat64.15*, %struct.stat64.15** %buf.addr, align 8, !dbg !2969
  %call2 = call i64 (i64, ...) @syscall(i64 4, i8* %call1, %struct.stat64.15* %9) #8, !dbg !2970
  %conv = trunc i64 %call2 to i32, !dbg !2970
  store i32 %conv, i32* %retval, align 4, !dbg !2971
  br label %return, !dbg !2971

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !2972
  ret i32 %10, !dbg !2972
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @fstatat(i32 %fd, i8* nonnull %path, %struct.stat64.15* nonnull %buf, i32 %flags) #0 !dbg !2973 {
entry:
  %retval = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %path.addr = alloca i8*, align 8
  %buf.addr = alloca %struct.stat64.15*, align 8
  %flags.addr = alloca i32, align 4
  %f = alloca %struct.exe_file_t.17*, align 8
  %dfile9 = alloca %struct.exe_disk_file_t.16*, align 8
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !2976, metadata !DIExpression()), !dbg !2977
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !2978, metadata !DIExpression()), !dbg !2979
  store %struct.stat64.15* %buf, %struct.stat64.15** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat64.15** %buf.addr, metadata !2980, metadata !DIExpression()), !dbg !2981
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !2982, metadata !DIExpression()), !dbg !2983
  %0 = load i32, i32* %fd.addr, align 4, !dbg !2984
  %cmp = icmp ne i32 %0, -100, !dbg !2986
  br i1 %cmp, label %if.then, label %if.end8, !dbg !2987

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %f, metadata !2988, metadata !DIExpression()), !dbg !2990
  %1 = load i32, i32* %fd.addr, align 4, !dbg !2991
  %call = call %struct.exe_file_t.17* @__get_file(i32 %1), !dbg !2992
  store %struct.exe_file_t.17* %call, %struct.exe_file_t.17** %f, align 8, !dbg !2990
  %2 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !2993
  %tobool = icmp ne %struct.exe_file_t.17* %2, null, !dbg !2993
  br i1 %tobool, label %if.else, label %if.then1, !dbg !2995

if.then1:                                         ; preds = %if.then
  %call2 = call i32* @__errno_location() #22, !dbg !2996
  store i32 9, i32* %call2, align 4, !dbg !2998
  store i32 -1, i32* %retval, align 4, !dbg !2999
  br label %return, !dbg !2999

if.else:                                          ; preds = %if.then
  %3 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !3000
  %dfile = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %3, i32 0, i32 3, !dbg !3002
  %4 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !3002
  %tobool3 = icmp ne %struct.exe_disk_file_t.16* %4, null, !dbg !3000
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !3003

if.then4:                                         ; preds = %if.else
  call void @klee_warning(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2.74, i64 0, i64 0)), !dbg !3004
  %call5 = call i32* @__errno_location() #22, !dbg !3006
  store i32 2, i32* %call5, align 4, !dbg !3007
  store i32 -1, i32* %retval, align 4, !dbg !3008
  br label %return, !dbg !3008

if.end6:                                          ; preds = %if.else
  %5 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !3009
  %fd7 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %5, i32 0, i32 0, !dbg !3010
  %6 = load i32, i32* %fd7, align 8, !dbg !3010
  store i32 %6, i32* %fd.addr, align 4, !dbg !3011
  br label %if.end8, !dbg !3012

if.end8:                                          ; preds = %if.end6, %entry
  call void @llvm.dbg.declare(metadata %struct.exe_disk_file_t.16** %dfile9, metadata !3013, metadata !DIExpression()), !dbg !3014
  %7 = load i8*, i8** %path.addr, align 8, !dbg !3015
  %call10 = call %struct.exe_disk_file_t.16* @__get_sym_file(i8* %7), !dbg !3016
  store %struct.exe_disk_file_t.16* %call10, %struct.exe_disk_file_t.16** %dfile9, align 8, !dbg !3014
  %8 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile9, align 8, !dbg !3017
  %tobool11 = icmp ne %struct.exe_disk_file_t.16* %8, null, !dbg !3017
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !3019

if.then12:                                        ; preds = %if.end8
  %9 = load %struct.stat64.15*, %struct.stat64.15** %buf.addr, align 8, !dbg !3020
  %10 = bitcast %struct.stat64.15* %9 to i8*, !dbg !3022
  %11 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile9, align 8, !dbg !3023
  %stat = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %11, i32 0, i32 2, !dbg !3024
  %12 = load %struct.stat64.15*, %struct.stat64.15** %stat, align 8, !dbg !3024
  %13 = bitcast %struct.stat64.15* %12 to i8*, !dbg !3022
  %14 = call i8* @memcpy(i8* %10, i8* %13, i64 144), !dbg !3022
  store i32 0, i32* %retval, align 4, !dbg !3025
  br label %return, !dbg !3025

if.end13:                                         ; preds = %if.end8
  %15 = load i32, i32* %fd.addr, align 4, !dbg !3026
  %conv = sext i32 %15 to i64, !dbg !3027
  %16 = load i8*, i8** %path.addr, align 8, !dbg !3028
  %tobool14 = icmp ne i8* %16, null, !dbg !3028
  br i1 %tobool14, label %cond.true, label %cond.end, !dbg !3028

cond.true:                                        ; preds = %if.end13
  %17 = load i8*, i8** %path.addr, align 8, !dbg !3029
  %call15 = call i8* @__concretize_string(i8* %17), !dbg !3030
  br label %cond.end, !dbg !3028

cond.end:                                         ; preds = %if.end13, %cond.true
  %cond = phi i8* [ %call15, %cond.true ], [ null, %if.end13 ], !dbg !3028
  %18 = load %struct.stat64.15*, %struct.stat64.15** %buf.addr, align 8, !dbg !3031
  %19 = load i32, i32* %flags.addr, align 4, !dbg !3032
  %conv16 = sext i32 %19 to i64, !dbg !3033
  %call17 = call i64 (i64, ...) @syscall(i64 262, i64 %conv, i8* %cond, %struct.stat64.15* %18, i64 %conv16) #8, !dbg !3034
  %conv18 = trunc i64 %call17 to i32, !dbg !3034
  store i32 %conv18, i32* %retval, align 4, !dbg !3035
  br label %return, !dbg !3035

return:                                           ; preds = %cond.end, %if.then12, %if.then4, %if.then1
  %20 = load i32, i32* %retval, align 4, !dbg !3036
  ret i32 %20, !dbg !3036
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @__fd_lstat(i8* %path, %struct.stat64.15* %buf) #0 !dbg !3037 {
entry:
  %retval = alloca i32, align 4
  %path.addr = alloca i8*, align 8
  %buf.addr = alloca %struct.stat64.15*, align 8
  %dfile = alloca %struct.exe_disk_file_t.16*, align 8
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !3038, metadata !DIExpression()), !dbg !3039
  store %struct.stat64.15* %buf, %struct.stat64.15** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat64.15** %buf.addr, metadata !3040, metadata !DIExpression()), !dbg !3041
  call void @llvm.dbg.declare(metadata %struct.exe_disk_file_t.16** %dfile, metadata !3042, metadata !DIExpression()), !dbg !3043
  %0 = load i8*, i8** %path.addr, align 8, !dbg !3044
  %call = call %struct.exe_disk_file_t.16* @__get_sym_file(i8* %0), !dbg !3045
  store %struct.exe_disk_file_t.16* %call, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !3043
  %1 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !3046
  %tobool = icmp ne %struct.exe_disk_file_t.16* %1, null, !dbg !3046
  br i1 %tobool, label %if.then, label %if.end, !dbg !3048

if.then:                                          ; preds = %entry
  %2 = load %struct.stat64.15*, %struct.stat64.15** %buf.addr, align 8, !dbg !3049
  %3 = bitcast %struct.stat64.15* %2 to i8*, !dbg !3051
  %4 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !3052
  %stat = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %4, i32 0, i32 2, !dbg !3053
  %5 = load %struct.stat64.15*, %struct.stat64.15** %stat, align 8, !dbg !3053
  %6 = bitcast %struct.stat64.15* %5 to i8*, !dbg !3051
  %7 = call i8* @memcpy(i8* %3, i8* %6, i64 144), !dbg !3051
  store i32 0, i32* %retval, align 4, !dbg !3054
  br label %return, !dbg !3054

if.end:                                           ; preds = %entry
  %8 = load i8*, i8** %path.addr, align 8, !dbg !3055
  %call1 = call i8* @__concretize_string(i8* %8), !dbg !3057
  %9 = load %struct.stat64.15*, %struct.stat64.15** %buf.addr, align 8, !dbg !3058
  %call2 = call i64 (i64, ...) @syscall(i64 6, i8* %call1, %struct.stat64.15* %9) #8, !dbg !3059
  %conv = trunc i64 %call2 to i32, !dbg !3059
  store i32 %conv, i32* %retval, align 4, !dbg !3060
  br label %return, !dbg !3060

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !3061
  ret i32 %10, !dbg !3061
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @chdir(i8* nonnull %path) #0 !dbg !3062 {
entry:
  %retval = alloca i32, align 4
  %path.addr = alloca i8*, align 8
  %dfile = alloca %struct.exe_disk_file_t.16*, align 8
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !3065, metadata !DIExpression()), !dbg !3066
  call void @llvm.dbg.declare(metadata %struct.exe_disk_file_t.16** %dfile, metadata !3067, metadata !DIExpression()), !dbg !3068
  %0 = load i8*, i8** %path.addr, align 8, !dbg !3069
  %call = call %struct.exe_disk_file_t.16* @__get_sym_file(i8* %0), !dbg !3070
  store %struct.exe_disk_file_t.16* %call, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !3068
  %1 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !3071
  %tobool = icmp ne %struct.exe_disk_file_t.16* %1, null, !dbg !3071
  br i1 %tobool, label %if.then, label %if.end, !dbg !3073

if.then:                                          ; preds = %entry
  call void @klee_warning(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.91, i64 0, i64 0)), !dbg !3074
  %call1 = call i32* @__errno_location() #22, !dbg !3076
  store i32 2, i32* %call1, align 4, !dbg !3077
  store i32 -1, i32* %retval, align 4, !dbg !3078
  br label %return, !dbg !3078

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %path.addr, align 8, !dbg !3079
  %call2 = call i8* @__concretize_string(i8* %2), !dbg !3080
  %call3 = call i64 (i64, ...) @syscall(i64 80, i8* %call2) #8, !dbg !3081
  %conv = trunc i64 %call3 to i32, !dbg !3081
  store i32 %conv, i32* %retval, align 4, !dbg !3082
  br label %return, !dbg !3082

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !3083
  ret i32 %3, !dbg !3083
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @fchdir(i32 %fd) #0 !dbg !3084 {
entry:
  %retval = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %f = alloca %struct.exe_file_t.17*, align 8
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !3085, metadata !DIExpression()), !dbg !3086
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %f, metadata !3087, metadata !DIExpression()), !dbg !3088
  %0 = load i32, i32* %fd.addr, align 4, !dbg !3089
  %call = call %struct.exe_file_t.17* @__get_file(i32 %0), !dbg !3090
  store %struct.exe_file_t.17* %call, %struct.exe_file_t.17** %f, align 8, !dbg !3088
  %1 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !3091
  %tobool = icmp ne %struct.exe_file_t.17* %1, null, !dbg !3091
  br i1 %tobool, label %if.end, label %if.then, !dbg !3093

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #22, !dbg !3094
  store i32 9, i32* %call1, align 4, !dbg !3096
  store i32 -1, i32* %retval, align 4, !dbg !3097
  br label %return, !dbg !3097

if.end:                                           ; preds = %entry
  %2 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !3098
  %dfile = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %2, i32 0, i32 3, !dbg !3100
  %3 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !3100
  %tobool2 = icmp ne %struct.exe_disk_file_t.16* %3, null, !dbg !3098
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !3101

if.then3:                                         ; preds = %if.end
  call void @klee_warning(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.91, i64 0, i64 0)), !dbg !3102
  %call4 = call i32* @__errno_location() #22, !dbg !3104
  store i32 2, i32* %call4, align 4, !dbg !3105
  store i32 -1, i32* %retval, align 4, !dbg !3106
  br label %return, !dbg !3106

if.end5:                                          ; preds = %if.end
  %4 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !3107
  %fd6 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %4, i32 0, i32 0, !dbg !3108
  %5 = load i32, i32* %fd6, align 8, !dbg !3108
  %call7 = call i64 (i64, ...) @syscall(i64 81, i32 %5) #8, !dbg !3109
  %conv = trunc i64 %call7 to i32, !dbg !3109
  store i32 %conv, i32* %retval, align 4, !dbg !3110
  br label %return, !dbg !3110

return:                                           ; preds = %if.end5, %if.then3, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !3111
  ret i32 %6, !dbg !3111
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @chmod(i8* nonnull %path, i32 %mode) #0 !dbg !167 {
entry:
  %retval = alloca i32, align 4
  %path.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  %dfile = alloca %struct.exe_disk_file_t.16*, align 8
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !3112, metadata !DIExpression()), !dbg !3113
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !3114, metadata !DIExpression()), !dbg !3115
  call void @llvm.dbg.declare(metadata %struct.exe_disk_file_t.16** %dfile, metadata !3116, metadata !DIExpression()), !dbg !3117
  %0 = load i8*, i8** %path.addr, align 8, !dbg !3118
  %call = call %struct.exe_disk_file_t.16* @__get_sym_file(i8* %0), !dbg !3119
  store %struct.exe_disk_file_t.16* %call, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !3117
  %1 = load i32, i32* @chmod.n_calls, align 4, !dbg !3120
  %inc = add nsw i32 %1, 1, !dbg !3120
  store i32 %inc, i32* @chmod.n_calls, align 4, !dbg !3120
  %2 = load i32, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 5), align 8, !dbg !3121
  %tobool = icmp ne i32 %2, 0, !dbg !3123
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !3124

land.lhs.true:                                    ; preds = %entry
  %3 = load i32*, i32** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 11), align 8, !dbg !3125
  %4 = load i32, i32* %3, align 4, !dbg !3126
  %5 = load i32, i32* @chmod.n_calls, align 4, !dbg !3127
  %cmp = icmp eq i32 %4, %5, !dbg !3128
  br i1 %cmp, label %if.then, label %if.end, !dbg !3129

if.then:                                          ; preds = %land.lhs.true
  %6 = load i32, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 5), align 8, !dbg !3130
  %dec = add i32 %6, -1, !dbg !3130
  store i32 %dec, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 5), align 8, !dbg !3130
  %call1 = call i32* @__errno_location() #22, !dbg !3132
  store i32 5, i32* %call1, align 4, !dbg !3133
  store i32 -1, i32* %retval, align 4, !dbg !3134
  br label %return, !dbg !3134

if.end:                                           ; preds = %land.lhs.true, %entry
  %7 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !3135
  %tobool2 = icmp ne %struct.exe_disk_file_t.16* %7, null, !dbg !3135
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !3137

if.then3:                                         ; preds = %if.end
  %8 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !3138
  %9 = load i32, i32* %mode.addr, align 4, !dbg !3140
  %call4 = call i32 @__df_chmod(%struct.exe_disk_file_t.16* %8, i32 %9), !dbg !3141
  store i32 %call4, i32* %retval, align 4, !dbg !3142
  br label %return, !dbg !3142

if.end5:                                          ; preds = %if.end
  %10 = load i8*, i8** %path.addr, align 8, !dbg !3143
  %call6 = call i8* @__concretize_string(i8* %10), !dbg !3144
  %11 = load i32, i32* %mode.addr, align 4, !dbg !3145
  %call7 = call i64 (i64, ...) @syscall(i64 90, i8* %call6, i32 %11) #8, !dbg !3146
  %conv = trunc i64 %call7 to i32, !dbg !3146
  store i32 %conv, i32* %retval, align 4, !dbg !3147
  br label %return, !dbg !3147

return:                                           ; preds = %if.end5, %if.then3, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !3148
  ret i32 %12, !dbg !3148
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @__df_chmod(%struct.exe_disk_file_t.16* %df, i32 %mode) #0 !dbg !3149 {
entry:
  %retval = alloca i32, align 4
  %df.addr = alloca %struct.exe_disk_file_t.16*, align 8
  %mode.addr = alloca i32, align 4
  store %struct.exe_disk_file_t.16* %df, %struct.exe_disk_file_t.16** %df.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.exe_disk_file_t.16** %df.addr, metadata !3152, metadata !DIExpression()), !dbg !3153
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !3154, metadata !DIExpression()), !dbg !3155
  %call = call i32 @geteuid() #8, !dbg !3156
  %0 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %df.addr, align 8, !dbg !3158
  %stat = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %0, i32 0, i32 2, !dbg !3159
  %1 = load %struct.stat64.15*, %struct.stat64.15** %stat, align 8, !dbg !3159
  %st_uid = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %1, i32 0, i32 4, !dbg !3160
  %2 = load i32, i32* %st_uid, align 4, !dbg !3160
  %cmp = icmp eq i32 %call, %2, !dbg !3161
  br i1 %cmp, label %if.then, label %if.else, !dbg !3162

if.then:                                          ; preds = %entry
  %call1 = call i32 @getgid() #8, !dbg !3163
  %3 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %df.addr, align 8, !dbg !3166
  %stat2 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %3, i32 0, i32 2, !dbg !3167
  %4 = load %struct.stat64.15*, %struct.stat64.15** %stat2, align 8, !dbg !3167
  %st_gid = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %4, i32 0, i32 5, !dbg !3168
  %5 = load i32, i32* %st_gid, align 8, !dbg !3168
  %cmp3 = icmp ne i32 %call1, %5, !dbg !3169
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !3170

if.then4:                                         ; preds = %if.then
  %6 = load i32, i32* %mode.addr, align 4, !dbg !3171
  %and = and i32 %6, -1025, !dbg !3171
  store i32 %and, i32* %mode.addr, align 4, !dbg !3171
  br label %if.end, !dbg !3172

if.end:                                           ; preds = %if.then4, %if.then
  %7 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %df.addr, align 8, !dbg !3173
  %stat5 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %7, i32 0, i32 2, !dbg !3174
  %8 = load %struct.stat64.15*, %struct.stat64.15** %stat5, align 8, !dbg !3174
  %st_mode = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %8, i32 0, i32 3, !dbg !3175
  %9 = load i32, i32* %st_mode, align 8, !dbg !3175
  %and6 = and i32 %9, -4096, !dbg !3176
  %10 = load i32, i32* %mode.addr, align 4, !dbg !3177
  %and7 = and i32 %10, 4095, !dbg !3178
  %or = or i32 %and6, %and7, !dbg !3179
  %11 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %df.addr, align 8, !dbg !3180
  %stat8 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %11, i32 0, i32 2, !dbg !3181
  %12 = load %struct.stat64.15*, %struct.stat64.15** %stat8, align 8, !dbg !3181
  %st_mode9 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %12, i32 0, i32 3, !dbg !3182
  store i32 %or, i32* %st_mode9, align 8, !dbg !3183
  store i32 0, i32* %retval, align 4, !dbg !3184
  br label %return, !dbg !3184

if.else:                                          ; preds = %entry
  %call10 = call i32* @__errno_location() #22, !dbg !3185
  store i32 1, i32* %call10, align 4, !dbg !3187
  store i32 -1, i32* %retval, align 4, !dbg !3188
  br label %return, !dbg !3188

return:                                           ; preds = %if.else, %if.end
  %13 = load i32, i32* %retval, align 4, !dbg !3189
  ret i32 %13, !dbg !3189
}

; Function Attrs: nounwind
declare dso_local i32 @geteuid() #3

; Function Attrs: nounwind
declare dso_local i32 @getgid() #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @fchmod(i32 %fd, i32 %mode) #0 !dbg !174 {
entry:
  %retval = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %f = alloca %struct.exe_file_t.17*, align 8
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !3190, metadata !DIExpression()), !dbg !3191
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !3192, metadata !DIExpression()), !dbg !3193
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %f, metadata !3194, metadata !DIExpression()), !dbg !3195
  %0 = load i32, i32* %fd.addr, align 4, !dbg !3196
  %call = call %struct.exe_file_t.17* @__get_file(i32 %0), !dbg !3197
  store %struct.exe_file_t.17* %call, %struct.exe_file_t.17** %f, align 8, !dbg !3195
  %1 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !3198
  %tobool = icmp ne %struct.exe_file_t.17* %1, null, !dbg !3198
  br i1 %tobool, label %if.end, label %if.then, !dbg !3200

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #22, !dbg !3201
  store i32 9, i32* %call1, align 4, !dbg !3203
  store i32 -1, i32* %retval, align 4, !dbg !3204
  br label %return, !dbg !3204

if.end:                                           ; preds = %entry
  %2 = load i32, i32* @fchmod.n_calls, align 4, !dbg !3205
  %inc = add nsw i32 %2, 1, !dbg !3205
  store i32 %inc, i32* @fchmod.n_calls, align 4, !dbg !3205
  %3 = load i32, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 5), align 8, !dbg !3206
  %tobool2 = icmp ne i32 %3, 0, !dbg !3208
  br i1 %tobool2, label %land.lhs.true, label %if.end5, !dbg !3209

land.lhs.true:                                    ; preds = %if.end
  %4 = load i32*, i32** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 12), align 8, !dbg !3210
  %5 = load i32, i32* %4, align 4, !dbg !3211
  %6 = load i32, i32* @fchmod.n_calls, align 4, !dbg !3212
  %cmp = icmp eq i32 %5, %6, !dbg !3213
  br i1 %cmp, label %if.then3, label %if.end5, !dbg !3214

if.then3:                                         ; preds = %land.lhs.true
  %7 = load i32, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 5), align 8, !dbg !3215
  %dec = add i32 %7, -1, !dbg !3215
  store i32 %dec, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 5), align 8, !dbg !3215
  %call4 = call i32* @__errno_location() #22, !dbg !3217
  store i32 5, i32* %call4, align 4, !dbg !3218
  store i32 -1, i32* %retval, align 4, !dbg !3219
  br label %return, !dbg !3219

if.end5:                                          ; preds = %land.lhs.true, %if.end
  %8 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !3220
  %dfile = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %8, i32 0, i32 3, !dbg !3222
  %9 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !3222
  %tobool6 = icmp ne %struct.exe_disk_file_t.16* %9, null, !dbg !3220
  %10 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !3223
  br i1 %tobool6, label %if.then7, label %if.end10, !dbg !3224

if.then7:                                         ; preds = %if.end5
  %dfile8 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %10, i32 0, i32 3, !dbg !3225
  %11 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile8, align 8, !dbg !3225
  %12 = load i32, i32* %mode.addr, align 4, !dbg !3227
  %call9 = call i32 @__df_chmod(%struct.exe_disk_file_t.16* %11, i32 %12), !dbg !3228
  store i32 %call9, i32* %retval, align 4, !dbg !3229
  br label %return, !dbg !3229

if.end10:                                         ; preds = %if.end5
  %fd11 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %10, i32 0, i32 0, !dbg !3230
  %13 = load i32, i32* %fd11, align 8, !dbg !3230
  %14 = load i32, i32* %mode.addr, align 4, !dbg !3231
  %call12 = call i64 (i64, ...) @syscall(i64 91, i32 %13, i32 %14) #8, !dbg !3232
  %conv = trunc i64 %call12 to i32, !dbg !3232
  store i32 %conv, i32* %retval, align 4, !dbg !3233
  br label %return, !dbg !3233

return:                                           ; preds = %if.end10, %if.then7, %if.then3, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !3234
  ret i32 %15, !dbg !3234
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @chown(i8* nonnull %path, i32 %owner, i32 %group) #0 !dbg !3235 {
entry:
  %retval = alloca i32, align 4
  %path.addr = alloca i8*, align 8
  %owner.addr = alloca i32, align 4
  %group.addr = alloca i32, align 4
  %df = alloca %struct.exe_disk_file_t.16*, align 8
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !3240, metadata !DIExpression()), !dbg !3241
  store i32 %owner, i32* %owner.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %owner.addr, metadata !3242, metadata !DIExpression()), !dbg !3243
  store i32 %group, i32* %group.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %group.addr, metadata !3244, metadata !DIExpression()), !dbg !3245
  call void @llvm.dbg.declare(metadata %struct.exe_disk_file_t.16** %df, metadata !3246, metadata !DIExpression()), !dbg !3247
  %0 = load i8*, i8** %path.addr, align 8, !dbg !3248
  %call = call %struct.exe_disk_file_t.16* @__get_sym_file(i8* %0), !dbg !3249
  store %struct.exe_disk_file_t.16* %call, %struct.exe_disk_file_t.16** %df, align 8, !dbg !3247
  %1 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %df, align 8, !dbg !3250
  %tobool = icmp ne %struct.exe_disk_file_t.16* %1, null, !dbg !3250
  br i1 %tobool, label %if.then, label %if.end, !dbg !3252

if.then:                                          ; preds = %entry
  %2 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %df, align 8, !dbg !3253
  %3 = load i32, i32* %owner.addr, align 4, !dbg !3255
  %4 = load i32, i32* %group.addr, align 4, !dbg !3256
  %call1 = call i32 @__df_chown(%struct.exe_disk_file_t.16* %2, i32 %3, i32 %4), !dbg !3257
  store i32 %call1, i32* %retval, align 4, !dbg !3258
  br label %return, !dbg !3258

if.end:                                           ; preds = %entry
  %5 = load i8*, i8** %path.addr, align 8, !dbg !3259
  %call2 = call i8* @__concretize_string(i8* %5), !dbg !3260
  %6 = load i32, i32* %owner.addr, align 4, !dbg !3261
  %7 = load i32, i32* %group.addr, align 4, !dbg !3262
  %call3 = call i64 (i64, ...) @syscall(i64 92, i8* %call2, i32 %6, i32 %7) #8, !dbg !3263
  %conv = trunc i64 %call3 to i32, !dbg !3263
  store i32 %conv, i32* %retval, align 4, !dbg !3264
  br label %return, !dbg !3264

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !3265
  ret i32 %8, !dbg !3265
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @__df_chown(%struct.exe_disk_file_t.16* %df, i32 %owner, i32 %group) #0 !dbg !3266 {
entry:
  %df.addr = alloca %struct.exe_disk_file_t.16*, align 8
  %owner.addr = alloca i32, align 4
  %group.addr = alloca i32, align 4
  store %struct.exe_disk_file_t.16* %df, %struct.exe_disk_file_t.16** %df.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.exe_disk_file_t.16** %df.addr, metadata !3269, metadata !DIExpression()), !dbg !3270
  store i32 %owner, i32* %owner.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %owner.addr, metadata !3271, metadata !DIExpression()), !dbg !3272
  store i32 %group, i32* %group.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %group.addr, metadata !3273, metadata !DIExpression()), !dbg !3274
  call void @klee_warning(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.25.92, i64 0, i64 0)), !dbg !3275
  %call = call i32* @__errno_location() #22, !dbg !3276
  store i32 1, i32* %call, align 4, !dbg !3277
  ret i32 -1, !dbg !3278
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @fchown(i32 %fd, i32 %owner, i32 %group) #0 !dbg !3279 {
entry:
  %retval = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %owner.addr = alloca i32, align 4
  %group.addr = alloca i32, align 4
  %f = alloca %struct.exe_file_t.17*, align 8
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !3282, metadata !DIExpression()), !dbg !3283
  store i32 %owner, i32* %owner.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %owner.addr, metadata !3284, metadata !DIExpression()), !dbg !3285
  store i32 %group, i32* %group.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %group.addr, metadata !3286, metadata !DIExpression()), !dbg !3287
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %f, metadata !3288, metadata !DIExpression()), !dbg !3289
  %0 = load i32, i32* %fd.addr, align 4, !dbg !3290
  %call = call %struct.exe_file_t.17* @__get_file(i32 %0), !dbg !3291
  store %struct.exe_file_t.17* %call, %struct.exe_file_t.17** %f, align 8, !dbg !3289
  %1 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !3292
  %tobool = icmp ne %struct.exe_file_t.17* %1, null, !dbg !3292
  br i1 %tobool, label %if.end, label %if.then, !dbg !3294

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #22, !dbg !3295
  store i32 9, i32* %call1, align 4, !dbg !3297
  store i32 -1, i32* %retval, align 4, !dbg !3298
  br label %return, !dbg !3298

if.end:                                           ; preds = %entry
  %2 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !3299
  %dfile = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %2, i32 0, i32 3, !dbg !3301
  %3 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !3301
  %tobool2 = icmp ne %struct.exe_disk_file_t.16* %3, null, !dbg !3299
  br i1 %tobool2, label %if.then3, label %if.end6, !dbg !3302

if.then3:                                         ; preds = %if.end
  %4 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !3303
  %dfile4 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %4, i32 0, i32 3, !dbg !3305
  %5 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile4, align 8, !dbg !3305
  %6 = load i32, i32* %owner.addr, align 4, !dbg !3306
  %7 = load i32, i32* %group.addr, align 4, !dbg !3307
  %call5 = call i32 @__df_chown(%struct.exe_disk_file_t.16* %5, i32 %6, i32 %7), !dbg !3308
  store i32 %call5, i32* %retval, align 4, !dbg !3309
  br label %return, !dbg !3309

if.end6:                                          ; preds = %if.end
  %8 = load i32, i32* %fd.addr, align 4, !dbg !3310
  %9 = load i32, i32* %owner.addr, align 4, !dbg !3311
  %10 = load i32, i32* %group.addr, align 4, !dbg !3312
  %call7 = call i64 (i64, ...) @syscall(i64 93, i32 %8, i32 %9, i32 %10) #8, !dbg !3313
  %conv = trunc i64 %call7 to i32, !dbg !3313
  store i32 %conv, i32* %retval, align 4, !dbg !3314
  br label %return, !dbg !3314

return:                                           ; preds = %if.end6, %if.then3, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !3315
  ret i32 %11, !dbg !3315
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @lchown(i8* nonnull %path, i32 %owner, i32 %group) #0 !dbg !3316 {
entry:
  %retval = alloca i32, align 4
  %path.addr = alloca i8*, align 8
  %owner.addr = alloca i32, align 4
  %group.addr = alloca i32, align 4
  %df = alloca %struct.exe_disk_file_t.16*, align 8
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !3317, metadata !DIExpression()), !dbg !3318
  store i32 %owner, i32* %owner.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %owner.addr, metadata !3319, metadata !DIExpression()), !dbg !3320
  store i32 %group, i32* %group.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %group.addr, metadata !3321, metadata !DIExpression()), !dbg !3322
  call void @llvm.dbg.declare(metadata %struct.exe_disk_file_t.16** %df, metadata !3323, metadata !DIExpression()), !dbg !3324
  %0 = load i8*, i8** %path.addr, align 8, !dbg !3325
  %call = call %struct.exe_disk_file_t.16* @__get_sym_file(i8* %0), !dbg !3326
  store %struct.exe_disk_file_t.16* %call, %struct.exe_disk_file_t.16** %df, align 8, !dbg !3324
  %1 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %df, align 8, !dbg !3327
  %tobool = icmp ne %struct.exe_disk_file_t.16* %1, null, !dbg !3327
  br i1 %tobool, label %if.then, label %if.end, !dbg !3329

if.then:                                          ; preds = %entry
  %2 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %df, align 8, !dbg !3330
  %3 = load i32, i32* %owner.addr, align 4, !dbg !3332
  %4 = load i32, i32* %group.addr, align 4, !dbg !3333
  %call1 = call i32 @__df_chown(%struct.exe_disk_file_t.16* %2, i32 %3, i32 %4), !dbg !3334
  store i32 %call1, i32* %retval, align 4, !dbg !3335
  br label %return, !dbg !3335

if.end:                                           ; preds = %entry
  %5 = load i8*, i8** %path.addr, align 8, !dbg !3336
  %call2 = call i8* @__concretize_string(i8* %5), !dbg !3337
  %6 = load i32, i32* %owner.addr, align 4, !dbg !3338
  %7 = load i32, i32* %group.addr, align 4, !dbg !3339
  %call3 = call i64 (i64, ...) @syscall(i64 92, i8* %call2, i32 %6, i32 %7) #8, !dbg !3340
  %conv = trunc i64 %call3 to i32, !dbg !3340
  store i32 %conv, i32* %retval, align 4, !dbg !3341
  br label %return, !dbg !3341

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !3342
  ret i32 %8, !dbg !3342
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @__fd_fstat(i32 %fd, %struct.stat64.15* %buf) #0 !dbg !3343 {
entry:
  %retval = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %buf.addr = alloca %struct.stat64.15*, align 8
  %f = alloca %struct.exe_file_t.17*, align 8
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !3344, metadata !DIExpression()), !dbg !3345
  store %struct.stat64.15* %buf, %struct.stat64.15** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat64.15** %buf.addr, metadata !3346, metadata !DIExpression()), !dbg !3347
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %f, metadata !3348, metadata !DIExpression()), !dbg !3349
  %0 = load i32, i32* %fd.addr, align 4, !dbg !3350
  %call = call %struct.exe_file_t.17* @__get_file(i32 %0), !dbg !3351
  store %struct.exe_file_t.17* %call, %struct.exe_file_t.17** %f, align 8, !dbg !3349
  %1 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !3352
  %tobool = icmp ne %struct.exe_file_t.17* %1, null, !dbg !3352
  br i1 %tobool, label %if.end, label %if.then, !dbg !3354

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #22, !dbg !3355
  store i32 9, i32* %call1, align 4, !dbg !3357
  store i32 -1, i32* %retval, align 4, !dbg !3358
  br label %return, !dbg !3358

if.end:                                           ; preds = %entry
  %2 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !3359
  %dfile = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %2, i32 0, i32 3, !dbg !3361
  %3 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !3361
  %tobool2 = icmp ne %struct.exe_disk_file_t.16* %3, null, !dbg !3359
  br i1 %tobool2, label %if.end6, label %if.then3, !dbg !3362

if.then3:                                         ; preds = %if.end
  %4 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !3363
  %fd4 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %4, i32 0, i32 0, !dbg !3365
  %5 = load i32, i32* %fd4, align 8, !dbg !3365
  %6 = load %struct.stat64.15*, %struct.stat64.15** %buf.addr, align 8, !dbg !3366
  %call5 = call i64 (i64, ...) @syscall(i64 5, i32 %5, %struct.stat64.15* %6) #8, !dbg !3367
  %conv = trunc i64 %call5 to i32, !dbg !3367
  store i32 %conv, i32* %retval, align 4, !dbg !3368
  br label %return, !dbg !3368

if.end6:                                          ; preds = %if.end
  %7 = load %struct.stat64.15*, %struct.stat64.15** %buf.addr, align 8, !dbg !3369
  %8 = bitcast %struct.stat64.15* %7 to i8*, !dbg !3370
  %9 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !3371
  %dfile7 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %9, i32 0, i32 3, !dbg !3372
  %10 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile7, align 8, !dbg !3372
  %stat = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %10, i32 0, i32 2, !dbg !3373
  %11 = load %struct.stat64.15*, %struct.stat64.15** %stat, align 8, !dbg !3373
  %12 = bitcast %struct.stat64.15* %11 to i8*, !dbg !3370
  %13 = call i8* @memcpy(i8* %8, i8* %12, i64 144), !dbg !3370
  store i32 0, i32* %retval, align 4, !dbg !3374
  br label %return, !dbg !3374

return:                                           ; preds = %if.end6, %if.then3, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !3375
  ret i32 %14, !dbg !3375
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @__fd_ftruncate(i32 %fd, i64 %length) #0 !dbg !179 {
entry:
  %retval = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %length.addr = alloca i64, align 8
  %f = alloca %struct.exe_file_t.17*, align 8
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !3376, metadata !DIExpression()), !dbg !3377
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !3378, metadata !DIExpression()), !dbg !3379
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %f, metadata !3380, metadata !DIExpression()), !dbg !3381
  %0 = load i32, i32* %fd.addr, align 4, !dbg !3382
  %call = call %struct.exe_file_t.17* @__get_file(i32 %0), !dbg !3383
  store %struct.exe_file_t.17* %call, %struct.exe_file_t.17** %f, align 8, !dbg !3381
  %1 = load i32, i32* @__fd_ftruncate.n_calls, align 4, !dbg !3384
  %inc = add nsw i32 %1, 1, !dbg !3384
  store i32 %inc, i32* @__fd_ftruncate.n_calls, align 4, !dbg !3384
  %2 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !3385
  %tobool = icmp ne %struct.exe_file_t.17* %2, null, !dbg !3385
  br i1 %tobool, label %if.end, label %if.then, !dbg !3387

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #22, !dbg !3388
  store i32 9, i32* %call1, align 4, !dbg !3390
  store i32 -1, i32* %retval, align 4, !dbg !3391
  br label %return, !dbg !3391

if.end:                                           ; preds = %entry
  %3 = load i32, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 5), align 8, !dbg !3392
  %tobool2 = icmp ne i32 %3, 0, !dbg !3394
  br i1 %tobool2, label %land.lhs.true, label %if.end5, !dbg !3395

land.lhs.true:                                    ; preds = %if.end
  %4 = load i32*, i32** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 9), align 8, !dbg !3396
  %5 = load i32, i32* %4, align 4, !dbg !3397
  %6 = load i32, i32* @__fd_ftruncate.n_calls, align 4, !dbg !3398
  %cmp = icmp eq i32 %5, %6, !dbg !3399
  br i1 %cmp, label %if.then3, label %if.end5, !dbg !3400

if.then3:                                         ; preds = %land.lhs.true
  %7 = load i32, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 5), align 8, !dbg !3401
  %dec = add i32 %7, -1, !dbg !3401
  store i32 %dec, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 5), align 8, !dbg !3401
  %call4 = call i32* @__errno_location() #22, !dbg !3403
  store i32 5, i32* %call4, align 4, !dbg !3404
  store i32 -1, i32* %retval, align 4, !dbg !3405
  br label %return, !dbg !3405

if.end5:                                          ; preds = %land.lhs.true, %if.end
  %8 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !3406
  %dfile = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %8, i32 0, i32 3, !dbg !3408
  %9 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !3408
  %tobool6 = icmp ne %struct.exe_disk_file_t.16* %9, null, !dbg !3406
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !3409

if.then7:                                         ; preds = %if.end5
  call void @klee_warning(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.10.97, i64 0, i64 0)), !dbg !3410
  %call8 = call i32* @__errno_location() #22, !dbg !3412
  store i32 5, i32* %call8, align 4, !dbg !3413
  store i32 -1, i32* %retval, align 4, !dbg !3414
  br label %return, !dbg !3414

if.end9:                                          ; preds = %if.end5
  %10 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !3415
  %fd10 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %10, i32 0, i32 0, !dbg !3416
  %11 = load i32, i32* %fd10, align 8, !dbg !3416
  %12 = load i64, i64* %length.addr, align 8, !dbg !3417
  %call11 = call i64 (i64, ...) @syscall(i64 77, i32 %11, i64 %12) #8, !dbg !3418
  %conv = trunc i64 %call11 to i32, !dbg !3418
  store i32 %conv, i32* %retval, align 4, !dbg !3419
  br label %return, !dbg !3419

return:                                           ; preds = %if.end9, %if.then7, %if.then3, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !3420
  ret i32 %13, !dbg !3420
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @__fd_getdents(i32 %fd, %struct.dirent64.12* %dirp, i32 %count) #0 !dbg !3421 {
entry:
  %retval = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %dirp.addr = alloca %struct.dirent64.12*, align 8
  %count.addr = alloca i32, align 4
  %f = alloca %struct.exe_file_t.17*, align 8
  %i = alloca i64, align 8
  %pad = alloca i64, align 8
  %bytes = alloca i64, align 8
  %df = alloca %struct.exe_disk_file_t.16*, align 8
  %os_pos = alloca i64, align 8
  %res = alloca i32, align 4
  %s = alloca i64, align 8
  %pos = alloca i32, align 4
  %dp = alloca %struct.dirent64.12*, align 8
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !3424, metadata !DIExpression()), !dbg !3425
  store %struct.dirent64.12* %dirp, %struct.dirent64.12** %dirp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dirent64.12** %dirp.addr, metadata !3426, metadata !DIExpression()), !dbg !3427
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !3428, metadata !DIExpression()), !dbg !3429
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %f, metadata !3430, metadata !DIExpression()), !dbg !3431
  %0 = load i32, i32* %fd.addr, align 4, !dbg !3432
  %call = call %struct.exe_file_t.17* @__get_file(i32 %0), !dbg !3433
  store %struct.exe_file_t.17* %call, %struct.exe_file_t.17** %f, align 8, !dbg !3431
  %1 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !3434
  %tobool = icmp ne %struct.exe_file_t.17* %1, null, !dbg !3434
  br i1 %tobool, label %if.end, label %if.then, !dbg !3436

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #22, !dbg !3437
  store i32 9, i32* %call1, align 4, !dbg !3439
  store i32 -1, i32* %retval, align 4, !dbg !3440
  br label %return, !dbg !3440

if.end:                                           ; preds = %entry
  %2 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !3441
  %dfile = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %2, i32 0, i32 3, !dbg !3443
  %3 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !3443
  %tobool2 = icmp ne %struct.exe_disk_file_t.16* %3, null, !dbg !3441
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !3444

if.then3:                                         ; preds = %if.end
  call void @klee_warning(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.11.100, i64 0, i64 0)), !dbg !3445
  %call4 = call i32* @__errno_location() #22, !dbg !3447
  store i32 22, i32* %call4, align 4, !dbg !3448
  store i32 -1, i32* %retval, align 4, !dbg !3449
  br label %return, !dbg !3449

if.else:                                          ; preds = %if.end
  %4 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !3450
  %off = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %4, i32 0, i32 2, !dbg !3453
  %5 = load i64, i64* %off, align 8, !dbg !3453
  %cmp = icmp ult i64 %5, 4096, !dbg !3454
  br i1 %cmp, label %if.then5, label %if.else43, !dbg !3455

if.then5:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i64* %i, metadata !3456, metadata !DIExpression()), !dbg !3458
  call void @llvm.dbg.declare(metadata i64* %pad, metadata !3459, metadata !DIExpression()), !dbg !3460
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !3461, metadata !DIExpression()), !dbg !3462
  store i64 0, i64* %bytes, align 8, !dbg !3462
  %6 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !3463
  %off6 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %6, i32 0, i32 2, !dbg !3464
  %7 = load i64, i64* %off6, align 8, !dbg !3464
  %div = udiv i64 %7, 280, !dbg !3465
  store i64 %div, i64* %i, align 8, !dbg !3466
  %8 = load i64, i64* %i, align 8, !dbg !3467
  %mul = mul i64 %8, 280, !dbg !3469
  %9 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !3470
  %off7 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %9, i32 0, i32 2, !dbg !3471
  %10 = load i64, i64* %off7, align 8, !dbg !3471
  %cmp8 = icmp ne i64 %mul, %10, !dbg !3472
  br i1 %cmp8, label %if.then11, label %lor.lhs.false, !dbg !3473

lor.lhs.false:                                    ; preds = %if.then5
  %11 = load i64, i64* %i, align 8, !dbg !3474
  %12 = load i32, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 0), align 8, !dbg !3475
  %conv = zext i32 %12 to i64, !dbg !3476
  %cmp9 = icmp sgt i64 %11, %conv, !dbg !3477
  br i1 %cmp9, label %if.then11, label %for.cond, !dbg !3478

if.then11:                                        ; preds = %lor.lhs.false, %if.then5
  %call12 = call i32* @__errno_location() #22, !dbg !3479
  store i32 22, i32* %call12, align 4, !dbg !3481
  store i32 -1, i32* %retval, align 4, !dbg !3482
  br label %return, !dbg !3482

for.cond:                                         ; preds = %lor.lhs.false, %for.body
  %13 = load i64, i64* %i, align 8, !dbg !3483
  %14 = load i32, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 0), align 8, !dbg !3486
  %conv14 = zext i32 %14 to i64, !dbg !3487
  %cmp15 = icmp slt i64 %13, %conv14, !dbg !3488
  br i1 %cmp15, label %for.body, label %for.end, !dbg !3489

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.exe_disk_file_t.16** %df, metadata !3490, metadata !DIExpression()), !dbg !3492
  %15 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 4), align 8, !dbg !3493
  %16 = load i64, i64* %i, align 8, !dbg !3494
  %arrayidx = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %15, i64 %16, !dbg !3495
  store %struct.exe_disk_file_t.16* %arrayidx, %struct.exe_disk_file_t.16** %df, align 8, !dbg !3492
  %17 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %df, align 8, !dbg !3496
  %stat = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %17, i32 0, i32 2, !dbg !3497
  %18 = load %struct.stat64.15*, %struct.stat64.15** %stat, align 8, !dbg !3497
  %st_ino = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %18, i32 0, i32 1, !dbg !3498
  %19 = load i64, i64* %st_ino, align 8, !dbg !3498
  %20 = load %struct.dirent64.12*, %struct.dirent64.12** %dirp.addr, align 8, !dbg !3499
  %d_ino = getelementptr inbounds %struct.dirent64.12, %struct.dirent64.12* %20, i32 0, i32 0, !dbg !3500
  store i64 %19, i64* %d_ino, align 8, !dbg !3501
  %21 = load %struct.dirent64.12*, %struct.dirent64.12** %dirp.addr, align 8, !dbg !3502
  %d_reclen = getelementptr inbounds %struct.dirent64.12, %struct.dirent64.12* %21, i32 0, i32 2, !dbg !3503
  store i16 280, i16* %d_reclen, align 8, !dbg !3504
  %22 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %df, align 8, !dbg !3505
  %stat17 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %22, i32 0, i32 2, !dbg !3505
  %23 = load %struct.stat64.15*, %struct.stat64.15** %stat17, align 8, !dbg !3505
  %st_mode = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %23, i32 0, i32 3, !dbg !3505
  %24 = load i32, i32* %st_mode, align 8, !dbg !3505
  %and = and i32 %24, 61440, !dbg !3505
  %shr = lshr i32 %and, 12, !dbg !3505
  %conv18 = trunc i32 %shr to i8, !dbg !3505
  %25 = load %struct.dirent64.12*, %struct.dirent64.12** %dirp.addr, align 8, !dbg !3506
  %d_type = getelementptr inbounds %struct.dirent64.12, %struct.dirent64.12* %25, i32 0, i32 3, !dbg !3507
  store i8 %conv18, i8* %d_type, align 2, !dbg !3508
  %26 = load i64, i64* %i, align 8, !dbg !3509
  %add = add nsw i64 65, %26, !dbg !3510
  %conv19 = trunc i64 %add to i8, !dbg !3511
  %27 = load %struct.dirent64.12*, %struct.dirent64.12** %dirp.addr, align 8, !dbg !3512
  %d_name = getelementptr inbounds %struct.dirent64.12, %struct.dirent64.12* %27, i32 0, i32 4, !dbg !3513
  %arrayidx20 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name, i64 0, i64 0, !dbg !3512
  store i8 %conv19, i8* %arrayidx20, align 1, !dbg !3514
  %28 = load %struct.dirent64.12*, %struct.dirent64.12** %dirp.addr, align 8, !dbg !3515
  %d_name21 = getelementptr inbounds %struct.dirent64.12, %struct.dirent64.12* %28, i32 0, i32 4, !dbg !3516
  %arrayidx22 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name21, i64 0, i64 1, !dbg !3515
  store i8 0, i8* %arrayidx22, align 1, !dbg !3517
  %29 = load i64, i64* %i, align 8, !dbg !3518
  %add23 = add nsw i64 %29, 1, !dbg !3519
  %mul24 = mul i64 %add23, 280, !dbg !3520
  %30 = load %struct.dirent64.12*, %struct.dirent64.12** %dirp.addr, align 8, !dbg !3521
  %d_off = getelementptr inbounds %struct.dirent64.12, %struct.dirent64.12* %30, i32 0, i32 1, !dbg !3522
  store i64 %mul24, i64* %d_off, align 8, !dbg !3523
  %31 = load %struct.dirent64.12*, %struct.dirent64.12** %dirp.addr, align 8, !dbg !3524
  %d_reclen25 = getelementptr inbounds %struct.dirent64.12, %struct.dirent64.12* %31, i32 0, i32 2, !dbg !3525
  %32 = load i16, i16* %d_reclen25, align 8, !dbg !3525
  %conv26 = zext i16 %32 to i64, !dbg !3524
  %33 = load i64, i64* %bytes, align 8, !dbg !3526
  %add27 = add nsw i64 %33, %conv26, !dbg !3526
  store i64 %add27, i64* %bytes, align 8, !dbg !3526
  %34 = load %struct.dirent64.12*, %struct.dirent64.12** %dirp.addr, align 8, !dbg !3527
  %incdec.ptr = getelementptr inbounds %struct.dirent64.12, %struct.dirent64.12* %34, i32 1, !dbg !3527
  store %struct.dirent64.12* %incdec.ptr, %struct.dirent64.12** %dirp.addr, align 8, !dbg !3527
  %35 = load i64, i64* %i, align 8, !dbg !3528
  %inc = add nsw i64 %35, 1, !dbg !3528
  store i64 %inc, i64* %i, align 8, !dbg !3528
  br label %for.cond, !dbg !3529, !llvm.loop !3530

for.end:                                          ; preds = %for.cond
  %36 = load i32, i32* %count.addr, align 4, !dbg !3532
  %cmp28 = icmp uge i32 %36, 4096, !dbg !3533
  %37 = load i32, i32* %count.addr, align 4, !dbg !3532
  %cond = select i1 %cmp28, i32 4096, i32 %37, !dbg !3532
  %conv30 = zext i32 %cond to i64, !dbg !3532
  store i64 %conv30, i64* %pad, align 8, !dbg !3534
  %38 = load %struct.dirent64.12*, %struct.dirent64.12** %dirp.addr, align 8, !dbg !3535
  %d_ino31 = getelementptr inbounds %struct.dirent64.12, %struct.dirent64.12* %38, i32 0, i32 0, !dbg !3536
  store i64 0, i64* %d_ino31, align 8, !dbg !3537
  %39 = load i64, i64* %pad, align 8, !dbg !3538
  %40 = load i64, i64* %bytes, align 8, !dbg !3539
  %sub = sub nsw i64 %39, %40, !dbg !3540
  %conv32 = trunc i64 %sub to i16, !dbg !3538
  %41 = load %struct.dirent64.12*, %struct.dirent64.12** %dirp.addr, align 8, !dbg !3541
  %d_reclen33 = getelementptr inbounds %struct.dirent64.12, %struct.dirent64.12* %41, i32 0, i32 2, !dbg !3542
  store i16 %conv32, i16* %d_reclen33, align 8, !dbg !3543
  %42 = load %struct.dirent64.12*, %struct.dirent64.12** %dirp.addr, align 8, !dbg !3544
  %d_type34 = getelementptr inbounds %struct.dirent64.12, %struct.dirent64.12* %42, i32 0, i32 3, !dbg !3545
  store i8 0, i8* %d_type34, align 2, !dbg !3546
  %43 = load %struct.dirent64.12*, %struct.dirent64.12** %dirp.addr, align 8, !dbg !3547
  %d_name35 = getelementptr inbounds %struct.dirent64.12, %struct.dirent64.12* %43, i32 0, i32 4, !dbg !3548
  %arrayidx36 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name35, i64 0, i64 0, !dbg !3547
  store i8 0, i8* %arrayidx36, align 1, !dbg !3549
  %44 = load %struct.dirent64.12*, %struct.dirent64.12** %dirp.addr, align 8, !dbg !3550
  %d_off37 = getelementptr inbounds %struct.dirent64.12, %struct.dirent64.12* %44, i32 0, i32 1, !dbg !3551
  store i64 4096, i64* %d_off37, align 8, !dbg !3552
  %45 = load %struct.dirent64.12*, %struct.dirent64.12** %dirp.addr, align 8, !dbg !3553
  %d_reclen38 = getelementptr inbounds %struct.dirent64.12, %struct.dirent64.12* %45, i32 0, i32 2, !dbg !3554
  %46 = load i16, i16* %d_reclen38, align 8, !dbg !3554
  %conv39 = zext i16 %46 to i64, !dbg !3553
  %47 = load i64, i64* %bytes, align 8, !dbg !3555
  %add40 = add nsw i64 %47, %conv39, !dbg !3555
  store i64 %add40, i64* %bytes, align 8, !dbg !3555
  %48 = load i64, i64* %pad, align 8, !dbg !3556
  %49 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !3557
  %off41 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %49, i32 0, i32 2, !dbg !3558
  store i64 %48, i64* %off41, align 8, !dbg !3559
  %50 = load i64, i64* %bytes, align 8, !dbg !3560
  %conv42 = trunc i64 %50 to i32, !dbg !3560
  store i32 %conv42, i32* %retval, align 4, !dbg !3561
  br label %return, !dbg !3561

if.else43:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i64* %os_pos, metadata !3562, metadata !DIExpression()), !dbg !3564
  %51 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !3565
  %off44 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %51, i32 0, i32 2, !dbg !3566
  %52 = load i64, i64* %off44, align 8, !dbg !3566
  %sub45 = sub nsw i64 %52, 4096, !dbg !3567
  store i64 %sub45, i64* %os_pos, align 8, !dbg !3564
  call void @llvm.dbg.declare(metadata i32* %res, metadata !3568, metadata !DIExpression()), !dbg !3569
  call void @llvm.dbg.declare(metadata i64* %s, metadata !3570, metadata !DIExpression()), !dbg !3571
  store i64 0, i64* %s, align 8, !dbg !3571
  %53 = load %struct.dirent64.12*, %struct.dirent64.12** %dirp.addr, align 8, !dbg !3572
  %54 = bitcast %struct.dirent64.12* %53 to i8*, !dbg !3573
  %55 = load i32, i32* %count.addr, align 4, !dbg !3574
  %conv46 = zext i32 %55 to i64, !dbg !3574
  %56 = call i8* @memset(i8* %54, i32 0, i64 %conv46), !dbg !3573
  %57 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !3575
  %fd47 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %57, i32 0, i32 0, !dbg !3576
  %58 = load i32, i32* %fd47, align 8, !dbg !3576
  %59 = load i64, i64* %os_pos, align 8, !dbg !3577
  %call48 = call i64 (i64, ...) @syscall(i64 8, i32 %58, i64 %59, i32 0) #8, !dbg !3578
  store i64 %call48, i64* %s, align 8, !dbg !3579
  %60 = load i64, i64* %s, align 8, !dbg !3580
  %cmp49 = icmp ne i64 %60, -1, !dbg !3580
  br i1 %cmp49, label %if.end53, label %if.else52, !dbg !3583

if.else52:                                        ; preds = %if.else43
  call void @__assert_fail(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12.101, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4.78, i64 0, i64 0), i32 824, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__.__fd_getdents, i64 0, i64 0)) #17, !dbg !3580
  unreachable, !dbg !3580

if.end53:                                         ; preds = %if.else43
  %61 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !3584
  %fd54 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %61, i32 0, i32 0, !dbg !3585
  %62 = load i32, i32* %fd54, align 8, !dbg !3585
  %63 = load %struct.dirent64.12*, %struct.dirent64.12** %dirp.addr, align 8, !dbg !3586
  %64 = load i32, i32* %count.addr, align 4, !dbg !3587
  %call55 = call i64 (i64, ...) @syscall(i64 217, i32 %62, %struct.dirent64.12* %63, i32 %64) #8, !dbg !3588
  %conv56 = trunc i64 %call55 to i32, !dbg !3588
  store i32 %conv56, i32* %res, align 4, !dbg !3589
  %65 = load i32, i32* %res, align 4, !dbg !3590
  %cmp57 = icmp sgt i32 %65, -1, !dbg !3592
  br i1 %cmp57, label %if.then59, label %if.end78, !dbg !3593

if.then59:                                        ; preds = %if.end53
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !3594, metadata !DIExpression()), !dbg !3596
  store i32 0, i32* %pos, align 4, !dbg !3596
  %66 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !3597
  %fd60 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %66, i32 0, i32 0, !dbg !3598
  %67 = load i32, i32* %fd60, align 8, !dbg !3598
  %call61 = call i64 (i64, ...) @syscall(i64 8, i32 %67, i32 0, i32 1) #8, !dbg !3599
  %68 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !3600
  %off62 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %68, i32 0, i32 2, !dbg !3601
  store i64 %call61, i64* %off62, align 8, !dbg !3602
  %69 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !3603
  %off63 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %69, i32 0, i32 2, !dbg !3603
  %70 = load i64, i64* %off63, align 8, !dbg !3603
  %cmp64 = icmp ne i64 %70, -1, !dbg !3603
  br i1 %cmp64, label %if.end68, label %if.else67, !dbg !3606

if.else67:                                        ; preds = %if.then59
  call void @__assert_fail(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.13.102, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4.78, i64 0, i64 0), i32 829, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__.__fd_getdents, i64 0, i64 0)) #17, !dbg !3603
  unreachable, !dbg !3603

if.end68:                                         ; preds = %if.then59
  %71 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !3607
  %off69 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %71, i32 0, i32 2, !dbg !3608
  %72 = load i64, i64* %off69, align 8, !dbg !3609
  %add70 = add nsw i64 %72, 4096, !dbg !3609
  store i64 %add70, i64* %off69, align 8, !dbg !3609
  br label %while.cond, !dbg !3610

while.cond:                                       ; preds = %while.body, %if.end68
  %73 = load i32, i32* %pos, align 4, !dbg !3611
  %74 = load i32, i32* %res, align 4, !dbg !3612
  %cmp71 = icmp slt i32 %73, %74, !dbg !3613
  br i1 %cmp71, label %while.body, label %if.end78, !dbg !3610

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.dirent64.12** %dp, metadata !3614, metadata !DIExpression()), !dbg !3616
  %75 = load %struct.dirent64.12*, %struct.dirent64.12** %dirp.addr, align 8, !dbg !3617
  %76 = bitcast %struct.dirent64.12* %75 to i8*, !dbg !3618
  %77 = load i32, i32* %pos, align 4, !dbg !3619
  %idx.ext = sext i32 %77 to i64, !dbg !3620
  %add.ptr = getelementptr inbounds i8, i8* %76, i64 %idx.ext, !dbg !3620
  %78 = bitcast i8* %add.ptr to %struct.dirent64.12*, !dbg !3621
  store %struct.dirent64.12* %78, %struct.dirent64.12** %dp, align 8, !dbg !3616
  %79 = load %struct.dirent64.12*, %struct.dirent64.12** %dp, align 8, !dbg !3622
  %d_off73 = getelementptr inbounds %struct.dirent64.12, %struct.dirent64.12* %79, i32 0, i32 1, !dbg !3623
  %80 = load i64, i64* %d_off73, align 8, !dbg !3624
  %add74 = add nsw i64 %80, 4096, !dbg !3624
  store i64 %add74, i64* %d_off73, align 8, !dbg !3624
  %81 = load %struct.dirent64.12*, %struct.dirent64.12** %dp, align 8, !dbg !3625
  %d_reclen75 = getelementptr inbounds %struct.dirent64.12, %struct.dirent64.12* %81, i32 0, i32 2, !dbg !3626
  %82 = load i16, i16* %d_reclen75, align 8, !dbg !3626
  %conv76 = zext i16 %82 to i32, !dbg !3625
  %83 = load i32, i32* %pos, align 4, !dbg !3627
  %add77 = add nsw i32 %83, %conv76, !dbg !3627
  store i32 %add77, i32* %pos, align 4, !dbg !3627
  br label %while.cond, !dbg !3610, !llvm.loop !3628

if.end78:                                         ; preds = %while.cond, %if.end53
  %84 = load i32, i32* %res, align 4, !dbg !3630
  store i32 %84, i32* %retval, align 4, !dbg !3631
  br label %return, !dbg !3631

return:                                           ; preds = %if.end78, %for.end, %if.then11, %if.then3, %if.then
  %85 = load i32, i32* %retval, align 4, !dbg !3632
  ret i32 %85, !dbg !3632
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ioctl(i32 %fd, i64 %request, ...) #0 !dbg !3633 {
entry:
  %retval = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %request.addr = alloca i64, align 8
  %f = alloca %struct.exe_file_t.17*, align 8
  %ap = alloca [1 x %struct.__va_list_tag.13], align 16
  %buf = alloca i8*, align 8
  %stat = alloca %struct.stat64.15*, align 8
  %ts = alloca %struct.termios*, align 8
  %ws = alloca %struct.winsize*, align 8
  %res = alloca i32*, align 8
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !3636, metadata !DIExpression()), !dbg !3637
  store i64 %request, i64* %request.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %request.addr, metadata !3638, metadata !DIExpression()), !dbg !3639
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %f, metadata !3640, metadata !DIExpression()), !dbg !3641
  %0 = load i32, i32* %fd.addr, align 4, !dbg !3642
  %call = call %struct.exe_file_t.17* @__get_file(i32 %0), !dbg !3643
  store %struct.exe_file_t.17* %call, %struct.exe_file_t.17** %f, align 8, !dbg !3641
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag.13]* %ap, metadata !3644, metadata !DIExpression()), !dbg !3655
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !3656, metadata !DIExpression()), !dbg !3657
  %1 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !3658
  %tobool = icmp ne %struct.exe_file_t.17* %1, null, !dbg !3658
  br i1 %tobool, label %if.end, label %if.then, !dbg !3660

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #22, !dbg !3661
  store i32 9, i32* %call1, align 4, !dbg !3663
  store i32 -1, i32* %retval, align 4, !dbg !3664
  br label %return, !dbg !3664

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag.13], [1 x %struct.__va_list_tag.13]* %ap, i64 0, i64 0, !dbg !3665
  %arraydecay2 = bitcast %struct.__va_list_tag.13* %arraydecay to i8*, !dbg !3665
  call void @llvm.va_start(i8* %arraydecay2), !dbg !3665
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag.13], [1 x %struct.__va_list_tag.13]* %ap, i64 0, i64 0, !dbg !3666
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag.13, %struct.__va_list_tag.13* %arraydecay3, i32 0, i32 0, !dbg !3666
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !3666
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !3666
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !3666

vaarg.in_reg:                                     ; preds = %if.end
  %2 = getelementptr inbounds %struct.__va_list_tag.13, %struct.__va_list_tag.13* %arraydecay3, i32 0, i32 3, !dbg !3666
  %reg_save_area = load i8*, i8** %2, align 16, !dbg !3666
  %3 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !3666
  %4 = bitcast i8* %3 to i8**, !dbg !3666
  %5 = add i32 %gp_offset, 8, !dbg !3666
  store i32 %5, i32* %gp_offset_p, align 16, !dbg !3666
  br label %vaarg.end, !dbg !3666

vaarg.in_mem:                                     ; preds = %if.end
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag.13, %struct.__va_list_tag.13* %arraydecay3, i32 0, i32 2, !dbg !3666
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !3666
  %6 = bitcast i8* %overflow_arg_area to i8**, !dbg !3666
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !3666
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !3666
  br label %vaarg.end, !dbg !3666

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i8** [ %4, %vaarg.in_reg ], [ %6, %vaarg.in_mem ], !dbg !3666
  %7 = load i8*, i8** %vaarg.addr, align 8, !dbg !3666
  store i8* %7, i8** %buf, align 8, !dbg !3667
  %arraydecay4 = getelementptr inbounds [1 x %struct.__va_list_tag.13], [1 x %struct.__va_list_tag.13]* %ap, i64 0, i64 0, !dbg !3668
  %arraydecay45 = bitcast %struct.__va_list_tag.13* %arraydecay4 to i8*, !dbg !3668
  call void @llvm.va_end(i8* %arraydecay45), !dbg !3668
  %8 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !3669
  %dfile = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %8, i32 0, i32 3, !dbg !3671
  %9 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !3671
  %tobool6 = icmp ne %struct.exe_disk_file_t.16* %9, null, !dbg !3669
  %10 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !3672
  br i1 %tobool6, label %if.then7, label %if.end103, !dbg !3673

if.then7:                                         ; preds = %vaarg.end
  call void @llvm.dbg.declare(metadata %struct.stat64.15** %stat, metadata !3674, metadata !DIExpression()), !dbg !3676
  %dfile8 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %10, i32 0, i32 3, !dbg !3677
  %11 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile8, align 8, !dbg !3677
  %stat9 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %11, i32 0, i32 2, !dbg !3678
  %12 = load %struct.stat64.15*, %struct.stat64.15** %stat9, align 8, !dbg !3678
  %13 = bitcast %struct.stat64.15* %12 to %struct.stat64.15*, !dbg !3679
  store %struct.stat64.15* %13, %struct.stat64.15** %stat, align 8, !dbg !3676
  %14 = load i64, i64* %request.addr, align 8, !dbg !3680
  switch i64 %14, label %sw.default [
    i64 21505, label %sw.bb
    i64 21506, label %sw.bb48
    i64 21507, label %sw.bb55
    i64 21508, label %sw.bb60
    i64 21523, label %sw.bb67
    i64 21524, label %sw.bb74
    i64 21531, label %sw.bb82
    i64 2150657282, label %sw.bb100
  ], !dbg !3681

sw.bb:                                            ; preds = %if.then7
  call void @llvm.dbg.declare(metadata %struct.termios** %ts, metadata !3682, metadata !DIExpression()), !dbg !3701
  %15 = load i8*, i8** %buf, align 8, !dbg !3702
  %16 = bitcast i8* %15 to %struct.termios*, !dbg !3702
  store %struct.termios* %16, %struct.termios** %ts, align 8, !dbg !3701
  call void @klee_warning_once(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.14.103, i64 0, i64 0)), !dbg !3703
  %17 = load %struct.stat64.15*, %struct.stat64.15** %stat, align 8, !dbg !3704
  %st_mode = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %17, i32 0, i32 3, !dbg !3704
  %18 = load i32, i32* %st_mode, align 8, !dbg !3704
  %and = and i32 %18, 61440, !dbg !3704
  %cmp = icmp eq i32 %and, 8192, !dbg !3704
  br i1 %cmp, label %if.then10, label %if.else, !dbg !3706

if.then10:                                        ; preds = %sw.bb
  %19 = load %struct.termios*, %struct.termios** %ts, align 8, !dbg !3707
  %c_iflag = getelementptr inbounds %struct.termios, %struct.termios* %19, i32 0, i32 0, !dbg !3709
  store i32 27906, i32* %c_iflag, align 4, !dbg !3710
  %20 = load %struct.termios*, %struct.termios** %ts, align 8, !dbg !3711
  %c_oflag = getelementptr inbounds %struct.termios, %struct.termios* %20, i32 0, i32 1, !dbg !3712
  store i32 5, i32* %c_oflag, align 4, !dbg !3713
  %21 = load %struct.termios*, %struct.termios** %ts, align 8, !dbg !3714
  %c_cflag = getelementptr inbounds %struct.termios, %struct.termios* %21, i32 0, i32 2, !dbg !3715
  store i32 1215, i32* %c_cflag, align 4, !dbg !3716
  %22 = load %struct.termios*, %struct.termios** %ts, align 8, !dbg !3717
  %c_lflag = getelementptr inbounds %struct.termios, %struct.termios* %22, i32 0, i32 3, !dbg !3718
  store i32 35287, i32* %c_lflag, align 4, !dbg !3719
  %23 = load %struct.termios*, %struct.termios** %ts, align 8, !dbg !3720
  %c_line = getelementptr inbounds %struct.termios, %struct.termios* %23, i32 0, i32 4, !dbg !3721
  store i8 0, i8* %c_line, align 4, !dbg !3722
  %24 = load %struct.termios*, %struct.termios** %ts, align 8, !dbg !3723
  %c_cc = getelementptr inbounds %struct.termios, %struct.termios* %24, i32 0, i32 5, !dbg !3724
  %arrayidx = getelementptr inbounds [32 x i8], [32 x i8]* %c_cc, i64 0, i64 0, !dbg !3723
  store i8 3, i8* %arrayidx, align 1, !dbg !3725
  %25 = load %struct.termios*, %struct.termios** %ts, align 8, !dbg !3726
  %c_cc11 = getelementptr inbounds %struct.termios, %struct.termios* %25, i32 0, i32 5, !dbg !3727
  %arrayidx12 = getelementptr inbounds [32 x i8], [32 x i8]* %c_cc11, i64 0, i64 1, !dbg !3726
  store i8 28, i8* %arrayidx12, align 1, !dbg !3728
  %26 = load %struct.termios*, %struct.termios** %ts, align 8, !dbg !3729
  %c_cc13 = getelementptr inbounds %struct.termios, %struct.termios* %26, i32 0, i32 5, !dbg !3730
  %arrayidx14 = getelementptr inbounds [32 x i8], [32 x i8]* %c_cc13, i64 0, i64 2, !dbg !3729
  store i8 127, i8* %arrayidx14, align 1, !dbg !3731
  %27 = load %struct.termios*, %struct.termios** %ts, align 8, !dbg !3732
  %c_cc15 = getelementptr inbounds %struct.termios, %struct.termios* %27, i32 0, i32 5, !dbg !3733
  %arrayidx16 = getelementptr inbounds [32 x i8], [32 x i8]* %c_cc15, i64 0, i64 3, !dbg !3732
  store i8 21, i8* %arrayidx16, align 1, !dbg !3734
  %28 = load %struct.termios*, %struct.termios** %ts, align 8, !dbg !3735
  %c_cc17 = getelementptr inbounds %struct.termios, %struct.termios* %28, i32 0, i32 5, !dbg !3736
  %arrayidx18 = getelementptr inbounds [32 x i8], [32 x i8]* %c_cc17, i64 0, i64 4, !dbg !3735
  store i8 4, i8* %arrayidx18, align 1, !dbg !3737
  %29 = load %struct.termios*, %struct.termios** %ts, align 8, !dbg !3738
  %c_cc19 = getelementptr inbounds %struct.termios, %struct.termios* %29, i32 0, i32 5, !dbg !3739
  %arrayidx20 = getelementptr inbounds [32 x i8], [32 x i8]* %c_cc19, i64 0, i64 5, !dbg !3738
  store i8 0, i8* %arrayidx20, align 1, !dbg !3740
  %30 = load %struct.termios*, %struct.termios** %ts, align 8, !dbg !3741
  %c_cc21 = getelementptr inbounds %struct.termios, %struct.termios* %30, i32 0, i32 5, !dbg !3742
  %arrayidx22 = getelementptr inbounds [32 x i8], [32 x i8]* %c_cc21, i64 0, i64 6, !dbg !3741
  store i8 1, i8* %arrayidx22, align 1, !dbg !3743
  %31 = load %struct.termios*, %struct.termios** %ts, align 8, !dbg !3744
  %c_cc23 = getelementptr inbounds %struct.termios, %struct.termios* %31, i32 0, i32 5, !dbg !3745
  %arrayidx24 = getelementptr inbounds [32 x i8], [32 x i8]* %c_cc23, i64 0, i64 7, !dbg !3744
  store i8 -1, i8* %arrayidx24, align 1, !dbg !3746
  %32 = load %struct.termios*, %struct.termios** %ts, align 8, !dbg !3747
  %c_cc25 = getelementptr inbounds %struct.termios, %struct.termios* %32, i32 0, i32 5, !dbg !3748
  %arrayidx26 = getelementptr inbounds [32 x i8], [32 x i8]* %c_cc25, i64 0, i64 8, !dbg !3747
  store i8 17, i8* %arrayidx26, align 1, !dbg !3749
  %33 = load %struct.termios*, %struct.termios** %ts, align 8, !dbg !3750
  %c_cc27 = getelementptr inbounds %struct.termios, %struct.termios* %33, i32 0, i32 5, !dbg !3751
  %arrayidx28 = getelementptr inbounds [32 x i8], [32 x i8]* %c_cc27, i64 0, i64 9, !dbg !3750
  store i8 19, i8* %arrayidx28, align 1, !dbg !3752
  %34 = load %struct.termios*, %struct.termios** %ts, align 8, !dbg !3753
  %c_cc29 = getelementptr inbounds %struct.termios, %struct.termios* %34, i32 0, i32 5, !dbg !3754
  %arrayidx30 = getelementptr inbounds [32 x i8], [32 x i8]* %c_cc29, i64 0, i64 10, !dbg !3753
  store i8 26, i8* %arrayidx30, align 1, !dbg !3755
  %35 = load %struct.termios*, %struct.termios** %ts, align 8, !dbg !3756
  %c_cc31 = getelementptr inbounds %struct.termios, %struct.termios* %35, i32 0, i32 5, !dbg !3757
  %arrayidx32 = getelementptr inbounds [32 x i8], [32 x i8]* %c_cc31, i64 0, i64 11, !dbg !3756
  store i8 -1, i8* %arrayidx32, align 1, !dbg !3758
  %36 = load %struct.termios*, %struct.termios** %ts, align 8, !dbg !3759
  %c_cc33 = getelementptr inbounds %struct.termios, %struct.termios* %36, i32 0, i32 5, !dbg !3760
  %arrayidx34 = getelementptr inbounds [32 x i8], [32 x i8]* %c_cc33, i64 0, i64 12, !dbg !3759
  store i8 18, i8* %arrayidx34, align 1, !dbg !3761
  %37 = load %struct.termios*, %struct.termios** %ts, align 8, !dbg !3762
  %c_cc35 = getelementptr inbounds %struct.termios, %struct.termios* %37, i32 0, i32 5, !dbg !3763
  %arrayidx36 = getelementptr inbounds [32 x i8], [32 x i8]* %c_cc35, i64 0, i64 13, !dbg !3762
  store i8 15, i8* %arrayidx36, align 1, !dbg !3764
  %38 = load %struct.termios*, %struct.termios** %ts, align 8, !dbg !3765
  %c_cc37 = getelementptr inbounds %struct.termios, %struct.termios* %38, i32 0, i32 5, !dbg !3766
  %arrayidx38 = getelementptr inbounds [32 x i8], [32 x i8]* %c_cc37, i64 0, i64 14, !dbg !3765
  store i8 23, i8* %arrayidx38, align 1, !dbg !3767
  %39 = load %struct.termios*, %struct.termios** %ts, align 8, !dbg !3768
  %c_cc39 = getelementptr inbounds %struct.termios, %struct.termios* %39, i32 0, i32 5, !dbg !3769
  %arrayidx40 = getelementptr inbounds [32 x i8], [32 x i8]* %c_cc39, i64 0, i64 15, !dbg !3768
  store i8 22, i8* %arrayidx40, align 1, !dbg !3770
  %40 = load %struct.termios*, %struct.termios** %ts, align 8, !dbg !3771
  %c_cc41 = getelementptr inbounds %struct.termios, %struct.termios* %40, i32 0, i32 5, !dbg !3772
  %arrayidx42 = getelementptr inbounds [32 x i8], [32 x i8]* %c_cc41, i64 0, i64 16, !dbg !3771
  store i8 -1, i8* %arrayidx42, align 1, !dbg !3773
  %41 = load %struct.termios*, %struct.termios** %ts, align 8, !dbg !3774
  %c_cc43 = getelementptr inbounds %struct.termios, %struct.termios* %41, i32 0, i32 5, !dbg !3775
  %arrayidx44 = getelementptr inbounds [32 x i8], [32 x i8]* %c_cc43, i64 0, i64 17, !dbg !3774
  store i8 0, i8* %arrayidx44, align 1, !dbg !3776
  %42 = load %struct.termios*, %struct.termios** %ts, align 8, !dbg !3777
  %c_cc45 = getelementptr inbounds %struct.termios, %struct.termios* %42, i32 0, i32 5, !dbg !3778
  %arrayidx46 = getelementptr inbounds [32 x i8], [32 x i8]* %c_cc45, i64 0, i64 18, !dbg !3777
  store i8 0, i8* %arrayidx46, align 1, !dbg !3779
  store i32 0, i32* %retval, align 4, !dbg !3780
  br label %return, !dbg !3780

if.else:                                          ; preds = %sw.bb
  %call47 = call i32* @__errno_location() #22, !dbg !3781
  store i32 25, i32* %call47, align 4, !dbg !3783
  store i32 -1, i32* %retval, align 4, !dbg !3784
  br label %return, !dbg !3784

sw.bb48:                                          ; preds = %if.then7
  call void @klee_warning_once(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.15.104, i64 0, i64 0)), !dbg !3785
  %43 = load %struct.stat64.15*, %struct.stat64.15** %stat, align 8, !dbg !3787
  %st_mode49 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %43, i32 0, i32 3, !dbg !3787
  %44 = load i32, i32* %st_mode49, align 8, !dbg !3787
  %and50 = and i32 %44, 61440, !dbg !3787
  %cmp51 = icmp eq i32 %and50, 8192, !dbg !3787
  br i1 %cmp51, label %if.then52, label %if.else53, !dbg !3789

if.then52:                                        ; preds = %sw.bb48
  store i32 0, i32* %retval, align 4, !dbg !3790
  br label %return, !dbg !3790

if.else53:                                        ; preds = %sw.bb48
  %call54 = call i32* @__errno_location() #22, !dbg !3792
  store i32 25, i32* %call54, align 4, !dbg !3794
  store i32 -1, i32* %retval, align 4, !dbg !3795
  br label %return, !dbg !3795

sw.bb55:                                          ; preds = %if.then7
  call void @klee_warning_once(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.16.105, i64 0, i64 0)), !dbg !3796
  %45 = load i32, i32* %fd.addr, align 4, !dbg !3798
  %cmp56 = icmp eq i32 %45, 0, !dbg !3800
  br i1 %cmp56, label %if.then57, label %if.else58, !dbg !3801

if.then57:                                        ; preds = %sw.bb55
  store i32 0, i32* %retval, align 4, !dbg !3802
  br label %return, !dbg !3802

if.else58:                                        ; preds = %sw.bb55
  %call59 = call i32* @__errno_location() #22, !dbg !3804
  store i32 25, i32* %call59, align 4, !dbg !3806
  store i32 -1, i32* %retval, align 4, !dbg !3807
  br label %return, !dbg !3807

sw.bb60:                                          ; preds = %if.then7
  call void @klee_warning_once(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.17.106, i64 0, i64 0)), !dbg !3808
  %46 = load %struct.stat64.15*, %struct.stat64.15** %stat, align 8, !dbg !3810
  %st_mode61 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %46, i32 0, i32 3, !dbg !3810
  %47 = load i32, i32* %st_mode61, align 8, !dbg !3810
  %and62 = and i32 %47, 61440, !dbg !3810
  %cmp63 = icmp eq i32 %and62, 8192, !dbg !3810
  br i1 %cmp63, label %if.then64, label %if.else65, !dbg !3812

if.then64:                                        ; preds = %sw.bb60
  store i32 0, i32* %retval, align 4, !dbg !3813
  br label %return, !dbg !3813

if.else65:                                        ; preds = %sw.bb60
  %call66 = call i32* @__errno_location() #22, !dbg !3815
  store i32 25, i32* %call66, align 4, !dbg !3817
  store i32 -1, i32* %retval, align 4, !dbg !3818
  br label %return, !dbg !3818

sw.bb67:                                          ; preds = %if.then7
  call void @llvm.dbg.declare(metadata %struct.winsize** %ws, metadata !3819, metadata !DIExpression()), !dbg !3829
  %48 = load i8*, i8** %buf, align 8, !dbg !3830
  %49 = bitcast i8* %48 to %struct.winsize*, !dbg !3830
  store %struct.winsize* %49, %struct.winsize** %ws, align 8, !dbg !3829
  %50 = load %struct.winsize*, %struct.winsize** %ws, align 8, !dbg !3831
  %ws_row = getelementptr inbounds %struct.winsize, %struct.winsize* %50, i32 0, i32 0, !dbg !3832
  store i16 24, i16* %ws_row, align 2, !dbg !3833
  %51 = load %struct.winsize*, %struct.winsize** %ws, align 8, !dbg !3834
  %ws_col = getelementptr inbounds %struct.winsize, %struct.winsize* %51, i32 0, i32 1, !dbg !3835
  store i16 80, i16* %ws_col, align 2, !dbg !3836
  call void @klee_warning_once(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.18.107, i64 0, i64 0)), !dbg !3837
  %52 = load %struct.stat64.15*, %struct.stat64.15** %stat, align 8, !dbg !3838
  %st_mode68 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %52, i32 0, i32 3, !dbg !3838
  %53 = load i32, i32* %st_mode68, align 8, !dbg !3838
  %and69 = and i32 %53, 61440, !dbg !3838
  %cmp70 = icmp eq i32 %and69, 8192, !dbg !3838
  br i1 %cmp70, label %if.then71, label %if.else72, !dbg !3840

if.then71:                                        ; preds = %sw.bb67
  store i32 0, i32* %retval, align 4, !dbg !3841
  br label %return, !dbg !3841

if.else72:                                        ; preds = %sw.bb67
  %call73 = call i32* @__errno_location() #22, !dbg !3843
  store i32 25, i32* %call73, align 4, !dbg !3845
  store i32 -1, i32* %retval, align 4, !dbg !3846
  br label %return, !dbg !3846

sw.bb74:                                          ; preds = %if.then7
  call void @klee_warning_once(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.19.108, i64 0, i64 0)), !dbg !3847
  %54 = load %struct.stat64.15*, %struct.stat64.15** %stat, align 8, !dbg !3849
  %st_mode75 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %54, i32 0, i32 3, !dbg !3849
  %55 = load i32, i32* %st_mode75, align 8, !dbg !3849
  %and76 = and i32 %55, 61440, !dbg !3849
  %cmp77 = icmp eq i32 %and76, 8192, !dbg !3849
  %call79 = call i32* @__errno_location() #22, !dbg !3851
  br i1 %cmp77, label %if.then78, label %if.else80, !dbg !3852

if.then78:                                        ; preds = %sw.bb74
  store i32 22, i32* %call79, align 4, !dbg !3853
  store i32 -1, i32* %retval, align 4, !dbg !3855
  br label %return, !dbg !3855

if.else80:                                        ; preds = %sw.bb74
  store i32 25, i32* %call79, align 4, !dbg !3856
  store i32 -1, i32* %retval, align 4, !dbg !3858
  br label %return, !dbg !3858

sw.bb82:                                          ; preds = %if.then7
  call void @llvm.dbg.declare(metadata i32** %res, metadata !3859, metadata !DIExpression()), !dbg !3861
  %56 = load i8*, i8** %buf, align 8, !dbg !3862
  %57 = bitcast i8* %56 to i32*, !dbg !3862
  store i32* %57, i32** %res, align 8, !dbg !3861
  call void @klee_warning_once(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.20.109, i64 0, i64 0)), !dbg !3863
  %58 = load %struct.stat64.15*, %struct.stat64.15** %stat, align 8, !dbg !3864
  %st_mode83 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %58, i32 0, i32 3, !dbg !3864
  %59 = load i32, i32* %st_mode83, align 8, !dbg !3864
  %and84 = and i32 %59, 61440, !dbg !3864
  %cmp85 = icmp eq i32 %and84, 8192, !dbg !3864
  br i1 %cmp85, label %if.then86, label %if.else98, !dbg !3866

if.then86:                                        ; preds = %sw.bb82
  %60 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !3867
  %off = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %60, i32 0, i32 2, !dbg !3870
  %61 = load i64, i64* %off, align 8, !dbg !3870
  %62 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !3871
  %dfile87 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %62, i32 0, i32 3, !dbg !3872
  %63 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile87, align 8, !dbg !3872
  %size = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %63, i32 0, i32 0, !dbg !3873
  %64 = load i32, i32* %size, align 8, !dbg !3873
  %conv = zext i32 %64 to i64, !dbg !3874
  %cmp88 = icmp slt i64 %61, %conv, !dbg !3875
  br i1 %cmp88, label %if.then90, label %if.else96, !dbg !3876

if.then90:                                        ; preds = %if.then86
  %65 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !3877
  %dfile91 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %65, i32 0, i32 3, !dbg !3879
  %66 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile91, align 8, !dbg !3879
  %size92 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %66, i32 0, i32 0, !dbg !3880
  %67 = load i32, i32* %size92, align 8, !dbg !3880
  %conv93 = zext i32 %67 to i64, !dbg !3877
  %68 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !3881
  %off94 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %68, i32 0, i32 2, !dbg !3882
  %69 = load i64, i64* %off94, align 8, !dbg !3882
  %sub = sub nsw i64 %conv93, %69, !dbg !3883
  %conv95 = trunc i64 %sub to i32, !dbg !3877
  %70 = load i32*, i32** %res, align 8, !dbg !3884
  store i32 %conv95, i32* %70, align 4, !dbg !3885
  br label %if.end97, !dbg !3886

if.else96:                                        ; preds = %if.then86
  %71 = load i32*, i32** %res, align 8, !dbg !3887
  store i32 0, i32* %71, align 4, !dbg !3889
  br label %if.end97

if.end97:                                         ; preds = %if.else96, %if.then90
  store i32 0, i32* %retval, align 4, !dbg !3890
  br label %return, !dbg !3890

if.else98:                                        ; preds = %sw.bb82
  %call99 = call i32* @__errno_location() #22, !dbg !3891
  store i32 25, i32* %call99, align 4, !dbg !3893
  store i32 -1, i32* %retval, align 4, !dbg !3894
  br label %return, !dbg !3894

sw.bb100:                                         ; preds = %if.then7
  call void @klee_warning(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.21.110, i64 0, i64 0)), !dbg !3895
  %call101 = call i32* @__errno_location() #22, !dbg !3897
  store i32 22, i32* %call101, align 4, !dbg !3898
  store i32 -1, i32* %retval, align 4, !dbg !3899
  br label %return, !dbg !3899

sw.default:                                       ; preds = %if.then7
  call void @klee_warning(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.11.100, i64 0, i64 0)), !dbg !3900
  %call102 = call i32* @__errno_location() #22, !dbg !3901
  store i32 22, i32* %call102, align 4, !dbg !3902
  store i32 -1, i32* %retval, align 4, !dbg !3903
  br label %return, !dbg !3903

if.end103:                                        ; preds = %vaarg.end
  %fd104 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %10, i32 0, i32 0, !dbg !3904
  %72 = load i32, i32* %fd104, align 8, !dbg !3904
  %73 = load i64, i64* %request.addr, align 8, !dbg !3905
  %74 = load i8*, i8** %buf, align 8, !dbg !3906
  %call105 = call i64 (i64, ...) @syscall(i64 16, i32 %72, i64 %73, i8* %74) #8, !dbg !3907
  %conv106 = trunc i64 %call105 to i32, !dbg !3907
  store i32 %conv106, i32* %retval, align 4, !dbg !3908
  br label %return, !dbg !3908

return:                                           ; preds = %if.end103, %sw.default, %sw.bb100, %if.else98, %if.end97, %if.else80, %if.then78, %if.else72, %if.then71, %if.else65, %if.then64, %if.else58, %if.then57, %if.else53, %if.then52, %if.else, %if.then10, %if.then
  %75 = load i32, i32* %retval, align 4, !dbg !3909
  ret i32 %75, !dbg !3909
}

declare dso_local void @klee_warning_once(i8*) #4

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @fcntl(i32 %fd, i32 %cmd, ...) #0 !dbg !3910 {
entry:
  %retval = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %cmd.addr = alloca i32, align 4
  %f = alloca %struct.exe_file_t.17*, align 8
  %ap = alloca [1 x %struct.__va_list_tag.13], align 16
  %arg = alloca i32, align 4
  %flags = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !3913, metadata !DIExpression()), !dbg !3914
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !3915, metadata !DIExpression()), !dbg !3916
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %f, metadata !3917, metadata !DIExpression()), !dbg !3918
  %0 = load i32, i32* %fd.addr, align 4, !dbg !3919
  %call = call %struct.exe_file_t.17* @__get_file(i32 %0), !dbg !3920
  store %struct.exe_file_t.17* %call, %struct.exe_file_t.17** %f, align 8, !dbg !3918
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag.13]* %ap, metadata !3921, metadata !DIExpression()), !dbg !3922
  call void @llvm.dbg.declare(metadata i32* %arg, metadata !3923, metadata !DIExpression()), !dbg !3924
  %1 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !3925
  %tobool = icmp ne %struct.exe_file_t.17* %1, null, !dbg !3925
  br i1 %tobool, label %if.end, label %if.then, !dbg !3927

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #22, !dbg !3928
  store i32 9, i32* %call1, align 4, !dbg !3930
  store i32 -1, i32* %retval, align 4, !dbg !3931
  br label %return, !dbg !3931

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %cmd.addr, align 4, !dbg !3932
  %cmp = icmp eq i32 %2, 1, !dbg !3934
  %3 = load i32, i32* %cmd.addr, align 4, !dbg !3935
  %cmp2 = icmp eq i32 %3, 3, !dbg !3936
  %or.cond = or i1 %cmp, %cmp2, !dbg !3937
  %4 = load i32, i32* %cmd.addr, align 4, !dbg !3938
  %cmp4 = icmp eq i32 %4, 9, !dbg !3939
  %or.cond1 = or i1 %or.cond, %cmp4, !dbg !3937
  %5 = load i32, i32* %cmd.addr, align 4, !dbg !3940
  %cmp6 = icmp eq i32 %5, 11, !dbg !3941
  %or.cond2 = or i1 %or.cond1, %cmp6, !dbg !3937
  %6 = load i32, i32* %cmd.addr, align 4, !dbg !3942
  %cmp8 = icmp eq i32 %6, 1025, !dbg !3943
  %or.cond3 = or i1 %or.cond2, %cmp8, !dbg !3937
  %7 = load i32, i32* %cmd.addr, align 4, !dbg !3944
  %cmp10 = icmp eq i32 %7, 1026, !dbg !3945
  %or.cond4 = or i1 %or.cond3, %cmp10, !dbg !3937
  br i1 %or.cond4, label %if.then11, label %if.else, !dbg !3937

if.then11:                                        ; preds = %if.end
  store i32 0, i32* %arg, align 4, !dbg !3946
  br label %if.end16, !dbg !3948

if.else:                                          ; preds = %if.end
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag.13], [1 x %struct.__va_list_tag.13]* %ap, i64 0, i64 0, !dbg !3949
  %arraydecay12 = bitcast %struct.__va_list_tag.13* %arraydecay to i8*, !dbg !3949
  call void @llvm.va_start(i8* %arraydecay12), !dbg !3949
  %arraydecay13 = getelementptr inbounds [1 x %struct.__va_list_tag.13], [1 x %struct.__va_list_tag.13]* %ap, i64 0, i64 0, !dbg !3951
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag.13, %struct.__va_list_tag.13* %arraydecay13, i32 0, i32 0, !dbg !3951
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !3951
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !3951
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !3951

vaarg.in_reg:                                     ; preds = %if.else
  %8 = getelementptr inbounds %struct.__va_list_tag.13, %struct.__va_list_tag.13* %arraydecay13, i32 0, i32 3, !dbg !3951
  %reg_save_area = load i8*, i8** %8, align 16, !dbg !3951
  %9 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !3951
  %10 = bitcast i8* %9 to i32*, !dbg !3951
  %11 = add i32 %gp_offset, 8, !dbg !3951
  store i32 %11, i32* %gp_offset_p, align 16, !dbg !3951
  br label %vaarg.end, !dbg !3951

vaarg.in_mem:                                     ; preds = %if.else
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag.13, %struct.__va_list_tag.13* %arraydecay13, i32 0, i32 2, !dbg !3951
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !3951
  %12 = bitcast i8* %overflow_arg_area to i32*, !dbg !3951
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !3951
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !3951
  br label %vaarg.end, !dbg !3951

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i32* [ %10, %vaarg.in_reg ], [ %12, %vaarg.in_mem ], !dbg !3951
  %13 = load i32, i32* %vaarg.addr, align 4, !dbg !3951
  store i32 %13, i32* %arg, align 4, !dbg !3952
  %arraydecay14 = getelementptr inbounds [1 x %struct.__va_list_tag.13], [1 x %struct.__va_list_tag.13]* %ap, i64 0, i64 0, !dbg !3953
  %arraydecay1415 = bitcast %struct.__va_list_tag.13* %arraydecay14 to i8*, !dbg !3953
  call void @llvm.va_end(i8* %arraydecay1415), !dbg !3953
  br label %if.end16

if.end16:                                         ; preds = %vaarg.end, %if.then11
  %14 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !3954
  %dfile = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %14, i32 0, i32 3, !dbg !3956
  %15 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !3956
  %tobool17 = icmp ne %struct.exe_disk_file_t.16* %15, null, !dbg !3954
  br i1 %tobool17, label %if.then18, label %if.end34, !dbg !3957

if.then18:                                        ; preds = %if.end16
  %16 = load i32, i32* %cmd.addr, align 4, !dbg !3958
  switch i32 %16, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb23
    i32 3, label %sw.bb32
  ], !dbg !3960

sw.bb:                                            ; preds = %if.then18
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !3961, metadata !DIExpression()), !dbg !3964
  store i32 0, i32* %flags, align 4, !dbg !3964
  %17 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !3965
  %flags19 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %17, i32 0, i32 1, !dbg !3967
  %18 = load i32, i32* %flags19, align 4, !dbg !3967
  %and = and i32 %18, 2, !dbg !3968
  %tobool20 = icmp ne i32 %and, 0, !dbg !3968
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !3969

if.then21:                                        ; preds = %sw.bb
  %19 = load i32, i32* %flags, align 4, !dbg !3970
  %or = or i32 %19, 1, !dbg !3970
  store i32 %or, i32* %flags, align 4, !dbg !3970
  br label %if.end22, !dbg !3971

if.end22:                                         ; preds = %if.then21, %sw.bb
  %20 = load i32, i32* %flags, align 4, !dbg !3972
  store i32 %20, i32* %retval, align 4, !dbg !3973
  br label %return, !dbg !3973

sw.bb23:                                          ; preds = %if.then18
  %21 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !3974
  %flags24 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %21, i32 0, i32 1, !dbg !3976
  %22 = load i32, i32* %flags24, align 4, !dbg !3977
  %and25 = and i32 %22, -3, !dbg !3977
  store i32 %and25, i32* %flags24, align 4, !dbg !3977
  %23 = load i32, i32* %arg, align 4, !dbg !3978
  %and26 = and i32 %23, 1, !dbg !3980
  %tobool27 = icmp ne i32 %and26, 0, !dbg !3980
  br i1 %tobool27, label %if.then28, label %if.end31, !dbg !3981

if.then28:                                        ; preds = %sw.bb23
  %24 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !3982
  %flags29 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %24, i32 0, i32 1, !dbg !3983
  %25 = load i32, i32* %flags29, align 4, !dbg !3984
  %or30 = or i32 %25, 2, !dbg !3984
  store i32 %or30, i32* %flags29, align 4, !dbg !3984
  br label %if.end31, !dbg !3982

if.end31:                                         ; preds = %if.then28, %sw.bb23
  store i32 0, i32* %retval, align 4, !dbg !3985
  br label %return, !dbg !3985

sw.bb32:                                          ; preds = %if.then18
  store i32 0, i32* %retval, align 4, !dbg !3986
  br label %return, !dbg !3986

sw.default:                                       ; preds = %if.then18
  call void @klee_warning(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.11.100, i64 0, i64 0)), !dbg !3988
  %call33 = call i32* @__errno_location() #22, !dbg !3989
  store i32 22, i32* %call33, align 4, !dbg !3990
  store i32 -1, i32* %retval, align 4, !dbg !3991
  br label %return, !dbg !3991

if.end34:                                         ; preds = %if.end16
  %26 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !3992
  %fd35 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %26, i32 0, i32 0, !dbg !3993
  %27 = load i32, i32* %fd35, align 8, !dbg !3993
  %28 = load i32, i32* %cmd.addr, align 4, !dbg !3994
  %29 = load i32, i32* %arg, align 4, !dbg !3995
  %call36 = call i64 (i64, ...) @syscall(i64 72, i32 %27, i32 %28, i32 %29) #8, !dbg !3996
  %conv = trunc i64 %call36 to i32, !dbg !3996
  store i32 %conv, i32* %retval, align 4, !dbg !3997
  br label %return, !dbg !3997

return:                                           ; preds = %if.end34, %sw.default, %sw.bb32, %if.end31, %if.end22, %if.then
  %30 = load i32, i32* %retval, align 4, !dbg !3998
  ret i32 %30, !dbg !3998
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @__fd_statfs(i8* %path, %struct.statfs.11* %buf) #0 !dbg !3999 {
entry:
  %retval = alloca i32, align 4
  %path.addr = alloca i8*, align 8
  %buf.addr = alloca %struct.statfs.11*, align 8
  %dfile = alloca %struct.exe_disk_file_t.16*, align 8
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !4023, metadata !DIExpression()), !dbg !4024
  store %struct.statfs.11* %buf, %struct.statfs.11** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.statfs.11** %buf.addr, metadata !4025, metadata !DIExpression()), !dbg !4026
  call void @llvm.dbg.declare(metadata %struct.exe_disk_file_t.16** %dfile, metadata !4027, metadata !DIExpression()), !dbg !4028
  %0 = load i8*, i8** %path.addr, align 8, !dbg !4029
  %call = call %struct.exe_disk_file_t.16* @__get_sym_file(i8* %0), !dbg !4030
  store %struct.exe_disk_file_t.16* %call, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !4028
  %1 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !4031
  %tobool = icmp ne %struct.exe_disk_file_t.16* %1, null, !dbg !4031
  br i1 %tobool, label %if.then, label %if.end, !dbg !4033

if.then:                                          ; preds = %entry
  call void @klee_warning(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.91, i64 0, i64 0)), !dbg !4034
  %call1 = call i32* @__errno_location() #22, !dbg !4036
  store i32 2, i32* %call1, align 4, !dbg !4037
  store i32 -1, i32* %retval, align 4, !dbg !4038
  br label %return, !dbg !4038

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %path.addr, align 8, !dbg !4039
  %call2 = call i8* @__concretize_string(i8* %2), !dbg !4040
  %3 = load %struct.statfs.11*, %struct.statfs.11** %buf.addr, align 8, !dbg !4041
  %call3 = call i64 (i64, ...) @syscall(i64 137, i8* %call2, %struct.statfs.11* %3) #8, !dbg !4042
  %conv = trunc i64 %call3 to i32, !dbg !4042
  store i32 %conv, i32* %retval, align 4, !dbg !4043
  br label %return, !dbg !4043

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !4044
  ret i32 %4, !dbg !4044
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @fstatfs(i32 %fd, %struct.statfs.11* nonnull %buf) #0 !dbg !4045 {
entry:
  %retval = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %buf.addr = alloca %struct.statfs.11*, align 8
  %f = alloca %struct.exe_file_t.17*, align 8
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !4048, metadata !DIExpression()), !dbg !4049
  store %struct.statfs.11* %buf, %struct.statfs.11** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.statfs.11** %buf.addr, metadata !4050, metadata !DIExpression()), !dbg !4051
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %f, metadata !4052, metadata !DIExpression()), !dbg !4053
  %0 = load i32, i32* %fd.addr, align 4, !dbg !4054
  %call = call %struct.exe_file_t.17* @__get_file(i32 %0), !dbg !4055
  store %struct.exe_file_t.17* %call, %struct.exe_file_t.17** %f, align 8, !dbg !4053
  %1 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !4056
  %tobool = icmp ne %struct.exe_file_t.17* %1, null, !dbg !4056
  br i1 %tobool, label %if.end, label %if.then, !dbg !4058

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #22, !dbg !4059
  store i32 9, i32* %call1, align 4, !dbg !4061
  store i32 -1, i32* %retval, align 4, !dbg !4062
  br label %return, !dbg !4062

if.end:                                           ; preds = %entry
  %2 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !4063
  %dfile = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %2, i32 0, i32 3, !dbg !4065
  %3 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !4065
  %tobool2 = icmp ne %struct.exe_disk_file_t.16* %3, null, !dbg !4063
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !4066

if.then3:                                         ; preds = %if.end
  call void @klee_warning(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.22.113, i64 0, i64 0)), !dbg !4067
  %call4 = call i32* @__errno_location() #22, !dbg !4069
  store i32 9, i32* %call4, align 4, !dbg !4070
  store i32 -1, i32* %retval, align 4, !dbg !4071
  br label %return, !dbg !4071

if.end5:                                          ; preds = %if.end
  %4 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !4072
  %fd6 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %4, i32 0, i32 0, !dbg !4073
  %5 = load i32, i32* %fd6, align 8, !dbg !4073
  %6 = load %struct.statfs.11*, %struct.statfs.11** %buf.addr, align 8, !dbg !4074
  %call7 = call i64 (i64, ...) @syscall(i64 138, i32 %5, %struct.statfs.11* %6) #8, !dbg !4075
  %conv = trunc i64 %call7 to i32, !dbg !4075
  store i32 %conv, i32* %retval, align 4, !dbg !4076
  br label %return, !dbg !4076

return:                                           ; preds = %if.end5, %if.then3, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !4077
  ret i32 %7, !dbg !4077
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @fsync(i32 %fd) #0 !dbg !4078 {
entry:
  %retval = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %f = alloca %struct.exe_file_t.17*, align 8
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !4079, metadata !DIExpression()), !dbg !4080
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %f, metadata !4081, metadata !DIExpression()), !dbg !4082
  %0 = load i32, i32* %fd.addr, align 4, !dbg !4083
  %call = call %struct.exe_file_t.17* @__get_file(i32 %0), !dbg !4084
  store %struct.exe_file_t.17* %call, %struct.exe_file_t.17** %f, align 8, !dbg !4082
  %1 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !4085
  %tobool = icmp ne %struct.exe_file_t.17* %1, null, !dbg !4085
  br i1 %tobool, label %if.else, label %if.then, !dbg !4087

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #22, !dbg !4088
  store i32 9, i32* %call1, align 4, !dbg !4090
  store i32 -1, i32* %retval, align 4, !dbg !4091
  br label %return, !dbg !4091

if.else:                                          ; preds = %entry
  %2 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !4092
  %dfile = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %2, i32 0, i32 3, !dbg !4094
  %3 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !4094
  %tobool2 = icmp ne %struct.exe_disk_file_t.16* %3, null, !dbg !4092
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !4095

if.then3:                                         ; preds = %if.else
  store i32 0, i32* %retval, align 4, !dbg !4096
  br label %return, !dbg !4096

if.end4:                                          ; preds = %if.else
  %4 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !4098
  %fd5 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %4, i32 0, i32 0, !dbg !4099
  %5 = load i32, i32* %fd5, align 8, !dbg !4099
  %call6 = call i64 (i64, ...) @syscall(i64 74, i32 %5) #8, !dbg !4100
  %conv = trunc i64 %call6 to i32, !dbg !4100
  store i32 %conv, i32* %retval, align 4, !dbg !4101
  br label %return, !dbg !4101

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !4102
  ret i32 %6, !dbg !4102
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @dup2(i32 %oldfd, i32 %newfd) #0 !dbg !4103 {
entry:
  %retval = alloca i32, align 4
  %oldfd.addr = alloca i32, align 4
  %newfd.addr = alloca i32, align 4
  %f = alloca %struct.exe_file_t.17*, align 8
  %f2 = alloca %struct.exe_file_t.17*, align 8
  store i32 %oldfd, i32* %oldfd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %oldfd.addr, metadata !4106, metadata !DIExpression()), !dbg !4107
  store i32 %newfd, i32* %newfd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %newfd.addr, metadata !4108, metadata !DIExpression()), !dbg !4109
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %f, metadata !4110, metadata !DIExpression()), !dbg !4111
  %0 = load i32, i32* %oldfd.addr, align 4, !dbg !4112
  %call = call %struct.exe_file_t.17* @__get_file(i32 %0), !dbg !4113
  store %struct.exe_file_t.17* %call, %struct.exe_file_t.17** %f, align 8, !dbg !4111
  %1 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !4114
  %tobool = icmp ne %struct.exe_file_t.17* %1, null, !dbg !4114
  %2 = load i32, i32* %newfd.addr, align 4, !dbg !4116
  %cmp = icmp sge i32 %2, 0, !dbg !4117
  %or.cond = and i1 %tobool, %cmp, !dbg !4118
  %3 = load i32, i32* %newfd.addr, align 4, !dbg !4119
  %cmp1 = icmp slt i32 %3, 32, !dbg !4120
  %or.cond1 = and i1 %or.cond, %cmp1, !dbg !4118
  br i1 %or.cond1, label %if.else, label %if.then, !dbg !4118

if.then:                                          ; preds = %entry
  %call2 = call i32* @__errno_location() #22, !dbg !4121
  store i32 9, i32* %call2, align 4, !dbg !4123
  store i32 -1, i32* %retval, align 4, !dbg !4124
  br label %return, !dbg !4124

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %f2, metadata !4125, metadata !DIExpression()), !dbg !4127
  %4 = load i32, i32* %newfd.addr, align 4, !dbg !4128
  %idxprom = sext i32 %4 to i64, !dbg !4129
  %arrayidx = getelementptr inbounds [32 x %struct.exe_file_t.17], [32 x %struct.exe_file_t.17]* getelementptr inbounds (%struct.exe_sym_env_t.19, %struct.exe_sym_env_t.19* bitcast ({ <{ %struct.exe_file_t.17, %struct.exe_file_t.17, %struct.exe_file_t.17, [29 x %struct.exe_file_t.17] }>, i32, i32, i32, [4 x i8] }* @__exe_env to %struct.exe_sym_env_t.19*), i32 0, i32 0), i64 0, i64 %idxprom, !dbg !4129
  store %struct.exe_file_t.17* %arrayidx, %struct.exe_file_t.17** %f2, align 8, !dbg !4127
  %5 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f2, align 8, !dbg !4130
  %flags = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %5, i32 0, i32 1, !dbg !4132
  %6 = load i32, i32* %flags, align 4, !dbg !4132
  %and = and i32 %6, 1, !dbg !4133
  %tobool3 = icmp ne i32 %and, 0, !dbg !4133
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !4134

if.then4:                                         ; preds = %if.else
  %7 = load i32, i32* %newfd.addr, align 4, !dbg !4135
  %call5 = call i32 @close(i32 %7), !dbg !4136
  br label %if.end, !dbg !4136

if.end:                                           ; preds = %if.then4, %if.else
  %8 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f2, align 8, !dbg !4137
  %9 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !4138
  %10 = bitcast %struct.exe_file_t.17* %8 to i8*, !dbg !4139
  %11 = bitcast %struct.exe_file_t.17* %9 to i8*, !dbg !4139
  %12 = call i8* @memcpy(i8* %10, i8* %11, i64 24), !dbg !4139
  %13 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f2, align 8, !dbg !4140
  %flags6 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %13, i32 0, i32 1, !dbg !4141
  %14 = load i32, i32* %flags6, align 4, !dbg !4142
  %and7 = and i32 %14, -3, !dbg !4142
  store i32 %and7, i32* %flags6, align 4, !dbg !4142
  %15 = load i32, i32* %newfd.addr, align 4, !dbg !4143
  store i32 %15, i32* %retval, align 4, !dbg !4144
  br label %return, !dbg !4144

return:                                           ; preds = %if.end, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !4145
  ret i32 %16, !dbg !4145
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @dup(i32 %oldfd) #0 !dbg !4146 {
entry:
  %retval = alloca i32, align 4
  %oldfd.addr = alloca i32, align 4
  %f = alloca %struct.exe_file_t.17*, align 8
  %fd = alloca i32, align 4
  store i32 %oldfd, i32* %oldfd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %oldfd.addr, metadata !4147, metadata !DIExpression()), !dbg !4148
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %f, metadata !4149, metadata !DIExpression()), !dbg !4150
  %0 = load i32, i32* %oldfd.addr, align 4, !dbg !4151
  %call = call %struct.exe_file_t.17* @__get_file(i32 %0), !dbg !4152
  store %struct.exe_file_t.17* %call, %struct.exe_file_t.17** %f, align 8, !dbg !4150
  %1 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !4153
  %tobool = icmp ne %struct.exe_file_t.17* %1, null, !dbg !4153
  br i1 %tobool, label %if.else, label %if.then, !dbg !4155

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #22, !dbg !4156
  store i32 9, i32* %call1, align 4, !dbg !4158
  store i32 -1, i32* %retval, align 4, !dbg !4159
  br label %return, !dbg !4159

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !4160, metadata !DIExpression()), !dbg !4162
  store i32 0, i32* %fd, align 4, !dbg !4163
  br label %for.cond, !dbg !4165

for.cond:                                         ; preds = %for.inc, %if.else
  %2 = load i32, i32* %fd, align 4, !dbg !4166
  %cmp = icmp slt i32 %2, 32, !dbg !4168
  br i1 %cmp, label %for.body, label %for.end, !dbg !4169

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %fd, align 4, !dbg !4170
  %idxprom = sext i32 %3 to i64, !dbg !4172
  %arrayidx = getelementptr inbounds [32 x %struct.exe_file_t.17], [32 x %struct.exe_file_t.17]* getelementptr inbounds (%struct.exe_sym_env_t.19, %struct.exe_sym_env_t.19* bitcast ({ <{ %struct.exe_file_t.17, %struct.exe_file_t.17, %struct.exe_file_t.17, [29 x %struct.exe_file_t.17] }>, i32, i32, i32, [4 x i8] }* @__exe_env to %struct.exe_sym_env_t.19*), i32 0, i32 0), i64 0, i64 %idxprom, !dbg !4172
  %flags = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %arrayidx, i32 0, i32 1, !dbg !4173
  %4 = load i32, i32* %flags, align 4, !dbg !4173
  %and = and i32 %4, 1, !dbg !4174
  %tobool2 = icmp ne i32 %and, 0, !dbg !4174
  br i1 %tobool2, label %for.inc, label %for.end, !dbg !4175

for.inc:                                          ; preds = %for.body
  %5 = load i32, i32* %fd, align 4, !dbg !4176
  %inc = add nsw i32 %5, 1, !dbg !4176
  store i32 %inc, i32* %fd, align 4, !dbg !4176
  br label %for.cond, !dbg !4177, !llvm.loop !4178

for.end:                                          ; preds = %for.body, %for.cond
  %6 = load i32, i32* %fd, align 4, !dbg !4180
  %cmp4 = icmp eq i32 %6, 32, !dbg !4182
  br i1 %cmp4, label %if.then5, label %if.else7, !dbg !4183

if.then5:                                         ; preds = %for.end
  %call6 = call i32* @__errno_location() #22, !dbg !4184
  store i32 24, i32* %call6, align 4, !dbg !4186
  store i32 -1, i32* %retval, align 4, !dbg !4187
  br label %return, !dbg !4187

if.else7:                                         ; preds = %for.end
  %7 = load i32, i32* %oldfd.addr, align 4, !dbg !4188
  %8 = load i32, i32* %fd, align 4, !dbg !4190
  %call8 = call i32 @dup2(i32 %7, i32 %8) #8, !dbg !4191
  store i32 %call8, i32* %retval, align 4, !dbg !4192
  br label %return, !dbg !4192

return:                                           ; preds = %if.else7, %if.then5, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !4193
  ret i32 %9, !dbg !4193
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @rmdir(i8* nonnull %pathname) #0 !dbg !4194 {
entry:
  %retval = alloca i32, align 4
  %pathname.addr = alloca i8*, align 8
  %dfile = alloca %struct.exe_disk_file_t.16*, align 8
  store i8* %pathname, i8** %pathname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pathname.addr, metadata !4195, metadata !DIExpression()), !dbg !4196
  call void @llvm.dbg.declare(metadata %struct.exe_disk_file_t.16** %dfile, metadata !4197, metadata !DIExpression()), !dbg !4198
  %0 = load i8*, i8** %pathname.addr, align 8, !dbg !4199
  %call = call %struct.exe_disk_file_t.16* @__get_sym_file(i8* %0), !dbg !4200
  store %struct.exe_disk_file_t.16* %call, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !4198
  %1 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !4201
  %tobool = icmp ne %struct.exe_disk_file_t.16* %1, null, !dbg !4201
  br i1 %tobool, label %if.then, label %if.end, !dbg !4203

if.then:                                          ; preds = %entry
  %2 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !4204
  %stat = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %2, i32 0, i32 2, !dbg !4204
  %3 = load %struct.stat64.15*, %struct.stat64.15** %stat, align 8, !dbg !4204
  %st_mode = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %3, i32 0, i32 3, !dbg !4204
  %4 = load i32, i32* %st_mode, align 8, !dbg !4204
  %and = and i32 %4, 61440, !dbg !4204
  %cmp = icmp eq i32 %and, 16384, !dbg !4204
  br i1 %cmp, label %if.then1, label %if.else, !dbg !4207

if.then1:                                         ; preds = %if.then
  %5 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !4208
  %stat2 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %5, i32 0, i32 2, !dbg !4210
  %6 = load %struct.stat64.15*, %struct.stat64.15** %stat2, align 8, !dbg !4210
  %st_ino = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %6, i32 0, i32 1, !dbg !4211
  store i64 0, i64* %st_ino, align 8, !dbg !4212
  store i32 0, i32* %retval, align 4, !dbg !4213
  br label %return, !dbg !4213

if.else:                                          ; preds = %if.then
  %call3 = call i32* @__errno_location() #22, !dbg !4214
  store i32 20, i32* %call3, align 4, !dbg !4216
  store i32 -1, i32* %retval, align 4, !dbg !4217
  br label %return, !dbg !4217

if.end:                                           ; preds = %entry
  call void @klee_warning(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23.114, i64 0, i64 0)), !dbg !4218
  %call4 = call i32* @__errno_location() #22, !dbg !4219
  store i32 1, i32* %call4, align 4, !dbg !4220
  store i32 -1, i32* %retval, align 4, !dbg !4221
  br label %return, !dbg !4221

return:                                           ; preds = %if.end, %if.else, %if.then1
  %7 = load i32, i32* %retval, align 4, !dbg !4222
  ret i32 %7, !dbg !4222
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @unlink(i8* nonnull %pathname) #0 !dbg !4223 {
entry:
  %retval = alloca i32, align 4
  %pathname.addr = alloca i8*, align 8
  %dfile = alloca %struct.exe_disk_file_t.16*, align 8
  store i8* %pathname, i8** %pathname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pathname.addr, metadata !4224, metadata !DIExpression()), !dbg !4225
  call void @llvm.dbg.declare(metadata %struct.exe_disk_file_t.16** %dfile, metadata !4226, metadata !DIExpression()), !dbg !4227
  %0 = load i8*, i8** %pathname.addr, align 8, !dbg !4228
  %call = call %struct.exe_disk_file_t.16* @__get_sym_file(i8* %0), !dbg !4229
  store %struct.exe_disk_file_t.16* %call, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !4227
  %1 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !4230
  %tobool = icmp ne %struct.exe_disk_file_t.16* %1, null, !dbg !4230
  br i1 %tobool, label %if.then, label %if.end, !dbg !4232

if.then:                                          ; preds = %entry
  %2 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !4233
  %stat = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %2, i32 0, i32 2, !dbg !4233
  %3 = load %struct.stat64.15*, %struct.stat64.15** %stat, align 8, !dbg !4233
  %st_mode = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %3, i32 0, i32 3, !dbg !4233
  %4 = load i32, i32* %st_mode, align 8, !dbg !4233
  %and = and i32 %4, 61440, !dbg !4233
  %cmp = icmp eq i32 %and, 32768, !dbg !4233
  %5 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !4236
  %stat2 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %5, i32 0, i32 2, !dbg !4236
  %6 = load %struct.stat64.15*, %struct.stat64.15** %stat2, align 8, !dbg !4236
  br i1 %cmp, label %if.then1, label %if.else, !dbg !4237

if.then1:                                         ; preds = %if.then
  %st_ino = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %6, i32 0, i32 1, !dbg !4238
  store i64 0, i64* %st_ino, align 8, !dbg !4240
  store i32 0, i32* %retval, align 4, !dbg !4241
  br label %return, !dbg !4241

if.else:                                          ; preds = %if.then
  %st_mode4 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %6, i32 0, i32 3, !dbg !4242
  %7 = load i32, i32* %st_mode4, align 8, !dbg !4242
  %and5 = and i32 %7, 61440, !dbg !4242
  %cmp6 = icmp eq i32 %and5, 16384, !dbg !4242
  %call8 = call i32* @__errno_location() #22, !dbg !4244
  br i1 %cmp6, label %if.then7, label %if.else9, !dbg !4245

if.then7:                                         ; preds = %if.else
  store i32 21, i32* %call8, align 4, !dbg !4246
  store i32 -1, i32* %retval, align 4, !dbg !4248
  br label %return, !dbg !4248

if.else9:                                         ; preds = %if.else
  store i32 1, i32* %call8, align 4, !dbg !4249
  store i32 -1, i32* %retval, align 4, !dbg !4251
  br label %return, !dbg !4251

if.end:                                           ; preds = %entry
  call void @klee_warning(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23.114, i64 0, i64 0)), !dbg !4252
  %call11 = call i32* @__errno_location() #22, !dbg !4253
  store i32 1, i32* %call11, align 4, !dbg !4254
  store i32 -1, i32* %retval, align 4, !dbg !4255
  br label %return, !dbg !4255

return:                                           ; preds = %if.end, %if.else9, %if.then7, %if.then1
  %8 = load i32, i32* %retval, align 4, !dbg !4256
  ret i32 %8, !dbg !4256
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @unlinkat(i32 %dirfd, i8* nonnull %pathname, i32 %flags) #0 !dbg !4257 {
entry:
  %retval = alloca i32, align 4
  %dirfd.addr = alloca i32, align 4
  %pathname.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %dfile = alloca %struct.exe_disk_file_t.16*, align 8
  store i32 %dirfd, i32* %dirfd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dirfd.addr, metadata !4260, metadata !DIExpression()), !dbg !4261
  store i8* %pathname, i8** %pathname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pathname.addr, metadata !4262, metadata !DIExpression()), !dbg !4263
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !4264, metadata !DIExpression()), !dbg !4265
  call void @llvm.dbg.declare(metadata %struct.exe_disk_file_t.16** %dfile, metadata !4266, metadata !DIExpression()), !dbg !4267
  %0 = load i8*, i8** %pathname.addr, align 8, !dbg !4268
  %call = call %struct.exe_disk_file_t.16* @__get_sym_file(i8* %0), !dbg !4269
  store %struct.exe_disk_file_t.16* %call, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !4267
  %1 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !4270
  %tobool = icmp ne %struct.exe_disk_file_t.16* %1, null, !dbg !4270
  br i1 %tobool, label %if.then, label %if.end, !dbg !4272

if.then:                                          ; preds = %entry
  %2 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !4273
  %stat = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %2, i32 0, i32 2, !dbg !4273
  %3 = load %struct.stat64.15*, %struct.stat64.15** %stat, align 8, !dbg !4273
  %st_mode = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %3, i32 0, i32 3, !dbg !4273
  %4 = load i32, i32* %st_mode, align 8, !dbg !4273
  %and = and i32 %4, 61440, !dbg !4273
  %cmp = icmp eq i32 %and, 32768, !dbg !4273
  %5 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !4276
  %stat2 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %5, i32 0, i32 2, !dbg !4276
  %6 = load %struct.stat64.15*, %struct.stat64.15** %stat2, align 8, !dbg !4276
  br i1 %cmp, label %if.then1, label %if.else, !dbg !4277

if.then1:                                         ; preds = %if.then
  %st_ino = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %6, i32 0, i32 1, !dbg !4278
  store i64 0, i64* %st_ino, align 8, !dbg !4280
  store i32 0, i32* %retval, align 4, !dbg !4281
  br label %return, !dbg !4281

if.else:                                          ; preds = %if.then
  %st_mode4 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %6, i32 0, i32 3, !dbg !4282
  %7 = load i32, i32* %st_mode4, align 8, !dbg !4282
  %and5 = and i32 %7, 61440, !dbg !4282
  %cmp6 = icmp eq i32 %and5, 16384, !dbg !4282
  %call8 = call i32* @__errno_location() #22, !dbg !4284
  br i1 %cmp6, label %if.then7, label %if.else9, !dbg !4285

if.then7:                                         ; preds = %if.else
  store i32 21, i32* %call8, align 4, !dbg !4286
  store i32 -1, i32* %retval, align 4, !dbg !4288
  br label %return, !dbg !4288

if.else9:                                         ; preds = %if.else
  store i32 1, i32* %call8, align 4, !dbg !4289
  store i32 -1, i32* %retval, align 4, !dbg !4291
  br label %return, !dbg !4291

if.end:                                           ; preds = %entry
  call void @klee_warning(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23.114, i64 0, i64 0)), !dbg !4292
  %call11 = call i32* @__errno_location() #22, !dbg !4293
  store i32 1, i32* %call11, align 4, !dbg !4294
  store i32 -1, i32* %retval, align 4, !dbg !4295
  br label %return, !dbg !4295

return:                                           ; preds = %if.end, %if.else9, %if.then7, %if.then1
  %8 = load i32, i32* %retval, align 4, !dbg !4296
  ret i32 %8, !dbg !4296
}

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @readlink(i8* nonnull %path, i8* nonnull %buf, i64 %bufsize) #0 !dbg !4297 {
entry:
  %retval = alloca i64, align 8
  %path.addr = alloca i8*, align 8
  %buf.addr = alloca i8*, align 8
  %bufsize.addr = alloca i64, align 8
  %dfile = alloca %struct.exe_disk_file_t.16*, align 8
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !4300, metadata !DIExpression()), !dbg !4301
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !4302, metadata !DIExpression()), !dbg !4303
  store i64 %bufsize, i64* %bufsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bufsize.addr, metadata !4304, metadata !DIExpression()), !dbg !4305
  call void @llvm.dbg.declare(metadata %struct.exe_disk_file_t.16** %dfile, metadata !4306, metadata !DIExpression()), !dbg !4307
  %0 = load i8*, i8** %path.addr, align 8, !dbg !4308
  %call = call %struct.exe_disk_file_t.16* @__get_sym_file(i8* %0), !dbg !4309
  store %struct.exe_disk_file_t.16* %call, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !4307
  %1 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !4310
  %tobool = icmp ne %struct.exe_disk_file_t.16* %1, null, !dbg !4310
  br i1 %tobool, label %if.then, label %if.end20, !dbg !4312

if.then:                                          ; preds = %entry
  %2 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !4313
  %stat = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %2, i32 0, i32 2, !dbg !4313
  %3 = load %struct.stat64.15*, %struct.stat64.15** %stat, align 8, !dbg !4313
  %st_mode = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %3, i32 0, i32 3, !dbg !4313
  %4 = load i32, i32* %st_mode, align 8, !dbg !4313
  %and = and i32 %4, 61440, !dbg !4313
  %cmp = icmp eq i32 %and, 40960, !dbg !4313
  br i1 %cmp, label %if.then1, label %if.else, !dbg !4316

if.then1:                                         ; preds = %if.then
  %5 = load i8*, i8** %path.addr, align 8, !dbg !4317
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 0, !dbg !4317
  %6 = load i8, i8* %arrayidx, align 1, !dbg !4317
  %7 = load i8*, i8** %buf.addr, align 8, !dbg !4319
  %arrayidx2 = getelementptr inbounds i8, i8* %7, i64 0, !dbg !4319
  store i8 %6, i8* %arrayidx2, align 1, !dbg !4320
  %8 = load i64, i64* %bufsize.addr, align 8, !dbg !4321
  %cmp3 = icmp ugt i64 %8, 1, !dbg !4323
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !4324

if.then4:                                         ; preds = %if.then1
  %9 = load i8*, i8** %buf.addr, align 8, !dbg !4325
  %arrayidx5 = getelementptr inbounds i8, i8* %9, i64 1, !dbg !4325
  store i8 46, i8* %arrayidx5, align 1, !dbg !4326
  br label %if.end, !dbg !4325

if.end:                                           ; preds = %if.then4, %if.then1
  %10 = load i64, i64* %bufsize.addr, align 8, !dbg !4327
  %cmp6 = icmp ugt i64 %10, 2, !dbg !4329
  br i1 %cmp6, label %if.then7, label %if.end9, !dbg !4330

if.then7:                                         ; preds = %if.end
  %11 = load i8*, i8** %buf.addr, align 8, !dbg !4331
  %arrayidx8 = getelementptr inbounds i8, i8* %11, i64 2, !dbg !4331
  store i8 108, i8* %arrayidx8, align 1, !dbg !4332
  br label %if.end9, !dbg !4331

if.end9:                                          ; preds = %if.then7, %if.end
  %12 = load i64, i64* %bufsize.addr, align 8, !dbg !4333
  %cmp10 = icmp ugt i64 %12, 3, !dbg !4335
  br i1 %cmp10, label %if.then11, label %if.end13, !dbg !4336

if.then11:                                        ; preds = %if.end9
  %13 = load i8*, i8** %buf.addr, align 8, !dbg !4337
  %arrayidx12 = getelementptr inbounds i8, i8* %13, i64 3, !dbg !4337
  store i8 110, i8* %arrayidx12, align 1, !dbg !4338
  br label %if.end13, !dbg !4337

if.end13:                                         ; preds = %if.then11, %if.end9
  %14 = load i64, i64* %bufsize.addr, align 8, !dbg !4339
  %cmp14 = icmp ugt i64 %14, 4, !dbg !4341
  br i1 %cmp14, label %if.then15, label %if.end17, !dbg !4342

if.then15:                                        ; preds = %if.end13
  %15 = load i8*, i8** %buf.addr, align 8, !dbg !4343
  %arrayidx16 = getelementptr inbounds i8, i8* %15, i64 4, !dbg !4343
  store i8 107, i8* %arrayidx16, align 1, !dbg !4344
  br label %if.end17, !dbg !4343

if.end17:                                         ; preds = %if.then15, %if.end13
  %16 = load i64, i64* %bufsize.addr, align 8, !dbg !4345
  %cmp18 = icmp ugt i64 %16, 5, !dbg !4346
  %17 = load i64, i64* %bufsize.addr, align 8, !dbg !4347
  %cond = select i1 %cmp18, i64 5, i64 %17, !dbg !4347
  store i64 %cond, i64* %retval, align 8, !dbg !4348
  br label %return, !dbg !4348

if.else:                                          ; preds = %if.then
  %call19 = call i32* @__errno_location() #22, !dbg !4349
  store i32 22, i32* %call19, align 4, !dbg !4351
  store i64 -1, i64* %retval, align 8, !dbg !4352
  br label %return, !dbg !4352

if.end20:                                         ; preds = %entry
  %18 = load i8*, i8** %path.addr, align 8, !dbg !4353
  %19 = load i8*, i8** %buf.addr, align 8, !dbg !4354
  %20 = load i64, i64* %bufsize.addr, align 8, !dbg !4355
  %call21 = call i64 (i64, ...) @syscall(i64 89, i8* %18, i8* %19, i64 %20) #8, !dbg !4356
  store i64 %call21, i64* %retval, align 8, !dbg !4357
  br label %return, !dbg !4357

return:                                           ; preds = %if.end20, %if.else, %if.end17
  %21 = load i64, i64* %retval, align 8, !dbg !4358
  ret i64 %21, !dbg !4358
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @select(i32 %nfds, %struct.cgc_fd_set* %read, %struct.cgc_fd_set* %write, %struct.cgc_fd_set* %except, %struct.timespec.14* %timeout) #0 !dbg !4359 {
entry:
  %retval = alloca i32, align 4
  %nfds.addr = alloca i32, align 4
  %read.addr = alloca %struct.cgc_fd_set*, align 8
  %write.addr = alloca %struct.cgc_fd_set*, align 8
  %except.addr = alloca %struct.cgc_fd_set*, align 8
  %timeout.addr = alloca %struct.timespec.14*, align 8
  %in_read = alloca %struct.cgc_fd_set, align 8
  %in_write = alloca %struct.cgc_fd_set, align 8
  %in_except = alloca %struct.cgc_fd_set, align 8
  %os_read = alloca %struct.cgc_fd_set, align 8
  %os_write = alloca %struct.cgc_fd_set, align 8
  %os_except = alloca %struct.cgc_fd_set, align 8
  %i = alloca i32, align 4
  %count = alloca i32, align 4
  %os_nfds = alloca i32, align 4
  %f = alloca %struct.exe_file_t.17*, align 8
  %tv = alloca %struct.timespec.14, align 8
  %r = alloca i32, align 4
  %f182 = alloca %struct.exe_file_t.17*, align 8
  store i32 %nfds, i32* %nfds.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nfds.addr, metadata !4373, metadata !DIExpression()), !dbg !4374
  store %struct.cgc_fd_set* %read, %struct.cgc_fd_set** %read.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cgc_fd_set** %read.addr, metadata !4375, metadata !DIExpression()), !dbg !4376
  store %struct.cgc_fd_set* %write, %struct.cgc_fd_set** %write.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cgc_fd_set** %write.addr, metadata !4377, metadata !DIExpression()), !dbg !4378
  store %struct.cgc_fd_set* %except, %struct.cgc_fd_set** %except.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cgc_fd_set** %except.addr, metadata !4379, metadata !DIExpression()), !dbg !4380
  store %struct.timespec.14* %timeout, %struct.timespec.14** %timeout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec.14** %timeout.addr, metadata !4381, metadata !DIExpression()), !dbg !4382
  call void @llvm.dbg.declare(metadata %struct.cgc_fd_set* %in_read, metadata !4383, metadata !DIExpression()), !dbg !4384
  call void @llvm.dbg.declare(metadata %struct.cgc_fd_set* %in_write, metadata !4385, metadata !DIExpression()), !dbg !4386
  call void @llvm.dbg.declare(metadata %struct.cgc_fd_set* %in_except, metadata !4387, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.declare(metadata %struct.cgc_fd_set* %os_read, metadata !4389, metadata !DIExpression()), !dbg !4390
  call void @llvm.dbg.declare(metadata %struct.cgc_fd_set* %os_write, metadata !4391, metadata !DIExpression()), !dbg !4392
  call void @llvm.dbg.declare(metadata %struct.cgc_fd_set* %os_except, metadata !4393, metadata !DIExpression()), !dbg !4394
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4395, metadata !DIExpression()), !dbg !4396
  call void @llvm.dbg.declare(metadata i32* %count, metadata !4397, metadata !DIExpression()), !dbg !4398
  store i32 0, i32* %count, align 4, !dbg !4398
  call void @llvm.dbg.declare(metadata i32* %os_nfds, metadata !4399, metadata !DIExpression()), !dbg !4400
  store i32 0, i32* %os_nfds, align 4, !dbg !4400
  %0 = load %struct.cgc_fd_set*, %struct.cgc_fd_set** %read.addr, align 8, !dbg !4401
  %tobool = icmp ne %struct.cgc_fd_set* %0, null, !dbg !4401
  br i1 %tobool, label %if.then, label %if.else, !dbg !4403

if.then:                                          ; preds = %entry
  %1 = load %struct.cgc_fd_set*, %struct.cgc_fd_set** %read.addr, align 8, !dbg !4404
  %2 = bitcast %struct.cgc_fd_set* %in_read to i8*, !dbg !4406
  %3 = bitcast %struct.cgc_fd_set* %1 to i8*, !dbg !4406
  %4 = call i8* @memcpy(i8* %2, i8* %3, i64 128), !dbg !4406
  %5 = load %struct.cgc_fd_set*, %struct.cgc_fd_set** %read.addr, align 8, !dbg !4407
  %6 = bitcast %struct.cgc_fd_set* %5 to i8*, !dbg !4407
  %7 = call i8* @memset(i8* %6, i32 0, i64 128), !dbg !4407
  br label %if.end, !dbg !4408

if.else:                                          ; preds = %entry
  %8 = bitcast %struct.cgc_fd_set* %in_read to i8*, !dbg !4409
  %9 = call i8* @memset(i8* %8, i32 0, i64 128), !dbg !4409
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %10 = load %struct.cgc_fd_set*, %struct.cgc_fd_set** %write.addr, align 8, !dbg !4411
  %tobool1 = icmp ne %struct.cgc_fd_set* %10, null, !dbg !4411
  br i1 %tobool1, label %if.then2, label %if.else3, !dbg !4413

if.then2:                                         ; preds = %if.end
  %11 = load %struct.cgc_fd_set*, %struct.cgc_fd_set** %write.addr, align 8, !dbg !4414
  %12 = bitcast %struct.cgc_fd_set* %in_write to i8*, !dbg !4416
  %13 = bitcast %struct.cgc_fd_set* %11 to i8*, !dbg !4416
  %14 = call i8* @memcpy(i8* %12, i8* %13, i64 128), !dbg !4416
  %15 = load %struct.cgc_fd_set*, %struct.cgc_fd_set** %write.addr, align 8, !dbg !4417
  %16 = bitcast %struct.cgc_fd_set* %15 to i8*, !dbg !4417
  %17 = call i8* @memset(i8* %16, i32 0, i64 128), !dbg !4417
  br label %if.end4, !dbg !4418

if.else3:                                         ; preds = %if.end
  %18 = bitcast %struct.cgc_fd_set* %in_write to i8*, !dbg !4419
  %19 = call i8* @memset(i8* %18, i32 0, i64 128), !dbg !4419
  br label %if.end4

if.end4:                                          ; preds = %if.else3, %if.then2
  %20 = load %struct.cgc_fd_set*, %struct.cgc_fd_set** %except.addr, align 8, !dbg !4421
  %tobool5 = icmp ne %struct.cgc_fd_set* %20, null, !dbg !4421
  br i1 %tobool5, label %if.then6, label %if.else7, !dbg !4423

if.then6:                                         ; preds = %if.end4
  %21 = load %struct.cgc_fd_set*, %struct.cgc_fd_set** %except.addr, align 8, !dbg !4424
  %22 = bitcast %struct.cgc_fd_set* %in_except to i8*, !dbg !4426
  %23 = bitcast %struct.cgc_fd_set* %21 to i8*, !dbg !4426
  %24 = call i8* @memcpy(i8* %22, i8* %23, i64 128), !dbg !4426
  %25 = load %struct.cgc_fd_set*, %struct.cgc_fd_set** %except.addr, align 8, !dbg !4427
  %26 = bitcast %struct.cgc_fd_set* %25 to i8*, !dbg !4427
  %27 = call i8* @memset(i8* %26, i32 0, i64 128), !dbg !4427
  br label %if.end8, !dbg !4428

if.else7:                                         ; preds = %if.end4
  %28 = bitcast %struct.cgc_fd_set* %in_except to i8*, !dbg !4429
  %29 = call i8* @memset(i8* %28, i32 0, i64 128), !dbg !4429
  br label %if.end8

if.end8:                                          ; preds = %if.else7, %if.then6
  %30 = bitcast %struct.cgc_fd_set* %os_read to i8*, !dbg !4431
  %31 = call i8* @memset(i8* %30, i32 0, i64 128), !dbg !4431
  %32 = bitcast %struct.cgc_fd_set* %os_write to i8*, !dbg !4432
  %33 = call i8* @memset(i8* %32, i32 0, i64 128), !dbg !4432
  %34 = bitcast %struct.cgc_fd_set* %os_except to i8*, !dbg !4433
  %35 = call i8* @memset(i8* %34, i32 0, i64 128), !dbg !4433
  store i32 0, i32* %i, align 4, !dbg !4434
  br label %for.cond, !dbg !4436

for.cond:                                         ; preds = %for.inc, %if.end8
  %36 = load i32, i32* %i, align 4, !dbg !4437
  %37 = load i32, i32* %nfds.addr, align 4, !dbg !4439
  %cmp = icmp slt i32 %36, %37, !dbg !4440
  br i1 %cmp, label %for.body, label %for.end, !dbg !4441

for.body:                                         ; preds = %for.cond
  %fds_bits = getelementptr inbounds %struct.cgc_fd_set, %struct.cgc_fd_set* %in_read, i32 0, i32 0, !dbg !4442
  %38 = load i32, i32* %i, align 4, !dbg !4442
  %div = sdiv i32 %38, 64, !dbg !4442
  %idxprom = sext i32 %div to i64, !dbg !4442
  %arrayidx = getelementptr inbounds [16 x i64], [16 x i64]* %fds_bits, i64 0, i64 %idxprom, !dbg !4442
  %39 = load i64, i64* %arrayidx, align 8, !dbg !4442
  %40 = load i32, i32* %i, align 4, !dbg !4442
  %rem = srem i32 %40, 64, !dbg !4442
  %int_cast_to_i64 = zext i32 %rem to i64, !dbg !4442
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i64), !dbg !4442
  %shl = shl i32 1, %rem, !dbg !4442, !klee.check.shift !1763
  %conv = sext i32 %shl to i64, !dbg !4442
  %and = and i64 %39, %conv, !dbg !4442
  %tobool9 = icmp ne i64 %and, 0, !dbg !4442
  br i1 %tobool9, label %if.then29, label %lor.lhs.false, !dbg !4445

lor.lhs.false:                                    ; preds = %for.body
  %fds_bits10 = getelementptr inbounds %struct.cgc_fd_set, %struct.cgc_fd_set* %in_write, i32 0, i32 0, !dbg !4446
  %41 = load i32, i32* %i, align 4, !dbg !4446
  %div11 = sdiv i32 %41, 64, !dbg !4446
  %idxprom12 = sext i32 %div11 to i64, !dbg !4446
  %arrayidx13 = getelementptr inbounds [16 x i64], [16 x i64]* %fds_bits10, i64 0, i64 %idxprom12, !dbg !4446
  %42 = load i64, i64* %arrayidx13, align 8, !dbg !4446
  %43 = load i32, i32* %i, align 4, !dbg !4446
  %rem14 = srem i32 %43, 64, !dbg !4446
  %int_cast_to_i641 = zext i32 %rem14 to i64, !dbg !4446
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i641), !dbg !4446
  %shl15 = shl i32 1, %rem14, !dbg !4446, !klee.check.shift !1763
  %conv16 = sext i32 %shl15 to i64, !dbg !4446
  %and17 = and i64 %42, %conv16, !dbg !4446
  %tobool18 = icmp ne i64 %and17, 0, !dbg !4446
  br i1 %tobool18, label %if.then29, label %lor.lhs.false19, !dbg !4447

lor.lhs.false19:                                  ; preds = %lor.lhs.false
  %fds_bits20 = getelementptr inbounds %struct.cgc_fd_set, %struct.cgc_fd_set* %in_except, i32 0, i32 0, !dbg !4448
  %44 = load i32, i32* %i, align 4, !dbg !4448
  %div21 = sdiv i32 %44, 64, !dbg !4448
  %idxprom22 = sext i32 %div21 to i64, !dbg !4448
  %arrayidx23 = getelementptr inbounds [16 x i64], [16 x i64]* %fds_bits20, i64 0, i64 %idxprom22, !dbg !4448
  %45 = load i64, i64* %arrayidx23, align 8, !dbg !4448
  %46 = load i32, i32* %i, align 4, !dbg !4448
  %rem24 = srem i32 %46, 64, !dbg !4448
  %int_cast_to_i642 = zext i32 %rem24 to i64, !dbg !4448
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i642), !dbg !4448
  %shl25 = shl i32 1, %rem24, !dbg !4448, !klee.check.shift !1763
  %conv26 = sext i32 %shl25 to i64, !dbg !4448
  %and27 = and i64 %45, %conv26, !dbg !4448
  %tobool28 = icmp ne i64 %and27, 0, !dbg !4448
  br i1 %tobool28, label %if.then29, label %for.inc, !dbg !4449

if.then29:                                        ; preds = %lor.lhs.false19, %lor.lhs.false, %for.body
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %f, metadata !4450, metadata !DIExpression()), !dbg !4452
  %47 = load i32, i32* %i, align 4, !dbg !4453
  %call = call %struct.exe_file_t.17* @__get_file(i32 %47), !dbg !4454
  store %struct.exe_file_t.17* %call, %struct.exe_file_t.17** %f, align 8, !dbg !4452
  %48 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !4455
  %tobool30 = icmp ne %struct.exe_file_t.17* %48, null, !dbg !4455
  br i1 %tobool30, label %if.else33, label %if.then31, !dbg !4457

if.then31:                                        ; preds = %if.then29
  %call32 = call i32* @__errno_location() #22, !dbg !4458
  store i32 9, i32* %call32, align 4, !dbg !4460
  store i32 -1, i32* %retval, align 4, !dbg !4461
  br label %return, !dbg !4461

if.else33:                                        ; preds = %if.then29
  %49 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !4462
  %dfile = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %49, i32 0, i32 3, !dbg !4464
  %50 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile, align 8, !dbg !4464
  %tobool34 = icmp ne %struct.exe_disk_file_t.16* %50, null, !dbg !4462
  %fds_bits36 = getelementptr inbounds %struct.cgc_fd_set, %struct.cgc_fd_set* %in_read, i32 0, i32 0, !dbg !4465
  %51 = load i32, i32* %i, align 4, !dbg !4465
  %div37 = sdiv i32 %51, 64, !dbg !4465
  %idxprom38 = sext i32 %div37 to i64, !dbg !4465
  %arrayidx39 = getelementptr inbounds [16 x i64], [16 x i64]* %fds_bits36, i64 0, i64 %idxprom38, !dbg !4465
  %52 = load i64, i64* %arrayidx39, align 8, !dbg !4465
  %53 = load i32, i32* %i, align 4, !dbg !4465
  %rem40 = srem i32 %53, 64, !dbg !4465
  %int_cast_to_i643 = zext i32 %rem40 to i64, !dbg !4465
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i643), !dbg !4465
  %shl41 = shl i32 1, %rem40, !dbg !4465
  %conv42 = sext i32 %shl41 to i64, !dbg !4465
  %and43 = and i64 %52, %conv42, !dbg !4465
  %tobool44 = icmp ne i64 %and43, 0, !dbg !4465
  br i1 %tobool34, label %if.then35, label %if.else92, !dbg !4466

if.then35:                                        ; preds = %if.else33
  br i1 %tobool44, label %if.then45, label %if.end53, !dbg !4467

if.then45:                                        ; preds = %if.then35
  %54 = load i32, i32* %i, align 4, !dbg !4469
  %rem46 = srem i32 %54, 64, !dbg !4469
  %int_cast_to_i644 = zext i32 %rem46 to i64, !dbg !4469
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i644), !dbg !4469
  %shl47 = shl i32 1, %rem46, !dbg !4469, !klee.check.shift !1763
  %conv48 = sext i32 %shl47 to i64, !dbg !4469
  %55 = load %struct.cgc_fd_set*, %struct.cgc_fd_set** %read.addr, align 8, !dbg !4469
  %fds_bits49 = getelementptr inbounds %struct.cgc_fd_set, %struct.cgc_fd_set* %55, i32 0, i32 0, !dbg !4469
  %56 = load i32, i32* %i, align 4, !dbg !4469
  %div50 = sdiv i32 %56, 64, !dbg !4469
  %idxprom51 = sext i32 %div50 to i64, !dbg !4469
  %arrayidx52 = getelementptr inbounds [16 x i64], [16 x i64]* %fds_bits49, i64 0, i64 %idxprom51, !dbg !4469
  %57 = load i64, i64* %arrayidx52, align 8, !dbg !4469
  %or = or i64 %57, %conv48, !dbg !4469
  store i64 %or, i64* %arrayidx52, align 8, !dbg !4469
  br label %if.end53, !dbg !4469

if.end53:                                         ; preds = %if.then45, %if.then35
  %fds_bits54 = getelementptr inbounds %struct.cgc_fd_set, %struct.cgc_fd_set* %in_write, i32 0, i32 0, !dbg !4471
  %58 = load i32, i32* %i, align 4, !dbg !4471
  %div55 = sdiv i32 %58, 64, !dbg !4471
  %idxprom56 = sext i32 %div55 to i64, !dbg !4471
  %arrayidx57 = getelementptr inbounds [16 x i64], [16 x i64]* %fds_bits54, i64 0, i64 %idxprom56, !dbg !4471
  %59 = load i64, i64* %arrayidx57, align 8, !dbg !4471
  %60 = load i32, i32* %i, align 4, !dbg !4471
  %rem58 = srem i32 %60, 64, !dbg !4471
  %int_cast_to_i645 = zext i32 %rem58 to i64, !dbg !4471
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i645), !dbg !4471
  %shl59 = shl i32 1, %rem58, !dbg !4471, !klee.check.shift !1763
  %conv60 = sext i32 %shl59 to i64, !dbg !4471
  %and61 = and i64 %59, %conv60, !dbg !4471
  %tobool62 = icmp ne i64 %and61, 0, !dbg !4471
  br i1 %tobool62, label %if.then63, label %if.end72, !dbg !4473

if.then63:                                        ; preds = %if.end53
  %61 = load i32, i32* %i, align 4, !dbg !4474
  %rem64 = srem i32 %61, 64, !dbg !4474
  %int_cast_to_i646 = zext i32 %rem64 to i64, !dbg !4474
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i646), !dbg !4474
  %shl65 = shl i32 1, %rem64, !dbg !4474, !klee.check.shift !1763
  %conv66 = sext i32 %shl65 to i64, !dbg !4474
  %62 = load %struct.cgc_fd_set*, %struct.cgc_fd_set** %write.addr, align 8, !dbg !4474
  %fds_bits67 = getelementptr inbounds %struct.cgc_fd_set, %struct.cgc_fd_set* %62, i32 0, i32 0, !dbg !4474
  %63 = load i32, i32* %i, align 4, !dbg !4474
  %div68 = sdiv i32 %63, 64, !dbg !4474
  %idxprom69 = sext i32 %div68 to i64, !dbg !4474
  %arrayidx70 = getelementptr inbounds [16 x i64], [16 x i64]* %fds_bits67, i64 0, i64 %idxprom69, !dbg !4474
  %64 = load i64, i64* %arrayidx70, align 8, !dbg !4474
  %or71 = or i64 %64, %conv66, !dbg !4474
  store i64 %or71, i64* %arrayidx70, align 8, !dbg !4474
  br label %if.end72, !dbg !4474

if.end72:                                         ; preds = %if.then63, %if.end53
  %fds_bits73 = getelementptr inbounds %struct.cgc_fd_set, %struct.cgc_fd_set* %in_except, i32 0, i32 0, !dbg !4475
  %65 = load i32, i32* %i, align 4, !dbg !4475
  %div74 = sdiv i32 %65, 64, !dbg !4475
  %idxprom75 = sext i32 %div74 to i64, !dbg !4475
  %arrayidx76 = getelementptr inbounds [16 x i64], [16 x i64]* %fds_bits73, i64 0, i64 %idxprom75, !dbg !4475
  %66 = load i64, i64* %arrayidx76, align 8, !dbg !4475
  %67 = load i32, i32* %i, align 4, !dbg !4475
  %rem77 = srem i32 %67, 64, !dbg !4475
  %int_cast_to_i647 = zext i32 %rem77 to i64, !dbg !4475
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i647), !dbg !4475
  %shl78 = shl i32 1, %rem77, !dbg !4475, !klee.check.shift !1763
  %conv79 = sext i32 %shl78 to i64, !dbg !4475
  %and80 = and i64 %66, %conv79, !dbg !4475
  %tobool81 = icmp ne i64 %and80, 0, !dbg !4475
  br i1 %tobool81, label %if.then82, label %if.end91, !dbg !4477

if.then82:                                        ; preds = %if.end72
  %68 = load i32, i32* %i, align 4, !dbg !4478
  %rem83 = srem i32 %68, 64, !dbg !4478
  %int_cast_to_i648 = zext i32 %rem83 to i64, !dbg !4478
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i648), !dbg !4478
  %shl84 = shl i32 1, %rem83, !dbg !4478, !klee.check.shift !1763
  %conv85 = sext i32 %shl84 to i64, !dbg !4478
  %69 = load %struct.cgc_fd_set*, %struct.cgc_fd_set** %except.addr, align 8, !dbg !4478
  %fds_bits86 = getelementptr inbounds %struct.cgc_fd_set, %struct.cgc_fd_set* %69, i32 0, i32 0, !dbg !4478
  %70 = load i32, i32* %i, align 4, !dbg !4478
  %div87 = sdiv i32 %70, 64, !dbg !4478
  %idxprom88 = sext i32 %div87 to i64, !dbg !4478
  %arrayidx89 = getelementptr inbounds [16 x i64], [16 x i64]* %fds_bits86, i64 0, i64 %idxprom88, !dbg !4478
  %71 = load i64, i64* %arrayidx89, align 8, !dbg !4478
  %or90 = or i64 %71, %conv85, !dbg !4478
  store i64 %or90, i64* %arrayidx89, align 8, !dbg !4478
  br label %if.end91, !dbg !4478

if.end91:                                         ; preds = %if.then82, %if.end72
  %72 = load i32, i32* %count, align 4, !dbg !4479
  %inc = add nsw i32 %72, 1, !dbg !4479
  store i32 %inc, i32* %count, align 4, !dbg !4479
  br label %for.inc, !dbg !4480

if.else92:                                        ; preds = %if.else33
  br i1 %tobool44, label %if.then102, label %if.end112, !dbg !4481

if.then102:                                       ; preds = %if.else92
  %73 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !4483
  %fd = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %73, i32 0, i32 0, !dbg !4483
  %74 = load i32, i32* %fd, align 8, !dbg !4483
  %rem103 = srem i32 %74, 64, !dbg !4483
  %int_cast_to_i6410 = zext i32 %rem103 to i64, !dbg !4483
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i6410), !dbg !4483
  %shl104 = shl i32 1, %rem103, !dbg !4483, !klee.check.shift !1763
  %conv105 = sext i32 %shl104 to i64, !dbg !4483
  %fds_bits106 = getelementptr inbounds %struct.cgc_fd_set, %struct.cgc_fd_set* %os_read, i32 0, i32 0, !dbg !4483
  %75 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !4483
  %fd107 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %75, i32 0, i32 0, !dbg !4483
  %76 = load i32, i32* %fd107, align 8, !dbg !4483
  %div108 = sdiv i32 %76, 64, !dbg !4483
  %idxprom109 = sext i32 %div108 to i64, !dbg !4483
  %arrayidx110 = getelementptr inbounds [16 x i64], [16 x i64]* %fds_bits106, i64 0, i64 %idxprom109, !dbg !4483
  %77 = load i64, i64* %arrayidx110, align 8, !dbg !4483
  %or111 = or i64 %77, %conv105, !dbg !4483
  store i64 %or111, i64* %arrayidx110, align 8, !dbg !4483
  br label %if.end112, !dbg !4483

if.end112:                                        ; preds = %if.then102, %if.else92
  %fds_bits113 = getelementptr inbounds %struct.cgc_fd_set, %struct.cgc_fd_set* %in_write, i32 0, i32 0, !dbg !4485
  %78 = load i32, i32* %i, align 4, !dbg !4485
  %div114 = sdiv i32 %78, 64, !dbg !4485
  %idxprom115 = sext i32 %div114 to i64, !dbg !4485
  %arrayidx116 = getelementptr inbounds [16 x i64], [16 x i64]* %fds_bits113, i64 0, i64 %idxprom115, !dbg !4485
  %79 = load i64, i64* %arrayidx116, align 8, !dbg !4485
  %80 = load i32, i32* %i, align 4, !dbg !4485
  %rem117 = srem i32 %80, 64, !dbg !4485
  %int_cast_to_i6411 = zext i32 %rem117 to i64, !dbg !4485
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i6411), !dbg !4485
  %shl118 = shl i32 1, %rem117, !dbg !4485, !klee.check.shift !1763
  %conv119 = sext i32 %shl118 to i64, !dbg !4485
  %and120 = and i64 %79, %conv119, !dbg !4485
  %tobool121 = icmp ne i64 %and120, 0, !dbg !4485
  br i1 %tobool121, label %if.then122, label %if.end133, !dbg !4487

if.then122:                                       ; preds = %if.end112
  %81 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !4488
  %fd123 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %81, i32 0, i32 0, !dbg !4488
  %82 = load i32, i32* %fd123, align 8, !dbg !4488
  %rem124 = srem i32 %82, 64, !dbg !4488
  %int_cast_to_i6412 = zext i32 %rem124 to i64, !dbg !4488
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i6412), !dbg !4488
  %shl125 = shl i32 1, %rem124, !dbg !4488, !klee.check.shift !1763
  %conv126 = sext i32 %shl125 to i64, !dbg !4488
  %fds_bits127 = getelementptr inbounds %struct.cgc_fd_set, %struct.cgc_fd_set* %os_write, i32 0, i32 0, !dbg !4488
  %83 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !4488
  %fd128 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %83, i32 0, i32 0, !dbg !4488
  %84 = load i32, i32* %fd128, align 8, !dbg !4488
  %div129 = sdiv i32 %84, 64, !dbg !4488
  %idxprom130 = sext i32 %div129 to i64, !dbg !4488
  %arrayidx131 = getelementptr inbounds [16 x i64], [16 x i64]* %fds_bits127, i64 0, i64 %idxprom130, !dbg !4488
  %85 = load i64, i64* %arrayidx131, align 8, !dbg !4488
  %or132 = or i64 %85, %conv126, !dbg !4488
  store i64 %or132, i64* %arrayidx131, align 8, !dbg !4488
  br label %if.end133, !dbg !4488

if.end133:                                        ; preds = %if.then122, %if.end112
  %fds_bits134 = getelementptr inbounds %struct.cgc_fd_set, %struct.cgc_fd_set* %in_except, i32 0, i32 0, !dbg !4489
  %86 = load i32, i32* %i, align 4, !dbg !4489
  %div135 = sdiv i32 %86, 64, !dbg !4489
  %idxprom136 = sext i32 %div135 to i64, !dbg !4489
  %arrayidx137 = getelementptr inbounds [16 x i64], [16 x i64]* %fds_bits134, i64 0, i64 %idxprom136, !dbg !4489
  %87 = load i64, i64* %arrayidx137, align 8, !dbg !4489
  %88 = load i32, i32* %i, align 4, !dbg !4489
  %rem138 = srem i32 %88, 64, !dbg !4489
  %int_cast_to_i6413 = zext i32 %rem138 to i64, !dbg !4489
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i6413), !dbg !4489
  %shl139 = shl i32 1, %rem138, !dbg !4489, !klee.check.shift !1763
  %conv140 = sext i32 %shl139 to i64, !dbg !4489
  %and141 = and i64 %87, %conv140, !dbg !4489
  %tobool142 = icmp ne i64 %and141, 0, !dbg !4489
  br i1 %tobool142, label %if.then143, label %if.end154, !dbg !4491

if.then143:                                       ; preds = %if.end133
  %89 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !4492
  %fd144 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %89, i32 0, i32 0, !dbg !4492
  %90 = load i32, i32* %fd144, align 8, !dbg !4492
  %rem145 = srem i32 %90, 64, !dbg !4492
  %int_cast_to_i6414 = zext i32 %rem145 to i64, !dbg !4492
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i6414), !dbg !4492
  %shl146 = shl i32 1, %rem145, !dbg !4492, !klee.check.shift !1763
  %conv147 = sext i32 %shl146 to i64, !dbg !4492
  %fds_bits148 = getelementptr inbounds %struct.cgc_fd_set, %struct.cgc_fd_set* %os_except, i32 0, i32 0, !dbg !4492
  %91 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !4492
  %fd149 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %91, i32 0, i32 0, !dbg !4492
  %92 = load i32, i32* %fd149, align 8, !dbg !4492
  %div150 = sdiv i32 %92, 64, !dbg !4492
  %idxprom151 = sext i32 %div150 to i64, !dbg !4492
  %arrayidx152 = getelementptr inbounds [16 x i64], [16 x i64]* %fds_bits148, i64 0, i64 %idxprom151, !dbg !4492
  %93 = load i64, i64* %arrayidx152, align 8, !dbg !4492
  %or153 = or i64 %93, %conv147, !dbg !4492
  store i64 %or153, i64* %arrayidx152, align 8, !dbg !4492
  br label %if.end154, !dbg !4492

if.end154:                                        ; preds = %if.then143, %if.end133
  %94 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !4493
  %fd155 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %94, i32 0, i32 0, !dbg !4495
  %95 = load i32, i32* %fd155, align 8, !dbg !4495
  %96 = load i32, i32* %os_nfds, align 4, !dbg !4496
  %cmp156 = icmp sge i32 %95, %96, !dbg !4497
  br i1 %cmp156, label %if.then158, label %for.inc, !dbg !4498

if.then158:                                       ; preds = %if.end154
  %97 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f, align 8, !dbg !4499
  %fd159 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %97, i32 0, i32 0, !dbg !4500
  %98 = load i32, i32* %fd159, align 8, !dbg !4500
  %add = add nsw i32 %98, 1, !dbg !4501
  store i32 %add, i32* %os_nfds, align 4, !dbg !4502
  br label %for.inc, !dbg !4503

for.inc:                                          ; preds = %lor.lhs.false19, %if.end91, %if.then158, %if.end154
  %99 = load i32, i32* %i, align 4, !dbg !4504
  %inc164 = add nsw i32 %99, 1, !dbg !4504
  store i32 %inc164, i32* %i, align 4, !dbg !4504
  br label %for.cond, !dbg !4505, !llvm.loop !4506

for.end:                                          ; preds = %for.cond
  %100 = load i32, i32* %os_nfds, align 4, !dbg !4508
  %cmp165 = icmp sgt i32 %100, 0, !dbg !4510
  br i1 %cmp165, label %if.then167, label %if.end262, !dbg !4511

if.then167:                                       ; preds = %for.end
  call void @llvm.dbg.declare(metadata %struct.timespec.14* %tv, metadata !4512, metadata !DIExpression()), !dbg !4514
  %101 = bitcast %struct.timespec.14* %tv to i8*, !dbg !4514
  %102 = call i8* @memset(i8* %101, i32 0, i64 16), !dbg !4514
  call void @llvm.dbg.declare(metadata i32* %r, metadata !4515, metadata !DIExpression()), !dbg !4516
  %103 = load i32, i32* %os_nfds, align 4, !dbg !4517
  %call168 = call i64 (i64, ...) @syscall(i64 23, i32 %103, %struct.cgc_fd_set* %os_read, %struct.cgc_fd_set* %os_write, %struct.cgc_fd_set* %os_except, %struct.timespec.14* %tv) #8, !dbg !4518
  %conv169 = trunc i64 %call168 to i32, !dbg !4518
  store i32 %conv169, i32* %r, align 4, !dbg !4516
  %104 = load i32, i32* %r, align 4, !dbg !4519
  %cmp170 = icmp eq i32 %104, -1, !dbg !4521
  br i1 %cmp170, label %if.then172, label %if.else176, !dbg !4522

if.then172:                                       ; preds = %if.then167
  %105 = load i32, i32* %count, align 4, !dbg !4523
  %tobool173 = icmp ne i32 %105, 0, !dbg !4523
  br i1 %tobool173, label %if.end262, label %if.then174, !dbg !4526

if.then174:                                       ; preds = %if.then172
  store i32 -1, i32* %retval, align 4, !dbg !4527
  br label %return, !dbg !4527

if.else176:                                       ; preds = %if.then167
  %106 = load i32, i32* %r, align 4, !dbg !4528
  %107 = load i32, i32* %count, align 4, !dbg !4530
  %add177 = add nsw i32 %107, %106, !dbg !4530
  store i32 %add177, i32* %count, align 4, !dbg !4530
  store i32 0, i32* %i, align 4, !dbg !4531
  br label %for.cond178, !dbg !4533

for.cond178:                                      ; preds = %for.inc258, %if.else176
  %108 = load i32, i32* %i, align 4, !dbg !4534
  %109 = load i32, i32* %nfds.addr, align 4, !dbg !4536
  %cmp179 = icmp slt i32 %108, %109, !dbg !4537
  br i1 %cmp179, label %for.body181, label %if.end262, !dbg !4538

for.body181:                                      ; preds = %for.cond178
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %f182, metadata !4539, metadata !DIExpression()), !dbg !4541
  %110 = load i32, i32* %i, align 4, !dbg !4542
  %call183 = call %struct.exe_file_t.17* @__get_file(i32 %110), !dbg !4543
  store %struct.exe_file_t.17* %call183, %struct.exe_file_t.17** %f182, align 8, !dbg !4541
  %111 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f182, align 8, !dbg !4544
  %tobool184 = icmp ne %struct.exe_file_t.17* %111, null, !dbg !4544
  br i1 %tobool184, label %land.lhs.true, label %for.inc258, !dbg !4546

land.lhs.true:                                    ; preds = %for.body181
  %112 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f182, align 8, !dbg !4547
  %dfile185 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %112, i32 0, i32 3, !dbg !4548
  %113 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %dfile185, align 8, !dbg !4548
  %tobool186 = icmp ne %struct.exe_disk_file_t.16* %113, null, !dbg !4547
  br i1 %tobool186, label %for.inc258, label %if.then187, !dbg !4549

if.then187:                                       ; preds = %land.lhs.true
  %114 = load %struct.cgc_fd_set*, %struct.cgc_fd_set** %read.addr, align 8, !dbg !4550
  %tobool188 = icmp ne %struct.cgc_fd_set* %114, null, !dbg !4550
  br i1 %tobool188, label %land.lhs.true189, label %if.end210, !dbg !4553

land.lhs.true189:                                 ; preds = %if.then187
  %fds_bits190 = getelementptr inbounds %struct.cgc_fd_set, %struct.cgc_fd_set* %os_read, i32 0, i32 0, !dbg !4554
  %115 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f182, align 8, !dbg !4554
  %fd191 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %115, i32 0, i32 0, !dbg !4554
  %116 = load i32, i32* %fd191, align 8, !dbg !4554
  %div192 = sdiv i32 %116, 64, !dbg !4554
  %idxprom193 = sext i32 %div192 to i64, !dbg !4554
  %arrayidx194 = getelementptr inbounds [16 x i64], [16 x i64]* %fds_bits190, i64 0, i64 %idxprom193, !dbg !4554
  %117 = load i64, i64* %arrayidx194, align 8, !dbg !4554
  %118 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f182, align 8, !dbg !4554
  %fd195 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %118, i32 0, i32 0, !dbg !4554
  %119 = load i32, i32* %fd195, align 8, !dbg !4554
  %rem196 = srem i32 %119, 64, !dbg !4554
  %int_cast_to_i6415 = zext i32 %rem196 to i64, !dbg !4554
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i6415), !dbg !4554
  %shl197 = shl i32 1, %rem196, !dbg !4554, !klee.check.shift !1763
  %conv198 = sext i32 %shl197 to i64, !dbg !4554
  %and199 = and i64 %117, %conv198, !dbg !4554
  %tobool200 = icmp ne i64 %and199, 0, !dbg !4554
  br i1 %tobool200, label %if.then201, label %if.end210, !dbg !4555

if.then201:                                       ; preds = %land.lhs.true189
  %120 = load i32, i32* %i, align 4, !dbg !4556
  %rem202 = srem i32 %120, 64, !dbg !4556
  %int_cast_to_i6416 = zext i32 %rem202 to i64, !dbg !4556
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i6416), !dbg !4556
  %shl203 = shl i32 1, %rem202, !dbg !4556, !klee.check.shift !1763
  %conv204 = sext i32 %shl203 to i64, !dbg !4556
  %121 = load %struct.cgc_fd_set*, %struct.cgc_fd_set** %read.addr, align 8, !dbg !4556
  %fds_bits205 = getelementptr inbounds %struct.cgc_fd_set, %struct.cgc_fd_set* %121, i32 0, i32 0, !dbg !4556
  %122 = load i32, i32* %i, align 4, !dbg !4556
  %div206 = sdiv i32 %122, 64, !dbg !4556
  %idxprom207 = sext i32 %div206 to i64, !dbg !4556
  %arrayidx208 = getelementptr inbounds [16 x i64], [16 x i64]* %fds_bits205, i64 0, i64 %idxprom207, !dbg !4556
  %123 = load i64, i64* %arrayidx208, align 8, !dbg !4556
  %or209 = or i64 %123, %conv204, !dbg !4556
  store i64 %or209, i64* %arrayidx208, align 8, !dbg !4556
  br label %if.end210, !dbg !4556

if.end210:                                        ; preds = %if.then201, %land.lhs.true189, %if.then187
  %124 = load %struct.cgc_fd_set*, %struct.cgc_fd_set** %write.addr, align 8, !dbg !4557
  %tobool211 = icmp ne %struct.cgc_fd_set* %124, null, !dbg !4557
  br i1 %tobool211, label %land.lhs.true212, label %if.end233, !dbg !4559

land.lhs.true212:                                 ; preds = %if.end210
  %fds_bits213 = getelementptr inbounds %struct.cgc_fd_set, %struct.cgc_fd_set* %os_write, i32 0, i32 0, !dbg !4560
  %125 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f182, align 8, !dbg !4560
  %fd214 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %125, i32 0, i32 0, !dbg !4560
  %126 = load i32, i32* %fd214, align 8, !dbg !4560
  %div215 = sdiv i32 %126, 64, !dbg !4560
  %idxprom216 = sext i32 %div215 to i64, !dbg !4560
  %arrayidx217 = getelementptr inbounds [16 x i64], [16 x i64]* %fds_bits213, i64 0, i64 %idxprom216, !dbg !4560
  %127 = load i64, i64* %arrayidx217, align 8, !dbg !4560
  %128 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f182, align 8, !dbg !4560
  %fd218 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %128, i32 0, i32 0, !dbg !4560
  %129 = load i32, i32* %fd218, align 8, !dbg !4560
  %rem219 = srem i32 %129, 64, !dbg !4560
  %int_cast_to_i6417 = zext i32 %rem219 to i64, !dbg !4560
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i6417), !dbg !4560
  %shl220 = shl i32 1, %rem219, !dbg !4560, !klee.check.shift !1763
  %conv221 = sext i32 %shl220 to i64, !dbg !4560
  %and222 = and i64 %127, %conv221, !dbg !4560
  %tobool223 = icmp ne i64 %and222, 0, !dbg !4560
  br i1 %tobool223, label %if.then224, label %if.end233, !dbg !4561

if.then224:                                       ; preds = %land.lhs.true212
  %130 = load i32, i32* %i, align 4, !dbg !4562
  %rem225 = srem i32 %130, 64, !dbg !4562
  %int_cast_to_i6418 = zext i32 %rem225 to i64, !dbg !4562
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i6418), !dbg !4562
  %shl226 = shl i32 1, %rem225, !dbg !4562, !klee.check.shift !1763
  %conv227 = sext i32 %shl226 to i64, !dbg !4562
  %131 = load %struct.cgc_fd_set*, %struct.cgc_fd_set** %write.addr, align 8, !dbg !4562
  %fds_bits228 = getelementptr inbounds %struct.cgc_fd_set, %struct.cgc_fd_set* %131, i32 0, i32 0, !dbg !4562
  %132 = load i32, i32* %i, align 4, !dbg !4562
  %div229 = sdiv i32 %132, 64, !dbg !4562
  %idxprom230 = sext i32 %div229 to i64, !dbg !4562
  %arrayidx231 = getelementptr inbounds [16 x i64], [16 x i64]* %fds_bits228, i64 0, i64 %idxprom230, !dbg !4562
  %133 = load i64, i64* %arrayidx231, align 8, !dbg !4562
  %or232 = or i64 %133, %conv227, !dbg !4562
  store i64 %or232, i64* %arrayidx231, align 8, !dbg !4562
  br label %if.end233, !dbg !4562

if.end233:                                        ; preds = %if.then224, %land.lhs.true212, %if.end210
  %134 = load %struct.cgc_fd_set*, %struct.cgc_fd_set** %except.addr, align 8, !dbg !4563
  %tobool234 = icmp ne %struct.cgc_fd_set* %134, null, !dbg !4563
  br i1 %tobool234, label %land.lhs.true235, label %for.inc258, !dbg !4565

land.lhs.true235:                                 ; preds = %if.end233
  %fds_bits236 = getelementptr inbounds %struct.cgc_fd_set, %struct.cgc_fd_set* %os_except, i32 0, i32 0, !dbg !4566
  %135 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f182, align 8, !dbg !4566
  %fd237 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %135, i32 0, i32 0, !dbg !4566
  %136 = load i32, i32* %fd237, align 8, !dbg !4566
  %div238 = sdiv i32 %136, 64, !dbg !4566
  %idxprom239 = sext i32 %div238 to i64, !dbg !4566
  %arrayidx240 = getelementptr inbounds [16 x i64], [16 x i64]* %fds_bits236, i64 0, i64 %idxprom239, !dbg !4566
  %137 = load i64, i64* %arrayidx240, align 8, !dbg !4566
  %138 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %f182, align 8, !dbg !4566
  %fd241 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %138, i32 0, i32 0, !dbg !4566
  %139 = load i32, i32* %fd241, align 8, !dbg !4566
  %rem242 = srem i32 %139, 64, !dbg !4566
  %int_cast_to_i6419 = zext i32 %rem242 to i64, !dbg !4566
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i6419), !dbg !4566
  %shl243 = shl i32 1, %rem242, !dbg !4566, !klee.check.shift !1763
  %conv244 = sext i32 %shl243 to i64, !dbg !4566
  %and245 = and i64 %137, %conv244, !dbg !4566
  %tobool246 = icmp ne i64 %and245, 0, !dbg !4566
  br i1 %tobool246, label %if.then247, label %for.inc258, !dbg !4567

if.then247:                                       ; preds = %land.lhs.true235
  %140 = load i32, i32* %i, align 4, !dbg !4568
  %rem248 = srem i32 %140, 64, !dbg !4568
  %int_cast_to_i6420 = zext i32 %rem248 to i64, !dbg !4568
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i6420), !dbg !4568
  %shl249 = shl i32 1, %rem248, !dbg !4568, !klee.check.shift !1763
  %conv250 = sext i32 %shl249 to i64, !dbg !4568
  %141 = load %struct.cgc_fd_set*, %struct.cgc_fd_set** %except.addr, align 8, !dbg !4568
  %fds_bits251 = getelementptr inbounds %struct.cgc_fd_set, %struct.cgc_fd_set* %141, i32 0, i32 0, !dbg !4568
  %142 = load i32, i32* %i, align 4, !dbg !4568
  %div252 = sdiv i32 %142, 64, !dbg !4568
  %idxprom253 = sext i32 %div252 to i64, !dbg !4568
  %arrayidx254 = getelementptr inbounds [16 x i64], [16 x i64]* %fds_bits251, i64 0, i64 %idxprom253, !dbg !4568
  %143 = load i64, i64* %arrayidx254, align 8, !dbg !4568
  %or255 = or i64 %143, %conv250, !dbg !4568
  store i64 %or255, i64* %arrayidx254, align 8, !dbg !4568
  br label %for.inc258, !dbg !4568

for.inc258:                                       ; preds = %for.body181, %land.lhs.true, %if.then247, %land.lhs.true235, %if.end233
  %144 = load i32, i32* %i, align 4, !dbg !4569
  %inc259 = add nsw i32 %144, 1, !dbg !4569
  store i32 %inc259, i32* %i, align 4, !dbg !4569
  br label %for.cond178, !dbg !4570, !llvm.loop !4571

if.end262:                                        ; preds = %if.then172, %for.cond178, %for.end
  %145 = load i32, i32* %count, align 4, !dbg !4573
  store i32 %145, i32* %retval, align 4, !dbg !4574
  br label %return, !dbg !4574

return:                                           ; preds = %if.end262, %if.then174, %if.then31
  %146 = load i32, i32* %retval, align 4, !dbg !4575
  ret i32 %146, !dbg !4575
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @getcwd(i8* %buf, i64 %size) #0 !dbg !184 {
entry:
  %retval = alloca i8*, align 8
  %buf.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %r = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !4576, metadata !DIExpression()), !dbg !4577
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !4578, metadata !DIExpression()), !dbg !4579
  call void @llvm.dbg.declare(metadata i32* %r, metadata !4580, metadata !DIExpression()), !dbg !4581
  %0 = load i32, i32* @getcwd.n_calls, align 4, !dbg !4582
  %inc = add nsw i32 %0, 1, !dbg !4582
  store i32 %inc, i32* @getcwd.n_calls, align 4, !dbg !4582
  %1 = load i32, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 5), align 8, !dbg !4583
  %tobool = icmp ne i32 %1, 0, !dbg !4585
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !4586

land.lhs.true:                                    ; preds = %entry
  %2 = load i32*, i32** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 10), align 8, !dbg !4587
  %3 = load i32, i32* %2, align 4, !dbg !4588
  %4 = load i32, i32* @getcwd.n_calls, align 4, !dbg !4589
  %cmp = icmp eq i32 %3, %4, !dbg !4590
  br i1 %cmp, label %if.then, label %if.end, !dbg !4591

if.then:                                          ; preds = %land.lhs.true
  %5 = load i32, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 5), align 8, !dbg !4592
  %dec = add i32 %5, -1, !dbg !4592
  store i32 %dec, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 5), align 8, !dbg !4592
  %call = call i32* @__errno_location() #22, !dbg !4594
  store i32 34, i32* %call, align 4, !dbg !4595
  store i8* null, i8** %retval, align 8, !dbg !4596
  br label %return, !dbg !4596

if.end:                                           ; preds = %land.lhs.true, %entry
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !4597
  %tobool1 = icmp ne i8* %6, null, !dbg !4597
  br i1 %tobool1, label %if.end7, label %if.then2, !dbg !4599

if.then2:                                         ; preds = %if.end
  %7 = load i64, i64* %size.addr, align 8, !dbg !4600
  %tobool3 = icmp ne i64 %7, 0, !dbg !4600
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !4603

if.then4:                                         ; preds = %if.then2
  store i64 1024, i64* %size.addr, align 8, !dbg !4604
  br label %if.end5, !dbg !4605

if.end5:                                          ; preds = %if.then4, %if.then2
  %8 = load i64, i64* %size.addr, align 8, !dbg !4606
  %call6 = call noalias i8* @malloc(i64 %8) #8, !dbg !4607
  store i8* %call6, i8** %buf.addr, align 8, !dbg !4608
  br label %if.end7, !dbg !4609

if.end7:                                          ; preds = %if.end5, %if.end
  %9 = load i8*, i8** %buf.addr, align 8, !dbg !4610
  %call8 = call i8* @__concretize_ptr(i8* %9), !dbg !4611
  store i8* %call8, i8** %buf.addr, align 8, !dbg !4612
  %10 = load i64, i64* %size.addr, align 8, !dbg !4613
  %call9 = call i64 @__concretize_size(i64 %10), !dbg !4614
  store i64 %call9, i64* %size.addr, align 8, !dbg !4615
  %11 = load i8*, i8** %buf.addr, align 8, !dbg !4616
  %12 = load i64, i64* %size.addr, align 8, !dbg !4617
  call void @klee_check_memory_access(i8* %11, i64 %12), !dbg !4618
  %13 = load i8*, i8** %buf.addr, align 8, !dbg !4619
  %14 = load i64, i64* %size.addr, align 8, !dbg !4620
  %call10 = call i64 (i64, ...) @syscall(i64 79, i8* %13, i64 %14) #8, !dbg !4621
  %conv = trunc i64 %call10 to i32, !dbg !4621
  store i32 %conv, i32* %r, align 4, !dbg !4622
  %15 = load i32, i32* %r, align 4, !dbg !4623
  %cmp11 = icmp eq i32 %15, -1, !dbg !4625
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !4626

if.then13:                                        ; preds = %if.end7
  store i8* null, i8** %retval, align 8, !dbg !4627
  br label %return, !dbg !4627

if.end14:                                         ; preds = %if.end7
  %16 = load i8*, i8** %buf.addr, align 8, !dbg !4628
  store i8* %16, i8** %retval, align 8, !dbg !4629
  br label %return, !dbg !4629

return:                                           ; preds = %if.end14, %if.then13, %if.then
  %17 = load i8*, i8** %retval, align 8, !dbg !4630
  ret i8* %17, !dbg !4630
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @chroot(i8* nonnull %path) #0 !dbg !4631 {
entry:
  %retval = alloca i32, align 4
  %path.addr = alloca i8*, align 8
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !4632, metadata !DIExpression()), !dbg !4633
  %0 = load i8*, i8** %path.addr, align 8, !dbg !4634
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !4634
  %1 = load i8, i8* %arrayidx, align 1, !dbg !4634
  %conv = sext i8 %1 to i32, !dbg !4634
  %cmp = icmp eq i32 %conv, 0, !dbg !4636
  br i1 %cmp, label %if.then, label %if.end, !dbg !4637

if.then:                                          ; preds = %entry
  %call = call i32* @__errno_location() #22, !dbg !4638
  store i32 2, i32* %call, align 4, !dbg !4640
  store i32 -1, i32* %retval, align 4, !dbg !4641
  br label %return, !dbg !4641

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %path.addr, align 8, !dbg !4642
  %arrayidx2 = getelementptr inbounds i8, i8* %2, i64 0, !dbg !4642
  %3 = load i8, i8* %arrayidx2, align 1, !dbg !4642
  %conv3 = sext i8 %3 to i32, !dbg !4642
  %cmp4 = icmp eq i32 %conv3, 47, !dbg !4644
  br i1 %cmp4, label %land.lhs.true, label %if.end11, !dbg !4645

land.lhs.true:                                    ; preds = %if.end
  %4 = load i8*, i8** %path.addr, align 8, !dbg !4646
  %arrayidx6 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !4646
  %5 = load i8, i8* %arrayidx6, align 1, !dbg !4646
  %conv7 = sext i8 %5 to i32, !dbg !4646
  %cmp8 = icmp eq i32 %conv7, 0, !dbg !4647
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !4648

if.then10:                                        ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !4649
  br label %return, !dbg !4649

if.end11:                                         ; preds = %land.lhs.true, %if.end
  call void @klee_warning(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.24.117, i64 0, i64 0)), !dbg !4651
  %call12 = call i32* @__errno_location() #22, !dbg !4652
  store i32 2, i32* %call12, align 4, !dbg !4653
  store i32 -1, i32* %retval, align 4, !dbg !4654
  br label %return, !dbg !4654

return:                                           ; preds = %if.end11, %if.then10, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !4655
  ret i32 %6, !dbg !4655
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @__syscall_rt_sigaction(i32 %signum, %struct.sigaction* %act, %struct.sigaction* %oldact, i64 %_something) #0 !dbg !4656 {
entry:
  %signum.addr = alloca i32, align 4
  %act.addr = alloca %struct.sigaction*, align 8
  %oldact.addr = alloca %struct.sigaction*, align 8
  %_something.addr = alloca i64, align 8
  store i32 %signum, i32* %signum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %signum.addr, metadata !4766, metadata !DIExpression()), !dbg !4767
  store %struct.sigaction* %act, %struct.sigaction** %act.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sigaction** %act.addr, metadata !4768, metadata !DIExpression()), !dbg !4769
  store %struct.sigaction* %oldact, %struct.sigaction** %oldact.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sigaction** %oldact.addr, metadata !4770, metadata !DIExpression()), !dbg !4771
  store i64 %_something, i64* %_something.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %_something.addr, metadata !4772, metadata !DIExpression()), !dbg !4773
  call void @klee_warning_once(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.118, i64 0, i64 0)), !dbg !4774
  ret i32 0, !dbg !4775
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @sigaction(i32 %signum, %struct.sigaction* %act, %struct.sigaction* %oldact) #0 !dbg !4776 {
entry:
  %signum.addr = alloca i32, align 4
  %act.addr = alloca %struct.sigaction*, align 8
  %oldact.addr = alloca %struct.sigaction*, align 8
  store i32 %signum, i32* %signum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %signum.addr, metadata !4779, metadata !DIExpression()), !dbg !4780
  store %struct.sigaction* %act, %struct.sigaction** %act.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sigaction** %act.addr, metadata !4781, metadata !DIExpression()), !dbg !4782
  store %struct.sigaction* %oldact, %struct.sigaction** %oldact.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sigaction** %oldact.addr, metadata !4783, metadata !DIExpression()), !dbg !4784
  call void @klee_warning_once(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.118, i64 0, i64 0)), !dbg !4785
  ret i32 0, !dbg !4786
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @sigprocmask(i32 %how, %struct.cgc_fd_set* %set, %struct.cgc_fd_set* %oldset) #0 !dbg !4787 {
entry:
  %how.addr = alloca i32, align 4
  %set.addr = alloca %struct.cgc_fd_set*, align 8
  %oldset.addr = alloca %struct.cgc_fd_set*, align 8
  store i32 %how, i32* %how.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %how.addr, metadata !4795, metadata !DIExpression()), !dbg !4796
  store %struct.cgc_fd_set* %set, %struct.cgc_fd_set** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cgc_fd_set** %set.addr, metadata !4797, metadata !DIExpression()), !dbg !4798
  store %struct.cgc_fd_set* %oldset, %struct.cgc_fd_set** %oldset.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cgc_fd_set** %oldset.addr, metadata !4799, metadata !DIExpression()), !dbg !4800
  call void @klee_warning_once(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.118, i64 0, i64 0)), !dbg !4801
  ret i32 0, !dbg !4802
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @fdatasync(i32 %fd) #0 !dbg !4803 {
entry:
  %fd.addr = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !4804, metadata !DIExpression()), !dbg !4805
  ret i32 0, !dbg !4806
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local void @sync() #0 !dbg !4807 {
entry:
  ret void, !dbg !4808
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @__socketcall(i32 %type, i32* %args) #0 !dbg !4809 {
entry:
  %type.addr = alloca i32, align 4
  %args.addr = alloca i32*, align 8
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !4812, metadata !DIExpression()), !dbg !4813
  store i32* %args, i32** %args.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %args.addr, metadata !4814, metadata !DIExpression()), !dbg !4815
  call void @klee_warning(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1.119, i64 0, i64 0)), !dbg !4816
  %call = call i32* @__errno_location() #22, !dbg !4817
  store i32 97, i32* %call, align 4, !dbg !4818
  ret i32 -1, !dbg !4819
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @_IO_getc(%struct._IO_FILE* %f) #0 !dbg !4820 {
entry:
  %f.addr = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %f, %struct._IO_FILE** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %f.addr, metadata !4872, metadata !DIExpression()), !dbg !4873
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8, !dbg !4874
  %call = call i32 @__fgetc_unlocked(%struct._IO_FILE* %0), !dbg !4875
  ret i32 %call, !dbg !4876
}

declare dso_local i32 @__fgetc_unlocked(%struct._IO_FILE*) #4

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @_IO_putc(i32 %c, %struct._IO_FILE* %f) #0 !dbg !4877 {
entry:
  %c.addr = alloca i32, align 4
  %f.addr = alloca %struct._IO_FILE*, align 8
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !4880, metadata !DIExpression()), !dbg !4881
  store %struct._IO_FILE* %f, %struct._IO_FILE** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %f.addr, metadata !4882, metadata !DIExpression()), !dbg !4883
  %0 = load i32, i32* %c.addr, align 4, !dbg !4884
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8, !dbg !4885
  %call = call i32 @__fputc_unlocked(i32 %0, %struct._IO_FILE* %1), !dbg !4886
  ret i32 %call, !dbg !4887
}

declare dso_local i32 @__fputc_unlocked(i32, %struct._IO_FILE*) #4

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @mkdir(i8* nonnull %pathname, i32 %mode) #0 !dbg !4888 {
entry:
  %pathname.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  store i8* %pathname, i8** %pathname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pathname.addr, metadata !4889, metadata !DIExpression()), !dbg !4890
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !4891, metadata !DIExpression()), !dbg !4892
  call void @klee_warning(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.120, i64 0, i64 0)), !dbg !4893
  %call = call i32* @__errno_location() #22, !dbg !4894
  store i32 5, i32* %call, align 4, !dbg !4895
  ret i32 -1, !dbg !4896
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @mkfifo(i8* nonnull %pathname, i32 %mode) #0 !dbg !4897 {
entry:
  %pathname.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  store i8* %pathname, i8** %pathname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pathname.addr, metadata !4898, metadata !DIExpression()), !dbg !4899
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !4900, metadata !DIExpression()), !dbg !4901
  call void @klee_warning(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.120, i64 0, i64 0)), !dbg !4902
  %call = call i32* @__errno_location() #22, !dbg !4903
  store i32 5, i32* %call, align 4, !dbg !4904
  ret i32 -1, !dbg !4905
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @mknod(i8* nonnull %pathname, i32 %mode, i64 %dev) #0 !dbg !4906 {
entry:
  %pathname.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  %dev.addr = alloca i64, align 8
  store i8* %pathname, i8** %pathname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pathname.addr, metadata !4909, metadata !DIExpression()), !dbg !4910
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !4911, metadata !DIExpression()), !dbg !4912
  store i64 %dev, i64* %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dev.addr, metadata !4913, metadata !DIExpression()), !dbg !4914
  call void @klee_warning(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.120, i64 0, i64 0)), !dbg !4915
  %call = call i32* @__errno_location() #22, !dbg !4916
  store i32 5, i32* %call, align 4, !dbg !4917
  ret i32 -1, !dbg !4918
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @pipe(i32* %filedes) #0 !dbg !4919 {
entry:
  %filedes.addr = alloca i32*, align 8
  store i32* %filedes, i32** %filedes.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %filedes.addr, metadata !4922, metadata !DIExpression()), !dbg !4923
  call void @klee_warning(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3.121, i64 0, i64 0)), !dbg !4924
  %call = call i32* @__errno_location() #22, !dbg !4925
  store i32 23, i32* %call, align 4, !dbg !4926
  ret i32 -1, !dbg !4927
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @link(i8* nonnull %oldpath, i8* nonnull %newpath) #0 !dbg !4928 {
entry:
  %oldpath.addr = alloca i8*, align 8
  %newpath.addr = alloca i8*, align 8
  store i8* %oldpath, i8** %oldpath.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %oldpath.addr, metadata !4929, metadata !DIExpression()), !dbg !4930
  store i8* %newpath, i8** %newpath.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %newpath.addr, metadata !4931, metadata !DIExpression()), !dbg !4932
  call void @klee_warning(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.122, i64 0, i64 0)), !dbg !4933
  %call = call i32* @__errno_location() #22, !dbg !4934
  store i32 1, i32* %call, align 4, !dbg !4935
  ret i32 -1, !dbg !4936
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @symlink(i8* nonnull %oldpath, i8* nonnull %newpath) #0 !dbg !4937 {
entry:
  %oldpath.addr = alloca i8*, align 8
  %newpath.addr = alloca i8*, align 8
  store i8* %oldpath, i8** %oldpath.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %oldpath.addr, metadata !4938, metadata !DIExpression()), !dbg !4939
  store i8* %newpath, i8** %newpath.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %newpath.addr, metadata !4940, metadata !DIExpression()), !dbg !4941
  call void @klee_warning(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.122, i64 0, i64 0)), !dbg !4942
  %call = call i32* @__errno_location() #22, !dbg !4943
  store i32 1, i32* %call, align 4, !dbg !4944
  ret i32 -1, !dbg !4945
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @rename(i8* %oldpath, i8* %newpath) #0 !dbg !4946 {
entry:
  %oldpath.addr = alloca i8*, align 8
  %newpath.addr = alloca i8*, align 8
  store i8* %oldpath, i8** %oldpath.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %oldpath.addr, metadata !4947, metadata !DIExpression()), !dbg !4948
  store i8* %newpath, i8** %newpath.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %newpath.addr, metadata !4949, metadata !DIExpression()), !dbg !4950
  call void @klee_warning(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.122, i64 0, i64 0)), !dbg !4951
  %call = call i32* @__errno_location() #22, !dbg !4952
  store i32 1, i32* %call, align 4, !dbg !4953
  ret i32 -1, !dbg !4954
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @nanosleep(%struct.timespec.14* %req, %struct.timespec.14* %rem) #0 !dbg !4955 {
entry:
  %req.addr = alloca %struct.timespec.14*, align 8
  %rem.addr = alloca %struct.timespec.14*, align 8
  store %struct.timespec.14* %req, %struct.timespec.14** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec.14** %req.addr, metadata !4965, metadata !DIExpression()), !dbg !4966
  store %struct.timespec.14* %rem, %struct.timespec.14** %rem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec.14** %rem.addr, metadata !4967, metadata !DIExpression()), !dbg !4968
  ret i32 0, !dbg !4969
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @clock_gettime(i32 %clk_id, %struct.timespec.14* %res) #0 !dbg !4970 {
entry:
  %clk_id.addr = alloca i32, align 4
  %res.addr = alloca %struct.timespec.14*, align 8
  %tv = alloca %struct.timespec.14, align 8
  store i32 %clk_id, i32* %clk_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %clk_id.addr, metadata !4976, metadata !DIExpression()), !dbg !4977
  store %struct.timespec.14* %res, %struct.timespec.14** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec.14** %res.addr, metadata !4978, metadata !DIExpression()), !dbg !4979
  call void @llvm.dbg.declare(metadata %struct.timespec.14* %tv, metadata !4980, metadata !DIExpression()), !dbg !4985
  %call = call i32 @gettimeofday(%struct.timespec.14* %tv, %struct.cgc_timeval* null) #8, !dbg !4986
  %tv_sec = getelementptr inbounds %struct.timespec.14, %struct.timespec.14* %tv, i32 0, i32 0, !dbg !4987
  %0 = load i64, i64* %tv_sec, align 8, !dbg !4987
  %1 = load %struct.timespec.14*, %struct.timespec.14** %res.addr, align 8, !dbg !4988
  %tv_sec1 = getelementptr inbounds %struct.timespec.14, %struct.timespec.14* %1, i32 0, i32 0, !dbg !4989
  store i64 %0, i64* %tv_sec1, align 8, !dbg !4990
  %tv_usec = getelementptr inbounds %struct.timespec.14, %struct.timespec.14* %tv, i32 0, i32 1, !dbg !4991
  %2 = load i64, i64* %tv_usec, align 8, !dbg !4991
  %mul = mul nsw i64 %2, 1000, !dbg !4992
  %3 = load %struct.timespec.14*, %struct.timespec.14** %res.addr, align 8, !dbg !4993
  %tv_nsec = getelementptr inbounds %struct.timespec.14, %struct.timespec.14* %3, i32 0, i32 1, !dbg !4994
  store i64 %mul, i64* %tv_nsec, align 8, !dbg !4995
  ret i32 0, !dbg !4996
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @clock_settime(i32 %clk_id, %struct.timespec.14* %res) #0 !dbg !4997 {
entry:
  %clk_id.addr = alloca i32, align 4
  %res.addr = alloca %struct.timespec.14*, align 8
  store i32 %clk_id, i32* %clk_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %clk_id.addr, metadata !5000, metadata !DIExpression()), !dbg !5001
  store %struct.timespec.14* %res, %struct.timespec.14** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec.14** %res.addr, metadata !5002, metadata !DIExpression()), !dbg !5003
  call void @klee_warning(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.122, i64 0, i64 0)), !dbg !5004
  %call = call i32* @__errno_location() #22, !dbg !5005
  store i32 1, i32* %call, align 4, !dbg !5006
  ret i32 -1, !dbg !5007
}

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @time(i64* %t) #0 !dbg !5008 {
entry:
  %t.addr = alloca i64*, align 8
  %tv = alloca %struct.timespec.14, align 8
  store i64* %t, i64** %t.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %t.addr, metadata !5014, metadata !DIExpression()), !dbg !5015
  call void @llvm.dbg.declare(metadata %struct.timespec.14* %tv, metadata !5016, metadata !DIExpression()), !dbg !5017
  %call = call i32 @gettimeofday(%struct.timespec.14* %tv, %struct.cgc_timeval* null) #8, !dbg !5018
  %0 = load i64*, i64** %t.addr, align 8, !dbg !5019
  %tobool = icmp ne i64* %0, null, !dbg !5019
  br i1 %tobool, label %if.then, label %if.end, !dbg !5021

if.then:                                          ; preds = %entry
  %tv_sec = getelementptr inbounds %struct.timespec.14, %struct.timespec.14* %tv, i32 0, i32 0, !dbg !5022
  %1 = load i64, i64* %tv_sec, align 8, !dbg !5022
  %2 = load i64*, i64** %t.addr, align 8, !dbg !5023
  store i64 %1, i64* %2, align 8, !dbg !5024
  br label %if.end, !dbg !5025

if.end:                                           ; preds = %if.then, %entry
  %tv_sec1 = getelementptr inbounds %struct.timespec.14, %struct.timespec.14* %tv, i32 0, i32 0, !dbg !5026
  %3 = load i64, i64* %tv_sec1, align 8, !dbg !5026
  ret i64 %3, !dbg !5027
}

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @times(%struct.tms* %buf) #0 !dbg !5028 {
entry:
  %buf.addr = alloca %struct.tms*, align 8
  store %struct.tms* %buf, %struct.tms** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tms** %buf.addr, metadata !5041, metadata !DIExpression()), !dbg !5042
  %0 = load %struct.tms*, %struct.tms** %buf.addr, align 8, !dbg !5043
  %tobool = icmp ne %struct.tms* %0, null, !dbg !5043
  br i1 %tobool, label %if.else, label %if.then, !dbg !5045

if.then:                                          ; preds = %entry
  call void @klee_warning(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5.123, i64 0, i64 0)), !dbg !5046
  br label %if.end, !dbg !5046

if.else:                                          ; preds = %entry
  call void @klee_warning(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.6.124, i64 0, i64 0)), !dbg !5047
  %1 = load %struct.tms*, %struct.tms** %buf.addr, align 8, !dbg !5049
  %tms_utime = getelementptr inbounds %struct.tms, %struct.tms* %1, i32 0, i32 0, !dbg !5050
  store i64 0, i64* %tms_utime, align 8, !dbg !5051
  %2 = load %struct.tms*, %struct.tms** %buf.addr, align 8, !dbg !5052
  %tms_stime = getelementptr inbounds %struct.tms, %struct.tms* %2, i32 0, i32 1, !dbg !5053
  store i64 0, i64* %tms_stime, align 8, !dbg !5054
  %3 = load %struct.tms*, %struct.tms** %buf.addr, align 8, !dbg !5055
  %tms_cutime = getelementptr inbounds %struct.tms, %struct.tms* %3, i32 0, i32 2, !dbg !5056
  store i64 0, i64* %tms_cutime, align 8, !dbg !5057
  %4 = load %struct.tms*, %struct.tms** %buf.addr, align 8, !dbg !5058
  %tms_cstime = getelementptr inbounds %struct.tms, %struct.tms* %4, i32 0, i32 3, !dbg !5059
  store i64 0, i64* %tms_cstime, align 8, !dbg !5060
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret i64 0, !dbg !5061
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local %struct.utmpx* @getutxent() #0 !dbg !5062 {
entry:
  %call = call %struct.utmp* @getutent() #8, !dbg !5065
  %0 = bitcast %struct.utmp* %call to %struct.utmpx*, !dbg !5066
  ret %struct.utmpx* %0, !dbg !5067
}

; Function Attrs: nounwind
declare dso_local %struct.utmp* @getutent() #3

; Function Attrs: noinline nounwind uwtable
define weak dso_local void @setutxent() #0 !dbg !5068 {
entry:
  call void @setutent() #8, !dbg !5069
  ret void, !dbg !5070
}

; Function Attrs: nounwind
declare dso_local void @setutent() #3

; Function Attrs: noinline nounwind uwtable
define weak dso_local void @endutxent() #0 !dbg !5071 {
entry:
  call void @endutent() #8, !dbg !5072
  ret void, !dbg !5073
}

; Function Attrs: nounwind
declare dso_local void @endutent() #3

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @utmpxname(i8* %file) #0 !dbg !5074 {
entry:
  %file.addr = alloca i8*, align 8
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !5075, metadata !DIExpression()), !dbg !5076
  %0 = load i8*, i8** %file.addr, align 8, !dbg !5077
  %call = call i32 @utmpname(i8* %0) #8, !dbg !5078
  ret i32 0, !dbg !5079
}

; Function Attrs: nounwind
declare dso_local i32 @utmpname(i8*) #3

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @euidaccess(i8* nonnull %pathname, i32 %mode) #0 !dbg !5080 {
entry:
  %pathname.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  store i8* %pathname, i8** %pathname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pathname.addr, metadata !5081, metadata !DIExpression()), !dbg !5082
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !5083, metadata !DIExpression()), !dbg !5084
  %0 = load i8*, i8** %pathname.addr, align 8, !dbg !5085
  %1 = load i32, i32* %mode.addr, align 4, !dbg !5086
  %call = call i32 @access(i8* %0, i32 %1) #8, !dbg !5087
  ret i32 %call, !dbg !5088
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @eaccess(i8* nonnull %pathname, i32 %mode) #0 !dbg !5089 {
entry:
  %pathname.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  store i8* %pathname, i8** %pathname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pathname.addr, metadata !5090, metadata !DIExpression()), !dbg !5091
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !5092, metadata !DIExpression()), !dbg !5093
  %0 = load i8*, i8** %pathname.addr, align 8, !dbg !5094
  %1 = load i32, i32* %mode.addr, align 4, !dbg !5095
  %call = call i32 @euidaccess(i8* %0, i32 %1) #8, !dbg !5096
  ret i32 %call, !dbg !5097
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @group_member(i32 %__gid) #0 !dbg !5098 {
entry:
  %__gid.addr = alloca i32, align 4
  store i32 %__gid, i32* %__gid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %__gid.addr, metadata !5101, metadata !DIExpression()), !dbg !5102
  %0 = load i32, i32* %__gid.addr, align 4, !dbg !5103
  %call = call i32 @getgid() #8, !dbg !5104
  %cmp = icmp eq i32 %0, %call, !dbg !5105
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !5106

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %__gid.addr, align 4, !dbg !5107
  %call1 = call i32 @getegid() #8, !dbg !5108
  %cmp2 = icmp eq i32 %1, %call1, !dbg !5109
  br label %lor.end, !dbg !5106

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp2, %lor.rhs ]
  %lor.ext = zext i1 %2 to i32, !dbg !5106
  ret i32 %lor.ext, !dbg !5110
}

; Function Attrs: nounwind
declare dso_local i32 @getegid() #3

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @utime(i8* nonnull %filename, %struct.timespec.14* %buf) #0 !dbg !5111 {
entry:
  %filename.addr = alloca i8*, align 8
  %buf.addr = alloca %struct.timespec.14*, align 8
  store i8* %filename, i8** %filename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filename.addr, metadata !5121, metadata !DIExpression()), !dbg !5122
  store %struct.timespec.14* %buf, %struct.timespec.14** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec.14** %buf.addr, metadata !5123, metadata !DIExpression()), !dbg !5124
  call void @klee_warning(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.122, i64 0, i64 0)), !dbg !5125
  %call = call i32* @__errno_location() #22, !dbg !5126
  store i32 1, i32* %call, align 4, !dbg !5127
  ret i32 -1, !dbg !5128
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @futimes(i32 %fd, %struct.timespec.14* %times) #0 !dbg !5129 {
entry:
  %fd.addr = alloca i32, align 4
  %times.addr = alloca %struct.timespec.14*, align 8
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !5134, metadata !DIExpression()), !dbg !5135
  store %struct.timespec.14* %times, %struct.timespec.14** %times.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec.14** %times.addr, metadata !5136, metadata !DIExpression()), !dbg !5137
  call void @klee_warning(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7.125, i64 0, i64 0)), !dbg !5138
  %call = call i32* @__errno_location() #22, !dbg !5139
  store i32 9, i32* %call, align 4, !dbg !5140
  ret i32 -1, !dbg !5141
}

; Function Attrs: noinline nounwind readonly uwtable
define dso_local i32 @strverscmp(i8* nonnull %__s1, i8* nonnull %__s2) #12 !dbg !5142 {
entry:
  %__s1.addr = alloca i8*, align 8
  %__s2.addr = alloca i8*, align 8
  store i8* %__s1, i8** %__s1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %__s1.addr, metadata !5143, metadata !DIExpression()), !dbg !5144
  store i8* %__s2, i8** %__s2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %__s2.addr, metadata !5145, metadata !DIExpression()), !dbg !5146
  %0 = load i8*, i8** %__s1.addr, align 8, !dbg !5147
  %1 = load i8*, i8** %__s2.addr, align 8, !dbg !5148
  %call = call i32 @strcmp(i8* %0, i8* %1) #23, !dbg !5149
  ret i32 %call, !dbg !5150
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #9

; Function Attrs: noinline nounwind readnone uwtable
define weak dso_local i32 @gnu_dev_major(i64 %__dev) #13 !dbg !5151 {
entry:
  %__dev.addr = alloca i64, align 8
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %__dev.addr, metadata !5154, metadata !DIExpression()), !dbg !5155
  %0 = load i64, i64* %__dev.addr, align 8, !dbg !5156
  %shr = lshr i64 %0, 8, !dbg !5157
  %and = and i64 %shr, 4095, !dbg !5158
  %1 = load i64, i64* %__dev.addr, align 8, !dbg !5159
  %shr1 = lshr i64 %1, 32, !dbg !5160
  %conv = trunc i64 %shr1 to i32, !dbg !5161
  %and2 = and i32 %conv, -4096, !dbg !5162
  %conv3 = zext i32 %and2 to i64, !dbg !5163
  %or = or i64 %and, %conv3, !dbg !5164
  %conv4 = trunc i64 %or to i32, !dbg !5165
  ret i32 %conv4, !dbg !5166
}

; Function Attrs: noinline nounwind readnone uwtable
define weak dso_local i32 @gnu_dev_minor(i64 %__dev) #13 !dbg !5167 {
entry:
  %__dev.addr = alloca i64, align 8
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %__dev.addr, metadata !5168, metadata !DIExpression()), !dbg !5169
  %0 = load i64, i64* %__dev.addr, align 8, !dbg !5170
  %and = and i64 %0, 255, !dbg !5171
  %1 = load i64, i64* %__dev.addr, align 8, !dbg !5172
  %shr = lshr i64 %1, 12, !dbg !5173
  %conv = trunc i64 %shr to i32, !dbg !5174
  %and1 = and i32 %conv, -256, !dbg !5175
  %conv2 = zext i32 %and1 to i64, !dbg !5176
  %or = or i64 %and, %conv2, !dbg !5177
  %conv3 = trunc i64 %or to i32, !dbg !5178
  ret i32 %conv3, !dbg !5179
}

; Function Attrs: noinline nounwind readnone uwtable
define weak dso_local i64 @gnu_dev_makedev(i32 %__major, i32 %__minor) #13 !dbg !5180 {
entry:
  %__major.addr = alloca i32, align 4
  %__minor.addr = alloca i32, align 4
  store i32 %__major, i32* %__major.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %__major.addr, metadata !5183, metadata !DIExpression()), !dbg !5184
  store i32 %__minor, i32* %__minor.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %__minor.addr, metadata !5185, metadata !DIExpression()), !dbg !5186
  %0 = load i32, i32* %__minor.addr, align 4, !dbg !5187
  %and = and i32 %0, 255, !dbg !5188
  %1 = load i32, i32* %__major.addr, align 4, !dbg !5189
  %and1 = and i32 %1, 4095, !dbg !5190
  %shl = shl i32 %and1, 8, !dbg !5191
  %or = or i32 %and, %shl, !dbg !5192
  %conv = zext i32 %or to i64, !dbg !5193
  %2 = load i32, i32* %__minor.addr, align 4, !dbg !5194
  %and2 = and i32 %2, -256, !dbg !5195
  %conv3 = zext i32 %and2 to i64, !dbg !5196
  %shl4 = shl i64 %conv3, 12, !dbg !5197
  %or5 = or i64 %conv, %shl4, !dbg !5198
  %3 = load i32, i32* %__major.addr, align 4, !dbg !5199
  %and6 = and i32 %3, -4096, !dbg !5200
  %conv7 = zext i32 %and6 to i64, !dbg !5201
  %shl8 = shl i64 %conv7, 32, !dbg !5202
  %or9 = or i64 %or5, %shl8, !dbg !5203
  ret i64 %or9, !dbg !5204
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i8* @canonicalize_file_name(i8* nonnull %name) #0 !dbg !5205 {
entry:
  %retval = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %resolved_name = alloca i8*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !5208, metadata !DIExpression()), !dbg !5209
  call void @llvm.dbg.declare(metadata i8** %resolved_name, metadata !5210, metadata !DIExpression()), !dbg !5211
  %call = call noalias i8* @malloc(i64 4096) #8, !dbg !5212
  store i8* %call, i8** %resolved_name, align 8, !dbg !5211
  %0 = load i8*, i8** %resolved_name, align 8, !dbg !5213
  %tobool = icmp ne i8* %0, null, !dbg !5213
  br i1 %tobool, label %if.end, label %if.then, !dbg !5215

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !5216
  br label %return, !dbg !5216

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %name.addr, align 8, !dbg !5217
  %2 = load i8*, i8** %resolved_name, align 8, !dbg !5219
  %call1 = call i8* @realpath(i8* %1, i8* %2) #8, !dbg !5220
  %tobool2 = icmp ne i8* %call1, null, !dbg !5220
  %3 = load i8*, i8** %resolved_name, align 8, !dbg !5221
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !5222

if.then3:                                         ; preds = %if.end
  call void @free(i8* %3) #8, !dbg !5223
  store i8* null, i8** %retval, align 8, !dbg !5225
  br label %return, !dbg !5225

if.end4:                                          ; preds = %if.end
  store i8* %3, i8** %retval, align 8, !dbg !5226
  br label %return, !dbg !5226

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %4 = load i8*, i8** %retval, align 8, !dbg !5227
  ret i8* %4, !dbg !5227
}

; Function Attrs: nounwind
declare dso_local i8* @realpath(i8*, i8*) #3

; Function Attrs: nounwind
declare dso_local void @free(i8*) #3

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @getloadavg(double* nonnull %loadavg, i32 %nelem) #0 !dbg !5228 {
entry:
  %loadavg.addr = alloca double*, align 8
  %nelem.addr = alloca i32, align 4
  store double* %loadavg, double** %loadavg.addr, align 8
  call void @llvm.dbg.declare(metadata double** %loadavg.addr, metadata !5233, metadata !DIExpression()), !dbg !5234
  store i32 %nelem, i32* %nelem.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nelem.addr, metadata !5235, metadata !DIExpression()), !dbg !5236
  call void @klee_warning(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.126, i64 0, i64 0)), !dbg !5237
  ret i32 -1, !dbg !5238
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @wait(i32* %status) #0 !dbg !5239 {
entry:
  %status.addr = alloca i32*, align 8
  store i32* %status, i32** %status.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !5242, metadata !DIExpression()), !dbg !5243
  call void @klee_warning(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9.127, i64 0, i64 0)), !dbg !5244
  %call = call i32* @__errno_location() #22, !dbg !5245
  store i32 10, i32* %call, align 4, !dbg !5246
  ret i32 -1, !dbg !5247
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @wait3(i32* %status, i32 %options, %struct.rusage* %rusage) #0 !dbg !5248 {
entry:
  %status.addr = alloca i32*, align 8
  %options.addr = alloca i32, align 4
  %rusage.addr = alloca %struct.rusage*, align 8
  store i32* %status, i32** %status.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !5327, metadata !DIExpression()), !dbg !5328
  store i32 %options, i32* %options.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %options.addr, metadata !5329, metadata !DIExpression()), !dbg !5330
  store %struct.rusage* %rusage, %struct.rusage** %rusage.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rusage** %rusage.addr, metadata !5331, metadata !DIExpression()), !dbg !5332
  call void @klee_warning(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9.127, i64 0, i64 0)), !dbg !5333
  %call = call i32* @__errno_location() #22, !dbg !5334
  store i32 10, i32* %call, align 4, !dbg !5335
  ret i32 -1, !dbg !5336
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @wait4(i32 %pid, i32* %status, i32 %options, %struct.rusage* %rusage) #0 !dbg !5337 {
entry:
  %pid.addr = alloca i32, align 4
  %status.addr = alloca i32*, align 8
  %options.addr = alloca i32, align 4
  %rusage.addr = alloca %struct.rusage*, align 8
  store i32 %pid, i32* %pid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pid.addr, metadata !5341, metadata !DIExpression()), !dbg !5342
  store i32* %status, i32** %status.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !5343, metadata !DIExpression()), !dbg !5344
  store i32 %options, i32* %options.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %options.addr, metadata !5345, metadata !DIExpression()), !dbg !5346
  store %struct.rusage* %rusage, %struct.rusage** %rusage.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rusage** %rusage.addr, metadata !5347, metadata !DIExpression()), !dbg !5348
  call void @klee_warning(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9.127, i64 0, i64 0)), !dbg !5349
  %call = call i32* @__errno_location() #22, !dbg !5350
  store i32 10, i32* %call, align 4, !dbg !5351
  ret i32 -1, !dbg !5352
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @waitpid(i32 %pid, i32* %status, i32 %options) #0 !dbg !5353 {
entry:
  %pid.addr = alloca i32, align 4
  %status.addr = alloca i32*, align 8
  %options.addr = alloca i32, align 4
  store i32 %pid, i32* %pid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pid.addr, metadata !5356, metadata !DIExpression()), !dbg !5357
  store i32* %status, i32** %status.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !5358, metadata !DIExpression()), !dbg !5359
  store i32 %options, i32* %options.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %options.addr, metadata !5360, metadata !DIExpression()), !dbg !5361
  call void @klee_warning(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9.127, i64 0, i64 0)), !dbg !5362
  %call = call i32* @__errno_location() #22, !dbg !5363
  store i32 10, i32* %call, align 4, !dbg !5364
  ret i32 -1, !dbg !5365
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @waitid(i32 %idtype, i32 %id, %struct.siginfo_t* %infop, i32 %options) #0 !dbg !5366 {
entry:
  %idtype.addr = alloca i32, align 4
  %id.addr = alloca i32, align 4
  %infop.addr = alloca %struct.siginfo_t*, align 8
  %options.addr = alloca i32, align 4
  store i32 %idtype, i32* %idtype.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idtype.addr, metadata !5372, metadata !DIExpression()), !dbg !5373
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !5374, metadata !DIExpression()), !dbg !5375
  store %struct.siginfo_t* %infop, %struct.siginfo_t** %infop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.siginfo_t** %infop.addr, metadata !5376, metadata !DIExpression()), !dbg !5377
  store i32 %options, i32* %options.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %options.addr, metadata !5378, metadata !DIExpression()), !dbg !5379
  call void @klee_warning(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9.127, i64 0, i64 0)), !dbg !5380
  %call = call i32* @__errno_location() #22, !dbg !5381
  store i32 10, i32* %call, align 4, !dbg !5382
  ret i32 -1, !dbg !5383
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @mount(i8* %source, i8* %target, i8* %filesystemtype, i64 %mountflags, i8* %data) #0 !dbg !5384 {
entry:
  %source.addr = alloca i8*, align 8
  %target.addr = alloca i8*, align 8
  %filesystemtype.addr = alloca i8*, align 8
  %mountflags.addr = alloca i64, align 8
  %data.addr = alloca i8*, align 8
  store i8* %source, i8** %source.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %source.addr, metadata !5387, metadata !DIExpression()), !dbg !5388
  store i8* %target, i8** %target.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %target.addr, metadata !5389, metadata !DIExpression()), !dbg !5390
  store i8* %filesystemtype, i8** %filesystemtype.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filesystemtype.addr, metadata !5391, metadata !DIExpression()), !dbg !5392
  store i64 %mountflags, i64* %mountflags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %mountflags.addr, metadata !5393, metadata !DIExpression()), !dbg !5394
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !5395, metadata !DIExpression()), !dbg !5396
  call void @klee_warning(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.122, i64 0, i64 0)), !dbg !5397
  %call = call i32* @__errno_location() #22, !dbg !5398
  store i32 1, i32* %call, align 4, !dbg !5399
  ret i32 -1, !dbg !5400
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @umount(i8* %target) #0 !dbg !5401 {
entry:
  %target.addr = alloca i8*, align 8
  store i8* %target, i8** %target.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %target.addr, metadata !5402, metadata !DIExpression()), !dbg !5403
  call void @klee_warning(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.122, i64 0, i64 0)), !dbg !5404
  %call = call i32* @__errno_location() #22, !dbg !5405
  store i32 1, i32* %call, align 4, !dbg !5406
  ret i32 -1, !dbg !5407
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @umount2(i8* %target, i32 %flags) #0 !dbg !5408 {
entry:
  %target.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  store i8* %target, i8** %target.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %target.addr, metadata !5409, metadata !DIExpression()), !dbg !5410
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !5411, metadata !DIExpression()), !dbg !5412
  call void @klee_warning(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.122, i64 0, i64 0)), !dbg !5413
  %call = call i32* @__errno_location() #22, !dbg !5414
  store i32 1, i32* %call, align 4, !dbg !5415
  ret i32 -1, !dbg !5416
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @swapon(i8* %path, i32 %swapflags) #0 !dbg !5417 {
entry:
  %path.addr = alloca i8*, align 8
  %swapflags.addr = alloca i32, align 4
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !5418, metadata !DIExpression()), !dbg !5419
  store i32 %swapflags, i32* %swapflags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %swapflags.addr, metadata !5420, metadata !DIExpression()), !dbg !5421
  call void @klee_warning(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.122, i64 0, i64 0)), !dbg !5422
  %call = call i32* @__errno_location() #22, !dbg !5423
  store i32 1, i32* %call, align 4, !dbg !5424
  ret i32 -1, !dbg !5425
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @swapoff(i8* %path) #0 !dbg !5426 {
entry:
  %path.addr = alloca i8*, align 8
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !5427, metadata !DIExpression()), !dbg !5428
  call void @klee_warning(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.122, i64 0, i64 0)), !dbg !5429
  %call = call i32* @__errno_location() #22, !dbg !5430
  store i32 1, i32* %call, align 4, !dbg !5431
  ret i32 -1, !dbg !5432
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @setgid(i32 %gid) #0 !dbg !5433 {
entry:
  %gid.addr = alloca i32, align 4
  store i32 %gid, i32* %gid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gid.addr, metadata !5434, metadata !DIExpression()), !dbg !5435
  call void @klee_warning(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.10.128, i64 0, i64 0)), !dbg !5436
  ret i32 0, !dbg !5437
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @setgroups(i64 %size, i32* %list) #0 !dbg !5438 {
entry:
  %size.addr = alloca i64, align 8
  %list.addr = alloca i32*, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5443, metadata !DIExpression()), !dbg !5444
  store i32* %list, i32** %list.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %list.addr, metadata !5445, metadata !DIExpression()), !dbg !5446
  call void @klee_warning(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.122, i64 0, i64 0)), !dbg !5447
  %call = call i32* @__errno_location() #22, !dbg !5448
  store i32 1, i32* %call, align 4, !dbg !5449
  ret i32 -1, !dbg !5450
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @sethostname(i8* nonnull %name, i64 %len) #0 !dbg !5451 {
entry:
  %name.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !5454, metadata !DIExpression()), !dbg !5455
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !5456, metadata !DIExpression()), !dbg !5457
  call void @klee_warning(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.122, i64 0, i64 0)), !dbg !5458
  %call = call i32* @__errno_location() #22, !dbg !5459
  store i32 1, i32* %call, align 4, !dbg !5460
  ret i32 -1, !dbg !5461
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @setpgid(i32 %pid, i32 %pgid) #0 !dbg !5462 {
entry:
  %pid.addr = alloca i32, align 4
  %pgid.addr = alloca i32, align 4
  store i32 %pid, i32* %pid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pid.addr, metadata !5465, metadata !DIExpression()), !dbg !5466
  store i32 %pgid, i32* %pgid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pgid.addr, metadata !5467, metadata !DIExpression()), !dbg !5468
  call void @klee_warning(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.122, i64 0, i64 0)), !dbg !5469
  %call = call i32* @__errno_location() #22, !dbg !5470
  store i32 1, i32* %call, align 4, !dbg !5471
  ret i32 -1, !dbg !5472
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @setpgrp() #0 !dbg !5473 {
entry:
  call void @klee_warning(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.122, i64 0, i64 0)), !dbg !5474
  %call = call i32* @__errno_location() #22, !dbg !5475
  store i32 1, i32* %call, align 4, !dbg !5476
  ret i32 -1, !dbg !5477
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @setpriority(i32 %which, i32 %who, i32 %prio) #0 !dbg !5478 {
entry:
  %which.addr = alloca i32, align 4
  %who.addr = alloca i32, align 4
  %prio.addr = alloca i32, align 4
  store i32 %which, i32* %which.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %which.addr, metadata !5483, metadata !DIExpression()), !dbg !5484
  store i32 %who, i32* %who.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %who.addr, metadata !5485, metadata !DIExpression()), !dbg !5486
  store i32 %prio, i32* %prio.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %prio.addr, metadata !5487, metadata !DIExpression()), !dbg !5488
  call void @klee_warning(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.122, i64 0, i64 0)), !dbg !5489
  %call = call i32* @__errno_location() #22, !dbg !5490
  store i32 1, i32* %call, align 4, !dbg !5491
  ret i32 -1, !dbg !5492
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @setresgid(i32 %rgid, i32 %egid, i32 %sgid) #0 !dbg !5493 {
entry:
  %rgid.addr = alloca i32, align 4
  %egid.addr = alloca i32, align 4
  %sgid.addr = alloca i32, align 4
  store i32 %rgid, i32* %rgid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rgid.addr, metadata !5496, metadata !DIExpression()), !dbg !5497
  store i32 %egid, i32* %egid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %egid.addr, metadata !5498, metadata !DIExpression()), !dbg !5499
  store i32 %sgid, i32* %sgid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sgid.addr, metadata !5500, metadata !DIExpression()), !dbg !5501
  call void @klee_warning(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.122, i64 0, i64 0)), !dbg !5502
  %call = call i32* @__errno_location() #22, !dbg !5503
  store i32 1, i32* %call, align 4, !dbg !5504
  ret i32 -1, !dbg !5505
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @setresuid(i32 %ruid, i32 %euid, i32 %suid) #0 !dbg !5506 {
entry:
  %ruid.addr = alloca i32, align 4
  %euid.addr = alloca i32, align 4
  %suid.addr = alloca i32, align 4
  store i32 %ruid, i32* %ruid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ruid.addr, metadata !5510, metadata !DIExpression()), !dbg !5511
  store i32 %euid, i32* %euid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %euid.addr, metadata !5512, metadata !DIExpression()), !dbg !5513
  store i32 %suid, i32* %suid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %suid.addr, metadata !5514, metadata !DIExpression()), !dbg !5515
  call void @klee_warning(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.122, i64 0, i64 0)), !dbg !5516
  %call = call i32* @__errno_location() #22, !dbg !5517
  store i32 1, i32* %call, align 4, !dbg !5518
  ret i32 -1, !dbg !5519
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @setrlimit(i32 %resource, %struct.timespec.14* %rlim) #0 !dbg !5520 {
entry:
  %resource.addr = alloca i32, align 4
  %rlim.addr = alloca %struct.timespec.14*, align 8
  store i32 %resource, i32* %resource.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %resource.addr, metadata !5532, metadata !DIExpression()), !dbg !5533
  store %struct.timespec.14* %rlim, %struct.timespec.14** %rlim.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec.14** %rlim.addr, metadata !5534, metadata !DIExpression()), !dbg !5535
  call void @klee_warning(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.122, i64 0, i64 0)), !dbg !5536
  %call = call i32* @__errno_location() #22, !dbg !5537
  store i32 1, i32* %call, align 4, !dbg !5538
  ret i32 -1, !dbg !5539
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @setrlimit64(i32 %resource, %struct.timespec.14* %rlim) #0 !dbg !5540 {
entry:
  %resource.addr = alloca i32, align 4
  %rlim.addr = alloca %struct.timespec.14*, align 8
  store i32 %resource, i32* %resource.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %resource.addr, metadata !5551, metadata !DIExpression()), !dbg !5552
  store %struct.timespec.14* %rlim, %struct.timespec.14** %rlim.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec.14** %rlim.addr, metadata !5553, metadata !DIExpression()), !dbg !5554
  call void @klee_warning(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.122, i64 0, i64 0)), !dbg !5555
  %call = call i32* @__errno_location() #22, !dbg !5556
  store i32 1, i32* %call, align 4, !dbg !5557
  ret i32 -1, !dbg !5558
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @setsid() #0 !dbg !5559 {
entry:
  call void @klee_warning(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.122, i64 0, i64 0)), !dbg !5562
  %call = call i32* @__errno_location() #22, !dbg !5563
  store i32 1, i32* %call, align 4, !dbg !5564
  ret i32 -1, !dbg !5565
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @settimeofday(%struct.timespec.14* %tv, %struct.cgc_timeval* %tz) #0 !dbg !5566 {
entry:
  %tv.addr = alloca %struct.timespec.14*, align 8
  %tz.addr = alloca %struct.cgc_timeval*, align 8
  store %struct.timespec.14* %tv, %struct.timespec.14** %tv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec.14** %tv.addr, metadata !5576, metadata !DIExpression()), !dbg !5577
  store %struct.cgc_timeval* %tz, %struct.cgc_timeval** %tz.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cgc_timeval** %tz.addr, metadata !5578, metadata !DIExpression()), !dbg !5579
  call void @klee_warning(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.122, i64 0, i64 0)), !dbg !5580
  %call = call i32* @__errno_location() #22, !dbg !5581
  store i32 1, i32* %call, align 4, !dbg !5582
  ret i32 -1, !dbg !5583
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @setuid(i32 %uid) #0 !dbg !5584 {
entry:
  %uid.addr = alloca i32, align 4
  store i32 %uid, i32* %uid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %uid.addr, metadata !5587, metadata !DIExpression()), !dbg !5588
  call void @klee_warning(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.10.128, i64 0, i64 0)), !dbg !5589
  ret i32 0, !dbg !5590
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @reboot(i32 %flag) #0 !dbg !5591 {
entry:
  %flag.addr = alloca i32, align 4
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !5592, metadata !DIExpression()), !dbg !5593
  call void @klee_warning(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.122, i64 0, i64 0)), !dbg !5594
  %call = call i32* @__errno_location() #22, !dbg !5595
  store i32 1, i32* %call, align 4, !dbg !5596
  ret i32 -1, !dbg !5597
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @mlock(i8* %addr, i64 %len) #0 !dbg !5598 {
entry:
  %addr.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !5601, metadata !DIExpression()), !dbg !5602
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !5603, metadata !DIExpression()), !dbg !5604
  call void @klee_warning(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.122, i64 0, i64 0)), !dbg !5605
  %call = call i32* @__errno_location() #22, !dbg !5606
  store i32 1, i32* %call, align 4, !dbg !5607
  ret i32 -1, !dbg !5608
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @munlock(i8* %addr, i64 %len) #0 !dbg !5609 {
entry:
  %addr.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !5610, metadata !DIExpression()), !dbg !5611
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !5612, metadata !DIExpression()), !dbg !5613
  call void @klee_warning(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.122, i64 0, i64 0)), !dbg !5614
  %call = call i32* @__errno_location() #22, !dbg !5615
  store i32 1, i32* %call, align 4, !dbg !5616
  ret i32 -1, !dbg !5617
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @pause() #0 !dbg !5618 {
entry:
  call void @klee_warning(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.122, i64 0, i64 0)), !dbg !5619
  %call = call i32* @__errno_location() #22, !dbg !5620
  store i32 1, i32* %call, align 4, !dbg !5621
  ret i32 -1, !dbg !5622
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i64 @readahead(i32 %fd, i64* %offset, i64 %count) #0 !dbg !5623 {
entry:
  %fd.addr = alloca i32, align 4
  %offset.addr = alloca i64*, align 8
  %count.addr = alloca i64, align 8
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !5629, metadata !DIExpression()), !dbg !5630
  store i64* %offset, i64** %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %offset.addr, metadata !5631, metadata !DIExpression()), !dbg !5632
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !5633, metadata !DIExpression()), !dbg !5634
  call void @klee_warning(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.122, i64 0, i64 0)), !dbg !5635
  %call = call i32* @__errno_location() #22, !dbg !5636
  store i32 1, i32* %call, align 4, !dbg !5637
  ret i64 -1, !dbg !5638
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i8* @mmap(i8* %start, i64 %length, i32 %prot, i32 %flags, i32 %fd, i64 %offset) #0 !dbg !5639 {
entry:
  %start.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  %prot.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %offset.addr = alloca i64, align 8
  store i8* %start, i8** %start.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %start.addr, metadata !5643, metadata !DIExpression()), !dbg !5644
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !5645, metadata !DIExpression()), !dbg !5646
  store i32 %prot, i32* %prot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %prot.addr, metadata !5647, metadata !DIExpression()), !dbg !5648
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !5649, metadata !DIExpression()), !dbg !5650
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !5651, metadata !DIExpression()), !dbg !5652
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !5653, metadata !DIExpression()), !dbg !5654
  call void @klee_warning(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.122, i64 0, i64 0)), !dbg !5655
  %call = call i32* @__errno_location() #22, !dbg !5656
  store i32 1, i32* %call, align 4, !dbg !5657
  ret i8* inttoptr (i64 -1 to i8*), !dbg !5658
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i8* @mmap64(i8* %start, i64 %length, i32 %prot, i32 %flags, i32 %fd, i64 %offset) #0 !dbg !5659 {
entry:
  %start.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  %prot.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %offset.addr = alloca i64, align 8
  store i8* %start, i8** %start.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %start.addr, metadata !5662, metadata !DIExpression()), !dbg !5663
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !5664, metadata !DIExpression()), !dbg !5665
  store i32 %prot, i32* %prot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %prot.addr, metadata !5666, metadata !DIExpression()), !dbg !5667
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !5668, metadata !DIExpression()), !dbg !5669
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !5670, metadata !DIExpression()), !dbg !5671
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !5672, metadata !DIExpression()), !dbg !5673
  call void @klee_warning(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.122, i64 0, i64 0)), !dbg !5674
  %call = call i32* @__errno_location() #22, !dbg !5675
  store i32 1, i32* %call, align 4, !dbg !5676
  ret i8* inttoptr (i64 -1 to i8*), !dbg !5677
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @munmap(i8* %start, i64 %length) #0 !dbg !5678 {
entry:
  %start.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  store i8* %start, i8** %start.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %start.addr, metadata !5681, metadata !DIExpression()), !dbg !5682
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !5683, metadata !DIExpression()), !dbg !5684
  call void @klee_warning(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.122, i64 0, i64 0)), !dbg !5685
  %call = call i32* @__errno_location() #22, !dbg !5686
  store i32 1, i32* %call, align 4, !dbg !5687
  ret i32 -1, !dbg !5688
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @memcpy(i8* %destaddr, i8* %srcaddr, i64 %len) #0 !dbg !5689 {
entry:
  %destaddr.addr = alloca i8*, align 8
  %srcaddr.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %dest = alloca i8*, align 8
  %src = alloca i8*, align 8
  store i8* %destaddr, i8** %destaddr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %destaddr.addr, metadata !5693, metadata !DIExpression()), !dbg !5694
  store i8* %srcaddr, i8** %srcaddr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %srcaddr.addr, metadata !5695, metadata !DIExpression()), !dbg !5696
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !5697, metadata !DIExpression()), !dbg !5698
  call void @llvm.dbg.declare(metadata i8** %dest, metadata !5699, metadata !DIExpression()), !dbg !5700
  %0 = load i8*, i8** %destaddr.addr, align 8, !dbg !5701
  store i8* %0, i8** %dest, align 8, !dbg !5700
  call void @llvm.dbg.declare(metadata i8** %src, metadata !5702, metadata !DIExpression()), !dbg !5703
  %1 = load i8*, i8** %srcaddr.addr, align 8, !dbg !5704
  store i8* %1, i8** %src, align 8, !dbg !5703
  br label %while.cond, !dbg !5705

while.cond:                                       ; preds = %while.body, %entry
  %2 = load i64, i64* %len.addr, align 8, !dbg !5706
  %dec = add i64 %2, -1, !dbg !5706
  store i64 %dec, i64* %len.addr, align 8, !dbg !5706
  %cmp = icmp ugt i64 %2, 0, !dbg !5707
  br i1 %cmp, label %while.body, label %while.end, !dbg !5705

while.body:                                       ; preds = %while.cond
  %3 = load i8*, i8** %src, align 8, !dbg !5708
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !5708
  store i8* %incdec.ptr, i8** %src, align 8, !dbg !5708
  %4 = load i8, i8* %3, align 1, !dbg !5709
  %5 = load i8*, i8** %dest, align 8, !dbg !5710
  %incdec.ptr1 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !5710
  store i8* %incdec.ptr1, i8** %dest, align 8, !dbg !5710
  store i8 %4, i8* %5, align 1, !dbg !5711
  br label %while.cond, !dbg !5705, !llvm.loop !5712

while.end:                                        ; preds = %while.cond
  %6 = load i8*, i8** %destaddr.addr, align 8, !dbg !5713
  ret i8* %6, !dbg !5714
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @memset(i8* %dst, i32 %s, i64 %count) #0 !dbg !5715 {
entry:
  %dst.addr = alloca i8*, align 8
  %s.addr = alloca i32, align 4
  %count.addr = alloca i64, align 8
  %a = alloca i8*, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !5719, metadata !DIExpression()), !dbg !5720
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !5721, metadata !DIExpression()), !dbg !5722
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !5723, metadata !DIExpression()), !dbg !5724
  call void @llvm.dbg.declare(metadata i8** %a, metadata !5725, metadata !DIExpression()), !dbg !5726
  %0 = load i8*, i8** %dst.addr, align 8, !dbg !5727
  store i8* %0, i8** %a, align 8, !dbg !5726
  br label %while.cond, !dbg !5728

while.cond:                                       ; preds = %while.body, %entry
  %1 = load i64, i64* %count.addr, align 8, !dbg !5729
  %dec = add i64 %1, -1, !dbg !5729
  store i64 %dec, i64* %count.addr, align 8, !dbg !5729
  %cmp = icmp ugt i64 %1, 0, !dbg !5730
  br i1 %cmp, label %while.body, label %while.end, !dbg !5728

while.body:                                       ; preds = %while.cond
  %2 = load i32, i32* %s.addr, align 4, !dbg !5731
  %conv = trunc i32 %2 to i8, !dbg !5731
  %3 = load i8*, i8** %a, align 8, !dbg !5732
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !5732
  store i8* %incdec.ptr, i8** %a, align 8, !dbg !5732
  store i8 %conv, i8* %3, align 1, !dbg !5733
  br label %while.cond, !dbg !5728, !llvm.loop !5734

while.end:                                        ; preds = %while.cond
  %4 = load i8*, i8** %dst.addr, align 8, !dbg !5735
  ret i8* %4, !dbg !5736
}

; Function Attrs: noinline nounwind optnone uwtable
define void @AES128_ECB_encrypt(i8* %input, i8* %key, i8* %output) #6 {
entry:
  %input.addr = alloca i8*, align 8
  %key.addr = alloca i8*, align 8
  %output.addr = alloca i8*, align 8
  store i8* %input, i8** %input.addr, align 8
  store i8* %key, i8** %key.addr, align 8
  store i8* %output, i8** %output.addr, align 8
  %0 = load i8*, i8** %output.addr, align 8
  %1 = load i8*, i8** %input.addr, align 8
  call void @BlockCopy(i8* %0, i8* %1) #15
  %2 = load i8*, i8** %output.addr, align 8
  %3 = bitcast i8* %2 to [4 x [4 x i8]]*
  store [4 x [4 x i8]]* %3, [4 x [4 x i8]]** @state, align 8
  %4 = load i8*, i8** %key.addr, align 8
  store i8* %4, i8** @Key, align 8
  call void @KeyExpansion() #15
  call void @Cipher() #15
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @BlockCopy(i8* %output, i8* %input) #6 {
entry:
  %output.addr = alloca i8*, align 8
  %input.addr = alloca i8*, align 8
  %i = alloca i8, align 1
  store i8* %output, i8** %output.addr, align 8
  store i8* %input, i8** %input.addr, align 8
  store i8 0, i8* %i, align 1
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8, i8* %i, align 1
  %conv = zext i8 %0 to i32
  %cmp = icmp slt i32 %conv, 16
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load i8*, i8** %input.addr, align 8
  %2 = load i8, i8* %i, align 1
  %idxprom = zext i8 %2 to i64
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %idxprom
  %3 = load i8, i8* %arrayidx, align 1
  %4 = load i8*, i8** %output.addr, align 8
  %5 = load i8, i8* %i, align 1
  %idxprom2 = zext i8 %5 to i64
  %arrayidx3 = getelementptr inbounds i8, i8* %4, i64 %idxprom2
  store i8 %3, i8* %arrayidx3, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %6 = load i8, i8* %i, align 1
  %inc = add i8 %6, 1
  store i8 %inc, i8* %i, align 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @KeyExpansion() #6 {
entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %tempa = alloca [4 x i8], align 1
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp ult i32 %0, 4
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load i8*, i8** @Key, align 8
  %2 = load i32, i32* %i, align 4
  %mul = mul i32 %2, 4
  %add = add i32 %mul, 0
  %idxprom = zext i32 %add to i64
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %idxprom
  %3 = load i8, i8* %arrayidx, align 1
  %4 = load i32, i32* %i, align 4
  %mul1 = mul i32 %4, 4
  %add2 = add i32 %mul1, 0
  %idxprom3 = zext i32 %add2 to i64
  %arrayidx4 = getelementptr inbounds [176 x i8], [176 x i8]* @RoundKey, i64 0, i64 %idxprom3
  store i8 %3, i8* %arrayidx4, align 1
  %5 = load i8*, i8** @Key, align 8
  %6 = load i32, i32* %i, align 4
  %mul5 = mul i32 %6, 4
  %add6 = add i32 %mul5, 1
  %idxprom7 = zext i32 %add6 to i64
  %arrayidx8 = getelementptr inbounds i8, i8* %5, i64 %idxprom7
  %7 = load i8, i8* %arrayidx8, align 1
  %8 = load i32, i32* %i, align 4
  %mul9 = mul i32 %8, 4
  %add10 = add i32 %mul9, 1
  %idxprom11 = zext i32 %add10 to i64
  %arrayidx12 = getelementptr inbounds [176 x i8], [176 x i8]* @RoundKey, i64 0, i64 %idxprom11
  store i8 %7, i8* %arrayidx12, align 1
  %9 = load i8*, i8** @Key, align 8
  %10 = load i32, i32* %i, align 4
  %mul13 = mul i32 %10, 4
  %add14 = add i32 %mul13, 2
  %idxprom15 = zext i32 %add14 to i64
  %arrayidx16 = getelementptr inbounds i8, i8* %9, i64 %idxprom15
  %11 = load i8, i8* %arrayidx16, align 1
  %12 = load i32, i32* %i, align 4
  %mul17 = mul i32 %12, 4
  %add18 = add i32 %mul17, 2
  %idxprom19 = zext i32 %add18 to i64
  %arrayidx20 = getelementptr inbounds [176 x i8], [176 x i8]* @RoundKey, i64 0, i64 %idxprom19
  store i8 %11, i8* %arrayidx20, align 1
  %13 = load i8*, i8** @Key, align 8
  %14 = load i32, i32* %i, align 4
  %mul21 = mul i32 %14, 4
  %add22 = add i32 %mul21, 3
  %idxprom23 = zext i32 %add22 to i64
  %arrayidx24 = getelementptr inbounds i8, i8* %13, i64 %idxprom23
  %15 = load i8, i8* %arrayidx24, align 1
  %16 = load i32, i32* %i, align 4
  %mul25 = mul i32 %16, 4
  %add26 = add i32 %mul25, 3
  %idxprom27 = zext i32 %add26 to i64
  %arrayidx28 = getelementptr inbounds [176 x i8], [176 x i8]* @RoundKey, i64 0, i64 %idxprom27
  store i8 %15, i8* %arrayidx28, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4
  %inc = add i32 %17, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %for.cond29

for.cond29:                                       ; preds = %for.inc128, %for.end
  %18 = load i32, i32* %i, align 4
  %cmp30 = icmp ult i32 %18, 44
  br i1 %cmp30, label %for.body31, label %for.end130

for.body31:                                       ; preds = %for.cond29
  store i32 0, i32* %j, align 4
  br label %for.cond32

for.cond32:                                       ; preds = %for.inc41, %for.body31
  %19 = load i32, i32* %j, align 4
  %cmp33 = icmp ult i32 %19, 4
  br i1 %cmp33, label %for.body34, label %for.end43

for.body34:                                       ; preds = %for.cond32
  %20 = load i32, i32* %i, align 4
  %sub = sub i32 %20, 1
  %mul35 = mul i32 %sub, 4
  %21 = load i32, i32* %j, align 4
  %add36 = add i32 %mul35, %21
  %idxprom37 = zext i32 %add36 to i64
  %arrayidx38 = getelementptr inbounds [176 x i8], [176 x i8]* @RoundKey, i64 0, i64 %idxprom37
  %22 = load i8, i8* %arrayidx38, align 1
  %23 = load i32, i32* %j, align 4
  %idxprom39 = zext i32 %23 to i64
  %arrayidx40 = getelementptr inbounds [4 x i8], [4 x i8]* %tempa, i64 0, i64 %idxprom39
  store i8 %22, i8* %arrayidx40, align 1
  br label %for.inc41

for.inc41:                                        ; preds = %for.body34
  %24 = load i32, i32* %j, align 4
  %inc42 = add i32 %24, 1
  store i32 %inc42, i32* %j, align 4
  br label %for.cond32

for.end43:                                        ; preds = %for.cond32
  %25 = load i32, i32* %i, align 4
  %rem = urem i32 %25, 4
  %cmp44 = icmp eq i32 %rem, 0
  br i1 %cmp44, label %if.then, label %if.else

if.then:                                          ; preds = %for.end43
  %arrayidx45 = getelementptr inbounds [4 x i8], [4 x i8]* %tempa, i64 0, i64 0
  %26 = load i8, i8* %arrayidx45, align 1
  %conv = zext i8 %26 to i32
  store i32 %conv, i32* %k, align 4
  %arrayidx46 = getelementptr inbounds [4 x i8], [4 x i8]* %tempa, i64 0, i64 1
  %27 = load i8, i8* %arrayidx46, align 1
  %arrayidx47 = getelementptr inbounds [4 x i8], [4 x i8]* %tempa, i64 0, i64 0
  store i8 %27, i8* %arrayidx47, align 1
  %arrayidx48 = getelementptr inbounds [4 x i8], [4 x i8]* %tempa, i64 0, i64 2
  %28 = load i8, i8* %arrayidx48, align 1
  %arrayidx49 = getelementptr inbounds [4 x i8], [4 x i8]* %tempa, i64 0, i64 1
  store i8 %28, i8* %arrayidx49, align 1
  %arrayidx50 = getelementptr inbounds [4 x i8], [4 x i8]* %tempa, i64 0, i64 3
  %29 = load i8, i8* %arrayidx50, align 1
  %arrayidx51 = getelementptr inbounds [4 x i8], [4 x i8]* %tempa, i64 0, i64 2
  store i8 %29, i8* %arrayidx51, align 1
  %30 = load i32, i32* %k, align 4
  %conv52 = trunc i32 %30 to i8
  %arrayidx53 = getelementptr inbounds [4 x i8], [4 x i8]* %tempa, i64 0, i64 3
  store i8 %conv52, i8* %arrayidx53, align 1
  %arrayidx54 = getelementptr inbounds [4 x i8], [4 x i8]* %tempa, i64 0, i64 0
  %31 = load i8, i8* %arrayidx54, align 1
  %call = call zeroext i8 @getSBoxValue(i8 zeroext %31) #15
  %arrayidx55 = getelementptr inbounds [4 x i8], [4 x i8]* %tempa, i64 0, i64 0
  store i8 %call, i8* %arrayidx55, align 1
  %arrayidx56 = getelementptr inbounds [4 x i8], [4 x i8]* %tempa, i64 0, i64 1
  %32 = load i8, i8* %arrayidx56, align 1
  %call57 = call zeroext i8 @getSBoxValue(i8 zeroext %32) #15
  %arrayidx58 = getelementptr inbounds [4 x i8], [4 x i8]* %tempa, i64 0, i64 1
  store i8 %call57, i8* %arrayidx58, align 1
  %arrayidx59 = getelementptr inbounds [4 x i8], [4 x i8]* %tempa, i64 0, i64 2
  %33 = load i8, i8* %arrayidx59, align 1
  %call60 = call zeroext i8 @getSBoxValue(i8 zeroext %33) #15
  %arrayidx61 = getelementptr inbounds [4 x i8], [4 x i8]* %tempa, i64 0, i64 2
  store i8 %call60, i8* %arrayidx61, align 1
  %arrayidx62 = getelementptr inbounds [4 x i8], [4 x i8]* %tempa, i64 0, i64 3
  %34 = load i8, i8* %arrayidx62, align 1
  %call63 = call zeroext i8 @getSBoxValue(i8 zeroext %34) #15
  %arrayidx64 = getelementptr inbounds [4 x i8], [4 x i8]* %tempa, i64 0, i64 3
  store i8 %call63, i8* %arrayidx64, align 1
  %arrayidx65 = getelementptr inbounds [4 x i8], [4 x i8]* %tempa, i64 0, i64 0
  %35 = load i8, i8* %arrayidx65, align 1
  %conv66 = zext i8 %35 to i32
  %36 = load i32, i32* %i, align 4
  %div = udiv i32 %36, 4
  %idxprom67 = zext i32 %div to i64
  %arrayidx68 = getelementptr inbounds [255 x i8], [255 x i8]* @Rcon, i64 0, i64 %idxprom67
  %37 = load i8, i8* %arrayidx68, align 1
  %conv69 = zext i8 %37 to i32
  %xor = xor i32 %conv66, %conv69
  %conv70 = trunc i32 %xor to i8
  %arrayidx71 = getelementptr inbounds [4 x i8], [4 x i8]* %tempa, i64 0, i64 0
  store i8 %conv70, i8* %arrayidx71, align 1
  br label %if.end

if.else:                                          ; preds = %for.end43
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %38 = load i32, i32* %i, align 4
  %sub72 = sub i32 %38, 4
  %mul73 = mul i32 %sub72, 4
  %add74 = add i32 %mul73, 0
  %idxprom75 = zext i32 %add74 to i64
  %arrayidx76 = getelementptr inbounds [176 x i8], [176 x i8]* @RoundKey, i64 0, i64 %idxprom75
  %39 = load i8, i8* %arrayidx76, align 1
  %conv77 = zext i8 %39 to i32
  %arrayidx78 = getelementptr inbounds [4 x i8], [4 x i8]* %tempa, i64 0, i64 0
  %40 = load i8, i8* %arrayidx78, align 1
  %conv79 = zext i8 %40 to i32
  %xor80 = xor i32 %conv77, %conv79
  %conv81 = trunc i32 %xor80 to i8
  %41 = load i32, i32* %i, align 4
  %mul82 = mul i32 %41, 4
  %add83 = add i32 %mul82, 0
  %idxprom84 = zext i32 %add83 to i64
  %arrayidx85 = getelementptr inbounds [176 x i8], [176 x i8]* @RoundKey, i64 0, i64 %idxprom84
  store i8 %conv81, i8* %arrayidx85, align 1
  %42 = load i32, i32* %i, align 4
  %sub86 = sub i32 %42, 4
  %mul87 = mul i32 %sub86, 4
  %add88 = add i32 %mul87, 1
  %idxprom89 = zext i32 %add88 to i64
  %arrayidx90 = getelementptr inbounds [176 x i8], [176 x i8]* @RoundKey, i64 0, i64 %idxprom89
  %43 = load i8, i8* %arrayidx90, align 1
  %conv91 = zext i8 %43 to i32
  %arrayidx92 = getelementptr inbounds [4 x i8], [4 x i8]* %tempa, i64 0, i64 1
  %44 = load i8, i8* %arrayidx92, align 1
  %conv93 = zext i8 %44 to i32
  %xor94 = xor i32 %conv91, %conv93
  %conv95 = trunc i32 %xor94 to i8
  %45 = load i32, i32* %i, align 4
  %mul96 = mul i32 %45, 4
  %add97 = add i32 %mul96, 1
  %idxprom98 = zext i32 %add97 to i64
  %arrayidx99 = getelementptr inbounds [176 x i8], [176 x i8]* @RoundKey, i64 0, i64 %idxprom98
  store i8 %conv95, i8* %arrayidx99, align 1
  %46 = load i32, i32* %i, align 4
  %sub100 = sub i32 %46, 4
  %mul101 = mul i32 %sub100, 4
  %add102 = add i32 %mul101, 2
  %idxprom103 = zext i32 %add102 to i64
  %arrayidx104 = getelementptr inbounds [176 x i8], [176 x i8]* @RoundKey, i64 0, i64 %idxprom103
  %47 = load i8, i8* %arrayidx104, align 1
  %conv105 = zext i8 %47 to i32
  %arrayidx106 = getelementptr inbounds [4 x i8], [4 x i8]* %tempa, i64 0, i64 2
  %48 = load i8, i8* %arrayidx106, align 1
  %conv107 = zext i8 %48 to i32
  %xor108 = xor i32 %conv105, %conv107
  %conv109 = trunc i32 %xor108 to i8
  %49 = load i32, i32* %i, align 4
  %mul110 = mul i32 %49, 4
  %add111 = add i32 %mul110, 2
  %idxprom112 = zext i32 %add111 to i64
  %arrayidx113 = getelementptr inbounds [176 x i8], [176 x i8]* @RoundKey, i64 0, i64 %idxprom112
  store i8 %conv109, i8* %arrayidx113, align 1
  %50 = load i32, i32* %i, align 4
  %sub114 = sub i32 %50, 4
  %mul115 = mul i32 %sub114, 4
  %add116 = add i32 %mul115, 3
  %idxprom117 = zext i32 %add116 to i64
  %arrayidx118 = getelementptr inbounds [176 x i8], [176 x i8]* @RoundKey, i64 0, i64 %idxprom117
  %51 = load i8, i8* %arrayidx118, align 1
  %conv119 = zext i8 %51 to i32
  %arrayidx120 = getelementptr inbounds [4 x i8], [4 x i8]* %tempa, i64 0, i64 3
  %52 = load i8, i8* %arrayidx120, align 1
  %conv121 = zext i8 %52 to i32
  %xor122 = xor i32 %conv119, %conv121
  %conv123 = trunc i32 %xor122 to i8
  %53 = load i32, i32* %i, align 4
  %mul124 = mul i32 %53, 4
  %add125 = add i32 %mul124, 3
  %idxprom126 = zext i32 %add125 to i64
  %arrayidx127 = getelementptr inbounds [176 x i8], [176 x i8]* @RoundKey, i64 0, i64 %idxprom126
  store i8 %conv123, i8* %arrayidx127, align 1
  br label %for.inc128

for.inc128:                                       ; preds = %if.end
  %54 = load i32, i32* %i, align 4
  %inc129 = add i32 %54, 1
  store i32 %inc129, i32* %i, align 4
  br label %for.cond29

for.end130:                                       ; preds = %for.cond29
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @Cipher() #6 {
entry:
  %round = alloca i8, align 1
  store i8 0, i8* %round, align 1
  call void @AddRoundKey(i8 zeroext 0) #15
  store i8 1, i8* %round, align 1
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8, i8* %round, align 1
  %conv = zext i8 %0 to i32
  %cmp = icmp slt i32 %conv, 10
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  call void @SubBytes() #15
  call void @ShiftRows() #15
  call void @MixColumns() #15
  %1 = load i8, i8* %round, align 1
  call void @AddRoundKey(i8 zeroext %1) #15
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %2 = load i8, i8* %round, align 1
  %inc = add i8 %2, 1
  store i8 %inc, i8* %round, align 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  call void @SubBytes() #15
  call void @ShiftRows() #15
  call void @AddRoundKey(i8 zeroext 10) #15
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @AddRoundKey(i8 zeroext %round) #6 {
entry:
  %round.addr = alloca i8, align 1
  %i = alloca i8, align 1
  %j = alloca i8, align 1
  store i8 %round, i8* %round.addr, align 1
  store i8 0, i8* %i, align 1
  br label %for.cond

for.cond:                                         ; preds = %for.inc20, %entry
  %0 = load i8, i8* %i, align 1
  %conv = zext i8 %0 to i32
  %cmp = icmp slt i32 %conv, 4
  br i1 %cmp, label %for.body, label %for.end22

for.body:                                         ; preds = %for.cond
  store i8 0, i8* %j, align 1
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc, %for.body
  %1 = load i8, i8* %j, align 1
  %conv3 = zext i8 %1 to i32
  %cmp4 = icmp slt i32 %conv3, 4
  br i1 %cmp4, label %for.body6, label %for.end

for.body6:                                        ; preds = %for.cond2
  %2 = load i8, i8* %round.addr, align 1
  %conv7 = zext i8 %2 to i32
  %mul = mul nsw i32 %conv7, 4
  %mul8 = mul nsw i32 %mul, 4
  %3 = load i8, i8* %i, align 1
  %conv9 = zext i8 %3 to i32
  %mul10 = mul nsw i32 %conv9, 4
  %add = add nsw i32 %mul8, %mul10
  %4 = load i8, i8* %j, align 1
  %conv11 = zext i8 %4 to i32
  %add12 = add nsw i32 %add, %conv11
  %idxprom = sext i32 %add12 to i64
  %arrayidx = getelementptr inbounds [176 x i8], [176 x i8]* @RoundKey, i64 0, i64 %idxprom
  %5 = load i8, i8* %arrayidx, align 1
  %conv13 = zext i8 %5 to i32
  %6 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %7 = load i8, i8* %i, align 1
  %idxprom14 = zext i8 %7 to i64
  %arrayidx15 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %6, i64 0, i64 %idxprom14
  %8 = load i8, i8* %j, align 1
  %idxprom16 = zext i8 %8 to i64
  %arrayidx17 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx15, i64 0, i64 %idxprom16
  %9 = load i8, i8* %arrayidx17, align 1
  %conv18 = zext i8 %9 to i32
  %xor = xor i32 %conv18, %conv13
  %conv19 = trunc i32 %xor to i8
  store i8 %conv19, i8* %arrayidx17, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body6
  %10 = load i8, i8* %j, align 1
  %inc = add i8 %10, 1
  store i8 %inc, i8* %j, align 1
  br label %for.cond2

for.end:                                          ; preds = %for.cond2
  br label %for.inc20

for.inc20:                                        ; preds = %for.end
  %11 = load i8, i8* %i, align 1
  %inc21 = add i8 %11, 1
  store i8 %inc21, i8* %i, align 1
  br label %for.cond

for.end22:                                        ; preds = %for.cond
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @SubBytes() #6 {
entry:
  %i = alloca i8, align 1
  %j = alloca i8, align 1
  store i8 0, i8* %i, align 1
  br label %for.cond

for.cond:                                         ; preds = %for.inc13, %entry
  %0 = load i8, i8* %i, align 1
  %conv = zext i8 %0 to i32
  %cmp = icmp slt i32 %conv, 4
  br i1 %cmp, label %for.body, label %for.end15

for.body:                                         ; preds = %for.cond
  store i8 0, i8* %j, align 1
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc, %for.body
  %1 = load i8, i8* %j, align 1
  %conv3 = zext i8 %1 to i32
  %cmp4 = icmp slt i32 %conv3, 4
  br i1 %cmp4, label %for.body6, label %for.end

for.body6:                                        ; preds = %for.cond2
  %2 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %3 = load i8, i8* %j, align 1
  %idxprom = zext i8 %3 to i64
  %arrayidx = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %2, i64 0, i64 %idxprom
  %4 = load i8, i8* %i, align 1
  %idxprom7 = zext i8 %4 to i64
  %arrayidx8 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx, i64 0, i64 %idxprom7
  %5 = load i8, i8* %arrayidx8, align 1
  %call = call zeroext i8 @getSBoxValue(i8 zeroext %5) #15
  %6 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %7 = load i8, i8* %j, align 1
  %idxprom9 = zext i8 %7 to i64
  %arrayidx10 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %6, i64 0, i64 %idxprom9
  %8 = load i8, i8* %i, align 1
  %idxprom11 = zext i8 %8 to i64
  %arrayidx12 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx10, i64 0, i64 %idxprom11
  store i8 %call, i8* %arrayidx12, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body6
  %9 = load i8, i8* %j, align 1
  %inc = add i8 %9, 1
  store i8 %inc, i8* %j, align 1
  br label %for.cond2

for.end:                                          ; preds = %for.cond2
  br label %for.inc13

for.inc13:                                        ; preds = %for.end
  %10 = load i8, i8* %i, align 1
  %inc14 = add i8 %10, 1
  store i8 %inc14, i8* %i, align 1
  br label %for.cond

for.end15:                                        ; preds = %for.cond
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @ShiftRows() #6 {
entry:
  %temp = alloca i8, align 1
  %0 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %arrayidx = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %0, i64 0, i64 0
  %arrayidx1 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx, i64 0, i64 1
  %1 = load i8, i8* %arrayidx1, align 1
  store i8 %1, i8* %temp, align 1
  %2 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %arrayidx2 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %2, i64 0, i64 1
  %arrayidx3 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx2, i64 0, i64 1
  %3 = load i8, i8* %arrayidx3, align 1
  %4 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %arrayidx4 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %4, i64 0, i64 0
  %arrayidx5 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx4, i64 0, i64 1
  store i8 %3, i8* %arrayidx5, align 1
  %5 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %arrayidx6 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %5, i64 0, i64 2
  %arrayidx7 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx6, i64 0, i64 1
  %6 = load i8, i8* %arrayidx7, align 1
  %7 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %arrayidx8 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %7, i64 0, i64 1
  %arrayidx9 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx8, i64 0, i64 1
  store i8 %6, i8* %arrayidx9, align 1
  %8 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %arrayidx10 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %8, i64 0, i64 3
  %arrayidx11 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx10, i64 0, i64 1
  %9 = load i8, i8* %arrayidx11, align 1
  %10 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %arrayidx12 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %10, i64 0, i64 2
  %arrayidx13 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx12, i64 0, i64 1
  store i8 %9, i8* %arrayidx13, align 1
  %11 = load i8, i8* %temp, align 1
  %12 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %arrayidx14 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %12, i64 0, i64 3
  %arrayidx15 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx14, i64 0, i64 1
  store i8 %11, i8* %arrayidx15, align 1
  %13 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %arrayidx16 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %13, i64 0, i64 0
  %arrayidx17 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx16, i64 0, i64 2
  %14 = load i8, i8* %arrayidx17, align 1
  store i8 %14, i8* %temp, align 1
  %15 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %arrayidx18 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %15, i64 0, i64 2
  %arrayidx19 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx18, i64 0, i64 2
  %16 = load i8, i8* %arrayidx19, align 1
  %17 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %arrayidx20 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %17, i64 0, i64 0
  %arrayidx21 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx20, i64 0, i64 2
  store i8 %16, i8* %arrayidx21, align 1
  %18 = load i8, i8* %temp, align 1
  %19 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %arrayidx22 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %19, i64 0, i64 2
  %arrayidx23 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx22, i64 0, i64 2
  store i8 %18, i8* %arrayidx23, align 1
  %20 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %arrayidx24 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %20, i64 0, i64 1
  %arrayidx25 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx24, i64 0, i64 2
  %21 = load i8, i8* %arrayidx25, align 1
  store i8 %21, i8* %temp, align 1
  %22 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %arrayidx26 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %22, i64 0, i64 3
  %arrayidx27 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx26, i64 0, i64 2
  %23 = load i8, i8* %arrayidx27, align 1
  %24 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %arrayidx28 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %24, i64 0, i64 1
  %arrayidx29 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx28, i64 0, i64 2
  store i8 %23, i8* %arrayidx29, align 1
  %25 = load i8, i8* %temp, align 1
  %26 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %arrayidx30 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %26, i64 0, i64 3
  %arrayidx31 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx30, i64 0, i64 2
  store i8 %25, i8* %arrayidx31, align 1
  %27 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %arrayidx32 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %27, i64 0, i64 0
  %arrayidx33 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx32, i64 0, i64 3
  %28 = load i8, i8* %arrayidx33, align 1
  store i8 %28, i8* %temp, align 1
  %29 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %arrayidx34 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %29, i64 0, i64 3
  %arrayidx35 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx34, i64 0, i64 3
  %30 = load i8, i8* %arrayidx35, align 1
  %31 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %arrayidx36 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %31, i64 0, i64 0
  %arrayidx37 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx36, i64 0, i64 3
  store i8 %30, i8* %arrayidx37, align 1
  %32 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %arrayidx38 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %32, i64 0, i64 2
  %arrayidx39 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx38, i64 0, i64 3
  %33 = load i8, i8* %arrayidx39, align 1
  %34 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %arrayidx40 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %34, i64 0, i64 3
  %arrayidx41 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx40, i64 0, i64 3
  store i8 %33, i8* %arrayidx41, align 1
  %35 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %arrayidx42 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %35, i64 0, i64 1
  %arrayidx43 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx42, i64 0, i64 3
  %36 = load i8, i8* %arrayidx43, align 1
  %37 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %arrayidx44 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %37, i64 0, i64 2
  %arrayidx45 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx44, i64 0, i64 3
  store i8 %36, i8* %arrayidx45, align 1
  %38 = load i8, i8* %temp, align 1
  %39 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %arrayidx46 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %39, i64 0, i64 1
  %arrayidx47 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx46, i64 0, i64 3
  store i8 %38, i8* %arrayidx47, align 1
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @MixColumns() #6 {
entry:
  %i = alloca i8, align 1
  %Tmp = alloca i8, align 1
  %Tm = alloca i8, align 1
  %t = alloca i8, align 1
  store i8 0, i8* %i, align 1
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8, i8* %i, align 1
  %conv = zext i8 %0 to i32
  %cmp = icmp slt i32 %conv, 4
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %2 = load i8, i8* %i, align 1
  %idxprom = zext i8 %2 to i64
  %arrayidx = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %1, i64 0, i64 %idxprom
  %arrayidx2 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx, i64 0, i64 0
  %3 = load i8, i8* %arrayidx2, align 1
  store i8 %3, i8* %t, align 1
  %4 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %5 = load i8, i8* %i, align 1
  %idxprom3 = zext i8 %5 to i64
  %arrayidx4 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %4, i64 0, i64 %idxprom3
  %arrayidx5 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx4, i64 0, i64 0
  %6 = load i8, i8* %arrayidx5, align 1
  %conv6 = zext i8 %6 to i32
  %7 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %8 = load i8, i8* %i, align 1
  %idxprom7 = zext i8 %8 to i64
  %arrayidx8 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %7, i64 0, i64 %idxprom7
  %arrayidx9 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx8, i64 0, i64 1
  %9 = load i8, i8* %arrayidx9, align 1
  %conv10 = zext i8 %9 to i32
  %xor = xor i32 %conv6, %conv10
  %10 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %11 = load i8, i8* %i, align 1
  %idxprom11 = zext i8 %11 to i64
  %arrayidx12 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %10, i64 0, i64 %idxprom11
  %arrayidx13 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx12, i64 0, i64 2
  %12 = load i8, i8* %arrayidx13, align 1
  %conv14 = zext i8 %12 to i32
  %xor15 = xor i32 %xor, %conv14
  %13 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %14 = load i8, i8* %i, align 1
  %idxprom16 = zext i8 %14 to i64
  %arrayidx17 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %13, i64 0, i64 %idxprom16
  %arrayidx18 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx17, i64 0, i64 3
  %15 = load i8, i8* %arrayidx18, align 1
  %conv19 = zext i8 %15 to i32
  %xor20 = xor i32 %xor15, %conv19
  %conv21 = trunc i32 %xor20 to i8
  store i8 %conv21, i8* %Tmp, align 1
  %16 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %17 = load i8, i8* %i, align 1
  %idxprom22 = zext i8 %17 to i64
  %arrayidx23 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %16, i64 0, i64 %idxprom22
  %arrayidx24 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx23, i64 0, i64 0
  %18 = load i8, i8* %arrayidx24, align 1
  %conv25 = zext i8 %18 to i32
  %19 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %20 = load i8, i8* %i, align 1
  %idxprom26 = zext i8 %20 to i64
  %arrayidx27 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %19, i64 0, i64 %idxprom26
  %arrayidx28 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx27, i64 0, i64 1
  %21 = load i8, i8* %arrayidx28, align 1
  %conv29 = zext i8 %21 to i32
  %xor30 = xor i32 %conv25, %conv29
  %conv31 = trunc i32 %xor30 to i8
  store i8 %conv31, i8* %Tm, align 1
  %22 = load i8, i8* %Tm, align 1
  %call = call zeroext i8 @xtime(i8 zeroext %22) #15
  store i8 %call, i8* %Tm, align 1
  %23 = load i8, i8* %Tm, align 1
  %conv32 = zext i8 %23 to i32
  %24 = load i8, i8* %Tmp, align 1
  %conv33 = zext i8 %24 to i32
  %xor34 = xor i32 %conv32, %conv33
  %25 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %26 = load i8, i8* %i, align 1
  %idxprom35 = zext i8 %26 to i64
  %arrayidx36 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %25, i64 0, i64 %idxprom35
  %arrayidx37 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx36, i64 0, i64 0
  %27 = load i8, i8* %arrayidx37, align 1
  %conv38 = zext i8 %27 to i32
  %xor39 = xor i32 %conv38, %xor34
  %conv40 = trunc i32 %xor39 to i8
  store i8 %conv40, i8* %arrayidx37, align 1
  %28 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %29 = load i8, i8* %i, align 1
  %idxprom41 = zext i8 %29 to i64
  %arrayidx42 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %28, i64 0, i64 %idxprom41
  %arrayidx43 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx42, i64 0, i64 1
  %30 = load i8, i8* %arrayidx43, align 1
  %conv44 = zext i8 %30 to i32
  %31 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %32 = load i8, i8* %i, align 1
  %idxprom45 = zext i8 %32 to i64
  %arrayidx46 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %31, i64 0, i64 %idxprom45
  %arrayidx47 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx46, i64 0, i64 2
  %33 = load i8, i8* %arrayidx47, align 1
  %conv48 = zext i8 %33 to i32
  %xor49 = xor i32 %conv44, %conv48
  %conv50 = trunc i32 %xor49 to i8
  store i8 %conv50, i8* %Tm, align 1
  %34 = load i8, i8* %Tm, align 1
  %call51 = call zeroext i8 @xtime(i8 zeroext %34) #15
  store i8 %call51, i8* %Tm, align 1
  %35 = load i8, i8* %Tm, align 1
  %conv52 = zext i8 %35 to i32
  %36 = load i8, i8* %Tmp, align 1
  %conv53 = zext i8 %36 to i32
  %xor54 = xor i32 %conv52, %conv53
  %37 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %38 = load i8, i8* %i, align 1
  %idxprom55 = zext i8 %38 to i64
  %arrayidx56 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %37, i64 0, i64 %idxprom55
  %arrayidx57 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx56, i64 0, i64 1
  %39 = load i8, i8* %arrayidx57, align 1
  %conv58 = zext i8 %39 to i32
  %xor59 = xor i32 %conv58, %xor54
  %conv60 = trunc i32 %xor59 to i8
  store i8 %conv60, i8* %arrayidx57, align 1
  %40 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %41 = load i8, i8* %i, align 1
  %idxprom61 = zext i8 %41 to i64
  %arrayidx62 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %40, i64 0, i64 %idxprom61
  %arrayidx63 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx62, i64 0, i64 2
  %42 = load i8, i8* %arrayidx63, align 1
  %conv64 = zext i8 %42 to i32
  %43 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %44 = load i8, i8* %i, align 1
  %idxprom65 = zext i8 %44 to i64
  %arrayidx66 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %43, i64 0, i64 %idxprom65
  %arrayidx67 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx66, i64 0, i64 3
  %45 = load i8, i8* %arrayidx67, align 1
  %conv68 = zext i8 %45 to i32
  %xor69 = xor i32 %conv64, %conv68
  %conv70 = trunc i32 %xor69 to i8
  store i8 %conv70, i8* %Tm, align 1
  %46 = load i8, i8* %Tm, align 1
  %call71 = call zeroext i8 @xtime(i8 zeroext %46) #15
  store i8 %call71, i8* %Tm, align 1
  %47 = load i8, i8* %Tm, align 1
  %conv72 = zext i8 %47 to i32
  %48 = load i8, i8* %Tmp, align 1
  %conv73 = zext i8 %48 to i32
  %xor74 = xor i32 %conv72, %conv73
  %49 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %50 = load i8, i8* %i, align 1
  %idxprom75 = zext i8 %50 to i64
  %arrayidx76 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %49, i64 0, i64 %idxprom75
  %arrayidx77 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx76, i64 0, i64 2
  %51 = load i8, i8* %arrayidx77, align 1
  %conv78 = zext i8 %51 to i32
  %xor79 = xor i32 %conv78, %xor74
  %conv80 = trunc i32 %xor79 to i8
  store i8 %conv80, i8* %arrayidx77, align 1
  %52 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %53 = load i8, i8* %i, align 1
  %idxprom81 = zext i8 %53 to i64
  %arrayidx82 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %52, i64 0, i64 %idxprom81
  %arrayidx83 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx82, i64 0, i64 3
  %54 = load i8, i8* %arrayidx83, align 1
  %conv84 = zext i8 %54 to i32
  %55 = load i8, i8* %t, align 1
  %conv85 = zext i8 %55 to i32
  %xor86 = xor i32 %conv84, %conv85
  %conv87 = trunc i32 %xor86 to i8
  store i8 %conv87, i8* %Tm, align 1
  %56 = load i8, i8* %Tm, align 1
  %call88 = call zeroext i8 @xtime(i8 zeroext %56) #15
  store i8 %call88, i8* %Tm, align 1
  %57 = load i8, i8* %Tm, align 1
  %conv89 = zext i8 %57 to i32
  %58 = load i8, i8* %Tmp, align 1
  %conv90 = zext i8 %58 to i32
  %xor91 = xor i32 %conv89, %conv90
  %59 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %60 = load i8, i8* %i, align 1
  %idxprom92 = zext i8 %60 to i64
  %arrayidx93 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %59, i64 0, i64 %idxprom92
  %arrayidx94 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx93, i64 0, i64 3
  %61 = load i8, i8* %arrayidx94, align 1
  %conv95 = zext i8 %61 to i32
  %xor96 = xor i32 %conv95, %xor91
  %conv97 = trunc i32 %xor96 to i8
  store i8 %conv97, i8* %arrayidx94, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %62 = load i8, i8* %i, align 1
  %inc = add i8 %62, 1
  store i8 %inc, i8* %i, align 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @xtime(i8 zeroext %x) #6 {
entry:
  %x.addr = alloca i8, align 1
  store i8 %x, i8* %x.addr, align 1
  %0 = load i8, i8* %x.addr, align 1
  %conv = zext i8 %0 to i32
  %shl = shl i32 %conv, 1
  %1 = load i8, i8* %x.addr, align 1
  %conv1 = zext i8 %1 to i32
  %shr = ashr i32 %conv1, 7
  %and = and i32 %shr, 1
  %mul = mul nsw i32 %and, 27
  %xor = xor i32 %shl, %mul
  %conv2 = trunc i32 %xor to i8
  ret i8 %conv2
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @getSBoxValue(i8 zeroext %num) #6 {
entry:
  %num.addr = alloca i8, align 1
  store i8 %num, i8* %num.addr, align 1
  %0 = load i8, i8* %num.addr, align 1
  %idxprom = zext i8 %0 to i64
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i64 0, i64 %idxprom
  %1 = load i8, i8* %arrayidx, align 1
  ret i8 %1
}

; Function Attrs: noinline nounwind optnone uwtable
define void @AES128_ECB_decrypt(i8* %input, i8* %key, i8* %output) #6 {
entry:
  %input.addr = alloca i8*, align 8
  %key.addr = alloca i8*, align 8
  %output.addr = alloca i8*, align 8
  store i8* %input, i8** %input.addr, align 8
  store i8* %key, i8** %key.addr, align 8
  store i8* %output, i8** %output.addr, align 8
  %0 = load i8*, i8** %output.addr, align 8
  %1 = load i8*, i8** %input.addr, align 8
  call void @BlockCopy(i8* %0, i8* %1) #15
  %2 = load i8*, i8** %output.addr, align 8
  %3 = bitcast i8* %2 to [4 x [4 x i8]]*
  store [4 x [4 x i8]]* %3, [4 x [4 x i8]]** @state, align 8
  %4 = load i8*, i8** %key.addr, align 8
  store i8* %4, i8** @Key, align 8
  call void @KeyExpansion() #15
  call void @InvCipher() #15
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @InvCipher() #6 {
entry:
  %round = alloca i8, align 1
  store i8 0, i8* %round, align 1
  call void @AddRoundKey(i8 zeroext 10) #15
  store i8 9, i8* %round, align 1
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8, i8* %round, align 1
  %conv = zext i8 %0 to i32
  %cmp = icmp sgt i32 %conv, 0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  call void @InvShiftRows() #15
  call void @InvSubBytes() #15
  %1 = load i8, i8* %round, align 1
  call void @AddRoundKey(i8 zeroext %1) #15
  call void @InvMixColumns() #15
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %2 = load i8, i8* %round, align 1
  %dec = add i8 %2, -1
  store i8 %dec, i8* %round, align 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  call void @InvShiftRows() #15
  call void @InvSubBytes() #15
  call void @AddRoundKey(i8 zeroext 0) #15
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @InvShiftRows() #6 {
entry:
  %temp = alloca i8, align 1
  %0 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %arrayidx = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %0, i64 0, i64 3
  %arrayidx1 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx, i64 0, i64 1
  %1 = load i8, i8* %arrayidx1, align 1
  store i8 %1, i8* %temp, align 1
  %2 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %arrayidx2 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %2, i64 0, i64 2
  %arrayidx3 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx2, i64 0, i64 1
  %3 = load i8, i8* %arrayidx3, align 1
  %4 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %arrayidx4 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %4, i64 0, i64 3
  %arrayidx5 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx4, i64 0, i64 1
  store i8 %3, i8* %arrayidx5, align 1
  %5 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %arrayidx6 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %5, i64 0, i64 1
  %arrayidx7 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx6, i64 0, i64 1
  %6 = load i8, i8* %arrayidx7, align 1
  %7 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %arrayidx8 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %7, i64 0, i64 2
  %arrayidx9 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx8, i64 0, i64 1
  store i8 %6, i8* %arrayidx9, align 1
  %8 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %arrayidx10 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %8, i64 0, i64 0
  %arrayidx11 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx10, i64 0, i64 1
  %9 = load i8, i8* %arrayidx11, align 1
  %10 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %arrayidx12 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %10, i64 0, i64 1
  %arrayidx13 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx12, i64 0, i64 1
  store i8 %9, i8* %arrayidx13, align 1
  %11 = load i8, i8* %temp, align 1
  %12 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %arrayidx14 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %12, i64 0, i64 0
  %arrayidx15 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx14, i64 0, i64 1
  store i8 %11, i8* %arrayidx15, align 1
  %13 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %arrayidx16 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %13, i64 0, i64 0
  %arrayidx17 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx16, i64 0, i64 2
  %14 = load i8, i8* %arrayidx17, align 1
  store i8 %14, i8* %temp, align 1
  %15 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %arrayidx18 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %15, i64 0, i64 2
  %arrayidx19 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx18, i64 0, i64 2
  %16 = load i8, i8* %arrayidx19, align 1
  %17 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %arrayidx20 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %17, i64 0, i64 0
  %arrayidx21 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx20, i64 0, i64 2
  store i8 %16, i8* %arrayidx21, align 1
  %18 = load i8, i8* %temp, align 1
  %19 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %arrayidx22 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %19, i64 0, i64 2
  %arrayidx23 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx22, i64 0, i64 2
  store i8 %18, i8* %arrayidx23, align 1
  %20 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %arrayidx24 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %20, i64 0, i64 1
  %arrayidx25 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx24, i64 0, i64 2
  %21 = load i8, i8* %arrayidx25, align 1
  store i8 %21, i8* %temp, align 1
  %22 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %arrayidx26 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %22, i64 0, i64 3
  %arrayidx27 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx26, i64 0, i64 2
  %23 = load i8, i8* %arrayidx27, align 1
  %24 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %arrayidx28 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %24, i64 0, i64 1
  %arrayidx29 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx28, i64 0, i64 2
  store i8 %23, i8* %arrayidx29, align 1
  %25 = load i8, i8* %temp, align 1
  %26 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %arrayidx30 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %26, i64 0, i64 3
  %arrayidx31 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx30, i64 0, i64 2
  store i8 %25, i8* %arrayidx31, align 1
  %27 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %arrayidx32 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %27, i64 0, i64 0
  %arrayidx33 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx32, i64 0, i64 3
  %28 = load i8, i8* %arrayidx33, align 1
  store i8 %28, i8* %temp, align 1
  %29 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %arrayidx34 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %29, i64 0, i64 1
  %arrayidx35 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx34, i64 0, i64 3
  %30 = load i8, i8* %arrayidx35, align 1
  %31 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %arrayidx36 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %31, i64 0, i64 0
  %arrayidx37 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx36, i64 0, i64 3
  store i8 %30, i8* %arrayidx37, align 1
  %32 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %arrayidx38 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %32, i64 0, i64 2
  %arrayidx39 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx38, i64 0, i64 3
  %33 = load i8, i8* %arrayidx39, align 1
  %34 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %arrayidx40 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %34, i64 0, i64 1
  %arrayidx41 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx40, i64 0, i64 3
  store i8 %33, i8* %arrayidx41, align 1
  %35 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %arrayidx42 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %35, i64 0, i64 3
  %arrayidx43 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx42, i64 0, i64 3
  %36 = load i8, i8* %arrayidx43, align 1
  %37 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %arrayidx44 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %37, i64 0, i64 2
  %arrayidx45 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx44, i64 0, i64 3
  store i8 %36, i8* %arrayidx45, align 1
  %38 = load i8, i8* %temp, align 1
  %39 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %arrayidx46 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %39, i64 0, i64 3
  %arrayidx47 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx46, i64 0, i64 3
  store i8 %38, i8* %arrayidx47, align 1
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @InvSubBytes() #6 {
entry:
  %i = alloca i8, align 1
  %j = alloca i8, align 1
  store i8 0, i8* %i, align 1
  br label %for.cond

for.cond:                                         ; preds = %for.inc13, %entry
  %0 = load i8, i8* %i, align 1
  %conv = zext i8 %0 to i32
  %cmp = icmp slt i32 %conv, 4
  br i1 %cmp, label %for.body, label %for.end15

for.body:                                         ; preds = %for.cond
  store i8 0, i8* %j, align 1
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc, %for.body
  %1 = load i8, i8* %j, align 1
  %conv3 = zext i8 %1 to i32
  %cmp4 = icmp slt i32 %conv3, 4
  br i1 %cmp4, label %for.body6, label %for.end

for.body6:                                        ; preds = %for.cond2
  %2 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %3 = load i8, i8* %j, align 1
  %idxprom = zext i8 %3 to i64
  %arrayidx = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %2, i64 0, i64 %idxprom
  %4 = load i8, i8* %i, align 1
  %idxprom7 = zext i8 %4 to i64
  %arrayidx8 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx, i64 0, i64 %idxprom7
  %5 = load i8, i8* %arrayidx8, align 1
  %call = call zeroext i8 @getSBoxInvert(i8 zeroext %5) #15
  %6 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %7 = load i8, i8* %j, align 1
  %idxprom9 = zext i8 %7 to i64
  %arrayidx10 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %6, i64 0, i64 %idxprom9
  %8 = load i8, i8* %i, align 1
  %idxprom11 = zext i8 %8 to i64
  %arrayidx12 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx10, i64 0, i64 %idxprom11
  store i8 %call, i8* %arrayidx12, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body6
  %9 = load i8, i8* %j, align 1
  %inc = add i8 %9, 1
  store i8 %inc, i8* %j, align 1
  br label %for.cond2

for.end:                                          ; preds = %for.cond2
  br label %for.inc13

for.inc13:                                        ; preds = %for.end
  %10 = load i8, i8* %i, align 1
  %inc14 = add i8 %10, 1
  store i8 %inc14, i8* %i, align 1
  br label %for.cond

for.end15:                                        ; preds = %for.cond
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @InvMixColumns() #6 {
entry:
  %i = alloca i32, align 4
  %a = alloca i8, align 1
  %b = alloca i8, align 1
  %c = alloca i8, align 1
  %d = alloca i8, align 1
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 4
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %2 = load i32, i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %1, i64 0, i64 %idxprom
  %arrayidx1 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx, i64 0, i64 0
  %3 = load i8, i8* %arrayidx1, align 1
  store i8 %3, i8* %a, align 1
  %4 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %5 = load i32, i32* %i, align 4
  %idxprom2 = sext i32 %5 to i64
  %arrayidx3 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %4, i64 0, i64 %idxprom2
  %arrayidx4 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx3, i64 0, i64 1
  %6 = load i8, i8* %arrayidx4, align 1
  store i8 %6, i8* %b, align 1
  %7 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %8 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %8 to i64
  %arrayidx6 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %7, i64 0, i64 %idxprom5
  %arrayidx7 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx6, i64 0, i64 2
  %9 = load i8, i8* %arrayidx7, align 1
  store i8 %9, i8* %c, align 1
  %10 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %11 = load i32, i32* %i, align 4
  %idxprom8 = sext i32 %11 to i64
  %arrayidx9 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %10, i64 0, i64 %idxprom8
  %arrayidx10 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx9, i64 0, i64 3
  %12 = load i8, i8* %arrayidx10, align 1
  store i8 %12, i8* %d, align 1
  %13 = load i8, i8* %a, align 1
  %conv = zext i8 %13 to i32
  %mul = mul nsw i32 0, %conv
  %14 = load i8, i8* %a, align 1
  %call = call zeroext i8 @xtime(i8 zeroext %14) #15
  %conv11 = zext i8 %call to i32
  %mul12 = mul nsw i32 1, %conv11
  %xor = xor i32 %mul, %mul12
  %15 = load i8, i8* %a, align 1
  %call13 = call zeroext i8 @xtime(i8 zeroext %15) #15
  %call14 = call zeroext i8 @xtime(i8 zeroext %call13) #15
  %conv15 = zext i8 %call14 to i32
  %mul16 = mul nsw i32 1, %conv15
  %xor17 = xor i32 %xor, %mul16
  %16 = load i8, i8* %a, align 1
  %call18 = call zeroext i8 @xtime(i8 zeroext %16) #15
  %call19 = call zeroext i8 @xtime(i8 zeroext %call18) #15
  %call20 = call zeroext i8 @xtime(i8 zeroext %call19) #15
  %conv21 = zext i8 %call20 to i32
  %mul22 = mul nsw i32 1, %conv21
  %xor23 = xor i32 %xor17, %mul22
  %17 = load i8, i8* %a, align 1
  %call24 = call zeroext i8 @xtime(i8 zeroext %17) #15
  %call25 = call zeroext i8 @xtime(i8 zeroext %call24) #15
  %call26 = call zeroext i8 @xtime(i8 zeroext %call25) #15
  %call27 = call zeroext i8 @xtime(i8 zeroext %call26) #15
  %conv28 = zext i8 %call27 to i32
  %mul29 = mul nsw i32 0, %conv28
  %xor30 = xor i32 %xor23, %mul29
  %18 = load i8, i8* %b, align 1
  %conv31 = zext i8 %18 to i32
  %mul32 = mul nsw i32 1, %conv31
  %19 = load i8, i8* %b, align 1
  %call33 = call zeroext i8 @xtime(i8 zeroext %19) #15
  %conv34 = zext i8 %call33 to i32
  %mul35 = mul nsw i32 1, %conv34
  %xor36 = xor i32 %mul32, %mul35
  %20 = load i8, i8* %b, align 1
  %call37 = call zeroext i8 @xtime(i8 zeroext %20) #15
  %call38 = call zeroext i8 @xtime(i8 zeroext %call37) #15
  %conv39 = zext i8 %call38 to i32
  %mul40 = mul nsw i32 0, %conv39
  %xor41 = xor i32 %xor36, %mul40
  %21 = load i8, i8* %b, align 1
  %call42 = call zeroext i8 @xtime(i8 zeroext %21) #15
  %call43 = call zeroext i8 @xtime(i8 zeroext %call42) #15
  %call44 = call zeroext i8 @xtime(i8 zeroext %call43) #15
  %conv45 = zext i8 %call44 to i32
  %mul46 = mul nsw i32 1, %conv45
  %xor47 = xor i32 %xor41, %mul46
  %22 = load i8, i8* %b, align 1
  %call48 = call zeroext i8 @xtime(i8 zeroext %22) #15
  %call49 = call zeroext i8 @xtime(i8 zeroext %call48) #15
  %call50 = call zeroext i8 @xtime(i8 zeroext %call49) #15
  %call51 = call zeroext i8 @xtime(i8 zeroext %call50) #15
  %conv52 = zext i8 %call51 to i32
  %mul53 = mul nsw i32 0, %conv52
  %xor54 = xor i32 %xor47, %mul53
  %xor55 = xor i32 %xor30, %xor54
  %23 = load i8, i8* %c, align 1
  %conv56 = zext i8 %23 to i32
  %mul57 = mul nsw i32 1, %conv56
  %24 = load i8, i8* %c, align 1
  %call58 = call zeroext i8 @xtime(i8 zeroext %24) #15
  %conv59 = zext i8 %call58 to i32
  %mul60 = mul nsw i32 0, %conv59
  %xor61 = xor i32 %mul57, %mul60
  %25 = load i8, i8* %c, align 1
  %call62 = call zeroext i8 @xtime(i8 zeroext %25) #15
  %call63 = call zeroext i8 @xtime(i8 zeroext %call62) #15
  %conv64 = zext i8 %call63 to i32
  %mul65 = mul nsw i32 1, %conv64
  %xor66 = xor i32 %xor61, %mul65
  %26 = load i8, i8* %c, align 1
  %call67 = call zeroext i8 @xtime(i8 zeroext %26) #15
  %call68 = call zeroext i8 @xtime(i8 zeroext %call67) #15
  %call69 = call zeroext i8 @xtime(i8 zeroext %call68) #15
  %conv70 = zext i8 %call69 to i32
  %mul71 = mul nsw i32 1, %conv70
  %xor72 = xor i32 %xor66, %mul71
  %27 = load i8, i8* %c, align 1
  %call73 = call zeroext i8 @xtime(i8 zeroext %27) #15
  %call74 = call zeroext i8 @xtime(i8 zeroext %call73) #15
  %call75 = call zeroext i8 @xtime(i8 zeroext %call74) #15
  %call76 = call zeroext i8 @xtime(i8 zeroext %call75) #15
  %conv77 = zext i8 %call76 to i32
  %mul78 = mul nsw i32 0, %conv77
  %xor79 = xor i32 %xor72, %mul78
  %xor80 = xor i32 %xor55, %xor79
  %28 = load i8, i8* %d, align 1
  %conv81 = zext i8 %28 to i32
  %mul82 = mul nsw i32 1, %conv81
  %29 = load i8, i8* %d, align 1
  %call83 = call zeroext i8 @xtime(i8 zeroext %29) #15
  %conv84 = zext i8 %call83 to i32
  %mul85 = mul nsw i32 0, %conv84
  %xor86 = xor i32 %mul82, %mul85
  %30 = load i8, i8* %d, align 1
  %call87 = call zeroext i8 @xtime(i8 zeroext %30) #15
  %call88 = call zeroext i8 @xtime(i8 zeroext %call87) #15
  %conv89 = zext i8 %call88 to i32
  %mul90 = mul nsw i32 0, %conv89
  %xor91 = xor i32 %xor86, %mul90
  %31 = load i8, i8* %d, align 1
  %call92 = call zeroext i8 @xtime(i8 zeroext %31) #15
  %call93 = call zeroext i8 @xtime(i8 zeroext %call92) #15
  %call94 = call zeroext i8 @xtime(i8 zeroext %call93) #15
  %conv95 = zext i8 %call94 to i32
  %mul96 = mul nsw i32 1, %conv95
  %xor97 = xor i32 %xor91, %mul96
  %32 = load i8, i8* %d, align 1
  %call98 = call zeroext i8 @xtime(i8 zeroext %32) #15
  %call99 = call zeroext i8 @xtime(i8 zeroext %call98) #15
  %call100 = call zeroext i8 @xtime(i8 zeroext %call99) #15
  %call101 = call zeroext i8 @xtime(i8 zeroext %call100) #15
  %conv102 = zext i8 %call101 to i32
  %mul103 = mul nsw i32 0, %conv102
  %xor104 = xor i32 %xor97, %mul103
  %xor105 = xor i32 %xor80, %xor104
  %conv106 = trunc i32 %xor105 to i8
  %33 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %34 = load i32, i32* %i, align 4
  %idxprom107 = sext i32 %34 to i64
  %arrayidx108 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %33, i64 0, i64 %idxprom107
  %arrayidx109 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx108, i64 0, i64 0
  store i8 %conv106, i8* %arrayidx109, align 1
  %35 = load i8, i8* %a, align 1
  %conv110 = zext i8 %35 to i32
  %mul111 = mul nsw i32 1, %conv110
  %36 = load i8, i8* %a, align 1
  %call112 = call zeroext i8 @xtime(i8 zeroext %36) #15
  %conv113 = zext i8 %call112 to i32
  %mul114 = mul nsw i32 0, %conv113
  %xor115 = xor i32 %mul111, %mul114
  %37 = load i8, i8* %a, align 1
  %call116 = call zeroext i8 @xtime(i8 zeroext %37) #15
  %call117 = call zeroext i8 @xtime(i8 zeroext %call116) #15
  %conv118 = zext i8 %call117 to i32
  %mul119 = mul nsw i32 0, %conv118
  %xor120 = xor i32 %xor115, %mul119
  %38 = load i8, i8* %a, align 1
  %call121 = call zeroext i8 @xtime(i8 zeroext %38) #15
  %call122 = call zeroext i8 @xtime(i8 zeroext %call121) #15
  %call123 = call zeroext i8 @xtime(i8 zeroext %call122) #15
  %conv124 = zext i8 %call123 to i32
  %mul125 = mul nsw i32 1, %conv124
  %xor126 = xor i32 %xor120, %mul125
  %39 = load i8, i8* %a, align 1
  %call127 = call zeroext i8 @xtime(i8 zeroext %39) #15
  %call128 = call zeroext i8 @xtime(i8 zeroext %call127) #15
  %call129 = call zeroext i8 @xtime(i8 zeroext %call128) #15
  %call130 = call zeroext i8 @xtime(i8 zeroext %call129) #15
  %conv131 = zext i8 %call130 to i32
  %mul132 = mul nsw i32 0, %conv131
  %xor133 = xor i32 %xor126, %mul132
  %40 = load i8, i8* %b, align 1
  %conv134 = zext i8 %40 to i32
  %mul135 = mul nsw i32 0, %conv134
  %41 = load i8, i8* %b, align 1
  %call136 = call zeroext i8 @xtime(i8 zeroext %41) #15
  %conv137 = zext i8 %call136 to i32
  %mul138 = mul nsw i32 1, %conv137
  %xor139 = xor i32 %mul135, %mul138
  %42 = load i8, i8* %b, align 1
  %call140 = call zeroext i8 @xtime(i8 zeroext %42) #15
  %call141 = call zeroext i8 @xtime(i8 zeroext %call140) #15
  %conv142 = zext i8 %call141 to i32
  %mul143 = mul nsw i32 1, %conv142
  %xor144 = xor i32 %xor139, %mul143
  %43 = load i8, i8* %b, align 1
  %call145 = call zeroext i8 @xtime(i8 zeroext %43) #15
  %call146 = call zeroext i8 @xtime(i8 zeroext %call145) #15
  %call147 = call zeroext i8 @xtime(i8 zeroext %call146) #15
  %conv148 = zext i8 %call147 to i32
  %mul149 = mul nsw i32 1, %conv148
  %xor150 = xor i32 %xor144, %mul149
  %44 = load i8, i8* %b, align 1
  %call151 = call zeroext i8 @xtime(i8 zeroext %44) #15
  %call152 = call zeroext i8 @xtime(i8 zeroext %call151) #15
  %call153 = call zeroext i8 @xtime(i8 zeroext %call152) #15
  %call154 = call zeroext i8 @xtime(i8 zeroext %call153) #15
  %conv155 = zext i8 %call154 to i32
  %mul156 = mul nsw i32 0, %conv155
  %xor157 = xor i32 %xor150, %mul156
  %xor158 = xor i32 %xor133, %xor157
  %45 = load i8, i8* %c, align 1
  %conv159 = zext i8 %45 to i32
  %mul160 = mul nsw i32 1, %conv159
  %46 = load i8, i8* %c, align 1
  %call161 = call zeroext i8 @xtime(i8 zeroext %46) #15
  %conv162 = zext i8 %call161 to i32
  %mul163 = mul nsw i32 1, %conv162
  %xor164 = xor i32 %mul160, %mul163
  %47 = load i8, i8* %c, align 1
  %call165 = call zeroext i8 @xtime(i8 zeroext %47) #15
  %call166 = call zeroext i8 @xtime(i8 zeroext %call165) #15
  %conv167 = zext i8 %call166 to i32
  %mul168 = mul nsw i32 0, %conv167
  %xor169 = xor i32 %xor164, %mul168
  %48 = load i8, i8* %c, align 1
  %call170 = call zeroext i8 @xtime(i8 zeroext %48) #15
  %call171 = call zeroext i8 @xtime(i8 zeroext %call170) #15
  %call172 = call zeroext i8 @xtime(i8 zeroext %call171) #15
  %conv173 = zext i8 %call172 to i32
  %mul174 = mul nsw i32 1, %conv173
  %xor175 = xor i32 %xor169, %mul174
  %49 = load i8, i8* %c, align 1
  %call176 = call zeroext i8 @xtime(i8 zeroext %49) #15
  %call177 = call zeroext i8 @xtime(i8 zeroext %call176) #15
  %call178 = call zeroext i8 @xtime(i8 zeroext %call177) #15
  %call179 = call zeroext i8 @xtime(i8 zeroext %call178) #15
  %conv180 = zext i8 %call179 to i32
  %mul181 = mul nsw i32 0, %conv180
  %xor182 = xor i32 %xor175, %mul181
  %xor183 = xor i32 %xor158, %xor182
  %50 = load i8, i8* %d, align 1
  %conv184 = zext i8 %50 to i32
  %mul185 = mul nsw i32 1, %conv184
  %51 = load i8, i8* %d, align 1
  %call186 = call zeroext i8 @xtime(i8 zeroext %51) #15
  %conv187 = zext i8 %call186 to i32
  %mul188 = mul nsw i32 0, %conv187
  %xor189 = xor i32 %mul185, %mul188
  %52 = load i8, i8* %d, align 1
  %call190 = call zeroext i8 @xtime(i8 zeroext %52) #15
  %call191 = call zeroext i8 @xtime(i8 zeroext %call190) #15
  %conv192 = zext i8 %call191 to i32
  %mul193 = mul nsw i32 1, %conv192
  %xor194 = xor i32 %xor189, %mul193
  %53 = load i8, i8* %d, align 1
  %call195 = call zeroext i8 @xtime(i8 zeroext %53) #15
  %call196 = call zeroext i8 @xtime(i8 zeroext %call195) #15
  %call197 = call zeroext i8 @xtime(i8 zeroext %call196) #15
  %conv198 = zext i8 %call197 to i32
  %mul199 = mul nsw i32 1, %conv198
  %xor200 = xor i32 %xor194, %mul199
  %54 = load i8, i8* %d, align 1
  %call201 = call zeroext i8 @xtime(i8 zeroext %54) #15
  %call202 = call zeroext i8 @xtime(i8 zeroext %call201) #15
  %call203 = call zeroext i8 @xtime(i8 zeroext %call202) #15
  %call204 = call zeroext i8 @xtime(i8 zeroext %call203) #15
  %conv205 = zext i8 %call204 to i32
  %mul206 = mul nsw i32 0, %conv205
  %xor207 = xor i32 %xor200, %mul206
  %xor208 = xor i32 %xor183, %xor207
  %conv209 = trunc i32 %xor208 to i8
  %55 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %56 = load i32, i32* %i, align 4
  %idxprom210 = sext i32 %56 to i64
  %arrayidx211 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %55, i64 0, i64 %idxprom210
  %arrayidx212 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx211, i64 0, i64 1
  store i8 %conv209, i8* %arrayidx212, align 1
  %57 = load i8, i8* %a, align 1
  %conv213 = zext i8 %57 to i32
  %mul214 = mul nsw i32 1, %conv213
  %58 = load i8, i8* %a, align 1
  %call215 = call zeroext i8 @xtime(i8 zeroext %58) #15
  %conv216 = zext i8 %call215 to i32
  %mul217 = mul nsw i32 0, %conv216
  %xor218 = xor i32 %mul214, %mul217
  %59 = load i8, i8* %a, align 1
  %call219 = call zeroext i8 @xtime(i8 zeroext %59) #15
  %call220 = call zeroext i8 @xtime(i8 zeroext %call219) #15
  %conv221 = zext i8 %call220 to i32
  %mul222 = mul nsw i32 1, %conv221
  %xor223 = xor i32 %xor218, %mul222
  %60 = load i8, i8* %a, align 1
  %call224 = call zeroext i8 @xtime(i8 zeroext %60) #15
  %call225 = call zeroext i8 @xtime(i8 zeroext %call224) #15
  %call226 = call zeroext i8 @xtime(i8 zeroext %call225) #15
  %conv227 = zext i8 %call226 to i32
  %mul228 = mul nsw i32 1, %conv227
  %xor229 = xor i32 %xor223, %mul228
  %61 = load i8, i8* %a, align 1
  %call230 = call zeroext i8 @xtime(i8 zeroext %61) #15
  %call231 = call zeroext i8 @xtime(i8 zeroext %call230) #15
  %call232 = call zeroext i8 @xtime(i8 zeroext %call231) #15
  %call233 = call zeroext i8 @xtime(i8 zeroext %call232) #15
  %conv234 = zext i8 %call233 to i32
  %mul235 = mul nsw i32 0, %conv234
  %xor236 = xor i32 %xor229, %mul235
  %62 = load i8, i8* %b, align 1
  %conv237 = zext i8 %62 to i32
  %mul238 = mul nsw i32 1, %conv237
  %63 = load i8, i8* %b, align 1
  %call239 = call zeroext i8 @xtime(i8 zeroext %63) #15
  %conv240 = zext i8 %call239 to i32
  %mul241 = mul nsw i32 0, %conv240
  %xor242 = xor i32 %mul238, %mul241
  %64 = load i8, i8* %b, align 1
  %call243 = call zeroext i8 @xtime(i8 zeroext %64) #15
  %call244 = call zeroext i8 @xtime(i8 zeroext %call243) #15
  %conv245 = zext i8 %call244 to i32
  %mul246 = mul nsw i32 0, %conv245
  %xor247 = xor i32 %xor242, %mul246
  %65 = load i8, i8* %b, align 1
  %call248 = call zeroext i8 @xtime(i8 zeroext %65) #15
  %call249 = call zeroext i8 @xtime(i8 zeroext %call248) #15
  %call250 = call zeroext i8 @xtime(i8 zeroext %call249) #15
  %conv251 = zext i8 %call250 to i32
  %mul252 = mul nsw i32 1, %conv251
  %xor253 = xor i32 %xor247, %mul252
  %66 = load i8, i8* %b, align 1
  %call254 = call zeroext i8 @xtime(i8 zeroext %66) #15
  %call255 = call zeroext i8 @xtime(i8 zeroext %call254) #15
  %call256 = call zeroext i8 @xtime(i8 zeroext %call255) #15
  %call257 = call zeroext i8 @xtime(i8 zeroext %call256) #15
  %conv258 = zext i8 %call257 to i32
  %mul259 = mul nsw i32 0, %conv258
  %xor260 = xor i32 %xor253, %mul259
  %xor261 = xor i32 %xor236, %xor260
  %67 = load i8, i8* %c, align 1
  %conv262 = zext i8 %67 to i32
  %mul263 = mul nsw i32 0, %conv262
  %68 = load i8, i8* %c, align 1
  %call264 = call zeroext i8 @xtime(i8 zeroext %68) #15
  %conv265 = zext i8 %call264 to i32
  %mul266 = mul nsw i32 1, %conv265
  %xor267 = xor i32 %mul263, %mul266
  %69 = load i8, i8* %c, align 1
  %call268 = call zeroext i8 @xtime(i8 zeroext %69) #15
  %call269 = call zeroext i8 @xtime(i8 zeroext %call268) #15
  %conv270 = zext i8 %call269 to i32
  %mul271 = mul nsw i32 1, %conv270
  %xor272 = xor i32 %xor267, %mul271
  %70 = load i8, i8* %c, align 1
  %call273 = call zeroext i8 @xtime(i8 zeroext %70) #15
  %call274 = call zeroext i8 @xtime(i8 zeroext %call273) #15
  %call275 = call zeroext i8 @xtime(i8 zeroext %call274) #15
  %conv276 = zext i8 %call275 to i32
  %mul277 = mul nsw i32 1, %conv276
  %xor278 = xor i32 %xor272, %mul277
  %71 = load i8, i8* %c, align 1
  %call279 = call zeroext i8 @xtime(i8 zeroext %71) #15
  %call280 = call zeroext i8 @xtime(i8 zeroext %call279) #15
  %call281 = call zeroext i8 @xtime(i8 zeroext %call280) #15
  %call282 = call zeroext i8 @xtime(i8 zeroext %call281) #15
  %conv283 = zext i8 %call282 to i32
  %mul284 = mul nsw i32 0, %conv283
  %xor285 = xor i32 %xor278, %mul284
  %xor286 = xor i32 %xor261, %xor285
  %72 = load i8, i8* %d, align 1
  %conv287 = zext i8 %72 to i32
  %mul288 = mul nsw i32 1, %conv287
  %73 = load i8, i8* %d, align 1
  %call289 = call zeroext i8 @xtime(i8 zeroext %73) #15
  %conv290 = zext i8 %call289 to i32
  %mul291 = mul nsw i32 1, %conv290
  %xor292 = xor i32 %mul288, %mul291
  %74 = load i8, i8* %d, align 1
  %call293 = call zeroext i8 @xtime(i8 zeroext %74) #15
  %call294 = call zeroext i8 @xtime(i8 zeroext %call293) #15
  %conv295 = zext i8 %call294 to i32
  %mul296 = mul nsw i32 0, %conv295
  %xor297 = xor i32 %xor292, %mul296
  %75 = load i8, i8* %d, align 1
  %call298 = call zeroext i8 @xtime(i8 zeroext %75) #15
  %call299 = call zeroext i8 @xtime(i8 zeroext %call298) #15
  %call300 = call zeroext i8 @xtime(i8 zeroext %call299) #15
  %conv301 = zext i8 %call300 to i32
  %mul302 = mul nsw i32 1, %conv301
  %xor303 = xor i32 %xor297, %mul302
  %76 = load i8, i8* %d, align 1
  %call304 = call zeroext i8 @xtime(i8 zeroext %76) #15
  %call305 = call zeroext i8 @xtime(i8 zeroext %call304) #15
  %call306 = call zeroext i8 @xtime(i8 zeroext %call305) #15
  %call307 = call zeroext i8 @xtime(i8 zeroext %call306) #15
  %conv308 = zext i8 %call307 to i32
  %mul309 = mul nsw i32 0, %conv308
  %xor310 = xor i32 %xor303, %mul309
  %xor311 = xor i32 %xor286, %xor310
  %conv312 = trunc i32 %xor311 to i8
  %77 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %78 = load i32, i32* %i, align 4
  %idxprom313 = sext i32 %78 to i64
  %arrayidx314 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %77, i64 0, i64 %idxprom313
  %arrayidx315 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx314, i64 0, i64 2
  store i8 %conv312, i8* %arrayidx315, align 1
  %79 = load i8, i8* %a, align 1
  %conv316 = zext i8 %79 to i32
  %mul317 = mul nsw i32 1, %conv316
  %80 = load i8, i8* %a, align 1
  %call318 = call zeroext i8 @xtime(i8 zeroext %80) #15
  %conv319 = zext i8 %call318 to i32
  %mul320 = mul nsw i32 1, %conv319
  %xor321 = xor i32 %mul317, %mul320
  %81 = load i8, i8* %a, align 1
  %call322 = call zeroext i8 @xtime(i8 zeroext %81) #15
  %call323 = call zeroext i8 @xtime(i8 zeroext %call322) #15
  %conv324 = zext i8 %call323 to i32
  %mul325 = mul nsw i32 0, %conv324
  %xor326 = xor i32 %xor321, %mul325
  %82 = load i8, i8* %a, align 1
  %call327 = call zeroext i8 @xtime(i8 zeroext %82) #15
  %call328 = call zeroext i8 @xtime(i8 zeroext %call327) #15
  %call329 = call zeroext i8 @xtime(i8 zeroext %call328) #15
  %conv330 = zext i8 %call329 to i32
  %mul331 = mul nsw i32 1, %conv330
  %xor332 = xor i32 %xor326, %mul331
  %83 = load i8, i8* %a, align 1
  %call333 = call zeroext i8 @xtime(i8 zeroext %83) #15
  %call334 = call zeroext i8 @xtime(i8 zeroext %call333) #15
  %call335 = call zeroext i8 @xtime(i8 zeroext %call334) #15
  %call336 = call zeroext i8 @xtime(i8 zeroext %call335) #15
  %conv337 = zext i8 %call336 to i32
  %mul338 = mul nsw i32 0, %conv337
  %xor339 = xor i32 %xor332, %mul338
  %84 = load i8, i8* %b, align 1
  %conv340 = zext i8 %84 to i32
  %mul341 = mul nsw i32 1, %conv340
  %85 = load i8, i8* %b, align 1
  %call342 = call zeroext i8 @xtime(i8 zeroext %85) #15
  %conv343 = zext i8 %call342 to i32
  %mul344 = mul nsw i32 0, %conv343
  %xor345 = xor i32 %mul341, %mul344
  %86 = load i8, i8* %b, align 1
  %call346 = call zeroext i8 @xtime(i8 zeroext %86) #15
  %call347 = call zeroext i8 @xtime(i8 zeroext %call346) #15
  %conv348 = zext i8 %call347 to i32
  %mul349 = mul nsw i32 1, %conv348
  %xor350 = xor i32 %xor345, %mul349
  %87 = load i8, i8* %b, align 1
  %call351 = call zeroext i8 @xtime(i8 zeroext %87) #15
  %call352 = call zeroext i8 @xtime(i8 zeroext %call351) #15
  %call353 = call zeroext i8 @xtime(i8 zeroext %call352) #15
  %conv354 = zext i8 %call353 to i32
  %mul355 = mul nsw i32 1, %conv354
  %xor356 = xor i32 %xor350, %mul355
  %88 = load i8, i8* %b, align 1
  %call357 = call zeroext i8 @xtime(i8 zeroext %88) #15
  %call358 = call zeroext i8 @xtime(i8 zeroext %call357) #15
  %call359 = call zeroext i8 @xtime(i8 zeroext %call358) #15
  %call360 = call zeroext i8 @xtime(i8 zeroext %call359) #15
  %conv361 = zext i8 %call360 to i32
  %mul362 = mul nsw i32 0, %conv361
  %xor363 = xor i32 %xor356, %mul362
  %xor364 = xor i32 %xor339, %xor363
  %89 = load i8, i8* %c, align 1
  %conv365 = zext i8 %89 to i32
  %mul366 = mul nsw i32 1, %conv365
  %90 = load i8, i8* %c, align 1
  %call367 = call zeroext i8 @xtime(i8 zeroext %90) #15
  %conv368 = zext i8 %call367 to i32
  %mul369 = mul nsw i32 0, %conv368
  %xor370 = xor i32 %mul366, %mul369
  %91 = load i8, i8* %c, align 1
  %call371 = call zeroext i8 @xtime(i8 zeroext %91) #15
  %call372 = call zeroext i8 @xtime(i8 zeroext %call371) #15
  %conv373 = zext i8 %call372 to i32
  %mul374 = mul nsw i32 0, %conv373
  %xor375 = xor i32 %xor370, %mul374
  %92 = load i8, i8* %c, align 1
  %call376 = call zeroext i8 @xtime(i8 zeroext %92) #15
  %call377 = call zeroext i8 @xtime(i8 zeroext %call376) #15
  %call378 = call zeroext i8 @xtime(i8 zeroext %call377) #15
  %conv379 = zext i8 %call378 to i32
  %mul380 = mul nsw i32 1, %conv379
  %xor381 = xor i32 %xor375, %mul380
  %93 = load i8, i8* %c, align 1
  %call382 = call zeroext i8 @xtime(i8 zeroext %93) #15
  %call383 = call zeroext i8 @xtime(i8 zeroext %call382) #15
  %call384 = call zeroext i8 @xtime(i8 zeroext %call383) #15
  %call385 = call zeroext i8 @xtime(i8 zeroext %call384) #15
  %conv386 = zext i8 %call385 to i32
  %mul387 = mul nsw i32 0, %conv386
  %xor388 = xor i32 %xor381, %mul387
  %xor389 = xor i32 %xor364, %xor388
  %94 = load i8, i8* %d, align 1
  %conv390 = zext i8 %94 to i32
  %mul391 = mul nsw i32 0, %conv390
  %95 = load i8, i8* %d, align 1
  %call392 = call zeroext i8 @xtime(i8 zeroext %95) #15
  %conv393 = zext i8 %call392 to i32
  %mul394 = mul nsw i32 1, %conv393
  %xor395 = xor i32 %mul391, %mul394
  %96 = load i8, i8* %d, align 1
  %call396 = call zeroext i8 @xtime(i8 zeroext %96) #15
  %call397 = call zeroext i8 @xtime(i8 zeroext %call396) #15
  %conv398 = zext i8 %call397 to i32
  %mul399 = mul nsw i32 1, %conv398
  %xor400 = xor i32 %xor395, %mul399
  %97 = load i8, i8* %d, align 1
  %call401 = call zeroext i8 @xtime(i8 zeroext %97) #15
  %call402 = call zeroext i8 @xtime(i8 zeroext %call401) #15
  %call403 = call zeroext i8 @xtime(i8 zeroext %call402) #15
  %conv404 = zext i8 %call403 to i32
  %mul405 = mul nsw i32 1, %conv404
  %xor406 = xor i32 %xor400, %mul405
  %98 = load i8, i8* %d, align 1
  %call407 = call zeroext i8 @xtime(i8 zeroext %98) #15
  %call408 = call zeroext i8 @xtime(i8 zeroext %call407) #15
  %call409 = call zeroext i8 @xtime(i8 zeroext %call408) #15
  %call410 = call zeroext i8 @xtime(i8 zeroext %call409) #15
  %conv411 = zext i8 %call410 to i32
  %mul412 = mul nsw i32 0, %conv411
  %xor413 = xor i32 %xor406, %mul412
  %xor414 = xor i32 %xor389, %xor413
  %conv415 = trunc i32 %xor414 to i8
  %99 = load [4 x [4 x i8]]*, [4 x [4 x i8]]** @state, align 8
  %100 = load i32, i32* %i, align 4
  %idxprom416 = sext i32 %100 to i64
  %arrayidx417 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* %99, i64 0, i64 %idxprom416
  %arrayidx418 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx417, i64 0, i64 3
  store i8 %conv415, i8* %arrayidx418, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %101 = load i32, i32* %i, align 4
  %inc = add nsw i32 %101, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @getSBoxInvert(i8 zeroext %num) #6 {
entry:
  %num.addr = alloca i8, align 1
  store i8 %num, i8* %num.addr, align 1
  %0 = load i8, i8* %num.addr, align 1
  %idxprom = zext i8 %0 to i64
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @rsbox, i64 0, i64 %idxprom
  %1 = load i8, i8* %arrayidx, align 1
  ret i8 %1
}

; Function Attrs: noinline nounwind optnone uwtable
define void @AES128_CBC_encrypt_buffer(i8* %output, i8* %input, i32 %length, i8* %key, i8* %iv) #6 {
entry:
  %output.addr = alloca i8*, align 8
  %input.addr = alloca i8*, align 8
  %length.addr = alloca i32, align 4
  %key.addr = alloca i8*, align 8
  %iv.addr = alloca i8*, align 8
  %i = alloca i64, align 8
  %remainders = alloca i8, align 1
  store i8* %output, i8** %output.addr, align 8
  store i8* %input, i8** %input.addr, align 8
  store i32 %length, i32* %length.addr, align 4
  store i8* %key, i8** %key.addr, align 8
  store i8* %iv, i8** %iv.addr, align 8
  %0 = load i32, i32* %length.addr, align 4
  %rem = urem i32 %0, 16
  %conv = trunc i32 %rem to i8
  store i8 %conv, i8* %remainders, align 1
  %1 = load i8*, i8** %output.addr, align 8
  %2 = load i8*, i8** %input.addr, align 8
  call void @BlockCopy(i8* %1, i8* %2) #15
  %3 = load i8*, i8** %output.addr, align 8
  %4 = bitcast i8* %3 to [4 x [4 x i8]]*
  store [4 x [4 x i8]]* %4, [4 x [4 x i8]]** @state, align 8
  %5 = load i8*, i8** %key.addr, align 8
  %cmp = icmp ne i8* null, %5
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %6 = load i8*, i8** %key.addr, align 8
  store i8* %6, i8** @Key, align 8
  call void @KeyExpansion() #15
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %7 = load i8*, i8** %iv.addr, align 8
  %cmp2 = icmp ne i8* %7, null
  br i1 %cmp2, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.end
  %8 = load i8*, i8** %iv.addr, align 8
  store i8* %8, i8** @Iv, align 8
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %if.end
  store i64 0, i64* %i, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end5
  %9 = load i64, i64* %i, align 8
  %10 = load i32, i32* %length.addr, align 4
  %conv6 = zext i32 %10 to i64
  %cmp7 = icmp ult i64 %9, %conv6
  br i1 %cmp7, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %11 = load i8*, i8** %input.addr, align 8
  call void @XorWithIv(i8* %11) #15
  %12 = load i8*, i8** %output.addr, align 8
  %13 = load i8*, i8** %input.addr, align 8
  call void @BlockCopy(i8* %12, i8* %13) #15
  %14 = load i8*, i8** %output.addr, align 8
  %15 = bitcast i8* %14 to [4 x [4 x i8]]*
  store [4 x [4 x i8]]* %15, [4 x [4 x i8]]** @state, align 8
  call void @Cipher() #15
  %16 = load i8*, i8** %output.addr, align 8
  store i8* %16, i8** @Iv, align 8
  %17 = load i8*, i8** %input.addr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %17, i64 16
  store i8* %add.ptr, i8** %input.addr, align 8
  %18 = load i8*, i8** %output.addr, align 8
  %add.ptr9 = getelementptr inbounds i8, i8* %18, i64 16
  store i8* %add.ptr9, i8** %output.addr, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %19 = load i64, i64* %i, align 8
  %add = add i64 %19, 16
  store i64 %add, i64* %i, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %20 = load i8, i8* %remainders, align 1
  %tobool = icmp ne i8 %20, 0
  br i1 %tobool, label %if.then10, label %if.end15

if.then10:                                        ; preds = %for.end
  %21 = load i8*, i8** %output.addr, align 8
  %22 = load i8*, i8** %input.addr, align 8
  call void @BlockCopy(i8* %21, i8* %22) #15
  %23 = load i8*, i8** %output.addr, align 8
  %24 = load i8, i8* %remainders, align 1
  %conv11 = zext i8 %24 to i32
  %idx.ext = sext i32 %conv11 to i64
  %add.ptr12 = getelementptr inbounds i8, i8* %23, i64 %idx.ext
  %25 = load i8, i8* %remainders, align 1
  %conv13 = zext i8 %25 to i32
  %sub = sub nsw i32 16, %conv13
  %conv14 = sext i32 %sub to i64
  %call = call i8* @memset(i8* %add.ptr12, i32 0, i64 %conv14) #18
  %26 = load i8*, i8** %output.addr, align 8
  %27 = bitcast i8* %26 to [4 x [4 x i8]]*
  store [4 x [4 x i8]]* %27, [4 x [4 x i8]]** @state, align 8
  call void @Cipher() #15
  br label %if.end15

if.end15:                                         ; preds = %if.then10, %for.end
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @XorWithIv(i8* %buf) #6 {
entry:
  %buf.addr = alloca i8*, align 8
  %i = alloca i8, align 1
  store i8* %buf, i8** %buf.addr, align 8
  store i8 0, i8* %i, align 1
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8, i8* %i, align 1
  %conv = zext i8 %0 to i32
  %cmp = icmp slt i32 %conv, 16
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load i8*, i8** @Iv, align 8
  %2 = load i8, i8* %i, align 1
  %idxprom = zext i8 %2 to i64
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %idxprom
  %3 = load i8, i8* %arrayidx, align 1
  %conv2 = zext i8 %3 to i32
  %4 = load i8*, i8** %buf.addr, align 8
  %5 = load i8, i8* %i, align 1
  %idxprom3 = zext i8 %5 to i64
  %arrayidx4 = getelementptr inbounds i8, i8* %4, i64 %idxprom3
  %6 = load i8, i8* %arrayidx4, align 1
  %conv5 = zext i8 %6 to i32
  %xor = xor i32 %conv5, %conv2
  %conv6 = trunc i32 %xor to i8
  store i8 %conv6, i8* %arrayidx4, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %7 = load i8, i8* %i, align 1
  %inc = add i8 %7, 1
  store i8 %inc, i8* %i, align 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @AES128_CBC_decrypt_buffer(i8* %output, i8* %input, i32 %length, i8* %key, i8* %iv) #6 {
entry:
  %output.addr = alloca i8*, align 8
  %input.addr = alloca i8*, align 8
  %length.addr = alloca i32, align 4
  %key.addr = alloca i8*, align 8
  %iv.addr = alloca i8*, align 8
  %i = alloca i64, align 8
  %remainders = alloca i8, align 1
  store i8* %output, i8** %output.addr, align 8
  store i8* %input, i8** %input.addr, align 8
  store i32 %length, i32* %length.addr, align 4
  store i8* %key, i8** %key.addr, align 8
  store i8* %iv, i8** %iv.addr, align 8
  %0 = load i32, i32* %length.addr, align 4
  %rem = urem i32 %0, 16
  %conv = trunc i32 %rem to i8
  store i8 %conv, i8* %remainders, align 1
  %1 = load i8*, i8** %output.addr, align 8
  %2 = load i8*, i8** %input.addr, align 8
  call void @BlockCopy(i8* %1, i8* %2) #15
  %3 = load i8*, i8** %output.addr, align 8
  %4 = bitcast i8* %3 to [4 x [4 x i8]]*
  store [4 x [4 x i8]]* %4, [4 x [4 x i8]]** @state, align 8
  %5 = load i8*, i8** %key.addr, align 8
  %cmp = icmp ne i8* null, %5
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %6 = load i8*, i8** %key.addr, align 8
  store i8* %6, i8** @Key, align 8
  call void @KeyExpansion() #15
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %7 = load i8*, i8** %iv.addr, align 8
  %cmp2 = icmp ne i8* %7, null
  br i1 %cmp2, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.end
  %8 = load i8*, i8** %iv.addr, align 8
  store i8* %8, i8** @Iv, align 8
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %if.end
  store i64 0, i64* %i, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end5
  %9 = load i64, i64* %i, align 8
  %10 = load i32, i32* %length.addr, align 4
  %conv6 = zext i32 %10 to i64
  %cmp7 = icmp ult i64 %9, %conv6
  br i1 %cmp7, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %11 = load i8*, i8** %output.addr, align 8
  %12 = load i8*, i8** %input.addr, align 8
  call void @BlockCopy(i8* %11, i8* %12) #15
  %13 = load i8*, i8** %output.addr, align 8
  %14 = bitcast i8* %13 to [4 x [4 x i8]]*
  store [4 x [4 x i8]]* %14, [4 x [4 x i8]]** @state, align 8
  call void @InvCipher() #15
  %15 = load i8*, i8** %output.addr, align 8
  call void @XorWithIv(i8* %15) #15
  %16 = load i8*, i8** %input.addr, align 8
  store i8* %16, i8** @Iv, align 8
  %17 = load i8*, i8** %input.addr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %17, i64 16
  store i8* %add.ptr, i8** %input.addr, align 8
  %18 = load i8*, i8** %output.addr, align 8
  %add.ptr9 = getelementptr inbounds i8, i8* %18, i64 16
  store i8* %add.ptr9, i8** %output.addr, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %19 = load i64, i64* %i, align 8
  %add = add i64 %19, 16
  store i64 %add, i64* %i, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %20 = load i8, i8* %remainders, align 1
  %tobool = icmp ne i8 %20, 0
  br i1 %tobool, label %if.then10, label %if.end15

if.then10:                                        ; preds = %for.end
  %21 = load i8*, i8** %output.addr, align 8
  %22 = load i8*, i8** %input.addr, align 8
  call void @BlockCopy(i8* %21, i8* %22) #15
  %23 = load i8*, i8** %output.addr, align 8
  %24 = load i8, i8* %remainders, align 1
  %conv11 = zext i8 %24 to i32
  %idx.ext = sext i32 %conv11 to i64
  %add.ptr12 = getelementptr inbounds i8, i8* %23, i64 %idx.ext
  %25 = load i8, i8* %remainders, align 1
  %conv13 = zext i8 %25 to i32
  %sub = sub nsw i32 16, %conv13
  %conv14 = sext i32 %sub to i64
  %call = call i8* @memset(i8* %add.ptr12, i32 0, i64 %conv14) #18
  %26 = load i8*, i8** %output.addr, align 8
  %27 = bitcast i8* %26 to [4 x [4 x i8]]*
  store [4 x [4 x i8]]* %27, [4 x [4 x i8]]** @state, align 8
  call void @InvCipher() #15
  br label %if.end15

if.end15:                                         ; preds = %if.then10, %for.end
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @klee_overshift_check(i64 %bitWidth, i64 %shift) #0 !dbg !5737 {
entry:
  %bitWidth.addr = alloca i64, align 8
  %shift.addr = alloca i64, align 8
  store i64 %bitWidth, i64* %bitWidth.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bitWidth.addr, metadata !5742, metadata !DIExpression()), !dbg !5743
  store i64 %shift, i64* %shift.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %shift.addr, metadata !5744, metadata !DIExpression()), !dbg !5745
  %0 = load i64, i64* %shift.addr, align 8, !dbg !5746
  %1 = load i64, i64* %bitWidth.addr, align 8, !dbg !5748
  %cmp = icmp uge i64 %0, %1, !dbg !5749
  br i1 %cmp, label %if.then, label %if.end, !dbg !5750

if.then:                                          ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.139, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.140, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.141, i64 0, i64 0)) #14, !dbg !5751
  unreachable, !dbg !5751

if.end:                                           ; preds = %entry
  ret void, !dbg !5753
}

define internal void @klee.ctor_stub() {
entry:
  call void @cgc_initialize_flag_page()
  ret void
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noinline noreturn nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noinline nounwind readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noinline nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn }
attributes #15 = { nobuiltin }
attributes #16 = { nobuiltin noreturn }
attributes #17 = { noreturn nounwind }
attributes #18 = { nobuiltin nounwind }
attributes #19 = { nobuiltin nounwind readonly }
attributes #20 = { nobuiltin noreturn nounwind }
attributes #21 = { nobuiltin nounwind readnone }
attributes #22 = { nounwind readnone }
attributes #23 = { nounwind readonly }

!llvm.dbg.cu = !{!187, !191, !193, !2, !195, !198, !106, !231, !272, !274, !276}
!llvm.module.flags = !{!278, !279, !280, !281}
!llvm.ident = !{!282, !282, !282, !282, !282, !282, !282, !282, !282, !282, !282, !282, !282, !282}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__exe_env", scope: !2, file: !8, line: 37, type: !79, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 9.0.0 (tags/RELEASE_900/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !5, nameTableKind: None)
!3 = !DIFile(filename: "/home/haoxin/haoxin-data/smu-research/klee/runtime/POSIX/fd_init.c", directory: "/media/haoxin/SeagateData/haoxin-data/smu-research/klee/smu-build/runtime/POSIX")
!4 = !{}
!5 = !{!0, !6}
!6 = !DIGlobalVariableExpression(var: !7, expr: !DIExpression())
!7 = distinct !DIGlobalVariable(name: "__exe_fs", scope: !2, file: !8, line: 24, type: !9, isLocal: false, isDefinition: true)
!8 = !DIFile(filename: "/home/haoxin/haoxin-data/smu-research/klee/runtime/POSIX/fd_init.c", directory: "")
!9 = !DIDerivedType(tag: DW_TAG_typedef, name: "exe_file_system_t", file: !10, line: 74, baseType: !11)
!10 = !DIFile(filename: "/home/haoxin/haoxin-data/smu-research/klee/runtime/POSIX/fd.h", directory: "")
!11 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10, line: 62, size: 832, elements: !12)
!12 = !{!13, !15, !67, !68, !69, !70, !71, !73, !74, !75, !76, !77, !78}
!13 = !DIDerivedType(tag: DW_TAG_member, name: "n_sym_files", scope: !11, file: !10, line: 63, baseType: !14, size: 32)
!14 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "sym_stdin", scope: !11, file: !10, line: 64, baseType: !16, size: 64, offset: 64)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 64)
!17 = !DIDerivedType(tag: DW_TAG_typedef, name: "exe_disk_file_t", file: !10, line: 44, baseType: !18)
!18 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10, line: 40, size: 192, elements: !19)
!19 = !{!20, !21, !24}
!20 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !18, file: !10, line: 41, baseType: !14, size: 32)
!21 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !18, file: !10, line: 42, baseType: !22, size: 64, offset: 64)
!22 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23, size: 64)
!23 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!24 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !18, file: !10, line: 43, baseType: !25, size: 64, offset: 128)
!25 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !26, size: 64)
!26 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !27, line: 119, size: 1152, elements: !28)
!27 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!28 = !{!29, !33, !35, !37, !39, !41, !43, !45, !46, !49, !51, !53, !61, !62, !63}
!29 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !26, file: !27, line: 121, baseType: !30, size: 64)
!30 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !31, line: 133, baseType: !32)
!31 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!32 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!33 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !26, file: !27, line: 123, baseType: !34, size: 64, offset: 64)
!34 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !31, line: 137, baseType: !32)
!35 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !26, file: !27, line: 124, baseType: !36, size: 64, offset: 128)
!36 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !31, line: 139, baseType: !32)
!37 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !26, file: !27, line: 125, baseType: !38, size: 32, offset: 192)
!38 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !31, line: 138, baseType: !14)
!39 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !26, file: !27, line: 132, baseType: !40, size: 32, offset: 224)
!40 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !31, line: 134, baseType: !14)
!41 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !26, file: !27, line: 133, baseType: !42, size: 32, offset: 256)
!42 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !31, line: 135, baseType: !14)
!43 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !26, file: !27, line: 135, baseType: !44, size: 32, offset: 288)
!44 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!45 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !26, file: !27, line: 136, baseType: !30, size: 64, offset: 320)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !26, file: !27, line: 137, baseType: !47, size: 64, offset: 384)
!47 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !31, line: 140, baseType: !48)
!48 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !26, file: !27, line: 143, baseType: !50, size: 64, offset: 448)
!50 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !31, line: 162, baseType: !48)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !26, file: !27, line: 144, baseType: !52, size: 64, offset: 512)
!52 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !31, line: 168, baseType: !48)
!53 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !26, file: !27, line: 152, baseType: !54, size: 128, offset: 576)
!54 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !55, line: 9, size: 128, elements: !56)
!55 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!56 = !{!57, !59}
!57 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !54, file: !55, line: 11, baseType: !58, size: 64)
!58 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !31, line: 148, baseType: !48)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !54, file: !55, line: 12, baseType: !60, size: 64, offset: 64)
!60 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !31, line: 184, baseType: !48)
!61 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !26, file: !27, line: 153, baseType: !54, size: 128, offset: 704)
!62 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !26, file: !27, line: 154, baseType: !54, size: 128, offset: 832)
!63 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !26, file: !27, line: 164, baseType: !64, size: 192, offset: 960)
!64 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 192, elements: !65)
!65 = !{!66}
!66 = !DISubrange(count: 3)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "sym_stdout", scope: !11, file: !10, line: 64, baseType: !16, size: 64, offset: 128)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "stdout_writes", scope: !11, file: !10, line: 65, baseType: !14, size: 32, offset: 192)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "sym_files", scope: !11, file: !10, line: 66, baseType: !16, size: 64, offset: 256)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "max_failures", scope: !11, file: !10, line: 69, baseType: !14, size: 32, offset: 320)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "read_fail", scope: !11, file: !10, line: 72, baseType: !72, size: 64, offset: 384)
!72 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !44, size: 64)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "write_fail", scope: !11, file: !10, line: 72, baseType: !72, size: 64, offset: 448)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "close_fail", scope: !11, file: !10, line: 72, baseType: !72, size: 64, offset: 512)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "ftruncate_fail", scope: !11, file: !10, line: 72, baseType: !72, size: 64, offset: 576)
!76 = !DIDerivedType(tag: DW_TAG_member, name: "getcwd_fail", scope: !11, file: !10, line: 72, baseType: !72, size: 64, offset: 640)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "chmod_fail", scope: !11, file: !10, line: 73, baseType: !72, size: 64, offset: 704)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "fchmod_fail", scope: !11, file: !10, line: 73, baseType: !72, size: 64, offset: 768)
!79 = !DIDerivedType(tag: DW_TAG_typedef, name: "exe_sym_env_t", file: !10, line: 89, baseType: !80)
!80 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10, line: 81, size: 6272, elements: !81)
!81 = !{!82, !96, !98, !99}
!82 = !DIDerivedType(tag: DW_TAG_member, name: "fds", scope: !80, file: !10, line: 82, baseType: !83, size: 6144)
!83 = !DICompositeType(tag: DW_TAG_array_type, baseType: !84, size: 6144, elements: !94)
!84 = !DIDerivedType(tag: DW_TAG_typedef, name: "exe_file_t", file: !10, line: 60, baseType: !85)
!85 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10, line: 53, size: 192, elements: !86)
!86 = !{!87, !88, !89, !93}
!87 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !85, file: !10, line: 54, baseType: !44, size: 32)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !85, file: !10, line: 55, baseType: !14, size: 32, offset: 32)
!89 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !85, file: !10, line: 58, baseType: !90, size: 64, offset: 64)
!90 = !DIDerivedType(tag: DW_TAG_typedef, name: "off64_t", file: !91, line: 93, baseType: !92)
!91 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "")
!92 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !31, line: 141, baseType: !48)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "dfile", scope: !85, file: !10, line: 59, baseType: !16, size: 64, offset: 128)
!94 = !{!95}
!95 = !DISubrange(count: 32)
!96 = !DIDerivedType(tag: DW_TAG_member, name: "umask", scope: !80, file: !10, line: 83, baseType: !97, size: 32, offset: 6144)
!97 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !91, line: 70, baseType: !38)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !80, file: !10, line: 84, baseType: !14, size: 32, offset: 6176)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "save_all_writes", scope: !80, file: !10, line: 88, baseType: !44, size: 32, offset: 6208)
!100 = !DIGlobalVariableExpression(var: !101, expr: !DIExpression())
!101 = distinct !DIGlobalVariable(name: "n_calls", scope: !102, file: !103, line: 297, type: !44, isLocal: true, isDefinition: true)
!102 = distinct !DISubprogram(name: "close", scope: !103, file: !103, line: 296, type: !104, scopeLine: 296, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !106, retainedNodes: !4)
!103 = !DIFile(filename: "/home/haoxin/haoxin-data/smu-research/klee/runtime/POSIX/fd.c", directory: "")
!104 = !DISubroutineType(types: !105)
!105 = !{!44, !44}
!106 = distinct !DICompileUnit(language: DW_LANG_C89, file: !107, producer: "clang version 9.0.0 (tags/RELEASE_900/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !108, globals: !148, nameTableKind: None)
!107 = !DIFile(filename: "/home/haoxin/haoxin-data/smu-research/klee/runtime/POSIX/fd.c", directory: "/media/haoxin/SeagateData/haoxin-data/smu-research/klee/smu-build/runtime/POSIX")
!108 = !{!48, !109, !90, !32, !110, !22, !124, !44, !23}
!109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !111, size: 64)
!111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent64", file: !112, line: 37, size: 2240, elements: !113)
!112 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/dirent.h", directory: "")
!113 = !{!114, !115, !116, !118, !120}
!114 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !111, file: !112, line: 39, baseType: !34, size: 64)
!115 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !111, file: !112, line: 40, baseType: !92, size: 64, offset: 64)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !111, file: !112, line: 41, baseType: !117, size: 16, offset: 128)
!117 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !111, file: !112, line: 42, baseType: !119, size: 8, offset: 144)
!119 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!120 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !111, file: !112, line: 43, baseType: !121, size: 2048, offset: 152)
!121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 2048, elements: !122)
!122 = !{!123}
!123 = !DISubrange(count: 256)
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 64)
!125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !27, line: 46, size: 1152, elements: !126)
!126 = !{!127, !128, !130, !131, !132, !133, !134, !135, !136, !137, !138, !140, !145, !146, !147}
!127 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !125, file: !27, line: 48, baseType: !30, size: 64)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !125, file: !27, line: 53, baseType: !129, size: 64, offset: 64)
!129 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !31, line: 136, baseType: !32)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !125, file: !27, line: 61, baseType: !36, size: 64, offset: 128)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !125, file: !27, line: 62, baseType: !38, size: 32, offset: 192)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !125, file: !27, line: 64, baseType: !40, size: 32, offset: 224)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !125, file: !27, line: 65, baseType: !42, size: 32, offset: 256)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !125, file: !27, line: 67, baseType: !44, size: 32, offset: 288)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !125, file: !27, line: 69, baseType: !30, size: 64, offset: 320)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !125, file: !27, line: 74, baseType: !47, size: 64, offset: 384)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !125, file: !27, line: 78, baseType: !50, size: 64, offset: 448)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !125, file: !27, line: 80, baseType: !139, size: 64, offset: 512)
!139 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !31, line: 167, baseType: !48)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !125, file: !27, line: 91, baseType: !141, size: 128, offset: 576)
!141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !55, line: 9, size: 128, elements: !142)
!142 = !{!143, !144}
!143 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !141, file: !55, line: 11, baseType: !58, size: 64)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !141, file: !55, line: 12, baseType: !60, size: 64, offset: 64)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !125, file: !27, line: 92, baseType: !141, size: 128, offset: 704)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !125, file: !27, line: 93, baseType: !141, size: 128, offset: 832)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !125, file: !27, line: 106, baseType: !64, size: 192, offset: 960)
!148 = !{!100, !149, !158, !165, !172, !177, !182}
!149 = !DIGlobalVariableExpression(var: !150, expr: !DIExpression())
!150 = distinct !DIGlobalVariable(name: "n_calls", scope: !151, file: !103, line: 329, type: !44, isLocal: true, isDefinition: true)
!151 = distinct !DISubprogram(name: "read", scope: !103, file: !103, line: 328, type: !152, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !106, retainedNodes: !4)
!152 = !DISubroutineType(types: !153)
!153 = !{!154, !44, !109, !156}
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !91, line: 109, baseType: !155)
!155 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !31, line: 181, baseType: !48)
!156 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !157, line: 46, baseType: !32)
!157 = !DIFile(filename: "dut-research/compilers/llvm-9.0/llvm-src/build/lib/clang/9.0.0/include/stddef.h", directory: "/media/haoxin/SeagateData/haoxin-data")
!158 = !DIGlobalVariableExpression(var: !159, expr: !DIExpression())
!159 = distinct !DIGlobalVariable(name: "n_calls", scope: !160, file: !103, line: 395, type: !44, isLocal: true, isDefinition: true)
!160 = distinct !DISubprogram(name: "write", scope: !103, file: !103, line: 394, type: !161, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !106, retainedNodes: !4)
!161 = !DISubroutineType(types: !162)
!162 = !{!154, !44, !163, !156}
!163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 64)
!164 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!165 = !DIGlobalVariableExpression(var: !166, expr: !DIExpression())
!166 = distinct !DIGlobalVariable(name: "n_calls", scope: !167, file: !103, line: 626, type: !44, isLocal: true, isDefinition: true)
!167 = distinct !DISubprogram(name: "chmod", scope: !103, file: !103, line: 625, type: !168, scopeLine: 625, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !106, retainedNodes: !4)
!168 = !DISubroutineType(types: !169)
!169 = !{!44, !170, !97}
!170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !171, size: 64)
!171 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !23)
!172 = !DIGlobalVariableExpression(var: !173, expr: !DIExpression())
!173 = distinct !DIGlobalVariable(name: "n_calls", scope: !174, file: !103, line: 645, type: !44, isLocal: true, isDefinition: true)
!174 = distinct !DISubprogram(name: "fchmod", scope: !103, file: !103, line: 644, type: !175, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !106, retainedNodes: !4)
!175 = !DISubroutineType(types: !176)
!176 = !{!44, !44, !97}
!177 = !DIGlobalVariableExpression(var: !178, expr: !DIExpression())
!178 = distinct !DIGlobalVariable(name: "n_calls", scope: !179, file: !103, line: 731, type: !44, isLocal: true, isDefinition: true)
!179 = distinct !DISubprogram(name: "__fd_ftruncate", scope: !103, file: !103, line: 730, type: !180, scopeLine: 730, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !106, retainedNodes: !4)
!180 = !DISubroutineType(types: !181)
!181 = !{!44, !44, !90}
!182 = !DIGlobalVariableExpression(var: !183, expr: !DIExpression())
!183 = distinct !DIGlobalVariable(name: "n_calls", scope: !184, file: !103, line: 1307, type: !44, isLocal: true, isDefinition: true)
!184 = distinct !DISubprogram(name: "getcwd", scope: !103, file: !103, line: 1306, type: !185, scopeLine: 1306, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !106, retainedNodes: !4)
!185 = !DISubroutineType(types: !186)
!186 = !{!22, !22, !156}
!187 = distinct !DICompileUnit(language: DW_LANG_C89, file: !188, producer: "clang version 9.0.0 (tags/RELEASE_900/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !189, nameTableKind: None)
!188 = !DIFile(filename: "/home/haoxin/haoxin-data/smu-research/klee/runtime/POSIX/klee_init_env.c", directory: "/media/haoxin/SeagateData/haoxin-data/smu-research/klee/smu-build/runtime/POSIX")
!189 = !{!190}
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22, size: 64)
!191 = distinct !DICompileUnit(language: DW_LANG_C99, file: !192, producer: "clang version 9.0.0 (tags/RELEASE_900/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!192 = !DIFile(filename: "/home/haoxin/haoxin-data/smu-research/cgc/cgc-env-64/cb-multios/challenges/Palindrome/lib/libc.c", directory: "/home/haoxin/haoxin-data/smu-research/cgc/cgc-env-64/cb-multios/build64/challenges/Palindrome")
!193 = distinct !DICompileUnit(language: DW_LANG_C99, file: !194, producer: "clang version 9.0.0 (tags/RELEASE_900/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!194 = !DIFile(filename: "/home/haoxin/haoxin-data/smu-research/cgc/cgc-env-64/cb-multios/challenges/Palindrome/src/service.c", directory: "/home/haoxin/haoxin-data/smu-research/cgc/cgc-env-64/cb-multios/build64/challenges/Palindrome")
!195 = distinct !DICompileUnit(language: DW_LANG_C89, file: !196, producer: "clang version 9.0.0 (tags/RELEASE_900/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !197, nameTableKind: None)
!196 = !DIFile(filename: "/home/haoxin/haoxin-data/smu-research/klee/runtime/Intrinsic/klee_range.c", directory: "/media/haoxin/SeagateData/haoxin-data/smu-research/klee/smu-build/runtime/Intrinsic")
!197 = !{!14}
!198 = distinct !DICompileUnit(language: DW_LANG_C89, file: !199, producer: "clang version 9.0.0 (tags/RELEASE_900/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !200, nameTableKind: None)
!199 = !DIFile(filename: "/home/haoxin/haoxin-data/smu-research/klee/runtime/POSIX/fd_64.c", directory: "/media/haoxin/SeagateData/haoxin-data/smu-research/klee/smu-build/runtime/POSIX")
!200 = !{!201, !223}
!201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !202, size: 64)
!202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !27, line: 119, size: 1152, elements: !203)
!203 = !{!204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !220, !221, !222}
!204 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !202, file: !27, line: 121, baseType: !30, size: 64)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !202, file: !27, line: 123, baseType: !34, size: 64, offset: 64)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !202, file: !27, line: 124, baseType: !36, size: 64, offset: 128)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !202, file: !27, line: 125, baseType: !38, size: 32, offset: 192)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !202, file: !27, line: 132, baseType: !40, size: 32, offset: 224)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !202, file: !27, line: 133, baseType: !42, size: 32, offset: 256)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !202, file: !27, line: 135, baseType: !44, size: 32, offset: 288)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !202, file: !27, line: 136, baseType: !30, size: 64, offset: 320)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !202, file: !27, line: 137, baseType: !47, size: 64, offset: 384)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !202, file: !27, line: 143, baseType: !50, size: 64, offset: 448)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !202, file: !27, line: 144, baseType: !52, size: 64, offset: 512)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !202, file: !27, line: 152, baseType: !216, size: 128, offset: 576)
!216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !55, line: 9, size: 128, elements: !217)
!217 = !{!218, !219}
!218 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !216, file: !55, line: 11, baseType: !58, size: 64)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !216, file: !55, line: 12, baseType: !60, size: 64, offset: 64)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !202, file: !27, line: 153, baseType: !216, size: 128, offset: 704)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !202, file: !27, line: 154, baseType: !216, size: 128, offset: 832)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !202, file: !27, line: 164, baseType: !64, size: 192, offset: 960)
!223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 64)
!224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent64", file: !112, line: 37, size: 2240, elements: !225)
!225 = !{!226, !227, !228, !229, !230}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !224, file: !112, line: 39, baseType: !34, size: 64)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !224, file: !112, line: 40, baseType: !92, size: 64, offset: 64)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !224, file: !112, line: 41, baseType: !117, size: 16, offset: 128)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !224, file: !112, line: 42, baseType: !119, size: 8, offset: 144)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !224, file: !112, line: 43, baseType: !121, size: 2048, offset: 152)
!231 = distinct !DICompileUnit(language: DW_LANG_C89, file: !232, producer: "clang version 9.0.0 (tags/RELEASE_900/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !233, retainedTypes: !267, nameTableKind: None)
!232 = !DIFile(filename: "/home/haoxin/haoxin-data/smu-research/klee/runtime/POSIX/stubs.c", directory: "/media/haoxin/SeagateData/haoxin-data/smu-research/klee/smu-build/runtime/POSIX")
!233 = !{!234, !240, !246}
!234 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !235, line: 52, baseType: !14, size: 32, elements: !236)
!235 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/waitflags.h", directory: "")
!236 = !{!237, !238, !239}
!237 = !DIEnumerator(name: "P_ALL", value: 0, isUnsigned: true)
!238 = !DIEnumerator(name: "P_PID", value: 1, isUnsigned: true)
!239 = !DIEnumerator(name: "P_PGID", value: 2, isUnsigned: true)
!240 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__priority_which", file: !241, line: 187, baseType: !14, size: 32, elements: !242)
!241 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/resource.h", directory: "")
!242 = !{!243, !244, !245}
!243 = !DIEnumerator(name: "PRIO_PROCESS", value: 0, isUnsigned: true)
!244 = !DIEnumerator(name: "PRIO_PGRP", value: 1, isUnsigned: true)
!245 = !DIEnumerator(name: "PRIO_USER", value: 2, isUnsigned: true)
!246 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__rlimit_resource", file: !241, line: 31, baseType: !14, size: 32, elements: !247)
!247 = !{!248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266}
!248 = !DIEnumerator(name: "RLIMIT_CPU", value: 0, isUnsigned: true)
!249 = !DIEnumerator(name: "RLIMIT_FSIZE", value: 1, isUnsigned: true)
!250 = !DIEnumerator(name: "RLIMIT_DATA", value: 2, isUnsigned: true)
!251 = !DIEnumerator(name: "RLIMIT_STACK", value: 3, isUnsigned: true)
!252 = !DIEnumerator(name: "RLIMIT_CORE", value: 4, isUnsigned: true)
!253 = !DIEnumerator(name: "__RLIMIT_RSS", value: 5, isUnsigned: true)
!254 = !DIEnumerator(name: "RLIMIT_NOFILE", value: 7, isUnsigned: true)
!255 = !DIEnumerator(name: "__RLIMIT_OFILE", value: 7, isUnsigned: true)
!256 = !DIEnumerator(name: "RLIMIT_AS", value: 9, isUnsigned: true)
!257 = !DIEnumerator(name: "__RLIMIT_NPROC", value: 6, isUnsigned: true)
!258 = !DIEnumerator(name: "__RLIMIT_MEMLOCK", value: 8, isUnsigned: true)
!259 = !DIEnumerator(name: "__RLIMIT_LOCKS", value: 10, isUnsigned: true)
!260 = !DIEnumerator(name: "__RLIMIT_SIGPENDING", value: 11, isUnsigned: true)
!261 = !DIEnumerator(name: "__RLIMIT_MSGQUEUE", value: 12, isUnsigned: true)
!262 = !DIEnumerator(name: "__RLIMIT_NICE", value: 13, isUnsigned: true)
!263 = !DIEnumerator(name: "__RLIMIT_RTPRIO", value: 14, isUnsigned: true)
!264 = !DIEnumerator(name: "__RLIMIT_RTTIME", value: 15, isUnsigned: true)
!265 = !DIEnumerator(name: "__RLIMIT_NLIMITS", value: 16, isUnsigned: true)
!266 = !DIEnumerator(name: "__RLIM_NLIMITS", value: 16, isUnsigned: true)
!267 = !{!268, !14, !271, !109}
!268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !269, size: 64)
!269 = !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !270, line: 194, flags: DIFlagFwdDecl)
!270 = !DIFile(filename: "/home/haoxin/haoxin-data/smu-research/klee/runtime/POSIX/stubs.c", directory: "")
!271 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !91, line: 60, baseType: !30)
!272 = distinct !DICompileUnit(language: DW_LANG_C89, file: !273, producer: "clang version 9.0.0 (tags/RELEASE_900/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!273 = !DIFile(filename: "/home/haoxin/haoxin-data/smu-research/klee/runtime/FreeStanding/memcpy.c", directory: "/media/haoxin/SeagateData/haoxin-data/smu-research/klee/smu-build/runtime/FreeStanding")
!274 = distinct !DICompileUnit(language: DW_LANG_C89, file: !275, producer: "clang version 9.0.0 (tags/RELEASE_900/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!275 = !DIFile(filename: "/home/haoxin/haoxin-data/smu-research/klee/runtime/FreeStanding/memset.c", directory: "/media/haoxin/SeagateData/haoxin-data/smu-research/klee/smu-build/runtime/FreeStanding")
!276 = distinct !DICompileUnit(language: DW_LANG_C89, file: !277, producer: "clang version 9.0.0 (tags/RELEASE_900/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, nameTableKind: None)
!277 = !DIFile(filename: "/home/haoxin/haoxin-data/smu-research/klee/runtime/Intrinsic/klee_overshift_check.c", directory: "/media/haoxin/SeagateData/haoxin-data/smu-research/klee/smu-build/runtime/Intrinsic")
!278 = !{i32 2, !"Dwarf Version", i32 4}
!279 = !{i32 2, !"Debug Info Version", i32 3}
!280 = !{i32 1, !"wchar_size", i32 4}
!281 = !{i32 7, !"PIC Level", i32 2}
!282 = !{!"clang version 9.0.0 (tags/RELEASE_900/final)"}
!283 = distinct !DISubprogram(name: "klee_init_env", scope: !284, file: !284, line: 85, type: !285, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !187, retainedNodes: !4)
!284 = !DIFile(filename: "/home/haoxin/haoxin-data/smu-research/klee/runtime/POSIX/klee_init_env.c", directory: "")
!285 = !DISubroutineType(types: !286)
!286 = !{null, !72, !287}
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !190, size: 64)
!288 = !DILocalVariable(name: "argcPtr", arg: 1, scope: !283, file: !284, line: 85, type: !72)
!289 = !DILocation(line: 85, column: 25, scope: !283)
!290 = !DILocalVariable(name: "argvPtr", arg: 2, scope: !283, file: !284, line: 85, type: !287)
!291 = !DILocation(line: 85, column: 42, scope: !283)
!292 = !DILocalVariable(name: "argc", scope: !283, file: !284, line: 86, type: !44)
!293 = !DILocation(line: 86, column: 7, scope: !283)
!294 = !DILocation(line: 86, column: 15, scope: !283)
!295 = !DILocation(line: 86, column: 14, scope: !283)
!296 = !DILocalVariable(name: "argv", scope: !283, file: !284, line: 87, type: !190)
!297 = !DILocation(line: 87, column: 10, scope: !283)
!298 = !DILocation(line: 87, column: 18, scope: !283)
!299 = !DILocation(line: 87, column: 17, scope: !283)
!300 = !DILocalVariable(name: "new_argc", scope: !283, file: !284, line: 89, type: !44)
!301 = !DILocation(line: 89, column: 7, scope: !283)
!302 = !DILocalVariable(name: "n_args", scope: !283, file: !284, line: 89, type: !44)
!303 = !DILocation(line: 89, column: 21, scope: !283)
!304 = !DILocalVariable(name: "new_argv", scope: !283, file: !284, line: 90, type: !305)
!305 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 65536, elements: !306)
!306 = !{!307}
!307 = !DISubrange(count: 1024)
!308 = !DILocation(line: 90, column: 9, scope: !283)
!309 = !DILocalVariable(name: "max_len", scope: !283, file: !284, line: 91, type: !14)
!310 = !DILocation(line: 91, column: 12, scope: !283)
!311 = !DILocalVariable(name: "min_argvs", scope: !283, file: !284, line: 91, type: !14)
!312 = !DILocation(line: 91, column: 21, scope: !283)
!313 = !DILocalVariable(name: "max_argvs", scope: !283, file: !284, line: 91, type: !14)
!314 = !DILocation(line: 91, column: 32, scope: !283)
!315 = !DILocalVariable(name: "sym_files", scope: !283, file: !284, line: 92, type: !14)
!316 = !DILocation(line: 92, column: 12, scope: !283)
!317 = !DILocalVariable(name: "sym_file_len", scope: !283, file: !284, line: 92, type: !14)
!318 = !DILocation(line: 92, column: 27, scope: !283)
!319 = !DILocalVariable(name: "sym_stdin_len", scope: !283, file: !284, line: 93, type: !14)
!320 = !DILocation(line: 93, column: 12, scope: !283)
!321 = !DILocalVariable(name: "sym_stdout_flag", scope: !283, file: !284, line: 94, type: !44)
!322 = !DILocation(line: 94, column: 7, scope: !283)
!323 = !DILocalVariable(name: "save_all_writes_flag", scope: !283, file: !284, line: 95, type: !44)
!324 = !DILocation(line: 95, column: 7, scope: !283)
!325 = !DILocalVariable(name: "fd_fail", scope: !283, file: !284, line: 96, type: !44)
!326 = !DILocation(line: 96, column: 7, scope: !283)
!327 = !DILocalVariable(name: "final_argv", scope: !283, file: !284, line: 97, type: !190)
!328 = !DILocation(line: 97, column: 10, scope: !283)
!329 = !DILocalVariable(name: "sym_arg_name", scope: !283, file: !284, line: 98, type: !330)
!330 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 48, elements: !331)
!331 = !{!332}
!332 = !DISubrange(count: 6)
!333 = !DILocation(line: 98, column: 8, scope: !283)
!334 = !DILocalVariable(name: "sym_arg_num", scope: !283, file: !284, line: 99, type: !14)
!335 = !DILocation(line: 99, column: 12, scope: !283)
!336 = !DILocalVariable(name: "k", scope: !283, file: !284, line: 100, type: !44)
!337 = !DILocation(line: 100, column: 7, scope: !283)
!338 = !DILocalVariable(name: "i", scope: !283, file: !284, line: 100, type: !44)
!339 = !DILocation(line: 100, column: 14, scope: !283)
!340 = !DILocation(line: 102, column: 3, scope: !283)
!341 = !DILocation(line: 102, column: 19, scope: !283)
!342 = !DILocation(line: 105, column: 7, scope: !343)
!343 = distinct !DILexicalBlock(scope: !283, file: !284, line: 105, column: 7)
!344 = !DILocation(line: 105, column: 12, scope: !343)
!345 = !DILocation(line: 105, column: 17, scope: !343)
!346 = !DILocation(line: 105, column: 28, scope: !343)
!347 = !DILocation(line: 105, column: 20, scope: !343)
!348 = !DILocation(line: 105, column: 7, scope: !283)
!349 = !DILocation(line: 106, column: 5, scope: !350)
!350 = distinct !DILexicalBlock(scope: !343, file: !284, line: 105, column: 48)
!351 = !DILocation(line: 121, column: 3, scope: !350)
!352 = !DILocation(line: 123, column: 3, scope: !283)
!353 = !DILocation(line: 123, column: 10, scope: !283)
!354 = !DILocation(line: 123, column: 14, scope: !283)
!355 = !DILocation(line: 123, column: 12, scope: !283)
!356 = !DILocation(line: 124, column: 17, scope: !357)
!357 = distinct !DILexicalBlock(scope: !358, file: !284, line: 124, column: 9)
!358 = distinct !DILexicalBlock(scope: !283, file: !284, line: 123, column: 20)
!359 = !DILocation(line: 124, column: 22, scope: !357)
!360 = !DILocation(line: 124, column: 9, scope: !357)
!361 = !DILocation(line: 124, column: 39, scope: !357)
!362 = !DILocation(line: 124, column: 50, scope: !357)
!363 = !DILocation(line: 124, column: 55, scope: !357)
!364 = !DILocation(line: 124, column: 42, scope: !357)
!365 = !DILocation(line: 124, column: 9, scope: !358)
!366 = !DILocalVariable(name: "msg", scope: !367, file: !284, line: 125, type: !170)
!367 = distinct !DILexicalBlock(scope: !357, file: !284, line: 124, column: 72)
!368 = !DILocation(line: 125, column: 19, scope: !367)
!369 = !DILocation(line: 126, column: 11, scope: !370)
!370 = distinct !DILexicalBlock(scope: !367, file: !284, line: 126, column: 11)
!371 = !DILocation(line: 126, column: 18, scope: !370)
!372 = !DILocation(line: 126, column: 15, scope: !370)
!373 = !DILocation(line: 126, column: 11, scope: !367)
!374 = !DILocation(line: 127, column: 22, scope: !370)
!375 = !DILocation(line: 127, column: 9, scope: !370)
!376 = !DILocation(line: 129, column: 30, scope: !367)
!377 = !DILocation(line: 129, column: 36, scope: !367)
!378 = !DILocation(line: 129, column: 41, scope: !367)
!379 = !DILocation(line: 129, column: 17, scope: !367)
!380 = !DILocation(line: 129, column: 15, scope: !367)
!381 = !DILocation(line: 131, column: 11, scope: !382)
!382 = distinct !DILexicalBlock(scope: !367, file: !284, line: 131, column: 11)
!383 = !DILocation(line: 131, column: 23, scope: !382)
!384 = !DILocation(line: 131, column: 11, scope: !367)
!385 = !DILocation(line: 132, column: 9, scope: !382)
!386 = !DILocation(line: 134, column: 31, scope: !367)
!387 = !DILocation(line: 134, column: 43, scope: !367)
!388 = !DILocation(line: 134, column: 29, scope: !367)
!389 = !DILocation(line: 134, column: 25, scope: !367)
!390 = !DILocation(line: 134, column: 7, scope: !367)
!391 = !DILocation(line: 134, column: 23, scope: !367)
!392 = !DILocation(line: 135, column: 31, scope: !367)
!393 = !DILocation(line: 135, column: 43, scope: !367)
!394 = !DILocation(line: 135, column: 29, scope: !367)
!395 = !DILocation(line: 135, column: 25, scope: !367)
!396 = !DILocation(line: 135, column: 7, scope: !367)
!397 = !DILocation(line: 135, column: 23, scope: !367)
!398 = !DILocation(line: 136, column: 18, scope: !367)
!399 = !DILocation(line: 137, column: 28, scope: !367)
!400 = !DILocation(line: 137, column: 52, scope: !367)
!401 = !DILocation(line: 137, column: 61, scope: !367)
!402 = !DILocation(line: 137, column: 38, scope: !367)
!403 = !DILocation(line: 137, column: 7, scope: !367)
!404 = !DILocation(line: 139, column: 5, scope: !367)
!405 = !DILocation(line: 139, column: 24, scope: !406)
!406 = distinct !DILexicalBlock(scope: !357, file: !284, line: 139, column: 16)
!407 = !DILocation(line: 139, column: 29, scope: !406)
!408 = !DILocation(line: 139, column: 16, scope: !406)
!409 = !DILocation(line: 139, column: 47, scope: !406)
!410 = !DILocation(line: 140, column: 24, scope: !406)
!411 = !DILocation(line: 140, column: 29, scope: !406)
!412 = !DILocation(line: 140, column: 16, scope: !406)
!413 = !DILocation(line: 139, column: 16, scope: !357)
!414 = !DILocalVariable(name: "msg", scope: !415, file: !284, line: 141, type: !170)
!415 = distinct !DILexicalBlock(scope: !406, file: !284, line: 140, column: 47)
!416 = !DILocation(line: 141, column: 19, scope: !415)
!417 = !DILocation(line: 144, column: 11, scope: !418)
!418 = distinct !DILexicalBlock(scope: !415, file: !284, line: 144, column: 11)
!419 = !DILocation(line: 144, column: 13, scope: !418)
!420 = !DILocation(line: 144, column: 20, scope: !418)
!421 = !DILocation(line: 144, column: 17, scope: !418)
!422 = !DILocation(line: 144, column: 11, scope: !415)
!423 = !DILocation(line: 145, column: 22, scope: !418)
!424 = !DILocation(line: 145, column: 9, scope: !418)
!425 = !DILocation(line: 147, column: 8, scope: !415)
!426 = !DILocation(line: 148, column: 32, scope: !415)
!427 = !DILocation(line: 148, column: 38, scope: !415)
!428 = !DILocation(line: 148, column: 43, scope: !415)
!429 = !DILocation(line: 148, column: 19, scope: !415)
!430 = !DILocation(line: 148, column: 17, scope: !415)
!431 = !DILocation(line: 149, column: 32, scope: !415)
!432 = !DILocation(line: 149, column: 38, scope: !415)
!433 = !DILocation(line: 149, column: 43, scope: !415)
!434 = !DILocation(line: 149, column: 19, scope: !415)
!435 = !DILocation(line: 149, column: 17, scope: !415)
!436 = !DILocation(line: 150, column: 30, scope: !415)
!437 = !DILocation(line: 150, column: 36, scope: !415)
!438 = !DILocation(line: 150, column: 41, scope: !415)
!439 = !DILocation(line: 150, column: 17, scope: !415)
!440 = !DILocation(line: 150, column: 15, scope: !415)
!441 = !DILocation(line: 152, column: 12, scope: !442)
!442 = distinct !DILexicalBlock(scope: !415, file: !284, line: 152, column: 11)
!443 = !DILocation(line: 152, column: 24, scope: !442)
!444 = !DILocation(line: 152, column: 22, scope: !442)
!445 = !DILocation(line: 152, column: 35, scope: !442)
!446 = !DILocation(line: 152, column: 39, scope: !442)
!447 = !DILocation(line: 152, column: 49, scope: !442)
!448 = !DILocation(line: 152, column: 57, scope: !442)
!449 = !DILocation(line: 152, column: 67, scope: !442)
!450 = !DILocation(line: 152, column: 54, scope: !442)
!451 = !DILocation(line: 153, column: 9, scope: !442)
!452 = !DILocation(line: 155, column: 27, scope: !415)
!453 = !DILocation(line: 155, column: 38, scope: !415)
!454 = !DILocation(line: 155, column: 48, scope: !415)
!455 = !DILocation(line: 155, column: 16, scope: !415)
!456 = !DILocation(line: 155, column: 14, scope: !415)
!457 = !DILocation(line: 157, column: 11, scope: !458)
!458 = distinct !DILexicalBlock(scope: !415, file: !284, line: 157, column: 11)
!459 = !DILocation(line: 157, column: 25, scope: !458)
!460 = !DILocation(line: 157, column: 23, scope: !458)
!461 = !DILocation(line: 157, column: 35, scope: !458)
!462 = !DILocation(line: 157, column: 11, scope: !415)
!463 = !DILocation(line: 158, column: 9, scope: !458)
!464 = !DILocation(line: 160, column: 14, scope: !465)
!465 = distinct !DILexicalBlock(scope: !415, file: !284, line: 160, column: 7)
!466 = !DILocation(line: 160, column: 12, scope: !465)
!467 = !DILocation(line: 160, column: 19, scope: !468)
!468 = distinct !DILexicalBlock(scope: !465, file: !284, line: 160, column: 7)
!469 = !DILocation(line: 160, column: 23, scope: !468)
!470 = !DILocation(line: 160, column: 21, scope: !468)
!471 = !DILocation(line: 160, column: 7, scope: !465)
!472 = !DILocation(line: 161, column: 33, scope: !473)
!473 = distinct !DILexicalBlock(scope: !468, file: !284, line: 160, column: 36)
!474 = !DILocation(line: 161, column: 45, scope: !473)
!475 = !DILocation(line: 161, column: 31, scope: !473)
!476 = !DILocation(line: 161, column: 27, scope: !473)
!477 = !DILocation(line: 161, column: 9, scope: !473)
!478 = !DILocation(line: 161, column: 25, scope: !473)
!479 = !DILocation(line: 162, column: 33, scope: !473)
!480 = !DILocation(line: 162, column: 45, scope: !473)
!481 = !DILocation(line: 162, column: 31, scope: !473)
!482 = !DILocation(line: 162, column: 27, scope: !473)
!483 = !DILocation(line: 162, column: 9, scope: !473)
!484 = !DILocation(line: 162, column: 25, scope: !473)
!485 = !DILocation(line: 163, column: 20, scope: !473)
!486 = !DILocation(line: 165, column: 30, scope: !473)
!487 = !DILocation(line: 165, column: 54, scope: !473)
!488 = !DILocation(line: 165, column: 63, scope: !473)
!489 = !DILocation(line: 165, column: 40, scope: !473)
!490 = !DILocation(line: 165, column: 9, scope: !473)
!491 = !DILocation(line: 160, column: 32, scope: !468)
!492 = !DILocation(line: 160, column: 7, scope: !468)
!493 = distinct !{!493, !471, !494}
!494 = !DILocation(line: 167, column: 7, scope: !465)
!495 = !DILocation(line: 168, column: 24, scope: !496)
!496 = distinct !DILexicalBlock(scope: !406, file: !284, line: 168, column: 16)
!497 = !DILocation(line: 168, column: 29, scope: !496)
!498 = !DILocation(line: 168, column: 16, scope: !496)
!499 = !DILocation(line: 168, column: 48, scope: !496)
!500 = !DILocation(line: 169, column: 24, scope: !496)
!501 = !DILocation(line: 169, column: 29, scope: !496)
!502 = !DILocation(line: 169, column: 16, scope: !496)
!503 = !DILocation(line: 168, column: 16, scope: !406)
!504 = !DILocalVariable(name: "msg", scope: !505, file: !284, line: 170, type: !170)
!505 = distinct !DILexicalBlock(scope: !496, file: !284, line: 169, column: 48)
!506 = !DILocation(line: 170, column: 19, scope: !505)
!507 = !DILocation(line: 173, column: 11, scope: !508)
!508 = distinct !DILexicalBlock(scope: !505, file: !284, line: 173, column: 11)
!509 = !DILocation(line: 173, column: 13, scope: !508)
!510 = !DILocation(line: 173, column: 20, scope: !508)
!511 = !DILocation(line: 173, column: 17, scope: !508)
!512 = !DILocation(line: 173, column: 11, scope: !505)
!513 = !DILocation(line: 174, column: 22, scope: !508)
!514 = !DILocation(line: 174, column: 9, scope: !508)
!515 = !DILocation(line: 176, column: 11, scope: !516)
!516 = distinct !DILexicalBlock(scope: !505, file: !284, line: 176, column: 11)
!517 = !DILocation(line: 176, column: 21, scope: !516)
!518 = !DILocation(line: 176, column: 11, scope: !505)
!519 = !DILocation(line: 177, column: 9, scope: !516)
!520 = !DILocation(line: 179, column: 8, scope: !505)
!521 = !DILocation(line: 180, column: 32, scope: !505)
!522 = !DILocation(line: 180, column: 38, scope: !505)
!523 = !DILocation(line: 180, column: 43, scope: !505)
!524 = !DILocation(line: 180, column: 19, scope: !505)
!525 = !DILocation(line: 180, column: 17, scope: !505)
!526 = !DILocation(line: 181, column: 35, scope: !505)
!527 = !DILocation(line: 181, column: 41, scope: !505)
!528 = !DILocation(line: 181, column: 46, scope: !505)
!529 = !DILocation(line: 181, column: 22, scope: !505)
!530 = !DILocation(line: 181, column: 20, scope: !505)
!531 = !DILocation(line: 183, column: 11, scope: !532)
!532 = distinct !DILexicalBlock(scope: !505, file: !284, line: 183, column: 11)
!533 = !DILocation(line: 183, column: 21, scope: !532)
!534 = !DILocation(line: 183, column: 11, scope: !505)
!535 = !DILocation(line: 184, column: 9, scope: !532)
!536 = !DILocation(line: 187, column: 11, scope: !537)
!537 = distinct !DILexicalBlock(scope: !505, file: !284, line: 187, column: 11)
!538 = !DILocation(line: 187, column: 24, scope: !537)
!539 = !DILocation(line: 187, column: 11, scope: !505)
!540 = !DILocation(line: 188, column: 9, scope: !537)
!541 = !DILocation(line: 191, column: 24, scope: !542)
!542 = distinct !DILexicalBlock(scope: !496, file: !284, line: 191, column: 16)
!543 = !DILocation(line: 191, column: 29, scope: !542)
!544 = !DILocation(line: 191, column: 16, scope: !542)
!545 = !DILocation(line: 191, column: 48, scope: !542)
!546 = !DILocation(line: 192, column: 24, scope: !542)
!547 = !DILocation(line: 192, column: 29, scope: !542)
!548 = !DILocation(line: 192, column: 16, scope: !542)
!549 = !DILocation(line: 191, column: 16, scope: !496)
!550 = !DILocalVariable(name: "msg", scope: !551, file: !284, line: 193, type: !170)
!551 = distinct !DILexicalBlock(scope: !542, file: !284, line: 192, column: 48)
!552 = !DILocation(line: 193, column: 19, scope: !551)
!553 = !DILocation(line: 196, column: 11, scope: !554)
!554 = distinct !DILexicalBlock(scope: !551, file: !284, line: 196, column: 11)
!555 = !DILocation(line: 196, column: 18, scope: !554)
!556 = !DILocation(line: 196, column: 15, scope: !554)
!557 = !DILocation(line: 196, column: 11, scope: !551)
!558 = !DILocation(line: 197, column: 22, scope: !554)
!559 = !DILocation(line: 197, column: 9, scope: !554)
!560 = !DILocation(line: 199, column: 36, scope: !551)
!561 = !DILocation(line: 199, column: 42, scope: !551)
!562 = !DILocation(line: 199, column: 47, scope: !551)
!563 = !DILocation(line: 199, column: 23, scope: !551)
!564 = !DILocation(line: 199, column: 21, scope: !551)
!565 = !DILocation(line: 200, column: 5, scope: !551)
!566 = !DILocation(line: 200, column: 24, scope: !567)
!567 = distinct !DILexicalBlock(scope: !542, file: !284, line: 200, column: 16)
!568 = !DILocation(line: 200, column: 29, scope: !567)
!569 = !DILocation(line: 200, column: 16, scope: !567)
!570 = !DILocation(line: 200, column: 49, scope: !567)
!571 = !DILocation(line: 201, column: 24, scope: !567)
!572 = !DILocation(line: 201, column: 29, scope: !567)
!573 = !DILocation(line: 201, column: 16, scope: !567)
!574 = !DILocation(line: 200, column: 16, scope: !542)
!575 = !DILocation(line: 202, column: 23, scope: !576)
!576 = distinct !DILexicalBlock(scope: !567, file: !284, line: 201, column: 49)
!577 = !DILocation(line: 203, column: 8, scope: !576)
!578 = !DILocation(line: 204, column: 5, scope: !576)
!579 = !DILocation(line: 204, column: 24, scope: !580)
!580 = distinct !DILexicalBlock(scope: !567, file: !284, line: 204, column: 16)
!581 = !DILocation(line: 204, column: 29, scope: !580)
!582 = !DILocation(line: 204, column: 16, scope: !580)
!583 = !DILocation(line: 204, column: 54, scope: !580)
!584 = !DILocation(line: 205, column: 24, scope: !580)
!585 = !DILocation(line: 205, column: 29, scope: !580)
!586 = !DILocation(line: 205, column: 16, scope: !580)
!587 = !DILocation(line: 204, column: 16, scope: !567)
!588 = !DILocation(line: 206, column: 28, scope: !589)
!589 = distinct !DILexicalBlock(scope: !580, file: !284, line: 205, column: 54)
!590 = !DILocation(line: 207, column: 8, scope: !589)
!591 = !DILocation(line: 208, column: 5, scope: !589)
!592 = !DILocation(line: 208, column: 24, scope: !593)
!593 = distinct !DILexicalBlock(scope: !580, file: !284, line: 208, column: 16)
!594 = !DILocation(line: 208, column: 29, scope: !593)
!595 = !DILocation(line: 208, column: 16, scope: !593)
!596 = !DILocation(line: 208, column: 46, scope: !593)
!597 = !DILocation(line: 208, column: 57, scope: !593)
!598 = !DILocation(line: 208, column: 62, scope: !593)
!599 = !DILocation(line: 208, column: 49, scope: !593)
!600 = !DILocation(line: 208, column: 16, scope: !580)
!601 = !DILocation(line: 209, column: 15, scope: !602)
!602 = distinct !DILexicalBlock(scope: !593, file: !284, line: 208, column: 79)
!603 = !DILocation(line: 210, column: 8, scope: !602)
!604 = !DILocation(line: 211, column: 5, scope: !602)
!605 = !DILocation(line: 211, column: 24, scope: !606)
!606 = distinct !DILexicalBlock(scope: !593, file: !284, line: 211, column: 16)
!607 = !DILocation(line: 211, column: 29, scope: !606)
!608 = !DILocation(line: 211, column: 16, scope: !606)
!609 = !DILocation(line: 211, column: 48, scope: !606)
!610 = !DILocation(line: 211, column: 59, scope: !606)
!611 = !DILocation(line: 211, column: 64, scope: !606)
!612 = !DILocation(line: 211, column: 51, scope: !606)
!613 = !DILocation(line: 211, column: 16, scope: !593)
!614 = !DILocation(line: 212, column: 9, scope: !615)
!615 = distinct !DILexicalBlock(scope: !606, file: !284, line: 211, column: 83)
!616 = !DILocation(line: 213, column: 5, scope: !615)
!617 = !DILocation(line: 213, column: 24, scope: !618)
!618 = distinct !DILexicalBlock(scope: !606, file: !284, line: 213, column: 16)
!619 = !DILocation(line: 213, column: 29, scope: !618)
!620 = !DILocation(line: 213, column: 16, scope: !618)
!621 = !DILocation(line: 213, column: 47, scope: !618)
!622 = !DILocation(line: 214, column: 24, scope: !618)
!623 = !DILocation(line: 214, column: 29, scope: !618)
!624 = !DILocation(line: 214, column: 16, scope: !618)
!625 = !DILocation(line: 213, column: 16, scope: !606)
!626 = !DILocalVariable(name: "msg", scope: !627, file: !284, line: 215, type: !170)
!627 = distinct !DILexicalBlock(scope: !618, file: !284, line: 214, column: 47)
!628 = !DILocation(line: 215, column: 19, scope: !627)
!629 = !DILocation(line: 216, column: 11, scope: !630)
!630 = distinct !DILexicalBlock(scope: !627, file: !284, line: 216, column: 11)
!631 = !DILocation(line: 216, column: 18, scope: !630)
!632 = !DILocation(line: 216, column: 15, scope: !630)
!633 = !DILocation(line: 216, column: 11, scope: !627)
!634 = !DILocation(line: 217, column: 22, scope: !630)
!635 = !DILocation(line: 217, column: 9, scope: !630)
!636 = !DILocation(line: 219, column: 30, scope: !627)
!637 = !DILocation(line: 219, column: 36, scope: !627)
!638 = !DILocation(line: 219, column: 41, scope: !627)
!639 = !DILocation(line: 219, column: 17, scope: !627)
!640 = !DILocation(line: 219, column: 15, scope: !627)
!641 = !DILocation(line: 220, column: 5, scope: !627)
!642 = !DILocation(line: 222, column: 28, scope: !643)
!643 = distinct !DILexicalBlock(scope: !618, file: !284, line: 220, column: 12)
!644 = !DILocation(line: 222, column: 38, scope: !643)
!645 = !DILocation(line: 222, column: 44, scope: !643)
!646 = !DILocation(line: 222, column: 7, scope: !643)
!647 = distinct !{!647, !352, !648}
!648 = !DILocation(line: 224, column: 3, scope: !283)
!649 = !DILocation(line: 226, column: 33, scope: !283)
!650 = !DILocation(line: 226, column: 42, scope: !283)
!651 = !DILocation(line: 226, column: 32, scope: !283)
!652 = !DILocation(line: 226, column: 47, scope: !283)
!653 = !DILocation(line: 226, column: 25, scope: !283)
!654 = !DILocation(line: 226, column: 16, scope: !283)
!655 = !DILocation(line: 226, column: 14, scope: !283)
!656 = !DILocation(line: 227, column: 20, scope: !283)
!657 = !DILocation(line: 227, column: 3, scope: !283)
!658 = !DILocation(line: 228, column: 10, scope: !283)
!659 = !DILocation(line: 228, column: 3, scope: !283)
!660 = !DILocation(line: 228, column: 32, scope: !283)
!661 = !DILocation(line: 228, column: 41, scope: !283)
!662 = !DILocation(line: 229, column: 3, scope: !283)
!663 = !DILocation(line: 229, column: 14, scope: !283)
!664 = !DILocation(line: 229, column: 24, scope: !283)
!665 = !DILocation(line: 231, column: 14, scope: !283)
!666 = !DILocation(line: 231, column: 4, scope: !283)
!667 = !DILocation(line: 231, column: 12, scope: !283)
!668 = !DILocation(line: 232, column: 14, scope: !283)
!669 = !DILocation(line: 232, column: 4, scope: !283)
!670 = !DILocation(line: 232, column: 12, scope: !283)
!671 = !DILocation(line: 234, column: 17, scope: !283)
!672 = !DILocation(line: 234, column: 28, scope: !283)
!673 = !DILocation(line: 234, column: 42, scope: !283)
!674 = !DILocation(line: 234, column: 57, scope: !283)
!675 = !DILocation(line: 235, column: 17, scope: !283)
!676 = !DILocation(line: 235, column: 39, scope: !283)
!677 = !DILocation(line: 234, column: 3, scope: !283)
!678 = !DILocation(line: 236, column: 1, scope: !283)
!679 = distinct !DISubprogram(name: "__streq", scope: !284, file: !284, line: 53, type: !680, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !187, retainedNodes: !4)
!680 = !DISubroutineType(types: !681)
!681 = !{!44, !170, !170}
!682 = !DILocalVariable(name: "a", arg: 1, scope: !679, file: !284, line: 53, type: !170)
!683 = !DILocation(line: 53, column: 32, scope: !679)
!684 = !DILocalVariable(name: "b", arg: 2, scope: !679, file: !284, line: 53, type: !170)
!685 = !DILocation(line: 53, column: 47, scope: !679)
!686 = !DILocation(line: 54, column: 3, scope: !679)
!687 = !DILocation(line: 54, column: 11, scope: !679)
!688 = !DILocation(line: 54, column: 10, scope: !679)
!689 = !DILocation(line: 54, column: 17, scope: !679)
!690 = !DILocation(line: 54, column: 16, scope: !679)
!691 = !DILocation(line: 54, column: 13, scope: !679)
!692 = !DILocation(line: 55, column: 11, scope: !693)
!693 = distinct !DILexicalBlock(scope: !694, file: !284, line: 55, column: 9)
!694 = distinct !DILexicalBlock(scope: !679, file: !284, line: 54, column: 20)
!695 = !DILocation(line: 55, column: 10, scope: !693)
!696 = !DILocation(line: 55, column: 9, scope: !694)
!697 = !DILocation(line: 56, column: 7, scope: !693)
!698 = !DILocation(line: 57, column: 6, scope: !694)
!699 = !DILocation(line: 58, column: 6, scope: !694)
!700 = distinct !{!700, !686, !701}
!701 = !DILocation(line: 59, column: 3, scope: !679)
!702 = !DILocation(line: 60, column: 3, scope: !679)
!703 = !DILocation(line: 61, column: 1, scope: !679)
!704 = distinct !DISubprogram(name: "__emit_error", scope: !284, file: !284, line: 23, type: !705, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !187, retainedNodes: !4)
!705 = !DISubroutineType(types: !706)
!706 = !{null, !170}
!707 = !DILocalVariable(name: "msg", arg: 1, scope: !704, file: !284, line: 23, type: !170)
!708 = !DILocation(line: 23, column: 38, scope: !704)
!709 = !DILocation(line: 24, column: 41, scope: !704)
!710 = !DILocation(line: 24, column: 3, scope: !704)
!711 = distinct !DISubprogram(name: "__str_to_int", scope: !284, file: !284, line: 30, type: !712, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !187, retainedNodes: !4)
!712 = !DISubroutineType(types: !713)
!713 = !{!48, !22, !170}
!714 = !DILocalVariable(name: "s", arg: 1, scope: !711, file: !284, line: 30, type: !22)
!715 = !DILocation(line: 30, column: 36, scope: !711)
!716 = !DILocalVariable(name: "error_msg", arg: 2, scope: !711, file: !284, line: 30, type: !170)
!717 = !DILocation(line: 30, column: 51, scope: !711)
!718 = !DILocalVariable(name: "res", scope: !711, file: !284, line: 31, type: !48)
!719 = !DILocation(line: 31, column: 12, scope: !711)
!720 = !DILocalVariable(name: "c", scope: !711, file: !284, line: 32, type: !23)
!721 = !DILocation(line: 32, column: 8, scope: !711)
!722 = !DILocation(line: 34, column: 9, scope: !723)
!723 = distinct !DILexicalBlock(scope: !711, file: !284, line: 34, column: 7)
!724 = !DILocation(line: 34, column: 8, scope: !723)
!725 = !DILocation(line: 34, column: 7, scope: !711)
!726 = !DILocation(line: 34, column: 25, scope: !723)
!727 = !DILocation(line: 34, column: 12, scope: !723)
!728 = !DILocation(line: 36, column: 3, scope: !711)
!729 = !DILocation(line: 36, column: 17, scope: !711)
!730 = !DILocation(line: 36, column: 15, scope: !711)
!731 = !DILocation(line: 36, column: 13, scope: !711)
!732 = !DILocation(line: 37, column: 9, scope: !733)
!733 = distinct !DILexicalBlock(scope: !734, file: !284, line: 37, column: 9)
!734 = distinct !DILexicalBlock(scope: !711, file: !284, line: 36, column: 22)
!735 = !DILocation(line: 37, column: 11, scope: !733)
!736 = !DILocation(line: 37, column: 9, scope: !734)
!737 = !DILocation(line: 39, column: 16, scope: !738)
!738 = distinct !DILexicalBlock(scope: !733, file: !284, line: 39, column: 16)
!739 = !DILocation(line: 39, column: 17, scope: !738)
!740 = !DILocation(line: 39, column: 23, scope: !738)
!741 = !DILocation(line: 39, column: 26, scope: !738)
!742 = !DILocation(line: 39, column: 27, scope: !738)
!743 = !DILocation(line: 39, column: 16, scope: !733)
!744 = !DILocation(line: 40, column: 13, scope: !745)
!745 = distinct !DILexicalBlock(scope: !738, file: !284, line: 39, column: 34)
!746 = !DILocation(line: 40, column: 16, scope: !745)
!747 = !DILocation(line: 40, column: 23, scope: !745)
!748 = !DILocation(line: 40, column: 25, scope: !745)
!749 = !DILocation(line: 40, column: 22, scope: !745)
!750 = !DILocation(line: 40, column: 20, scope: !745)
!751 = !DILocation(line: 40, column: 11, scope: !745)
!752 = !DILocation(line: 41, column: 5, scope: !745)
!753 = !DILocation(line: 42, column: 20, scope: !754)
!754 = distinct !DILexicalBlock(scope: !738, file: !284, line: 41, column: 12)
!755 = !DILocation(line: 42, column: 7, scope: !754)
!756 = distinct !{!756, !728, !757}
!757 = !DILocation(line: 44, column: 3, scope: !711)
!758 = !DILocation(line: 45, column: 10, scope: !711)
!759 = !DILocation(line: 45, column: 3, scope: !711)
!760 = distinct !DISubprogram(name: "__add_arg", scope: !284, file: !284, line: 76, type: !761, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !187, retainedNodes: !4)
!761 = !DISubroutineType(types: !762)
!762 = !{null, !72, !190, !22, !44}
!763 = !DILocalVariable(name: "argc", arg: 1, scope: !760, file: !284, line: 76, type: !72)
!764 = !DILocation(line: 76, column: 28, scope: !760)
!765 = !DILocalVariable(name: "argv", arg: 2, scope: !760, file: !284, line: 76, type: !190)
!766 = !DILocation(line: 76, column: 41, scope: !760)
!767 = !DILocalVariable(name: "arg", arg: 3, scope: !760, file: !284, line: 76, type: !22)
!768 = !DILocation(line: 76, column: 53, scope: !760)
!769 = !DILocalVariable(name: "argcMax", arg: 4, scope: !760, file: !284, line: 76, type: !44)
!770 = !DILocation(line: 76, column: 62, scope: !760)
!771 = !DILocation(line: 77, column: 8, scope: !772)
!772 = distinct !DILexicalBlock(scope: !760, file: !284, line: 77, column: 7)
!773 = !DILocation(line: 77, column: 7, scope: !772)
!774 = !DILocation(line: 77, column: 14, scope: !772)
!775 = !DILocation(line: 77, column: 12, scope: !772)
!776 = !DILocation(line: 77, column: 7, scope: !760)
!777 = !DILocation(line: 78, column: 5, scope: !778)
!778 = distinct !DILexicalBlock(scope: !772, file: !284, line: 77, column: 23)
!779 = !DILocation(line: 79, column: 3, scope: !778)
!780 = !DILocation(line: 80, column: 19, scope: !781)
!781 = distinct !DILexicalBlock(scope: !772, file: !284, line: 79, column: 10)
!782 = !DILocation(line: 80, column: 5, scope: !781)
!783 = !DILocation(line: 80, column: 11, scope: !781)
!784 = !DILocation(line: 80, column: 10, scope: !781)
!785 = !DILocation(line: 80, column: 17, scope: !781)
!786 = !DILocation(line: 81, column: 7, scope: !781)
!787 = !DILocation(line: 81, column: 12, scope: !781)
!788 = !DILocation(line: 83, column: 1, scope: !760)
!789 = distinct !DISubprogram(name: "__get_sym_str", scope: !284, file: !284, line: 63, type: !790, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !187, retainedNodes: !4)
!790 = !DISubroutineType(types: !791)
!791 = !{!22, !44, !22}
!792 = !DILocalVariable(name: "numChars", arg: 1, scope: !789, file: !284, line: 63, type: !44)
!793 = !DILocation(line: 63, column: 32, scope: !789)
!794 = !DILocalVariable(name: "name", arg: 2, scope: !789, file: !284, line: 63, type: !22)
!795 = !DILocation(line: 63, column: 48, scope: !789)
!796 = !DILocalVariable(name: "i", scope: !789, file: !284, line: 64, type: !44)
!797 = !DILocation(line: 64, column: 7, scope: !789)
!798 = !DILocalVariable(name: "s", scope: !789, file: !284, line: 65, type: !22)
!799 = !DILocation(line: 65, column: 9, scope: !789)
!800 = !DILocation(line: 65, column: 20, scope: !789)
!801 = !DILocation(line: 65, column: 28, scope: !789)
!802 = !DILocation(line: 65, column: 13, scope: !789)
!803 = !DILocation(line: 66, column: 20, scope: !789)
!804 = !DILocation(line: 66, column: 3, scope: !789)
!805 = !DILocation(line: 67, column: 22, scope: !789)
!806 = !DILocation(line: 67, column: 25, scope: !789)
!807 = !DILocation(line: 67, column: 33, scope: !789)
!808 = !DILocation(line: 67, column: 37, scope: !789)
!809 = !DILocation(line: 67, column: 3, scope: !789)
!810 = !DILocation(line: 69, column: 9, scope: !811)
!811 = distinct !DILexicalBlock(scope: !789, file: !284, line: 69, column: 3)
!812 = !DILocation(line: 69, column: 8, scope: !811)
!813 = !DILocation(line: 69, column: 13, scope: !814)
!814 = distinct !DILexicalBlock(scope: !811, file: !284, line: 69, column: 3)
!815 = !DILocation(line: 69, column: 15, scope: !814)
!816 = !DILocation(line: 69, column: 14, scope: !814)
!817 = !DILocation(line: 0, scope: !789)
!818 = !DILocation(line: 69, column: 3, scope: !811)
!819 = !DILocation(line: 70, column: 40, scope: !814)
!820 = !DILocation(line: 70, column: 42, scope: !814)
!821 = !DILocation(line: 70, column: 30, scope: !814)
!822 = !DILocation(line: 70, column: 5, scope: !814)
!823 = !DILocation(line: 69, column: 26, scope: !814)
!824 = !DILocation(line: 69, column: 3, scope: !814)
!825 = distinct !{!825, !818, !826}
!826 = !DILocation(line: 70, column: 45, scope: !811)
!827 = !DILocation(line: 72, column: 5, scope: !789)
!828 = !DILocation(line: 72, column: 3, scope: !789)
!829 = !DILocation(line: 72, column: 15, scope: !789)
!830 = !DILocation(line: 73, column: 10, scope: !789)
!831 = !DILocation(line: 73, column: 3, scope: !789)
!832 = distinct !DISubprogram(name: "__klee_posix_wrapper", scope: !284, file: !284, line: 243, type: !833, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !187, retainedNodes: !4)
!833 = !DISubroutineType(types: !834)
!834 = !{!44, !44, !190, !190}
!835 = !DILocalVariable(name: "argcPtr", arg: 1, scope: !832, file: !284, line: 243, type: !44)
!836 = !DILocation(line: 243, column: 30, scope: !832)
!837 = !DILocalVariable(name: "argvPtr", arg: 2, scope: !832, file: !284, line: 243, type: !190)
!838 = !DILocation(line: 243, column: 46, scope: !832)
!839 = !DILocalVariable(name: "envp", arg: 3, scope: !832, file: !284, line: 243, type: !190)
!840 = !DILocation(line: 243, column: 62, scope: !832)
!841 = !DILocation(line: 244, column: 3, scope: !832)
!842 = !DILocation(line: 245, column: 36, scope: !832)
!843 = !DILocation(line: 245, column: 45, scope: !832)
!844 = !DILocation(line: 245, column: 54, scope: !832)
!845 = !DILocation(line: 245, column: 10, scope: !832)
!846 = !DILocation(line: 245, column: 3, scope: !832)
!847 = distinct !DISubprogram(name: "__isprint", scope: !284, file: !284, line: 48, type: !848, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !187, retainedNodes: !4)
!848 = !DISubroutineType(types: !849)
!849 = !{!44, !171}
!850 = !DILocalVariable(name: "c", arg: 1, scope: !847, file: !284, line: 48, type: !171)
!851 = !DILocation(line: 48, column: 33, scope: !847)
!852 = !DILocation(line: 50, column: 17, scope: !847)
!853 = !DILocation(line: 50, column: 14, scope: !847)
!854 = !DILocation(line: 50, column: 19, scope: !847)
!855 = !DILocation(line: 50, column: 22, scope: !847)
!856 = !DILocation(line: 50, column: 24, scope: !847)
!857 = !DILocation(line: 0, scope: !847)
!858 = !DILocation(line: 50, column: 3, scope: !847)
!859 = distinct !DISubprogram(name: "cgc_transmit_all", scope: !860, file: !860, line: 4, type: !861, scopeLine: 4, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !191, retainedNodes: !4)
!860 = !DIFile(filename: "challenges/Palindrome/lib/libc.c", directory: "/home/haoxin/haoxin-data/smu-research/cgc/cgc-env-64/cb-multios")
!861 = !DISubroutineType(types: !862)
!862 = !{!44, !44, !170, !863}
!863 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !864)
!864 = !DIDerivedType(tag: DW_TAG_typedef, name: "cgc_size_t", file: !865, line: 19, baseType: !32)
!865 = !DIFile(filename: "include/libcgc.h", directory: "/home/haoxin/haoxin-data/smu-research/cgc/cgc-env-64/cb-multios")
!866 = !DILocalVariable(name: "fd", arg: 1, scope: !859, file: !860, line: 4, type: !44)
!867 = !DILocation(line: 4, column: 26, scope: !859)
!868 = !DILocalVariable(name: "buf", arg: 2, scope: !859, file: !860, line: 4, type: !170)
!869 = !DILocation(line: 4, column: 42, scope: !859)
!870 = !DILocalVariable(name: "size", arg: 3, scope: !859, file: !860, line: 4, type: !863)
!871 = !DILocation(line: 4, column: 64, scope: !859)
!872 = !DILocalVariable(name: "sent", scope: !859, file: !860, line: 5, type: !864)
!873 = !DILocation(line: 5, column: 16, scope: !859)
!874 = !DILocalVariable(name: "sent_now", scope: !859, file: !860, line: 6, type: !864)
!875 = !DILocation(line: 6, column: 16, scope: !859)
!876 = !DILocalVariable(name: "ret", scope: !859, file: !860, line: 7, type: !44)
!877 = !DILocation(line: 7, column: 9, scope: !859)
!878 = !DILocation(line: 9, column: 10, scope: !879)
!879 = distinct !DILexicalBlock(scope: !859, file: !860, line: 9, column: 9)
!880 = !DILocation(line: 9, column: 9, scope: !859)
!881 = !DILocation(line: 10, column: 9, scope: !879)
!882 = !DILocation(line: 12, column: 10, scope: !883)
!883 = distinct !DILexicalBlock(scope: !859, file: !860, line: 12, column: 9)
!884 = !DILocation(line: 12, column: 9, scope: !859)
!885 = !DILocation(line: 13, column: 9, scope: !883)
!886 = !DILocation(line: 15, column: 5, scope: !859)
!887 = !DILocation(line: 15, column: 12, scope: !859)
!888 = !DILocation(line: 15, column: 19, scope: !859)
!889 = !DILocation(line: 15, column: 17, scope: !859)
!890 = !DILocation(line: 16, column: 28, scope: !891)
!891 = distinct !DILexicalBlock(scope: !859, file: !860, line: 15, column: 25)
!892 = !DILocation(line: 16, column: 32, scope: !891)
!893 = !DILocation(line: 16, column: 38, scope: !891)
!894 = !DILocation(line: 16, column: 36, scope: !891)
!895 = !DILocation(line: 16, column: 44, scope: !891)
!896 = !DILocation(line: 16, column: 51, scope: !891)
!897 = !DILocation(line: 16, column: 49, scope: !891)
!898 = !DILocation(line: 16, column: 15, scope: !891)
!899 = !DILocation(line: 16, column: 13, scope: !891)
!900 = !DILocation(line: 17, column: 13, scope: !901)
!901 = distinct !DILexicalBlock(scope: !891, file: !860, line: 17, column: 13)
!902 = !DILocation(line: 17, column: 22, scope: !901)
!903 = !DILocation(line: 17, column: 13, scope: !891)
!904 = !DILocation(line: 20, column: 13, scope: !905)
!905 = distinct !DILexicalBlock(scope: !901, file: !860, line: 17, column: 28)
!906 = !DILocation(line: 22, column: 13, scope: !907)
!907 = distinct !DILexicalBlock(scope: !891, file: !860, line: 22, column: 13)
!908 = !DILocation(line: 22, column: 17, scope: !907)
!909 = !DILocation(line: 22, column: 13, scope: !891)
!910 = !DILocation(line: 23, column: 13, scope: !911)
!911 = distinct !DILexicalBlock(scope: !907, file: !860, line: 22, column: 23)
!912 = !DILocation(line: 25, column: 17, scope: !891)
!913 = !DILocation(line: 25, column: 14, scope: !891)
!914 = distinct !{!914, !886, !915}
!915 = !DILocation(line: 26, column: 5, scope: !859)
!916 = !DILocation(line: 28, column: 5, scope: !859)
!917 = !DILocation(line: 29, column: 1, scope: !859)
!918 = distinct !DISubprogram(name: "cgc_receive_delim", scope: !860, file: !860, line: 31, type: !919, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !191, retainedNodes: !4)
!919 = !DISubroutineType(types: !920)
!920 = !{!44, !44, !22, !863, !23}
!921 = !DILocalVariable(name: "fd", arg: 1, scope: !918, file: !860, line: 31, type: !44)
!922 = !DILocation(line: 31, column: 27, scope: !918)
!923 = !DILocalVariable(name: "buf", arg: 2, scope: !918, file: !860, line: 31, type: !22)
!924 = !DILocation(line: 31, column: 37, scope: !918)
!925 = !DILocalVariable(name: "size", arg: 3, scope: !918, file: !860, line: 31, type: !863)
!926 = !DILocation(line: 31, column: 59, scope: !918)
!927 = !DILocalVariable(name: "delim", arg: 4, scope: !918, file: !860, line: 31, type: !23)
!928 = !DILocation(line: 31, column: 70, scope: !918)
!929 = !DILocalVariable(name: "rx", scope: !918, file: !860, line: 32, type: !864)
!930 = !DILocation(line: 32, column: 16, scope: !918)
!931 = !DILocalVariable(name: "rx_now", scope: !918, file: !860, line: 33, type: !864)
!932 = !DILocation(line: 33, column: 16, scope: !918)
!933 = !DILocalVariable(name: "ret", scope: !918, file: !860, line: 34, type: !44)
!934 = !DILocation(line: 34, column: 9, scope: !918)
!935 = !DILocation(line: 36, column: 10, scope: !936)
!936 = distinct !DILexicalBlock(scope: !918, file: !860, line: 36, column: 9)
!937 = !DILocation(line: 36, column: 9, scope: !918)
!938 = !DILocation(line: 37, column: 9, scope: !936)
!939 = !DILocation(line: 39, column: 10, scope: !940)
!940 = distinct !DILexicalBlock(scope: !918, file: !860, line: 39, column: 9)
!941 = !DILocation(line: 39, column: 9, scope: !918)
!942 = !DILocation(line: 40, column: 9, scope: !940)
!943 = !DILocation(line: 42, column: 5, scope: !918)
!944 = !DILocation(line: 42, column: 12, scope: !918)
!945 = !DILocation(line: 42, column: 17, scope: !918)
!946 = !DILocation(line: 42, column: 15, scope: !918)
!947 = !DILocation(line: 43, column: 27, scope: !948)
!948 = distinct !DILexicalBlock(scope: !918, file: !860, line: 42, column: 23)
!949 = !DILocation(line: 43, column: 31, scope: !948)
!950 = !DILocation(line: 43, column: 37, scope: !948)
!951 = !DILocation(line: 43, column: 35, scope: !948)
!952 = !DILocation(line: 43, column: 15, scope: !948)
!953 = !DILocation(line: 43, column: 13, scope: !948)
!954 = !DILocation(line: 44, column: 13, scope: !955)
!955 = distinct !DILexicalBlock(scope: !948, file: !860, line: 44, column: 13)
!956 = !DILocation(line: 44, column: 20, scope: !955)
!957 = !DILocation(line: 44, column: 13, scope: !948)
!958 = !DILocation(line: 47, column: 13, scope: !959)
!959 = distinct !DILexicalBlock(scope: !955, file: !860, line: 44, column: 26)
!960 = !DILocation(line: 49, column: 13, scope: !961)
!961 = distinct !DILexicalBlock(scope: !948, file: !860, line: 49, column: 13)
!962 = !DILocation(line: 49, column: 17, scope: !961)
!963 = !DILocation(line: 49, column: 13, scope: !948)
!964 = !DILocation(line: 50, column: 13, scope: !965)
!965 = distinct !DILexicalBlock(scope: !961, file: !860, line: 49, column: 23)
!966 = !DILocation(line: 52, column: 13, scope: !967)
!967 = distinct !DILexicalBlock(scope: !948, file: !860, line: 52, column: 13)
!968 = !DILocation(line: 52, column: 17, scope: !967)
!969 = !DILocation(line: 52, column: 24, scope: !967)
!970 = !DILocation(line: 52, column: 21, scope: !967)
!971 = !DILocation(line: 52, column: 13, scope: !948)
!972 = !DILocation(line: 53, column: 12, scope: !973)
!973 = distinct !DILexicalBlock(scope: !967, file: !860, line: 52, column: 31)
!974 = !DILocation(line: 55, column: 15, scope: !948)
!975 = !DILocation(line: 55, column: 12, scope: !948)
!976 = distinct !{!976, !943, !977}
!977 = !DILocation(line: 56, column: 5, scope: !918)
!978 = !DILocation(line: 58, column: 5, scope: !918)
!979 = !DILocation(line: 59, column: 1, scope: !918)
!980 = distinct !DISubprogram(name: "main", scope: !981, file: !981, line: 14, type: !982, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !193, retainedNodes: !4)
!981 = !DIFile(filename: "challenges/Palindrome/src/service.c", directory: "/home/haoxin/haoxin-data/smu-research/cgc/cgc-env-64/cb-multios")
!982 = !DISubroutineType(types: !983)
!983 = !{!44, !44, !190}
!984 = !DILocalVariable(name: "cgc_argc", arg: 1, scope: !980, file: !981, line: 14, type: !44)
!985 = !DILocation(line: 14, column: 14, scope: !980)
!986 = !DILocalVariable(name: "cgc_argv", arg: 2, scope: !980, file: !981, line: 14, type: !190)
!987 = !DILocation(line: 14, column: 30, scope: !980)
!988 = !DILocalVariable(name: "r", scope: !980, file: !981, line: 15, type: !44)
!989 = !DILocation(line: 15, column: 9, scope: !980)
!990 = !DILocation(line: 17, column: 9, scope: !991)
!991 = distinct !DILexicalBlock(scope: !980, file: !981, line: 17, column: 9)
!992 = !DILocation(line: 17, column: 47, scope: !991)
!993 = !DILocation(line: 17, column: 9, scope: !980)
!994 = !DILocation(line: 18, column: 9, scope: !995)
!995 = distinct !DILexicalBlock(scope: !991, file: !981, line: 17, column: 53)
!996 = !DILocation(line: 21, column: 5, scope: !980)
!997 = !DILocation(line: 22, column: 13, scope: !998)
!998 = distinct !DILexicalBlock(scope: !999, file: !981, line: 22, column: 13)
!999 = distinct !DILexicalBlock(scope: !980, file: !981, line: 21, column: 13)
!1000 = !DILocation(line: 22, column: 53, scope: !998)
!1001 = !DILocation(line: 22, column: 13, scope: !999)
!1002 = !DILocation(line: 23, column: 13, scope: !1003)
!1003 = distinct !DILexicalBlock(scope: !998, file: !981, line: 22, column: 59)
!1004 = !DILocation(line: 25, column: 13, scope: !999)
!1005 = !DILocation(line: 25, column: 11, scope: !999)
!1006 = !DILocation(line: 26, column: 13, scope: !1007)
!1007 = distinct !DILexicalBlock(scope: !999, file: !981, line: 26, column: 13)
!1008 = !DILocation(line: 26, column: 15, scope: !1007)
!1009 = !DILocation(line: 26, column: 13, scope: !999)
!1010 = !DILocation(line: 27, column: 13, scope: !1011)
!1011 = distinct !DILexicalBlock(scope: !1007, file: !981, line: 26, column: 21)
!1012 = !DILocation(line: 29, column: 18, scope: !1013)
!1013 = distinct !DILexicalBlock(scope: !1007, file: !981, line: 29, column: 18)
!1014 = !DILocation(line: 29, column: 20, scope: !1013)
!1015 = !DILocation(line: 29, column: 18, scope: !1007)
!1016 = !DILocation(line: 30, column: 17, scope: !1017)
!1017 = distinct !DILexicalBlock(scope: !1018, file: !981, line: 30, column: 17)
!1018 = distinct !DILexicalBlock(scope: !1013, file: !981, line: 29, column: 25)
!1019 = !DILocation(line: 30, column: 55, scope: !1017)
!1020 = !DILocation(line: 30, column: 17, scope: !1018)
!1021 = !DILocation(line: 31, column: 17, scope: !1022)
!1022 = distinct !DILexicalBlock(scope: !1017, file: !981, line: 30, column: 61)
!1023 = !DILocation(line: 33, column: 9, scope: !1018)
!1024 = !DILocation(line: 35, column: 17, scope: !1025)
!1025 = distinct !DILexicalBlock(scope: !1026, file: !981, line: 35, column: 17)
!1026 = distinct !DILexicalBlock(scope: !1013, file: !981, line: 34, column: 13)
!1027 = !DILocation(line: 35, column: 57, scope: !1025)
!1028 = !DILocation(line: 35, column: 17, scope: !1026)
!1029 = !DILocation(line: 36, column: 17, scope: !1030)
!1030 = distinct !DILexicalBlock(scope: !1025, file: !981, line: 35, column: 63)
!1031 = distinct !{!1031, !996, !1032}
!1032 = !DILocation(line: 39, column: 5, scope: !980)
!1033 = !DILocation(line: 40, column: 5, scope: !980)
!1034 = distinct !DISubprogram(name: "cgc_check", scope: !981, file: !981, line: 43, type: !1035, scopeLine: 43, spFlags: DISPFlagDefinition, unit: !193, retainedNodes: !4)
!1035 = !DISubroutineType(types: !1036)
!1036 = !{!44}
!1037 = !DILocalVariable(name: "len", scope: !1034, file: !981, line: 44, type: !44)
!1038 = !DILocation(line: 44, column: 9, scope: !1034)
!1039 = !DILocalVariable(name: "i", scope: !1034, file: !981, line: 45, type: !44)
!1040 = !DILocation(line: 45, column: 9, scope: !1034)
!1041 = !DILocalVariable(name: "pal", scope: !1034, file: !981, line: 46, type: !44)
!1042 = !DILocation(line: 46, column: 9, scope: !1034)
!1043 = !DILocalVariable(name: "string", scope: !1034, file: !981, line: 47, type: !1044)
!1044 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 512, elements: !1045)
!1045 = !{!1046}
!1046 = !DISubrange(count: 64)
!1047 = !DILocation(line: 47, column: 10, scope: !1034)
!1048 = !DILocation(line: 48, column: 12, scope: !1049)
!1049 = distinct !DILexicalBlock(scope: !1034, file: !981, line: 48, column: 5)
!1050 = !DILocation(line: 48, column: 10, scope: !1049)
!1051 = !DILocation(line: 48, column: 17, scope: !1052)
!1052 = distinct !DILexicalBlock(scope: !1049, file: !981, line: 48, column: 5)
!1053 = !DILocation(line: 48, column: 19, scope: !1052)
!1054 = !DILocation(line: 48, column: 5, scope: !1049)
!1055 = !DILocation(line: 49, column: 16, scope: !1052)
!1056 = !DILocation(line: 49, column: 9, scope: !1052)
!1057 = !DILocation(line: 49, column: 19, scope: !1052)
!1058 = !DILocation(line: 48, column: 38, scope: !1052)
!1059 = !DILocation(line: 48, column: 5, scope: !1052)
!1060 = distinct !{!1060, !1054, !1061}
!1061 = !DILocation(line: 49, column: 21, scope: !1049)
!1062 = !DILocation(line: 54, column: 30, scope: !1063)
!1063 = distinct !DILexicalBlock(scope: !1034, file: !981, line: 54, column: 9)
!1064 = !DILocation(line: 54, column: 9, scope: !1063)
!1065 = !DILocation(line: 54, column: 49, scope: !1063)
!1066 = !DILocation(line: 54, column: 9, scope: !1034)
!1067 = !DILocation(line: 55, column: 9, scope: !1063)
!1068 = !DILocation(line: 57, column: 11, scope: !1069)
!1069 = distinct !DILexicalBlock(scope: !1034, file: !981, line: 57, column: 5)
!1070 = !DILocation(line: 57, column: 9, scope: !1069)
!1071 = !DILocation(line: 57, column: 23, scope: !1072)
!1072 = distinct !DILexicalBlock(scope: !1069, file: !981, line: 57, column: 5)
!1073 = !DILocation(line: 57, column: 16, scope: !1072)
!1074 = !DILocation(line: 57, column: 26, scope: !1072)
!1075 = !DILocation(line: 57, column: 5, scope: !1069)
!1076 = !DILocation(line: 58, column: 12, scope: !1077)
!1077 = distinct !DILexicalBlock(scope: !1072, file: !981, line: 57, column: 39)
!1078 = !DILocation(line: 59, column: 5, scope: !1077)
!1079 = !DILocation(line: 57, column: 36, scope: !1072)
!1080 = !DILocation(line: 57, column: 5, scope: !1072)
!1081 = distinct !{!1081, !1075, !1082}
!1082 = !DILocation(line: 59, column: 5, scope: !1069)
!1083 = !DILocalVariable(name: "steps", scope: !1034, file: !981, line: 60, type: !44)
!1084 = !DILocation(line: 60, column: 9, scope: !1034)
!1085 = !DILocation(line: 60, column: 17, scope: !1034)
!1086 = !DILocation(line: 61, column: 8, scope: !1087)
!1087 = distinct !DILexicalBlock(scope: !1034, file: !981, line: 61, column: 8)
!1088 = !DILocation(line: 61, column: 12, scope: !1087)
!1089 = !DILocation(line: 61, column: 16, scope: !1087)
!1090 = !DILocation(line: 61, column: 8, scope: !1034)
!1091 = !DILocation(line: 62, column: 14, scope: !1092)
!1092 = distinct !DILexicalBlock(scope: !1087, file: !981, line: 61, column: 21)
!1093 = !DILocation(line: 63, column: 5, scope: !1092)
!1094 = !DILocation(line: 64, column: 11, scope: !1095)
!1095 = distinct !DILexicalBlock(scope: !1034, file: !981, line: 64, column: 5)
!1096 = !DILocation(line: 64, column: 9, scope: !1095)
!1097 = !DILocation(line: 64, column: 16, scope: !1098)
!1098 = distinct !DILexicalBlock(scope: !1095, file: !981, line: 64, column: 5)
!1099 = !DILocation(line: 64, column: 21, scope: !1098)
!1100 = !DILocation(line: 64, column: 26, scope: !1098)
!1101 = !DILocation(line: 64, column: 18, scope: !1098)
!1102 = !DILocation(line: 64, column: 5, scope: !1095)
!1103 = !DILocation(line: 65, column: 19, scope: !1104)
!1104 = distinct !DILexicalBlock(scope: !1105, file: !981, line: 65, column: 12)
!1105 = distinct !DILexicalBlock(scope: !1098, file: !981, line: 64, column: 34)
!1106 = !DILocation(line: 65, column: 12, scope: !1104)
!1107 = !DILocation(line: 65, column: 32, scope: !1104)
!1108 = !DILocation(line: 65, column: 35, scope: !1104)
!1109 = !DILocation(line: 65, column: 38, scope: !1104)
!1110 = !DILocation(line: 65, column: 37, scope: !1104)
!1111 = !DILocation(line: 65, column: 25, scope: !1104)
!1112 = !DILocation(line: 65, column: 22, scope: !1104)
!1113 = !DILocation(line: 65, column: 12, scope: !1105)
!1114 = !DILocation(line: 66, column: 17, scope: !1115)
!1115 = distinct !DILexicalBlock(scope: !1104, file: !981, line: 65, column: 41)
!1116 = !DILocation(line: 67, column: 9, scope: !1115)
!1117 = !DILocation(line: 68, column: 5, scope: !1105)
!1118 = !DILocation(line: 64, column: 31, scope: !1098)
!1119 = !DILocation(line: 64, column: 5, scope: !1098)
!1120 = distinct !{!1120, !1102, !1121}
!1121 = !DILocation(line: 68, column: 5, scope: !1095)
!1122 = !DILocation(line: 69, column: 8, scope: !1123)
!1123 = distinct !DILexicalBlock(scope: !1034, file: !981, line: 69, column: 8)
!1124 = !DILocation(line: 69, column: 18, scope: !1123)
!1125 = !DILocation(line: 69, column: 8, scope: !1034)
!1126 = !DILocation(line: 70, column: 13, scope: !1127)
!1127 = distinct !DILexicalBlock(scope: !1128, file: !981, line: 70, column: 13)
!1128 = distinct !DILexicalBlock(scope: !1123, file: !981, line: 69, column: 25)
!1129 = !DILocation(line: 70, column: 65, scope: !1127)
!1130 = !DILocation(line: 70, column: 13, scope: !1128)
!1131 = !DILocation(line: 71, column: 13, scope: !1132)
!1132 = distinct !DILexicalBlock(scope: !1127, file: !981, line: 70, column: 71)
!1133 = !DILocation(line: 73, column: 5, scope: !1128)
!1134 = !DILocation(line: 74, column: 12, scope: !1034)
!1135 = !DILocation(line: 74, column: 5, scope: !1034)
!1136 = !DILocation(line: 75, column: 1, scope: !1034)
!1137 = distinct !DISubprogram(name: "klee_init_fds", scope: !8, file: !8, line: 110, type: !1138, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!1138 = !DISubroutineType(types: !1139)
!1139 = !{null, !14, !14, !14, !44, !44, !14}
!1140 = !DILocalVariable(name: "n_files", arg: 1, scope: !1137, file: !8, line: 110, type: !14)
!1141 = !DILocation(line: 110, column: 29, scope: !1137)
!1142 = !DILocalVariable(name: "file_length", arg: 2, scope: !1137, file: !8, line: 110, type: !14)
!1143 = !DILocation(line: 110, column: 47, scope: !1137)
!1144 = !DILocalVariable(name: "stdin_length", arg: 3, scope: !1137, file: !8, line: 111, type: !14)
!1145 = !DILocation(line: 111, column: 29, scope: !1137)
!1146 = !DILocalVariable(name: "sym_stdout_flag", arg: 4, scope: !1137, file: !8, line: 111, type: !44)
!1147 = !DILocation(line: 111, column: 47, scope: !1137)
!1148 = !DILocalVariable(name: "save_all_writes_flag", arg: 5, scope: !1137, file: !8, line: 112, type: !44)
!1149 = !DILocation(line: 112, column: 24, scope: !1137)
!1150 = !DILocalVariable(name: "max_failures", arg: 6, scope: !1137, file: !8, line: 112, type: !14)
!1151 = !DILocation(line: 112, column: 55, scope: !1137)
!1152 = !DILocalVariable(name: "k", scope: !1137, file: !8, line: 113, type: !14)
!1153 = !DILocation(line: 113, column: 12, scope: !1137)
!1154 = !DILocalVariable(name: "name", scope: !1137, file: !8, line: 114, type: !1155)
!1155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 56, elements: !1156)
!1156 = !{!1157}
!1157 = !DISubrange(count: 7)
!1158 = !DILocation(line: 114, column: 8, scope: !1137)
!1159 = !DILocalVariable(name: "s", scope: !1137, file: !8, line: 115, type: !26)
!1160 = !DILocation(line: 115, column: 17, scope: !1137)
!1161 = !DILocation(line: 117, column: 3, scope: !1137)
!1162 = !DILocation(line: 119, column: 26, scope: !1137)
!1163 = !DILocation(line: 119, column: 24, scope: !1137)
!1164 = !DILocation(line: 120, column: 61, scope: !1137)
!1165 = !DILocation(line: 120, column: 59, scope: !1137)
!1166 = !DILocation(line: 120, column: 24, scope: !1137)
!1167 = !DILocation(line: 120, column: 22, scope: !1137)
!1168 = !DILocation(line: 121, column: 9, scope: !1169)
!1169 = distinct !DILexicalBlock(scope: !1137, file: !8, line: 121, column: 3)
!1170 = !DILocation(line: 121, column: 8, scope: !1169)
!1171 = !DILocation(line: 121, column: 13, scope: !1172)
!1172 = distinct !DILexicalBlock(scope: !1169, file: !8, line: 121, column: 3)
!1173 = !DILocation(line: 121, column: 17, scope: !1172)
!1174 = !DILocation(line: 121, column: 15, scope: !1172)
!1175 = !DILocation(line: 121, column: 3, scope: !1169)
!1176 = !DILocation(line: 122, column: 21, scope: !1177)
!1177 = distinct !DILexicalBlock(scope: !1172, file: !8, line: 121, column: 31)
!1178 = !DILocation(line: 122, column: 19, scope: !1177)
!1179 = !DILocation(line: 122, column: 15, scope: !1177)
!1180 = !DILocation(line: 122, column: 5, scope: !1177)
!1181 = !DILocation(line: 122, column: 13, scope: !1177)
!1182 = !DILocation(line: 123, column: 34, scope: !1177)
!1183 = !DILocation(line: 123, column: 44, scope: !1177)
!1184 = !DILocation(line: 123, column: 25, scope: !1177)
!1185 = !DILocation(line: 123, column: 48, scope: !1177)
!1186 = !DILocation(line: 123, column: 61, scope: !1177)
!1187 = !DILocation(line: 123, column: 5, scope: !1177)
!1188 = !DILocation(line: 121, column: 27, scope: !1172)
!1189 = !DILocation(line: 121, column: 3, scope: !1172)
!1190 = distinct !{!1190, !1175, !1191}
!1191 = !DILocation(line: 124, column: 3, scope: !1169)
!1192 = !DILocation(line: 127, column: 7, scope: !1193)
!1193 = distinct !DILexicalBlock(scope: !1137, file: !8, line: 127, column: 7)
!1194 = !DILocation(line: 127, column: 7, scope: !1137)
!1195 = !DILocation(line: 128, column: 26, scope: !1196)
!1196 = distinct !DILexicalBlock(scope: !1193, file: !8, line: 127, column: 21)
!1197 = !DILocation(line: 128, column: 24, scope: !1196)
!1198 = !DILocation(line: 129, column: 33, scope: !1196)
!1199 = !DILocation(line: 129, column: 44, scope: !1196)
!1200 = !DILocation(line: 129, column: 5, scope: !1196)
!1201 = !DILocation(line: 130, column: 39, scope: !1196)
!1202 = !DILocation(line: 130, column: 28, scope: !1196)
!1203 = !DILocation(line: 131, column: 3, scope: !1196)
!1204 = !DILocation(line: 132, column: 27, scope: !1193)
!1205 = !DILocation(line: 134, column: 27, scope: !1137)
!1206 = !DILocation(line: 134, column: 25, scope: !1137)
!1207 = !DILocation(line: 135, column: 16, scope: !1208)
!1208 = distinct !DILexicalBlock(scope: !1137, file: !8, line: 135, column: 7)
!1209 = !DILocation(line: 135, column: 7, scope: !1208)
!1210 = !DILocation(line: 135, column: 7, scope: !1137)
!1211 = !DILocation(line: 136, column: 26, scope: !1212)
!1212 = distinct !DILexicalBlock(scope: !1208, file: !8, line: 135, column: 30)
!1213 = !DILocation(line: 136, column: 24, scope: !1212)
!1214 = !DILocation(line: 137, column: 27, scope: !1212)
!1215 = !DILocation(line: 137, column: 25, scope: !1212)
!1216 = !DILocation(line: 138, column: 27, scope: !1212)
!1217 = !DILocation(line: 138, column: 25, scope: !1212)
!1218 = !DILocation(line: 139, column: 31, scope: !1212)
!1219 = !DILocation(line: 139, column: 29, scope: !1212)
!1220 = !DILocation(line: 140, column: 28, scope: !1212)
!1221 = !DILocation(line: 140, column: 26, scope: !1212)
!1222 = !DILocation(line: 142, column: 33, scope: !1212)
!1223 = !DILocation(line: 142, column: 24, scope: !1212)
!1224 = !DILocation(line: 142, column: 5, scope: !1212)
!1225 = !DILocation(line: 143, column: 33, scope: !1212)
!1226 = !DILocation(line: 143, column: 24, scope: !1212)
!1227 = !DILocation(line: 143, column: 5, scope: !1212)
!1228 = !DILocation(line: 144, column: 33, scope: !1212)
!1229 = !DILocation(line: 144, column: 24, scope: !1212)
!1230 = !DILocation(line: 144, column: 5, scope: !1212)
!1231 = !DILocation(line: 145, column: 33, scope: !1212)
!1232 = !DILocation(line: 145, column: 24, scope: !1212)
!1233 = !DILocation(line: 145, column: 5, scope: !1212)
!1234 = !DILocation(line: 146, column: 33, scope: !1212)
!1235 = !DILocation(line: 146, column: 24, scope: !1212)
!1236 = !DILocation(line: 146, column: 5, scope: !1212)
!1237 = !DILocation(line: 147, column: 3, scope: !1212)
!1238 = !DILocation(line: 150, column: 7, scope: !1239)
!1239 = distinct !DILexicalBlock(scope: !1137, file: !8, line: 150, column: 7)
!1240 = !DILocation(line: 150, column: 7, scope: !1137)
!1241 = !DILocation(line: 151, column: 27, scope: !1242)
!1242 = distinct !DILexicalBlock(scope: !1239, file: !8, line: 150, column: 24)
!1243 = !DILocation(line: 151, column: 25, scope: !1242)
!1244 = !DILocation(line: 152, column: 33, scope: !1242)
!1245 = !DILocation(line: 152, column: 5, scope: !1242)
!1246 = !DILocation(line: 153, column: 39, scope: !1242)
!1247 = !DILocation(line: 153, column: 28, scope: !1242)
!1248 = !DILocation(line: 154, column: 28, scope: !1242)
!1249 = !DILocation(line: 155, column: 3, scope: !1242)
!1250 = !DILocation(line: 156, column: 28, scope: !1239)
!1251 = !DILocation(line: 158, column: 31, scope: !1137)
!1252 = !DILocation(line: 158, column: 29, scope: !1137)
!1253 = !DILocation(line: 159, column: 23, scope: !1137)
!1254 = !DILocation(line: 159, column: 21, scope: !1137)
!1255 = !DILocation(line: 160, column: 25, scope: !1137)
!1256 = !DILocation(line: 160, column: 33, scope: !1137)
!1257 = !DILocation(line: 160, column: 15, scope: !1137)
!1258 = !DILocation(line: 160, column: 3, scope: !1137)
!1259 = !DILocation(line: 161, column: 1, scope: !1137)
!1260 = distinct !DISubprogram(name: "__create_new_dfile", scope: !8, file: !8, line: 46, type: !1261, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!1261 = !DISubroutineType(types: !1262)
!1262 = !{null, !16, !14, !170, !25}
!1263 = !DILocalVariable(name: "dfile", arg: 1, scope: !1260, file: !8, line: 46, type: !16)
!1264 = !DILocation(line: 46, column: 49, scope: !1260)
!1265 = !DILocalVariable(name: "size", arg: 2, scope: !1260, file: !8, line: 46, type: !14)
!1266 = !DILocation(line: 46, column: 65, scope: !1260)
!1267 = !DILocalVariable(name: "name", arg: 3, scope: !1260, file: !8, line: 47, type: !170)
!1268 = !DILocation(line: 47, column: 44, scope: !1260)
!1269 = !DILocalVariable(name: "defaults", arg: 4, scope: !1260, file: !8, line: 47, type: !25)
!1270 = !DILocation(line: 47, column: 65, scope: !1260)
!1271 = !DILocalVariable(name: "s", scope: !1260, file: !8, line: 48, type: !25)
!1272 = !DILocation(line: 48, column: 18, scope: !1260)
!1273 = !DILocation(line: 48, column: 22, scope: !1260)
!1274 = !DILocalVariable(name: "sp", scope: !1260, file: !8, line: 49, type: !170)
!1275 = !DILocation(line: 49, column: 15, scope: !1260)
!1276 = !DILocalVariable(name: "sname", scope: !1260, file: !8, line: 50, type: !1044)
!1277 = !DILocation(line: 50, column: 8, scope: !1260)
!1278 = !DILocation(line: 51, column: 11, scope: !1279)
!1279 = distinct !DILexicalBlock(scope: !1260, file: !8, line: 51, column: 3)
!1280 = !DILocation(line: 51, column: 10, scope: !1279)
!1281 = !DILocation(line: 51, column: 8, scope: !1279)
!1282 = !DILocation(line: 51, column: 18, scope: !1283)
!1283 = distinct !DILexicalBlock(scope: !1279, file: !8, line: 51, column: 3)
!1284 = !DILocation(line: 51, column: 17, scope: !1283)
!1285 = !DILocation(line: 51, column: 3, scope: !1279)
!1286 = !DILocation(line: 0, scope: !1260)
!1287 = !DILocation(line: 52, column: 22, scope: !1283)
!1288 = !DILocation(line: 52, column: 11, scope: !1283)
!1289 = !DILocation(line: 52, column: 14, scope: !1283)
!1290 = !DILocation(line: 52, column: 13, scope: !1283)
!1291 = !DILocation(line: 52, column: 5, scope: !1283)
!1292 = !DILocation(line: 52, column: 20, scope: !1283)
!1293 = !DILocation(line: 51, column: 22, scope: !1283)
!1294 = !DILocation(line: 51, column: 3, scope: !1283)
!1295 = distinct !{!1295, !1285, !1296}
!1296 = !DILocation(line: 52, column: 23, scope: !1279)
!1297 = !DILocation(line: 53, column: 20, scope: !1260)
!1298 = !DILocation(line: 53, column: 19, scope: !1260)
!1299 = !DILocation(line: 53, column: 11, scope: !1260)
!1300 = !DILocation(line: 53, column: 3, scope: !1260)
!1301 = !DILocation(line: 55, column: 3, scope: !1302)
!1302 = distinct !DILexicalBlock(scope: !1303, file: !8, line: 55, column: 3)
!1303 = distinct !DILexicalBlock(scope: !1260, file: !8, line: 55, column: 3)
!1304 = !DILocation(line: 55, column: 3, scope: !1303)
!1305 = !DILocation(line: 57, column: 17, scope: !1260)
!1306 = !DILocation(line: 57, column: 3, scope: !1260)
!1307 = !DILocation(line: 57, column: 10, scope: !1260)
!1308 = !DILocation(line: 57, column: 15, scope: !1260)
!1309 = !DILocation(line: 58, column: 28, scope: !1260)
!1310 = !DILocation(line: 58, column: 35, scope: !1260)
!1311 = !DILocation(line: 58, column: 21, scope: !1260)
!1312 = !DILocation(line: 58, column: 3, scope: !1260)
!1313 = !DILocation(line: 58, column: 10, scope: !1260)
!1314 = !DILocation(line: 58, column: 19, scope: !1260)
!1315 = !DILocation(line: 59, column: 22, scope: !1260)
!1316 = !DILocation(line: 59, column: 29, scope: !1260)
!1317 = !DILocation(line: 59, column: 39, scope: !1260)
!1318 = !DILocation(line: 59, column: 46, scope: !1260)
!1319 = !DILocation(line: 59, column: 52, scope: !1260)
!1320 = !DILocation(line: 59, column: 3, scope: !1260)
!1321 = !DILocation(line: 61, column: 22, scope: !1260)
!1322 = !DILocation(line: 61, column: 37, scope: !1260)
!1323 = !DILocation(line: 61, column: 3, scope: !1260)
!1324 = !DILocation(line: 64, column: 25, scope: !1325)
!1325 = distinct !DILexicalBlock(scope: !1260, file: !8, line: 64, column: 7)
!1326 = !DILocation(line: 64, column: 28, scope: !1325)
!1327 = !DILocation(line: 64, column: 8, scope: !1325)
!1328 = !DILocation(line: 64, column: 36, scope: !1325)
!1329 = !DILocation(line: 65, column: 8, scope: !1325)
!1330 = !DILocation(line: 65, column: 11, scope: !1325)
!1331 = !DILocation(line: 65, column: 18, scope: !1325)
!1332 = !DILocation(line: 65, column: 32, scope: !1325)
!1333 = !DILocation(line: 64, column: 7, scope: !1260)
!1334 = !DILocation(line: 66, column: 17, scope: !1325)
!1335 = !DILocation(line: 66, column: 27, scope: !1325)
!1336 = !DILocation(line: 66, column: 5, scope: !1325)
!1337 = !DILocation(line: 66, column: 8, scope: !1325)
!1338 = !DILocation(line: 66, column: 15, scope: !1325)
!1339 = !DILocation(line: 71, column: 16, scope: !1260)
!1340 = !DILocation(line: 71, column: 19, scope: !1260)
!1341 = !DILocation(line: 71, column: 26, scope: !1260)
!1342 = !DILocation(line: 71, column: 40, scope: !1260)
!1343 = !DILocation(line: 71, column: 15, scope: !1260)
!1344 = !DILocation(line: 71, column: 3, scope: !1260)
!1345 = !DILocation(line: 75, column: 16, scope: !1260)
!1346 = !DILocation(line: 75, column: 19, scope: !1260)
!1347 = !DILocation(line: 75, column: 30, scope: !1260)
!1348 = !DILocation(line: 75, column: 41, scope: !1260)
!1349 = !DILocation(line: 75, column: 15, scope: !1260)
!1350 = !DILocation(line: 75, column: 3, scope: !1260)
!1351 = !DILocation(line: 77, column: 19, scope: !1260)
!1352 = !DILocation(line: 77, column: 24, scope: !1260)
!1353 = !DILocation(line: 77, column: 27, scope: !1260)
!1354 = !DILocation(line: 77, column: 35, scope: !1260)
!1355 = !DILocation(line: 77, column: 22, scope: !1260)
!1356 = !DILocation(line: 77, column: 3, scope: !1260)
!1357 = !DILocation(line: 78, column: 19, scope: !1260)
!1358 = !DILocation(line: 78, column: 22, scope: !1260)
!1359 = !DILocation(line: 78, column: 25, scope: !1260)
!1360 = !DILocation(line: 78, column: 35, scope: !1260)
!1361 = !DILocation(line: 78, column: 45, scope: !1260)
!1362 = !DILocation(line: 78, column: 32, scope: !1260)
!1363 = !DILocation(line: 78, column: 3, scope: !1260)
!1364 = !DILocation(line: 79, column: 19, scope: !1260)
!1365 = !DILocation(line: 79, column: 22, scope: !1260)
!1366 = !DILocation(line: 79, column: 25, scope: !1260)
!1367 = !DILocation(line: 79, column: 36, scope: !1260)
!1368 = !DILocation(line: 79, column: 46, scope: !1260)
!1369 = !DILocation(line: 79, column: 33, scope: !1260)
!1370 = !DILocation(line: 79, column: 3, scope: !1260)
!1371 = !DILocation(line: 80, column: 19, scope: !1260)
!1372 = !DILocation(line: 80, column: 23, scope: !1260)
!1373 = !DILocation(line: 80, column: 26, scope: !1260)
!1374 = !DILocation(line: 80, column: 33, scope: !1260)
!1375 = !DILocation(line: 80, column: 40, scope: !1260)
!1376 = !DILocation(line: 80, column: 22, scope: !1260)
!1377 = !DILocation(line: 80, column: 3, scope: !1260)
!1378 = !DILocation(line: 81, column: 19, scope: !1260)
!1379 = !DILocation(line: 81, column: 23, scope: !1260)
!1380 = !DILocation(line: 81, column: 26, scope: !1260)
!1381 = !DILocation(line: 81, column: 33, scope: !1260)
!1382 = !DILocation(line: 81, column: 40, scope: !1260)
!1383 = !DILocation(line: 81, column: 22, scope: !1260)
!1384 = !DILocation(line: 81, column: 3, scope: !1260)
!1385 = !DILocation(line: 82, column: 19, scope: !1260)
!1386 = !DILocation(line: 82, column: 23, scope: !1260)
!1387 = !DILocation(line: 82, column: 26, scope: !1260)
!1388 = !DILocation(line: 82, column: 33, scope: !1260)
!1389 = !DILocation(line: 82, column: 40, scope: !1260)
!1390 = !DILocation(line: 82, column: 22, scope: !1260)
!1391 = !DILocation(line: 82, column: 3, scope: !1260)
!1392 = !DILocation(line: 83, column: 19, scope: !1260)
!1393 = !DILocation(line: 83, column: 23, scope: !1260)
!1394 = !DILocation(line: 83, column: 26, scope: !1260)
!1395 = !DILocation(line: 83, column: 33, scope: !1260)
!1396 = !DILocation(line: 83, column: 42, scope: !1260)
!1397 = !DILocation(line: 83, column: 22, scope: !1260)
!1398 = !DILocation(line: 83, column: 3, scope: !1260)
!1399 = !DILocation(line: 84, column: 19, scope: !1260)
!1400 = !DILocation(line: 84, column: 22, scope: !1260)
!1401 = !DILocation(line: 84, column: 25, scope: !1260)
!1402 = !DILocation(line: 84, column: 34, scope: !1260)
!1403 = !DILocation(line: 84, column: 3, scope: !1260)
!1404 = !DILocation(line: 85, column: 19, scope: !1260)
!1405 = !DILocation(line: 85, column: 22, scope: !1260)
!1406 = !DILocation(line: 85, column: 25, scope: !1260)
!1407 = !DILocation(line: 85, column: 35, scope: !1260)
!1408 = !DILocation(line: 85, column: 45, scope: !1260)
!1409 = !DILocation(line: 85, column: 32, scope: !1260)
!1410 = !DILocation(line: 85, column: 3, scope: !1260)
!1411 = !DILocation(line: 86, column: 19, scope: !1260)
!1412 = !DILocation(line: 86, column: 22, scope: !1260)
!1413 = !DILocation(line: 86, column: 25, scope: !1260)
!1414 = !DILocation(line: 86, column: 35, scope: !1260)
!1415 = !DILocation(line: 86, column: 45, scope: !1260)
!1416 = !DILocation(line: 86, column: 32, scope: !1260)
!1417 = !DILocation(line: 86, column: 3, scope: !1260)
!1418 = !DILocation(line: 87, column: 19, scope: !1260)
!1419 = !DILocation(line: 87, column: 22, scope: !1260)
!1420 = !DILocation(line: 87, column: 25, scope: !1260)
!1421 = !DILocation(line: 87, column: 36, scope: !1260)
!1422 = !DILocation(line: 87, column: 3, scope: !1260)
!1423 = !DILocation(line: 88, column: 19, scope: !1260)
!1424 = !DILocation(line: 88, column: 22, scope: !1260)
!1425 = !DILocation(line: 88, column: 25, scope: !1260)
!1426 = !DILocation(line: 88, column: 37, scope: !1260)
!1427 = !DILocation(line: 88, column: 47, scope: !1260)
!1428 = !DILocation(line: 88, column: 34, scope: !1260)
!1429 = !DILocation(line: 88, column: 3, scope: !1260)
!1430 = !DILocation(line: 89, column: 19, scope: !1260)
!1431 = !DILocation(line: 89, column: 22, scope: !1260)
!1432 = !DILocation(line: 89, column: 25, scope: !1260)
!1433 = !DILocation(line: 89, column: 37, scope: !1260)
!1434 = !DILocation(line: 89, column: 47, scope: !1260)
!1435 = !DILocation(line: 89, column: 34, scope: !1260)
!1436 = !DILocation(line: 89, column: 3, scope: !1260)
!1437 = !DILocation(line: 90, column: 19, scope: !1260)
!1438 = !DILocation(line: 90, column: 22, scope: !1260)
!1439 = !DILocation(line: 90, column: 25, scope: !1260)
!1440 = !DILocation(line: 90, column: 37, scope: !1260)
!1441 = !DILocation(line: 90, column: 47, scope: !1260)
!1442 = !DILocation(line: 90, column: 34, scope: !1260)
!1443 = !DILocation(line: 90, column: 3, scope: !1260)
!1444 = !DILocation(line: 92, column: 16, scope: !1260)
!1445 = !DILocation(line: 92, column: 23, scope: !1260)
!1446 = !DILocation(line: 92, column: 3, scope: !1260)
!1447 = !DILocation(line: 92, column: 6, scope: !1260)
!1448 = !DILocation(line: 92, column: 14, scope: !1260)
!1449 = !DILocation(line: 93, column: 3, scope: !1260)
!1450 = !DILocation(line: 93, column: 6, scope: !1260)
!1451 = !DILocation(line: 93, column: 16, scope: !1260)
!1452 = !DILocation(line: 94, column: 17, scope: !1260)
!1453 = !DILocation(line: 94, column: 3, scope: !1260)
!1454 = !DILocation(line: 94, column: 10, scope: !1260)
!1455 = !DILocation(line: 94, column: 15, scope: !1260)
!1456 = !DILocation(line: 95, column: 1, scope: !1260)
!1457 = distinct !DISubprogram(name: "__sym_uint32", scope: !8, file: !8, line: 97, type: !1458, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!1458 = !DISubroutineType(types: !1459)
!1459 = !{!14, !170}
!1460 = !DILocalVariable(name: "name", arg: 1, scope: !1457, file: !8, line: 97, type: !170)
!1461 = !DILocation(line: 97, column: 42, scope: !1457)
!1462 = !DILocalVariable(name: "x", scope: !1457, file: !8, line: 98, type: !14)
!1463 = !DILocation(line: 98, column: 12, scope: !1457)
!1464 = !DILocation(line: 99, column: 22, scope: !1457)
!1465 = !DILocation(line: 99, column: 36, scope: !1457)
!1466 = !DILocation(line: 99, column: 3, scope: !1457)
!1467 = !DILocation(line: 100, column: 10, scope: !1457)
!1468 = !DILocation(line: 100, column: 3, scope: !1457)
!1469 = distinct !DISubprogram(name: "klee_range", scope: !1470, file: !1470, line: 14, type: !1471, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !195, retainedNodes: !4)
!1470 = !DIFile(filename: "/home/haoxin/haoxin-data/smu-research/klee/runtime/Intrinsic/klee_range.c", directory: "")
!1471 = !DISubroutineType(types: !1472)
!1472 = !{!44, !44, !44, !170}
!1473 = !DILocalVariable(name: "start", arg: 1, scope: !1469, file: !1470, line: 14, type: !44)
!1474 = !DILocation(line: 14, column: 20, scope: !1469)
!1475 = !DILocalVariable(name: "end", arg: 2, scope: !1469, file: !1470, line: 14, type: !44)
!1476 = !DILocation(line: 14, column: 31, scope: !1469)
!1477 = !DILocalVariable(name: "name", arg: 3, scope: !1469, file: !1470, line: 14, type: !170)
!1478 = !DILocation(line: 14, column: 48, scope: !1469)
!1479 = !DILocalVariable(name: "x", scope: !1469, file: !1470, line: 15, type: !44)
!1480 = !DILocation(line: 15, column: 7, scope: !1469)
!1481 = !DILocation(line: 17, column: 7, scope: !1482)
!1482 = distinct !DILexicalBlock(scope: !1469, file: !1470, line: 17, column: 7)
!1483 = !DILocation(line: 17, column: 16, scope: !1482)
!1484 = !DILocation(line: 17, column: 13, scope: !1482)
!1485 = !DILocation(line: 17, column: 7, scope: !1469)
!1486 = !DILocation(line: 18, column: 5, scope: !1482)
!1487 = !DILocation(line: 20, column: 7, scope: !1488)
!1488 = distinct !DILexicalBlock(scope: !1469, file: !1470, line: 20, column: 7)
!1489 = !DILocation(line: 20, column: 12, scope: !1488)
!1490 = !DILocation(line: 20, column: 16, scope: !1488)
!1491 = !DILocation(line: 20, column: 14, scope: !1488)
!1492 = !DILocation(line: 20, column: 7, scope: !1469)
!1493 = !DILocation(line: 21, column: 12, scope: !1494)
!1494 = distinct !DILexicalBlock(scope: !1488, file: !1470, line: 20, column: 21)
!1495 = !DILocation(line: 21, column: 5, scope: !1494)
!1496 = !DILocation(line: 23, column: 24, scope: !1497)
!1497 = distinct !DILexicalBlock(scope: !1488, file: !1470, line: 22, column: 10)
!1498 = !DILocation(line: 23, column: 38, scope: !1497)
!1499 = !DILocation(line: 23, column: 5, scope: !1497)
!1500 = !DILocation(line: 26, column: 9, scope: !1501)
!1501 = distinct !DILexicalBlock(scope: !1497, file: !1470, line: 26, column: 9)
!1502 = !DILocation(line: 26, column: 14, scope: !1501)
!1503 = !DILocation(line: 26, column: 9, scope: !1497)
!1504 = !DILocation(line: 27, column: 30, scope: !1505)
!1505 = distinct !DILexicalBlock(scope: !1501, file: !1470, line: 26, column: 19)
!1506 = !DILocation(line: 27, column: 45, scope: !1505)
!1507 = !DILocation(line: 27, column: 32, scope: !1505)
!1508 = !DILocation(line: 27, column: 19, scope: !1505)
!1509 = !DILocation(line: 27, column: 7, scope: !1505)
!1510 = !DILocation(line: 28, column: 5, scope: !1505)
!1511 = !DILocation(line: 29, column: 19, scope: !1512)
!1512 = distinct !DILexicalBlock(scope: !1501, file: !1470, line: 28, column: 12)
!1513 = !DILocation(line: 29, column: 28, scope: !1512)
!1514 = !DILocation(line: 29, column: 25, scope: !1512)
!1515 = !DILocation(line: 29, column: 7, scope: !1512)
!1516 = !DILocation(line: 30, column: 19, scope: !1512)
!1517 = !DILocation(line: 30, column: 23, scope: !1512)
!1518 = !DILocation(line: 30, column: 21, scope: !1512)
!1519 = !DILocation(line: 30, column: 7, scope: !1512)
!1520 = !DILocation(line: 33, column: 12, scope: !1497)
!1521 = !DILocation(line: 33, column: 5, scope: !1497)
!1522 = !DILocation(line: 35, column: 1, scope: !1469)
!1523 = distinct !DISubprogram(name: "open", linkageName: "open64", scope: !1524, file: !1524, line: 48, type: !1525, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !198, retainedNodes: !4)
!1524 = !DIFile(filename: "/home/haoxin/haoxin-data/smu-research/klee/runtime/POSIX/fd_64.c", directory: "")
!1525 = !DISubroutineType(types: !1526)
!1526 = !{!44, !170, !44, null}
!1527 = !DILocalVariable(name: "pathname", arg: 1, scope: !1523, file: !1524, line: 48, type: !170)
!1528 = !DILocation(line: 48, column: 22, scope: !1523)
!1529 = !DILocalVariable(name: "flags", arg: 2, scope: !1523, file: !1524, line: 48, type: !44)
!1530 = !DILocation(line: 48, column: 36, scope: !1523)
!1531 = !DILocalVariable(name: "mode", scope: !1523, file: !1524, line: 49, type: !97)
!1532 = !DILocation(line: 49, column: 10, scope: !1523)
!1533 = !DILocation(line: 51, column: 7, scope: !1534)
!1534 = distinct !DILexicalBlock(scope: !1523, file: !1524, line: 51, column: 7)
!1535 = !DILocation(line: 51, column: 13, scope: !1534)
!1536 = !DILocation(line: 51, column: 7, scope: !1523)
!1537 = !DILocalVariable(name: "ap", scope: !1538, file: !1524, line: 53, type: !1539)
!1538 = distinct !DILexicalBlock(scope: !1534, file: !1524, line: 51, column: 24)
!1539 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !1540, line: 46, baseType: !1541)
!1540 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!1541 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !1542, line: 32, baseType: !1543)
!1542 = !DIFile(filename: "dut-research/compilers/llvm-9.0/llvm-src/build/lib/clang/9.0.0/include/stdarg.h", directory: "/media/haoxin/SeagateData/haoxin-data")
!1543 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !199, line: 53, baseType: !1544)
!1544 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1545, size: 192, elements: !1551)
!1545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !199, line: 53, size: 192, elements: !1546)
!1546 = !{!1547, !1548, !1549, !1550}
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1545, file: !199, line: 53, baseType: !14, size: 32)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1545, file: !199, line: 53, baseType: !14, size: 32, offset: 32)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1545, file: !199, line: 53, baseType: !109, size: 64, offset: 64)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1545, file: !199, line: 53, baseType: !109, size: 64, offset: 128)
!1551 = !{!1552}
!1552 = !DISubrange(count: 1)
!1553 = !DILocation(line: 53, column: 13, scope: !1538)
!1554 = !DILocation(line: 54, column: 5, scope: !1538)
!1555 = !DILocation(line: 55, column: 12, scope: !1538)
!1556 = !DILocation(line: 55, column: 10, scope: !1538)
!1557 = !DILocation(line: 56, column: 5, scope: !1538)
!1558 = !DILocation(line: 57, column: 3, scope: !1538)
!1559 = !DILocation(line: 59, column: 20, scope: !1523)
!1560 = !DILocation(line: 59, column: 30, scope: !1523)
!1561 = !DILocation(line: 59, column: 37, scope: !1523)
!1562 = !DILocation(line: 59, column: 10, scope: !1523)
!1563 = !DILocation(line: 59, column: 3, scope: !1523)
!1564 = distinct !DISubprogram(name: "openat", linkageName: "openat64", scope: !1524, file: !1524, line: 62, type: !1565, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !198, retainedNodes: !4)
!1565 = !DISubroutineType(types: !1566)
!1566 = !{!44, !44, !170, !44, null}
!1567 = !DILocalVariable(name: "fd", arg: 1, scope: !1564, file: !1524, line: 62, type: !44)
!1568 = !DILocation(line: 62, column: 16, scope: !1564)
!1569 = !DILocalVariable(name: "pathname", arg: 2, scope: !1564, file: !1524, line: 62, type: !170)
!1570 = !DILocation(line: 62, column: 32, scope: !1564)
!1571 = !DILocalVariable(name: "flags", arg: 3, scope: !1564, file: !1524, line: 62, type: !44)
!1572 = !DILocation(line: 62, column: 46, scope: !1564)
!1573 = !DILocalVariable(name: "mode", scope: !1564, file: !1524, line: 63, type: !97)
!1574 = !DILocation(line: 63, column: 10, scope: !1564)
!1575 = !DILocation(line: 65, column: 7, scope: !1576)
!1576 = distinct !DILexicalBlock(scope: !1564, file: !1524, line: 65, column: 7)
!1577 = !DILocation(line: 65, column: 13, scope: !1576)
!1578 = !DILocation(line: 65, column: 7, scope: !1564)
!1579 = !DILocalVariable(name: "ap", scope: !1580, file: !1524, line: 67, type: !1539)
!1580 = distinct !DILexicalBlock(scope: !1576, file: !1524, line: 65, column: 24)
!1581 = !DILocation(line: 67, column: 13, scope: !1580)
!1582 = !DILocation(line: 68, column: 5, scope: !1580)
!1583 = !DILocation(line: 69, column: 12, scope: !1580)
!1584 = !DILocation(line: 69, column: 10, scope: !1580)
!1585 = !DILocation(line: 70, column: 5, scope: !1580)
!1586 = !DILocation(line: 71, column: 3, scope: !1580)
!1587 = !DILocation(line: 73, column: 22, scope: !1564)
!1588 = !DILocation(line: 73, column: 26, scope: !1564)
!1589 = !DILocation(line: 73, column: 36, scope: !1564)
!1590 = !DILocation(line: 73, column: 43, scope: !1564)
!1591 = !DILocation(line: 73, column: 10, scope: !1564)
!1592 = !DILocation(line: 73, column: 3, scope: !1564)
!1593 = distinct !DISubprogram(name: "lseek", linkageName: "lseek64", scope: !1524, file: !1524, line: 76, type: !1594, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !198, retainedNodes: !4)
!1594 = !DISubroutineType(types: !1595)
!1595 = !{!92, !44, !90, !44}
!1596 = !DILocalVariable(name: "fd", arg: 1, scope: !1593, file: !1524, line: 76, type: !44)
!1597 = !DILocation(line: 76, column: 19, scope: !1593)
!1598 = !DILocalVariable(name: "offset", arg: 2, scope: !1593, file: !1524, line: 76, type: !90)
!1599 = !DILocation(line: 76, column: 31, scope: !1593)
!1600 = !DILocalVariable(name: "whence", arg: 3, scope: !1593, file: !1524, line: 76, type: !44)
!1601 = !DILocation(line: 76, column: 43, scope: !1593)
!1602 = !DILocation(line: 77, column: 21, scope: !1593)
!1603 = !DILocation(line: 77, column: 25, scope: !1593)
!1604 = !DILocation(line: 77, column: 33, scope: !1593)
!1605 = !DILocation(line: 77, column: 10, scope: !1593)
!1606 = !DILocation(line: 77, column: 3, scope: !1593)
!1607 = distinct !DISubprogram(name: "__xstat", linkageName: "__xstat64", scope: !1524, file: !1524, line: 80, type: !1608, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !198, retainedNodes: !4)
!1608 = !DISubroutineType(types: !1609)
!1609 = !{!44, !44, !170, !1610}
!1610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1611, size: 64)
!1611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !27, line: 46, size: 1152, elements: !1612)
!1612 = !{!1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627}
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1611, file: !27, line: 48, baseType: !30, size: 64)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1611, file: !27, line: 53, baseType: !129, size: 64, offset: 64)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1611, file: !27, line: 61, baseType: !36, size: 64, offset: 128)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1611, file: !27, line: 62, baseType: !38, size: 32, offset: 192)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1611, file: !27, line: 64, baseType: !40, size: 32, offset: 224)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1611, file: !27, line: 65, baseType: !42, size: 32, offset: 256)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1611, file: !27, line: 67, baseType: !44, size: 32, offset: 288)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1611, file: !27, line: 69, baseType: !30, size: 64, offset: 320)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1611, file: !27, line: 74, baseType: !47, size: 64, offset: 384)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1611, file: !27, line: 78, baseType: !50, size: 64, offset: 448)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1611, file: !27, line: 80, baseType: !139, size: 64, offset: 512)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1611, file: !27, line: 91, baseType: !216, size: 128, offset: 576)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1611, file: !27, line: 92, baseType: !216, size: 128, offset: 704)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1611, file: !27, line: 93, baseType: !216, size: 128, offset: 832)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1611, file: !27, line: 106, baseType: !64, size: 192, offset: 960)
!1628 = !DILocalVariable(name: "vers", arg: 1, scope: !1607, file: !1524, line: 80, type: !44)
!1629 = !DILocation(line: 80, column: 17, scope: !1607)
!1630 = !DILocalVariable(name: "path", arg: 2, scope: !1607, file: !1524, line: 80, type: !170)
!1631 = !DILocation(line: 80, column: 35, scope: !1607)
!1632 = !DILocalVariable(name: "buf", arg: 3, scope: !1607, file: !1524, line: 80, type: !1610)
!1633 = !DILocation(line: 80, column: 54, scope: !1607)
!1634 = !DILocation(line: 81, column: 20, scope: !1607)
!1635 = !DILocation(line: 81, column: 43, scope: !1607)
!1636 = !DILocation(line: 81, column: 26, scope: !1607)
!1637 = !DILocation(line: 81, column: 10, scope: !1607)
!1638 = !DILocation(line: 81, column: 3, scope: !1607)
!1639 = distinct !DISubprogram(name: "stat", linkageName: "stat64", scope: !1524, file: !1524, line: 84, type: !1640, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !198, retainedNodes: !4)
!1640 = !DISubroutineType(types: !1641)
!1641 = !{!44, !170, !1610}
!1642 = !DILocalVariable(name: "path", arg: 1, scope: !1639, file: !1524, line: 84, type: !170)
!1643 = !DILocation(line: 84, column: 22, scope: !1639)
!1644 = !DILocalVariable(name: "buf", arg: 2, scope: !1639, file: !1524, line: 84, type: !1610)
!1645 = !DILocation(line: 84, column: 41, scope: !1639)
!1646 = !DILocation(line: 85, column: 20, scope: !1639)
!1647 = !DILocation(line: 85, column: 43, scope: !1639)
!1648 = !DILocation(line: 85, column: 26, scope: !1639)
!1649 = !DILocation(line: 85, column: 10, scope: !1639)
!1650 = !DILocation(line: 85, column: 3, scope: !1639)
!1651 = distinct !DISubprogram(name: "__lxstat", linkageName: "__lxstat64", scope: !1524, file: !1524, line: 88, type: !1608, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !198, retainedNodes: !4)
!1652 = !DILocalVariable(name: "vers", arg: 1, scope: !1651, file: !1524, line: 88, type: !44)
!1653 = !DILocation(line: 88, column: 18, scope: !1651)
!1654 = !DILocalVariable(name: "path", arg: 2, scope: !1651, file: !1524, line: 88, type: !170)
!1655 = !DILocation(line: 88, column: 36, scope: !1651)
!1656 = !DILocalVariable(name: "buf", arg: 3, scope: !1651, file: !1524, line: 88, type: !1610)
!1657 = !DILocation(line: 88, column: 55, scope: !1651)
!1658 = !DILocation(line: 89, column: 21, scope: !1651)
!1659 = !DILocation(line: 89, column: 44, scope: !1651)
!1660 = !DILocation(line: 89, column: 27, scope: !1651)
!1661 = !DILocation(line: 89, column: 10, scope: !1651)
!1662 = !DILocation(line: 89, column: 3, scope: !1651)
!1663 = distinct !DISubprogram(name: "lstat", linkageName: "lstat64", scope: !1524, file: !1524, line: 92, type: !1640, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !198, retainedNodes: !4)
!1664 = !DILocalVariable(name: "path", arg: 1, scope: !1663, file: !1524, line: 92, type: !170)
!1665 = !DILocation(line: 92, column: 23, scope: !1663)
!1666 = !DILocalVariable(name: "buf", arg: 2, scope: !1663, file: !1524, line: 92, type: !1610)
!1667 = !DILocation(line: 92, column: 42, scope: !1663)
!1668 = !DILocation(line: 93, column: 21, scope: !1663)
!1669 = !DILocation(line: 93, column: 44, scope: !1663)
!1670 = !DILocation(line: 93, column: 27, scope: !1663)
!1671 = !DILocation(line: 93, column: 10, scope: !1663)
!1672 = !DILocation(line: 93, column: 3, scope: !1663)
!1673 = distinct !DISubprogram(name: "__fxstat", linkageName: "__fxstat64", scope: !1524, file: !1524, line: 96, type: !1674, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !198, retainedNodes: !4)
!1674 = !DISubroutineType(types: !1675)
!1675 = !{!44, !44, !44, !1610}
!1676 = !DILocalVariable(name: "vers", arg: 1, scope: !1673, file: !1524, line: 96, type: !44)
!1677 = !DILocation(line: 96, column: 18, scope: !1673)
!1678 = !DILocalVariable(name: "fd", arg: 2, scope: !1673, file: !1524, line: 96, type: !44)
!1679 = !DILocation(line: 96, column: 28, scope: !1673)
!1680 = !DILocalVariable(name: "buf", arg: 3, scope: !1673, file: !1524, line: 96, type: !1610)
!1681 = !DILocation(line: 96, column: 45, scope: !1673)
!1682 = !DILocation(line: 97, column: 21, scope: !1673)
!1683 = !DILocation(line: 97, column: 42, scope: !1673)
!1684 = !DILocation(line: 97, column: 25, scope: !1673)
!1685 = !DILocation(line: 97, column: 10, scope: !1673)
!1686 = !DILocation(line: 97, column: 3, scope: !1673)
!1687 = distinct !DISubprogram(name: "fstat", linkageName: "fstat64", scope: !1524, file: !1524, line: 100, type: !1688, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !198, retainedNodes: !4)
!1688 = !DISubroutineType(types: !1689)
!1689 = !{!44, !44, !1610}
!1690 = !DILocalVariable(name: "fd", arg: 1, scope: !1687, file: !1524, line: 100, type: !44)
!1691 = !DILocation(line: 100, column: 15, scope: !1687)
!1692 = !DILocalVariable(name: "buf", arg: 2, scope: !1687, file: !1524, line: 100, type: !1610)
!1693 = !DILocation(line: 100, column: 32, scope: !1687)
!1694 = !DILocation(line: 101, column: 21, scope: !1687)
!1695 = !DILocation(line: 101, column: 42, scope: !1687)
!1696 = !DILocation(line: 101, column: 25, scope: !1687)
!1697 = !DILocation(line: 101, column: 10, scope: !1687)
!1698 = !DILocation(line: 101, column: 3, scope: !1687)
!1699 = distinct !DISubprogram(name: "ftruncate64", scope: !1524, file: !1524, line: 104, type: !180, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !198, retainedNodes: !4)
!1700 = !DILocalVariable(name: "fd", arg: 1, scope: !1699, file: !1524, line: 104, type: !44)
!1701 = !DILocation(line: 104, column: 21, scope: !1699)
!1702 = !DILocalVariable(name: "length", arg: 2, scope: !1699, file: !1524, line: 104, type: !90)
!1703 = !DILocation(line: 104, column: 33, scope: !1699)
!1704 = !DILocation(line: 105, column: 25, scope: !1699)
!1705 = !DILocation(line: 105, column: 29, scope: !1699)
!1706 = !DILocation(line: 105, column: 10, scope: !1699)
!1707 = !DILocation(line: 105, column: 3, scope: !1699)
!1708 = distinct !DISubprogram(name: "statfs", linkageName: "statfs64", scope: !1524, file: !1524, line: 109, type: !1709, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !198, retainedNodes: !4)
!1709 = !DISubroutineType(types: !1710)
!1710 = !{!44, !170, !1711}
!1711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1712, size: 64)
!1712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "statfs", file: !1713, line: 24, size: 960, elements: !1714)
!1713 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/statfs.h", directory: "")
!1714 = !{!1715, !1717, !1718, !1720, !1721, !1722, !1724, !1725, !1733, !1734, !1735, !1736}
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "f_type", scope: !1712, file: !1713, line: 26, baseType: !1716, size: 64)
!1716 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsword_t", file: !31, line: 179, baseType: !48)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "f_bsize", scope: !1712, file: !1713, line: 27, baseType: !1716, size: 64, offset: 64)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "f_blocks", scope: !1712, file: !1713, line: 35, baseType: !1719, size: 64, offset: 128)
!1719 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsblkcnt64_t", file: !31, line: 172, baseType: !32)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "f_bfree", scope: !1712, file: !1713, line: 36, baseType: !1719, size: 64, offset: 192)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "f_bavail", scope: !1712, file: !1713, line: 37, baseType: !1719, size: 64, offset: 256)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "f_files", scope: !1712, file: !1713, line: 38, baseType: !1723, size: 64, offset: 320)
!1723 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsfilcnt64_t", file: !31, line: 176, baseType: !32)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "f_ffree", scope: !1712, file: !1713, line: 39, baseType: !1723, size: 64, offset: 384)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "f_fsid", scope: !1712, file: !1713, line: 41, baseType: !1726, size: 64, offset: 448)
!1726 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsid_t", file: !31, line: 143, baseType: !1727)
!1727 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !31, line: 143, size: 64, elements: !1728)
!1728 = !{!1729}
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "__val", scope: !1727, file: !31, line: 143, baseType: !1730, size: 64)
!1730 = !DICompositeType(tag: DW_TAG_array_type, baseType: !44, size: 64, elements: !1731)
!1731 = !{!1732}
!1732 = !DISubrange(count: 2)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "f_namelen", scope: !1712, file: !1713, line: 42, baseType: !1716, size: 64, offset: 512)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "f_frsize", scope: !1712, file: !1713, line: 43, baseType: !1716, size: 64, offset: 576)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !1712, file: !1713, line: 44, baseType: !1716, size: 64, offset: 640)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "f_spare", scope: !1712, file: !1713, line: 45, baseType: !1737, size: 256, offset: 704)
!1737 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1716, size: 256, elements: !1738)
!1738 = !{!1739}
!1739 = !DISubrange(count: 4)
!1740 = !DILocalVariable(name: "path", arg: 1, scope: !1708, file: !1524, line: 109, type: !170)
!1741 = !DILocation(line: 109, column: 24, scope: !1708)
!1742 = !DILocalVariable(name: "buf", arg: 2, scope: !1708, file: !1524, line: 109, type: !1711)
!1743 = !DILocation(line: 109, column: 45, scope: !1708)
!1744 = !DILocation(line: 110, column: 22, scope: !1708)
!1745 = !DILocation(line: 110, column: 28, scope: !1708)
!1746 = !DILocation(line: 110, column: 10, scope: !1708)
!1747 = !DILocation(line: 110, column: 3, scope: !1708)
!1748 = distinct !DISubprogram(name: "getdents64", scope: !1524, file: !1524, line: 113, type: !152, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !198, retainedNodes: !4)
!1749 = !DILocalVariable(name: "fd", arg: 1, scope: !1748, file: !1524, line: 113, type: !44)
!1750 = !DILocation(line: 113, column: 24, scope: !1748)
!1751 = !DILocalVariable(name: "dirp", arg: 2, scope: !1748, file: !1524, line: 113, type: !109)
!1752 = !DILocation(line: 113, column: 34, scope: !1748)
!1753 = !DILocalVariable(name: "count", arg: 3, scope: !1748, file: !1524, line: 113, type: !156)
!1754 = !DILocation(line: 113, column: 47, scope: !1748)
!1755 = !DILocation(line: 114, column: 24, scope: !1748)
!1756 = !DILocation(line: 114, column: 47, scope: !1748)
!1757 = !DILocation(line: 114, column: 28, scope: !1748)
!1758 = !DILocation(line: 114, column: 53, scope: !1748)
!1759 = !DILocation(line: 114, column: 10, scope: !1748)
!1760 = !DILocation(line: 114, column: 3, scope: !1748)
!1761 = !{i32 -2146908278}
!1762 = !{i32 -2146907866}
!1763 = !{!"True"}
!1764 = distinct !DISubprogram(name: "access", scope: !103, file: !103, line: 74, type: !1765, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !106, retainedNodes: !4)
!1765 = !DISubroutineType(types: !1766)
!1766 = !{!44, !170, !44}
!1767 = !DILocalVariable(name: "pathname", arg: 1, scope: !1764, file: !103, line: 74, type: !170)
!1768 = !DILocation(line: 74, column: 24, scope: !1764)
!1769 = !DILocalVariable(name: "mode", arg: 2, scope: !1764, file: !103, line: 74, type: !44)
!1770 = !DILocation(line: 74, column: 38, scope: !1764)
!1771 = !DILocalVariable(name: "dfile", scope: !1764, file: !103, line: 75, type: !1772)
!1772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1773, size: 64)
!1773 = !DIDerivedType(tag: DW_TAG_typedef, name: "exe_disk_file_t", file: !10, line: 44, baseType: !1774)
!1774 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10, line: 40, size: 192, elements: !1775)
!1775 = !{!1776, !1777, !1778}
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1774, file: !10, line: 41, baseType: !14, size: 32)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !1774, file: !10, line: 42, baseType: !22, size: 64, offset: 64)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !1774, file: !10, line: 43, baseType: !1779, size: 64, offset: 128)
!1779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1780, size: 64)
!1780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !27, line: 119, size: 1152, elements: !1781)
!1781 = !{!1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796}
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1780, file: !27, line: 121, baseType: !30, size: 64)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1780, file: !27, line: 123, baseType: !34, size: 64, offset: 64)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1780, file: !27, line: 124, baseType: !36, size: 64, offset: 128)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1780, file: !27, line: 125, baseType: !38, size: 32, offset: 192)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1780, file: !27, line: 132, baseType: !40, size: 32, offset: 224)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1780, file: !27, line: 133, baseType: !42, size: 32, offset: 256)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1780, file: !27, line: 135, baseType: !44, size: 32, offset: 288)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1780, file: !27, line: 136, baseType: !30, size: 64, offset: 320)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1780, file: !27, line: 137, baseType: !47, size: 64, offset: 384)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1780, file: !27, line: 143, baseType: !50, size: 64, offset: 448)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1780, file: !27, line: 144, baseType: !52, size: 64, offset: 512)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1780, file: !27, line: 152, baseType: !141, size: 128, offset: 576)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1780, file: !27, line: 153, baseType: !141, size: 128, offset: 704)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1780, file: !27, line: 154, baseType: !141, size: 128, offset: 832)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1780, file: !27, line: 164, baseType: !64, size: 192, offset: 960)
!1797 = !DILocation(line: 75, column: 20, scope: !1764)
!1798 = !DILocation(line: 75, column: 43, scope: !1764)
!1799 = !DILocation(line: 75, column: 28, scope: !1764)
!1800 = !DILocation(line: 77, column: 7, scope: !1801)
!1801 = distinct !DILexicalBlock(scope: !1764, file: !103, line: 77, column: 7)
!1802 = !DILocation(line: 77, column: 7, scope: !1764)
!1803 = !DILocation(line: 80, column: 5, scope: !1804)
!1804 = distinct !DILexicalBlock(scope: !1801, file: !103, line: 77, column: 14)
!1805 = !DILocation(line: 82, column: 51, scope: !1764)
!1806 = !DILocation(line: 82, column: 31, scope: !1764)
!1807 = !DILocation(line: 82, column: 62, scope: !1764)
!1808 = !DILocation(line: 82, column: 10, scope: !1764)
!1809 = !DILocation(line: 82, column: 3, scope: !1764)
!1810 = !DILocation(line: 83, column: 1, scope: !1764)
!1811 = distinct !DISubprogram(name: "__get_sym_file", scope: !103, file: !103, line: 37, type: !1812, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !106, retainedNodes: !4)
!1812 = !DISubroutineType(types: !1813)
!1813 = !{!1772, !170}
!1814 = !DILocalVariable(name: "pathname", arg: 1, scope: !1811, file: !103, line: 37, type: !170)
!1815 = !DILocation(line: 37, column: 52, scope: !1811)
!1816 = !DILocation(line: 38, column: 8, scope: !1817)
!1817 = distinct !DILexicalBlock(scope: !1811, file: !103, line: 38, column: 7)
!1818 = !DILocation(line: 38, column: 7, scope: !1811)
!1819 = !DILocation(line: 39, column: 5, scope: !1817)
!1820 = !DILocalVariable(name: "c", scope: !1811, file: !103, line: 41, type: !23)
!1821 = !DILocation(line: 41, column: 8, scope: !1811)
!1822 = !DILocation(line: 41, column: 12, scope: !1811)
!1823 = !DILocalVariable(name: "i", scope: !1811, file: !103, line: 42, type: !14)
!1824 = !DILocation(line: 42, column: 12, scope: !1811)
!1825 = !DILocation(line: 44, column: 7, scope: !1826)
!1826 = distinct !DILexicalBlock(scope: !1811, file: !103, line: 44, column: 7)
!1827 = !DILocation(line: 44, column: 9, scope: !1826)
!1828 = !DILocation(line: 44, column: 14, scope: !1826)
!1829 = !DILocation(line: 44, column: 17, scope: !1826)
!1830 = !DILocation(line: 44, column: 29, scope: !1826)
!1831 = !DILocation(line: 44, column: 7, scope: !1811)
!1832 = !DILocation(line: 45, column: 5, scope: !1826)
!1833 = !DILocation(line: 47, column: 9, scope: !1834)
!1834 = distinct !DILexicalBlock(scope: !1811, file: !103, line: 47, column: 3)
!1835 = !DILocation(line: 47, column: 8, scope: !1834)
!1836 = !DILocation(line: 47, column: 13, scope: !1837)
!1837 = distinct !DILexicalBlock(scope: !1834, file: !103, line: 47, column: 3)
!1838 = !DILocation(line: 47, column: 24, scope: !1837)
!1839 = !DILocation(line: 47, column: 14, scope: !1837)
!1840 = !DILocation(line: 47, column: 3, scope: !1834)
!1841 = !DILocation(line: 48, column: 9, scope: !1842)
!1842 = distinct !DILexicalBlock(scope: !1843, file: !103, line: 48, column: 9)
!1843 = distinct !DILexicalBlock(scope: !1837, file: !103, line: 47, column: 42)
!1844 = !DILocation(line: 48, column: 27, scope: !1842)
!1845 = !DILocation(line: 48, column: 20, scope: !1842)
!1846 = !DILocation(line: 48, column: 18, scope: !1842)
!1847 = !DILocation(line: 48, column: 11, scope: !1842)
!1848 = !DILocation(line: 48, column: 9, scope: !1843)
!1849 = !DILocalVariable(name: "df", scope: !1850, file: !103, line: 49, type: !1772)
!1850 = distinct !DILexicalBlock(scope: !1842, file: !103, line: 48, column: 30)
!1851 = !DILocation(line: 49, column: 24, scope: !1850)
!1852 = !DILocation(line: 49, column: 39, scope: !1850)
!1853 = !DILocation(line: 49, column: 49, scope: !1850)
!1854 = !DILocation(line: 49, column: 30, scope: !1850)
!1855 = !DILocation(line: 50, column: 11, scope: !1856)
!1856 = distinct !DILexicalBlock(scope: !1850, file: !103, line: 50, column: 11)
!1857 = !DILocation(line: 50, column: 15, scope: !1856)
!1858 = !DILocation(line: 50, column: 21, scope: !1856)
!1859 = !DILocation(line: 50, column: 28, scope: !1856)
!1860 = !DILocation(line: 50, column: 11, scope: !1850)
!1861 = !DILocation(line: 51, column: 9, scope: !1856)
!1862 = !DILocation(line: 52, column: 14, scope: !1850)
!1863 = !DILocation(line: 52, column: 7, scope: !1850)
!1864 = !DILocation(line: 47, column: 37, scope: !1837)
!1865 = !DILocation(line: 47, column: 3, scope: !1837)
!1866 = distinct !{!1866, !1840, !1867}
!1867 = !DILocation(line: 54, column: 3, scope: !1834)
!1868 = !DILocation(line: 56, column: 3, scope: !1811)
!1869 = !DILocation(line: 57, column: 1, scope: !1811)
!1870 = distinct !DISubprogram(name: "__concretize_string", scope: !103, file: !103, line: 1351, type: !1871, scopeLine: 1351, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !106, retainedNodes: !4)
!1871 = !DISubroutineType(types: !1872)
!1872 = !{!170, !170}
!1873 = !DILocalVariable(name: "s", arg: 1, scope: !1870, file: !103, line: 1351, type: !170)
!1874 = !DILocation(line: 1351, column: 52, scope: !1870)
!1875 = !DILocalVariable(name: "sc", scope: !1870, file: !103, line: 1352, type: !22)
!1876 = !DILocation(line: 1352, column: 9, scope: !1870)
!1877 = !DILocation(line: 1352, column: 31, scope: !1870)
!1878 = !DILocation(line: 1352, column: 14, scope: !1870)
!1879 = !DILocalVariable(name: "i", scope: !1870, file: !103, line: 1353, type: !14)
!1880 = !DILocation(line: 1353, column: 12, scope: !1870)
!1881 = !DILocation(line: 1355, column: 10, scope: !1882)
!1882 = distinct !DILexicalBlock(scope: !1870, file: !103, line: 1355, column: 3)
!1883 = !DILocation(line: 1355, column: 8, scope: !1882)
!1884 = !DILocalVariable(name: "c", scope: !1885, file: !103, line: 1356, type: !23)
!1885 = distinct !DILexicalBlock(scope: !1886, file: !103, line: 1355, column: 27)
!1886 = distinct !DILexicalBlock(scope: !1882, file: !103, line: 1355, column: 3)
!1887 = !DILocation(line: 1356, column: 10, scope: !1885)
!1888 = !DILocation(line: 1356, column: 15, scope: !1885)
!1889 = !DILocation(line: 1356, column: 14, scope: !1885)
!1890 = !DILocation(line: 1358, column: 27, scope: !1891)
!1891 = distinct !DILexicalBlock(scope: !1885, file: !103, line: 1358, column: 9)
!1892 = !DILocation(line: 1358, column: 10, scope: !1891)
!1893 = !DILocation(line: 1358, column: 9, scope: !1885)
!1894 = !DILocation(line: 1359, column: 12, scope: !1895)
!1895 = distinct !DILexicalBlock(scope: !1896, file: !103, line: 1359, column: 11)
!1896 = distinct !DILexicalBlock(scope: !1891, file: !103, line: 1358, column: 31)
!1897 = !DILocation(line: 1359, column: 11, scope: !1896)
!1898 = !DILocation(line: 1363, column: 11, scope: !1899)
!1899 = distinct !DILexicalBlock(scope: !1885, file: !103, line: 1363, column: 9)
!1900 = !DILocation(line: 1363, column: 14, scope: !1899)
!1901 = !DILocation(line: 1363, column: 15, scope: !1899)
!1902 = !DILocation(line: 1363, column: 12, scope: !1899)
!1903 = !DILocation(line: 0, scope: !1899)
!1904 = !DILocation(line: 1363, column: 9, scope: !1885)
!1905 = !DILocation(line: 1364, column: 12, scope: !1906)
!1906 = distinct !DILexicalBlock(scope: !1907, file: !103, line: 1364, column: 11)
!1907 = distinct !DILexicalBlock(scope: !1899, file: !103, line: 1363, column: 21)
!1908 = !DILocation(line: 1364, column: 11, scope: !1907)
!1909 = !DILocation(line: 1365, column: 10, scope: !1910)
!1910 = distinct !DILexicalBlock(scope: !1906, file: !103, line: 1364, column: 15)
!1911 = !DILocation(line: 1365, column: 13, scope: !1910)
!1912 = !DILocation(line: 1366, column: 9, scope: !1910)
!1913 = !DILocation(line: 1367, column: 18, scope: !1914)
!1914 = distinct !DILexicalBlock(scope: !1906, file: !103, line: 1367, column: 18)
!1915 = !DILocation(line: 1367, column: 19, scope: !1914)
!1916 = !DILocation(line: 1367, column: 18, scope: !1906)
!1917 = !DILocation(line: 1368, column: 10, scope: !1918)
!1918 = distinct !DILexicalBlock(scope: !1914, file: !103, line: 1367, column: 26)
!1919 = !DILocation(line: 1368, column: 13, scope: !1918)
!1920 = !DILocation(line: 1369, column: 7, scope: !1918)
!1921 = !DILocalVariable(name: "cc", scope: !1922, file: !103, line: 1371, type: !23)
!1922 = distinct !DILexicalBlock(scope: !1899, file: !103, line: 1370, column: 12)
!1923 = !DILocation(line: 1371, column: 12, scope: !1922)
!1924 = !DILocation(line: 1371, column: 40, scope: !1922)
!1925 = !DILocation(line: 1371, column: 24, scope: !1922)
!1926 = !DILocation(line: 1371, column: 17, scope: !1922)
!1927 = !DILocation(line: 1372, column: 19, scope: !1922)
!1928 = !DILocation(line: 1372, column: 25, scope: !1922)
!1929 = !DILocation(line: 1372, column: 22, scope: !1922)
!1930 = !DILocation(line: 1372, column: 7, scope: !1922)
!1931 = !DILocation(line: 1373, column: 13, scope: !1922)
!1932 = !DILocation(line: 1373, column: 8, scope: !1922)
!1933 = !DILocation(line: 1373, column: 11, scope: !1922)
!1934 = !DILocation(line: 1374, column: 12, scope: !1935)
!1935 = distinct !DILexicalBlock(scope: !1922, file: !103, line: 1374, column: 11)
!1936 = !DILocation(line: 1374, column: 11, scope: !1922)
!1937 = !DILocation(line: 1355, column: 16, scope: !1886)
!1938 = !DILocation(line: 1355, column: 21, scope: !1886)
!1939 = !DILocation(line: 1355, column: 3, scope: !1886)
!1940 = distinct !{!1940, !1941, !1942}
!1941 = !DILocation(line: 1355, column: 3, scope: !1882)
!1942 = !DILocation(line: 1376, column: 3, scope: !1882)
!1943 = !DILocation(line: 1378, column: 10, scope: !1870)
!1944 = !DILocation(line: 1378, column: 3, scope: !1870)
!1945 = distinct !DISubprogram(name: "__concretize_ptr", scope: !103, file: !103, line: 1338, type: !1946, scopeLine: 1338, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !106, retainedNodes: !4)
!1946 = !DISubroutineType(types: !1947)
!1947 = !{!109, !163}
!1948 = !DILocalVariable(name: "p", arg: 1, scope: !1945, file: !103, line: 1338, type: !163)
!1949 = !DILocation(line: 1338, column: 43, scope: !1945)
!1950 = !DILocalVariable(name: "pc", scope: !1945, file: !103, line: 1340, type: !22)
!1951 = !DILocation(line: 1340, column: 9, scope: !1945)
!1952 = !DILocation(line: 1340, column: 45, scope: !1945)
!1953 = !DILocation(line: 1340, column: 38, scope: !1945)
!1954 = !DILocation(line: 1340, column: 22, scope: !1945)
!1955 = !DILocation(line: 1340, column: 14, scope: !1945)
!1956 = !DILocation(line: 1341, column: 15, scope: !1945)
!1957 = !DILocation(line: 1341, column: 21, scope: !1945)
!1958 = !DILocation(line: 1341, column: 18, scope: !1945)
!1959 = !DILocation(line: 1341, column: 3, scope: !1945)
!1960 = !DILocation(line: 1342, column: 10, scope: !1945)
!1961 = !DILocation(line: 1342, column: 3, scope: !1945)
!1962 = distinct !DISubprogram(name: "umask", scope: !103, file: !103, line: 85, type: !1963, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !106, retainedNodes: !4)
!1963 = !DISubroutineType(types: !1964)
!1964 = !{!38, !97}
!1965 = !DILocalVariable(name: "mask", arg: 1, scope: !1962, file: !103, line: 85, type: !97)
!1966 = !DILocation(line: 85, column: 21, scope: !1962)
!1967 = !DILocalVariable(name: "r", scope: !1962, file: !103, line: 86, type: !97)
!1968 = !DILocation(line: 86, column: 10, scope: !1962)
!1969 = !DILocation(line: 86, column: 24, scope: !1962)
!1970 = !DILocation(line: 87, column: 21, scope: !1962)
!1971 = !DILocation(line: 87, column: 26, scope: !1962)
!1972 = !DILocation(line: 87, column: 19, scope: !1962)
!1973 = !DILocation(line: 88, column: 10, scope: !1962)
!1974 = !DILocation(line: 88, column: 3, scope: !1962)
!1975 = distinct !DISubprogram(name: "__fd_open", scope: !103, file: !103, line: 125, type: !1976, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !106, retainedNodes: !4)
!1976 = !DISubroutineType(types: !1977)
!1977 = !{!44, !170, !44, !97}
!1978 = !DILocalVariable(name: "pathname", arg: 1, scope: !1975, file: !103, line: 125, type: !170)
!1979 = !DILocation(line: 125, column: 27, scope: !1975)
!1980 = !DILocalVariable(name: "flags", arg: 2, scope: !1975, file: !103, line: 125, type: !44)
!1981 = !DILocation(line: 125, column: 41, scope: !1975)
!1982 = !DILocalVariable(name: "mode", arg: 3, scope: !1975, file: !103, line: 125, type: !97)
!1983 = !DILocation(line: 125, column: 55, scope: !1975)
!1984 = !DILocalVariable(name: "df", scope: !1975, file: !103, line: 126, type: !1772)
!1985 = !DILocation(line: 126, column: 20, scope: !1975)
!1986 = !DILocalVariable(name: "f", scope: !1975, file: !103, line: 127, type: !1987)
!1987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1988, size: 64)
!1988 = !DIDerivedType(tag: DW_TAG_typedef, name: "exe_file_t", file: !10, line: 60, baseType: !1989)
!1989 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10, line: 53, size: 192, elements: !1990)
!1990 = !{!1991, !1992, !1993, !1994}
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1989, file: !10, line: 54, baseType: !44, size: 32)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1989, file: !10, line: 55, baseType: !14, size: 32, offset: 32)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1989, file: !10, line: 58, baseType: !90, size: 64, offset: 64)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "dfile", scope: !1989, file: !10, line: 59, baseType: !1772, size: 64, offset: 128)
!1995 = !DILocation(line: 127, column: 15, scope: !1975)
!1996 = !DILocalVariable(name: "fd", scope: !1975, file: !103, line: 128, type: !44)
!1997 = !DILocation(line: 128, column: 7, scope: !1975)
!1998 = !DILocation(line: 130, column: 11, scope: !1999)
!1999 = distinct !DILexicalBlock(scope: !1975, file: !103, line: 130, column: 3)
!2000 = !DILocation(line: 130, column: 8, scope: !1999)
!2001 = !DILocation(line: 130, column: 16, scope: !2002)
!2002 = distinct !DILexicalBlock(scope: !1999, file: !103, line: 130, column: 3)
!2003 = !DILocation(line: 130, column: 19, scope: !2002)
!2004 = !DILocation(line: 130, column: 3, scope: !1999)
!2005 = !DILocation(line: 131, column: 25, scope: !2006)
!2006 = distinct !DILexicalBlock(scope: !2002, file: !103, line: 131, column: 9)
!2007 = !DILocation(line: 131, column: 11, scope: !2006)
!2008 = !DILocation(line: 131, column: 29, scope: !2006)
!2009 = !DILocation(line: 131, column: 35, scope: !2006)
!2010 = !DILocation(line: 131, column: 9, scope: !2002)
!2011 = !DILocation(line: 130, column: 30, scope: !2002)
!2012 = !DILocation(line: 130, column: 3, scope: !2002)
!2013 = distinct !{!2013, !2004, !2014}
!2014 = !DILocation(line: 132, column: 7, scope: !1999)
!2015 = !DILocation(line: 133, column: 7, scope: !2016)
!2016 = distinct !DILexicalBlock(scope: !1975, file: !103, line: 133, column: 7)
!2017 = !DILocation(line: 133, column: 10, scope: !2016)
!2018 = !DILocation(line: 133, column: 7, scope: !1975)
!2019 = !DILocation(line: 134, column: 5, scope: !2020)
!2020 = distinct !DILexicalBlock(scope: !2016, file: !103, line: 133, column: 22)
!2021 = !DILocation(line: 134, column: 11, scope: !2020)
!2022 = !DILocation(line: 135, column: 5, scope: !2020)
!2023 = !DILocation(line: 138, column: 22, scope: !1975)
!2024 = !DILocation(line: 138, column: 8, scope: !1975)
!2025 = !DILocation(line: 138, column: 5, scope: !1975)
!2026 = !DILocation(line: 141, column: 10, scope: !1975)
!2027 = !DILocation(line: 141, column: 3, scope: !1975)
!2028 = !DILocation(line: 143, column: 23, scope: !1975)
!2029 = !DILocation(line: 143, column: 8, scope: !1975)
!2030 = !DILocation(line: 143, column: 6, scope: !1975)
!2031 = !DILocation(line: 144, column: 7, scope: !2032)
!2032 = distinct !DILexicalBlock(scope: !1975, file: !103, line: 144, column: 7)
!2033 = !DILocation(line: 144, column: 7, scope: !1975)
!2034 = !DILocation(line: 147, column: 16, scope: !2035)
!2035 = distinct !DILexicalBlock(scope: !2032, file: !103, line: 144, column: 11)
!2036 = !DILocation(line: 147, column: 5, scope: !2035)
!2037 = !DILocation(line: 147, column: 8, scope: !2035)
!2038 = !DILocation(line: 147, column: 14, scope: !2035)
!2039 = !DILocation(line: 149, column: 10, scope: !2040)
!2040 = distinct !DILexicalBlock(scope: !2035, file: !103, line: 149, column: 9)
!2041 = !DILocation(line: 149, column: 16, scope: !2040)
!2042 = !DILocation(line: 149, column: 27, scope: !2040)
!2043 = !DILocation(line: 149, column: 31, scope: !2040)
!2044 = !DILocation(line: 149, column: 37, scope: !2040)
!2045 = !DILocation(line: 149, column: 9, scope: !2035)
!2046 = !DILocation(line: 150, column: 7, scope: !2047)
!2047 = distinct !DILexicalBlock(scope: !2040, file: !103, line: 149, column: 48)
!2048 = !DILocation(line: 150, column: 13, scope: !2047)
!2049 = !DILocation(line: 151, column: 7, scope: !2047)
!2050 = !DILocation(line: 154, column: 10, scope: !2051)
!2051 = distinct !DILexicalBlock(scope: !2035, file: !103, line: 154, column: 9)
!2052 = !DILocation(line: 154, column: 16, scope: !2051)
!2053 = !DILocation(line: 154, column: 27, scope: !2051)
!2054 = !DILocation(line: 154, column: 31, scope: !2051)
!2055 = !DILocation(line: 154, column: 37, scope: !2051)
!2056 = !DILocation(line: 154, column: 9, scope: !2035)
!2057 = !DILocation(line: 157, column: 7, scope: !2058)
!2058 = distinct !DILexicalBlock(scope: !2051, file: !103, line: 154, column: 50)
!2059 = !DILocation(line: 158, column: 7, scope: !2058)
!2060 = !DILocation(line: 158, column: 13, scope: !2058)
!2061 = !DILocation(line: 159, column: 7, scope: !2058)
!2062 = !DILocation(line: 162, column: 10, scope: !2063)
!2063 = distinct !DILexicalBlock(scope: !2035, file: !103, line: 162, column: 9)
!2064 = !DILocation(line: 162, column: 16, scope: !2063)
!2065 = !DILocation(line: 162, column: 26, scope: !2063)
!2066 = !DILocation(line: 162, column: 31, scope: !2063)
!2067 = !DILocation(line: 162, column: 37, scope: !2063)
!2068 = !DILocation(line: 162, column: 9, scope: !2035)
!2069 = !DILocation(line: 165, column: 7, scope: !2070)
!2070 = distinct !DILexicalBlock(scope: !2063, file: !103, line: 162, column: 49)
!2071 = !DILocation(line: 166, column: 7, scope: !2070)
!2072 = !DILocation(line: 166, column: 13, scope: !2070)
!2073 = !DILocation(line: 167, column: 7, scope: !2070)
!2074 = !DILocation(line: 170, column: 25, scope: !2075)
!2075 = distinct !DILexicalBlock(scope: !2035, file: !103, line: 170, column: 9)
!2076 = !DILocation(line: 170, column: 32, scope: !2075)
!2077 = !DILocation(line: 170, column: 36, scope: !2075)
!2078 = !DILocation(line: 170, column: 10, scope: !2075)
!2079 = !DILocation(line: 170, column: 9, scope: !2035)
!2080 = !DILocation(line: 171, column: 2, scope: !2081)
!2081 = distinct !DILexicalBlock(scope: !2075, file: !103, line: 170, column: 43)
!2082 = !DILocation(line: 171, column: 8, scope: !2081)
!2083 = !DILocation(line: 172, column: 2, scope: !2081)
!2084 = !DILocation(line: 175, column: 35, scope: !2075)
!2085 = !DILocation(line: 175, column: 38, scope: !2075)
!2086 = !DILocation(line: 175, column: 45, scope: !2075)
!2087 = !DILocation(line: 175, column: 51, scope: !2075)
!2088 = !DILocation(line: 175, column: 59, scope: !2075)
!2089 = !DILocation(line: 176, column: 7, scope: !2075)
!2090 = !DILocation(line: 176, column: 25, scope: !2075)
!2091 = !DILocation(line: 176, column: 14, scope: !2075)
!2092 = !DILocation(line: 176, column: 12, scope: !2075)
!2093 = !DILocation(line: 175, column: 68, scope: !2075)
!2094 = !DILocation(line: 175, column: 7, scope: !2075)
!2095 = !DILocation(line: 175, column: 10, scope: !2075)
!2096 = !DILocation(line: 175, column: 17, scope: !2075)
!2097 = !DILocation(line: 175, column: 23, scope: !2075)
!2098 = !DILocation(line: 175, column: 31, scope: !2075)
!2099 = !DILocation(line: 177, column: 3, scope: !2035)
!2100 = !DILocalVariable(name: "os_fd", scope: !2101, file: !103, line: 178, type: !44)
!2101 = distinct !DILexicalBlock(scope: !2032, file: !103, line: 177, column: 10)
!2102 = !DILocation(line: 178, column: 9, scope: !2101)
!2103 = !DILocation(line: 178, column: 56, scope: !2101)
!2104 = !DILocation(line: 178, column: 36, scope: !2101)
!2105 = !DILocation(line: 178, column: 67, scope: !2101)
!2106 = !DILocation(line: 178, column: 74, scope: !2101)
!2107 = !DILocation(line: 178, column: 17, scope: !2101)
!2108 = !DILocation(line: 179, column: 9, scope: !2109)
!2109 = distinct !DILexicalBlock(scope: !2101, file: !103, line: 179, column: 9)
!2110 = !DILocation(line: 179, column: 15, scope: !2109)
!2111 = !DILocation(line: 179, column: 9, scope: !2101)
!2112 = !DILocation(line: 180, column: 7, scope: !2109)
!2113 = !DILocation(line: 181, column: 13, scope: !2101)
!2114 = !DILocation(line: 181, column: 5, scope: !2101)
!2115 = !DILocation(line: 181, column: 8, scope: !2101)
!2116 = !DILocation(line: 181, column: 11, scope: !2101)
!2117 = !DILocation(line: 184, column: 3, scope: !1975)
!2118 = !DILocation(line: 184, column: 6, scope: !1975)
!2119 = !DILocation(line: 184, column: 12, scope: !1975)
!2120 = !DILocation(line: 185, column: 8, scope: !2121)
!2121 = distinct !DILexicalBlock(scope: !1975, file: !103, line: 185, column: 7)
!2122 = !DILocation(line: 185, column: 14, scope: !2121)
!2123 = !DILocation(line: 185, column: 27, scope: !2121)
!2124 = !DILocation(line: 185, column: 7, scope: !1975)
!2125 = !DILocation(line: 186, column: 5, scope: !2126)
!2126 = distinct !DILexicalBlock(scope: !2121, file: !103, line: 185, column: 40)
!2127 = !DILocation(line: 186, column: 8, scope: !2126)
!2128 = !DILocation(line: 186, column: 14, scope: !2126)
!2129 = !DILocation(line: 187, column: 3, scope: !2126)
!2130 = !DILocation(line: 187, column: 15, scope: !2131)
!2131 = distinct !DILexicalBlock(scope: !2121, file: !103, line: 187, column: 14)
!2132 = !DILocation(line: 187, column: 21, scope: !2131)
!2133 = !DILocation(line: 187, column: 34, scope: !2131)
!2134 = !DILocation(line: 0, scope: !2131)
!2135 = !DILocation(line: 187, column: 14, scope: !2121)
!2136 = !DILocation(line: 188, column: 14, scope: !2137)
!2137 = distinct !DILexicalBlock(scope: !2131, file: !103, line: 187, column: 47)
!2138 = !DILocation(line: 189, column: 3, scope: !2137)
!2139 = !DILocation(line: 190, column: 14, scope: !2140)
!2140 = distinct !DILexicalBlock(scope: !2131, file: !103, line: 189, column: 10)
!2141 = !DILocation(line: 193, column: 10, scope: !1975)
!2142 = !DILocation(line: 193, column: 3, scope: !1975)
!2143 = !DILocation(line: 194, column: 1, scope: !1975)
!2144 = distinct !DISubprogram(name: "has_permission", scope: !103, file: !103, line: 94, type: !2145, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !106, retainedNodes: !4)
!2145 = !DISubroutineType(types: !2146)
!2146 = !{!44, !44, !1779}
!2147 = !DILocalVariable(name: "flags", arg: 1, scope: !2144, file: !103, line: 94, type: !44)
!2148 = !DILocation(line: 94, column: 31, scope: !2144)
!2149 = !DILocalVariable(name: "s", arg: 2, scope: !2144, file: !103, line: 94, type: !1779)
!2150 = !DILocation(line: 94, column: 53, scope: !2144)
!2151 = !DILocalVariable(name: "write_access", scope: !2144, file: !103, line: 95, type: !44)
!2152 = !DILocation(line: 95, column: 7, scope: !2144)
!2153 = !DILocalVariable(name: "read_access", scope: !2144, file: !103, line: 95, type: !44)
!2154 = !DILocation(line: 95, column: 21, scope: !2144)
!2155 = !DILocalVariable(name: "mode", scope: !2144, file: !103, line: 96, type: !97)
!2156 = !DILocation(line: 96, column: 10, scope: !2144)
!2157 = !DILocation(line: 96, column: 17, scope: !2144)
!2158 = !DILocation(line: 96, column: 20, scope: !2144)
!2159 = !DILocation(line: 98, column: 7, scope: !2160)
!2160 = distinct !DILexicalBlock(scope: !2144, file: !103, line: 98, column: 7)
!2161 = !DILocation(line: 98, column: 13, scope: !2160)
!2162 = !DILocation(line: 98, column: 24, scope: !2160)
!2163 = !DILocation(line: 98, column: 27, scope: !2160)
!2164 = !DILocation(line: 98, column: 33, scope: !2160)
!2165 = !DILocation(line: 98, column: 7, scope: !2144)
!2166 = !DILocation(line: 99, column: 17, scope: !2160)
!2167 = !DILocation(line: 99, column: 5, scope: !2160)
!2168 = !DILocation(line: 100, column: 20, scope: !2160)
!2169 = !DILocation(line: 102, column: 7, scope: !2170)
!2170 = distinct !DILexicalBlock(scope: !2144, file: !103, line: 102, column: 7)
!2171 = !DILocation(line: 102, column: 13, scope: !2170)
!2172 = !DILocation(line: 102, column: 24, scope: !2170)
!2173 = !DILocation(line: 102, column: 27, scope: !2170)
!2174 = !DILocation(line: 102, column: 33, scope: !2170)
!2175 = !DILocation(line: 102, column: 7, scope: !2144)
!2176 = !DILocation(line: 103, column: 18, scope: !2170)
!2177 = !DILocation(line: 103, column: 5, scope: !2170)
!2178 = !DILocation(line: 104, column: 21, scope: !2170)
!2179 = !DILocation(line: 115, column: 7, scope: !2180)
!2180 = distinct !DILexicalBlock(scope: !2144, file: !103, line: 115, column: 7)
!2181 = !DILocation(line: 115, column: 19, scope: !2180)
!2182 = !DILocation(line: 115, column: 24, scope: !2180)
!2183 = !DILocation(line: 115, column: 29, scope: !2180)
!2184 = !DILocation(line: 115, column: 43, scope: !2180)
!2185 = !DILocation(line: 115, column: 48, scope: !2180)
!2186 = !DILocation(line: 115, column: 40, scope: !2180)
!2187 = !DILocation(line: 115, column: 62, scope: !2180)
!2188 = !DILocation(line: 115, column: 67, scope: !2180)
!2189 = !DILocation(line: 115, column: 59, scope: !2180)
!2190 = !DILocation(line: 115, column: 7, scope: !2144)
!2191 = !DILocation(line: 116, column: 5, scope: !2180)
!2192 = !DILocation(line: 118, column: 7, scope: !2193)
!2193 = distinct !DILexicalBlock(scope: !2144, file: !103, line: 118, column: 7)
!2194 = !DILocation(line: 118, column: 20, scope: !2193)
!2195 = !DILocation(line: 118, column: 26, scope: !2193)
!2196 = !DILocation(line: 118, column: 31, scope: !2193)
!2197 = !DILocation(line: 118, column: 45, scope: !2193)
!2198 = !DILocation(line: 118, column: 50, scope: !2193)
!2199 = !DILocation(line: 118, column: 42, scope: !2193)
!2200 = !DILocation(line: 118, column: 64, scope: !2193)
!2201 = !DILocation(line: 118, column: 69, scope: !2193)
!2202 = !DILocation(line: 118, column: 61, scope: !2193)
!2203 = !DILocation(line: 118, column: 7, scope: !2144)
!2204 = !DILocation(line: 119, column: 5, scope: !2193)
!2205 = !DILocation(line: 121, column: 3, scope: !2144)
!2206 = !DILocation(line: 122, column: 1, scope: !2144)
!2207 = distinct !DISubprogram(name: "__fd_openat", scope: !103, file: !103, line: 196, type: !2208, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !106, retainedNodes: !4)
!2208 = !DISubroutineType(types: !2209)
!2209 = !{!44, !44, !170, !44, !97}
!2210 = !DILocalVariable(name: "basefd", arg: 1, scope: !2207, file: !103, line: 196, type: !44)
!2211 = !DILocation(line: 196, column: 21, scope: !2207)
!2212 = !DILocalVariable(name: "pathname", arg: 2, scope: !2207, file: !103, line: 196, type: !170)
!2213 = !DILocation(line: 196, column: 41, scope: !2207)
!2214 = !DILocalVariable(name: "flags", arg: 3, scope: !2207, file: !103, line: 196, type: !44)
!2215 = !DILocation(line: 196, column: 55, scope: !2207)
!2216 = !DILocalVariable(name: "mode", arg: 4, scope: !2207, file: !103, line: 196, type: !97)
!2217 = !DILocation(line: 196, column: 69, scope: !2207)
!2218 = !DILocalVariable(name: "f", scope: !2207, file: !103, line: 197, type: !1987)
!2219 = !DILocation(line: 197, column: 15, scope: !2207)
!2220 = !DILocalVariable(name: "fd", scope: !2207, file: !103, line: 198, type: !44)
!2221 = !DILocation(line: 198, column: 7, scope: !2207)
!2222 = !DILocation(line: 199, column: 7, scope: !2223)
!2223 = distinct !DILexicalBlock(scope: !2207, file: !103, line: 199, column: 7)
!2224 = !DILocation(line: 199, column: 14, scope: !2223)
!2225 = !DILocation(line: 199, column: 7, scope: !2207)
!2226 = !DILocalVariable(name: "bf", scope: !2227, file: !103, line: 200, type: !1987)
!2227 = distinct !DILexicalBlock(scope: !2223, file: !103, line: 199, column: 27)
!2228 = !DILocation(line: 200, column: 17, scope: !2227)
!2229 = !DILocation(line: 200, column: 33, scope: !2227)
!2230 = !DILocation(line: 200, column: 22, scope: !2227)
!2231 = !DILocation(line: 202, column: 10, scope: !2232)
!2232 = distinct !DILexicalBlock(scope: !2227, file: !103, line: 202, column: 9)
!2233 = !DILocation(line: 202, column: 9, scope: !2227)
!2234 = !DILocation(line: 203, column: 7, scope: !2235)
!2235 = distinct !DILexicalBlock(scope: !2232, file: !103, line: 202, column: 14)
!2236 = !DILocation(line: 203, column: 13, scope: !2235)
!2237 = !DILocation(line: 204, column: 7, scope: !2235)
!2238 = !DILocation(line: 205, column: 16, scope: !2239)
!2239 = distinct !DILexicalBlock(scope: !2232, file: !103, line: 205, column: 16)
!2240 = !DILocation(line: 205, column: 20, scope: !2239)
!2241 = !DILocation(line: 205, column: 16, scope: !2232)
!2242 = !DILocation(line: 206, column: 7, scope: !2243)
!2243 = distinct !DILexicalBlock(scope: !2239, file: !103, line: 205, column: 27)
!2244 = !DILocation(line: 207, column: 7, scope: !2243)
!2245 = !DILocation(line: 207, column: 13, scope: !2243)
!2246 = !DILocation(line: 208, column: 7, scope: !2243)
!2247 = !DILocation(line: 210, column: 14, scope: !2227)
!2248 = !DILocation(line: 210, column: 18, scope: !2227)
!2249 = !DILocation(line: 210, column: 12, scope: !2227)
!2250 = !DILocation(line: 211, column: 3, scope: !2227)
!2251 = !DILocation(line: 213, column: 22, scope: !2252)
!2252 = distinct !DILexicalBlock(scope: !2207, file: !103, line: 213, column: 7)
!2253 = !DILocation(line: 213, column: 7, scope: !2252)
!2254 = !DILocation(line: 213, column: 7, scope: !2207)
!2255 = !DILocation(line: 215, column: 22, scope: !2256)
!2256 = distinct !DILexicalBlock(scope: !2252, file: !103, line: 213, column: 33)
!2257 = !DILocation(line: 215, column: 32, scope: !2256)
!2258 = !DILocation(line: 215, column: 39, scope: !2256)
!2259 = !DILocation(line: 215, column: 12, scope: !2256)
!2260 = !DILocation(line: 215, column: 5, scope: !2256)
!2261 = !DILocation(line: 218, column: 11, scope: !2262)
!2262 = distinct !DILexicalBlock(scope: !2207, file: !103, line: 218, column: 3)
!2263 = !DILocation(line: 218, column: 8, scope: !2262)
!2264 = !DILocation(line: 218, column: 16, scope: !2265)
!2265 = distinct !DILexicalBlock(scope: !2262, file: !103, line: 218, column: 3)
!2266 = !DILocation(line: 218, column: 19, scope: !2265)
!2267 = !DILocation(line: 218, column: 3, scope: !2262)
!2268 = !DILocation(line: 219, column: 25, scope: !2269)
!2269 = distinct !DILexicalBlock(scope: !2265, file: !103, line: 219, column: 9)
!2270 = !DILocation(line: 219, column: 11, scope: !2269)
!2271 = !DILocation(line: 219, column: 29, scope: !2269)
!2272 = !DILocation(line: 219, column: 35, scope: !2269)
!2273 = !DILocation(line: 219, column: 9, scope: !2265)
!2274 = !DILocation(line: 218, column: 30, scope: !2265)
!2275 = !DILocation(line: 218, column: 3, scope: !2265)
!2276 = distinct !{!2276, !2267, !2277}
!2277 = !DILocation(line: 220, column: 7, scope: !2262)
!2278 = !DILocation(line: 221, column: 7, scope: !2279)
!2279 = distinct !DILexicalBlock(scope: !2207, file: !103, line: 221, column: 7)
!2280 = !DILocation(line: 221, column: 10, scope: !2279)
!2281 = !DILocation(line: 221, column: 7, scope: !2207)
!2282 = !DILocation(line: 222, column: 5, scope: !2283)
!2283 = distinct !DILexicalBlock(scope: !2279, file: !103, line: 221, column: 22)
!2284 = !DILocation(line: 222, column: 11, scope: !2283)
!2285 = !DILocation(line: 223, column: 5, scope: !2283)
!2286 = !DILocation(line: 226, column: 22, scope: !2207)
!2287 = !DILocation(line: 226, column: 8, scope: !2207)
!2288 = !DILocation(line: 226, column: 5, scope: !2207)
!2289 = !DILocation(line: 229, column: 10, scope: !2207)
!2290 = !DILocation(line: 229, column: 3, scope: !2207)
!2291 = !DILocalVariable(name: "os_fd", scope: !2207, file: !103, line: 231, type: !44)
!2292 = !DILocation(line: 231, column: 7, scope: !2207)
!2293 = !DILocation(line: 231, column: 42, scope: !2207)
!2294 = !DILocation(line: 231, column: 36, scope: !2207)
!2295 = !DILocation(line: 231, column: 70, scope: !2207)
!2296 = !DILocation(line: 231, column: 50, scope: !2207)
!2297 = !DILocation(line: 231, column: 87, scope: !2207)
!2298 = !DILocation(line: 231, column: 81, scope: !2207)
!2299 = !DILocation(line: 231, column: 94, scope: !2207)
!2300 = !DILocation(line: 231, column: 15, scope: !2207)
!2301 = !DILocation(line: 232, column: 7, scope: !2302)
!2302 = distinct !DILexicalBlock(scope: !2207, file: !103, line: 232, column: 7)
!2303 = !DILocation(line: 232, column: 13, scope: !2302)
!2304 = !DILocation(line: 232, column: 7, scope: !2207)
!2305 = !DILocation(line: 233, column: 5, scope: !2302)
!2306 = !DILocation(line: 235, column: 11, scope: !2207)
!2307 = !DILocation(line: 235, column: 3, scope: !2207)
!2308 = !DILocation(line: 235, column: 6, scope: !2207)
!2309 = !DILocation(line: 235, column: 9, scope: !2207)
!2310 = !DILocation(line: 236, column: 3, scope: !2207)
!2311 = !DILocation(line: 236, column: 6, scope: !2207)
!2312 = !DILocation(line: 236, column: 12, scope: !2207)
!2313 = !DILocation(line: 237, column: 8, scope: !2314)
!2314 = distinct !DILexicalBlock(scope: !2207, file: !103, line: 237, column: 7)
!2315 = !DILocation(line: 237, column: 14, scope: !2314)
!2316 = !DILocation(line: 237, column: 27, scope: !2314)
!2317 = !DILocation(line: 237, column: 7, scope: !2207)
!2318 = !DILocation(line: 238, column: 5, scope: !2319)
!2319 = distinct !DILexicalBlock(scope: !2314, file: !103, line: 237, column: 40)
!2320 = !DILocation(line: 238, column: 8, scope: !2319)
!2321 = !DILocation(line: 238, column: 14, scope: !2319)
!2322 = !DILocation(line: 239, column: 3, scope: !2319)
!2323 = !DILocation(line: 239, column: 15, scope: !2324)
!2324 = distinct !DILexicalBlock(scope: !2314, file: !103, line: 239, column: 14)
!2325 = !DILocation(line: 239, column: 21, scope: !2324)
!2326 = !DILocation(line: 239, column: 34, scope: !2324)
!2327 = !DILocation(line: 0, scope: !2324)
!2328 = !DILocation(line: 239, column: 14, scope: !2314)
!2329 = !DILocation(line: 240, column: 14, scope: !2330)
!2330 = distinct !DILexicalBlock(scope: !2324, file: !103, line: 239, column: 47)
!2331 = !DILocation(line: 241, column: 3, scope: !2330)
!2332 = !DILocation(line: 242, column: 14, scope: !2333)
!2333 = distinct !DILexicalBlock(scope: !2324, file: !103, line: 241, column: 10)
!2334 = !DILocation(line: 245, column: 10, scope: !2207)
!2335 = !DILocation(line: 245, column: 3, scope: !2207)
!2336 = !DILocation(line: 246, column: 1, scope: !2207)
!2337 = distinct !DISubprogram(name: "__get_file", scope: !103, file: !103, line: 64, type: !2338, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !106, retainedNodes: !4)
!2338 = !DISubroutineType(types: !2339)
!2339 = !{!1987, !44}
!2340 = !DILocalVariable(name: "fd", arg: 1, scope: !2337, file: !103, line: 64, type: !44)
!2341 = !DILocation(line: 64, column: 35, scope: !2337)
!2342 = !DILocation(line: 65, column: 7, scope: !2343)
!2343 = distinct !DILexicalBlock(scope: !2337, file: !103, line: 65, column: 7)
!2344 = !DILocation(line: 65, column: 9, scope: !2343)
!2345 = !DILocation(line: 65, column: 16, scope: !2343)
!2346 = !DILocation(line: 65, column: 18, scope: !2343)
!2347 = !DILocation(line: 65, column: 13, scope: !2343)
!2348 = !DILocalVariable(name: "f", scope: !2349, file: !103, line: 66, type: !1987)
!2349 = distinct !DILexicalBlock(scope: !2343, file: !103, line: 65, column: 28)
!2350 = !DILocation(line: 66, column: 17, scope: !2349)
!2351 = !DILocation(line: 66, column: 36, scope: !2349)
!2352 = !DILocation(line: 66, column: 22, scope: !2349)
!2353 = !DILocation(line: 67, column: 9, scope: !2354)
!2354 = distinct !DILexicalBlock(scope: !2349, file: !103, line: 67, column: 9)
!2355 = !DILocation(line: 67, column: 12, scope: !2354)
!2356 = !DILocation(line: 67, column: 18, scope: !2354)
!2357 = !DILocation(line: 67, column: 9, scope: !2349)
!2358 = !DILocation(line: 68, column: 14, scope: !2354)
!2359 = !DILocation(line: 68, column: 7, scope: !2354)
!2360 = !DILocation(line: 71, column: 3, scope: !2337)
!2361 = !DILocation(line: 72, column: 1, scope: !2337)
!2362 = distinct !DISubprogram(name: "utimes", scope: !103, file: !103, line: 249, type: !2363, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !106, retainedNodes: !4)
!2363 = !DISubroutineType(types: !2364)
!2364 = !{!44, !170, !2365}
!2365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2366, size: 64)
!2366 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2367)
!2367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !2368, line: 8, size: 128, elements: !2369)
!2368 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h", directory: "")
!2369 = !{!2370, !2371}
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2367, file: !2368, line: 10, baseType: !58, size: 64)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !2367, file: !2368, line: 11, baseType: !2372, size: 64, offset: 64)
!2372 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !31, line: 150, baseType: !48)
!2373 = !DILocalVariable(name: "path", arg: 1, scope: !2362, file: !103, line: 249, type: !170)
!2374 = !DILocation(line: 249, column: 24, scope: !2362)
!2375 = !DILocalVariable(name: "times", arg: 2, scope: !2362, file: !103, line: 249, type: !2365)
!2376 = !DILocation(line: 249, column: 51, scope: !2362)
!2377 = !DILocalVariable(name: "dfile", scope: !2362, file: !103, line: 250, type: !1772)
!2378 = !DILocation(line: 250, column: 20, scope: !2362)
!2379 = !DILocation(line: 250, column: 43, scope: !2362)
!2380 = !DILocation(line: 250, column: 28, scope: !2362)
!2381 = !DILocation(line: 252, column: 7, scope: !2382)
!2382 = distinct !DILexicalBlock(scope: !2362, file: !103, line: 252, column: 7)
!2383 = !DILocation(line: 252, column: 7, scope: !2362)
!2384 = !DILocation(line: 254, column: 10, scope: !2385)
!2385 = distinct !DILexicalBlock(scope: !2386, file: !103, line: 254, column: 9)
!2386 = distinct !DILexicalBlock(scope: !2382, file: !103, line: 252, column: 14)
!2387 = !DILocation(line: 254, column: 9, scope: !2386)
!2388 = !DILocalVariable(name: "newTimes", scope: !2389, file: !103, line: 255, type: !2390)
!2389 = distinct !DILexicalBlock(scope: !2385, file: !103, line: 254, column: 17)
!2390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2367, size: 256, elements: !1731)
!2391 = !DILocation(line: 255, column: 22, scope: !2389)
!2392 = !DILocation(line: 256, column: 22, scope: !2389)
!2393 = !DILocation(line: 256, column: 7, scope: !2389)
!2394 = !DILocation(line: 257, column: 7, scope: !2389)
!2395 = !DILocation(line: 257, column: 21, scope: !2389)
!2396 = !DILocation(line: 258, column: 15, scope: !2389)
!2397 = !DILocation(line: 258, column: 13, scope: !2389)
!2398 = !DILocation(line: 259, column: 5, scope: !2389)
!2399 = !DILocation(line: 262, column: 29, scope: !2386)
!2400 = !DILocation(line: 262, column: 38, scope: !2386)
!2401 = !DILocation(line: 262, column: 5, scope: !2386)
!2402 = !DILocation(line: 262, column: 12, scope: !2386)
!2403 = !DILocation(line: 262, column: 18, scope: !2386)
!2404 = !DILocation(line: 262, column: 27, scope: !2386)
!2405 = !DILocation(line: 263, column: 29, scope: !2386)
!2406 = !DILocation(line: 263, column: 38, scope: !2386)
!2407 = !DILocation(line: 263, column: 5, scope: !2386)
!2408 = !DILocation(line: 263, column: 12, scope: !2386)
!2409 = !DILocation(line: 263, column: 18, scope: !2386)
!2410 = !DILocation(line: 263, column: 27, scope: !2386)
!2411 = !DILocation(line: 268, column: 5, scope: !2386)
!2412 = !DILocation(line: 270, column: 51, scope: !2362)
!2413 = !DILocation(line: 270, column: 31, scope: !2362)
!2414 = !DILocation(line: 270, column: 58, scope: !2362)
!2415 = !DILocation(line: 270, column: 10, scope: !2362)
!2416 = !DILocation(line: 270, column: 3, scope: !2362)
!2417 = !DILocation(line: 271, column: 1, scope: !2362)
!2418 = distinct !DISubprogram(name: "futimesat", scope: !103, file: !103, line: 274, type: !2419, scopeLine: 274, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !106, retainedNodes: !4)
!2419 = !DISubroutineType(types: !2420)
!2420 = !{!44, !44, !170, !2365}
!2421 = !DILocalVariable(name: "fd", arg: 1, scope: !2418, file: !103, line: 274, type: !44)
!2422 = !DILocation(line: 274, column: 19, scope: !2418)
!2423 = !DILocalVariable(name: "path", arg: 2, scope: !2418, file: !103, line: 274, type: !170)
!2424 = !DILocation(line: 274, column: 35, scope: !2418)
!2425 = !DILocalVariable(name: "times", arg: 3, scope: !2418, file: !103, line: 274, type: !2365)
!2426 = !DILocation(line: 274, column: 62, scope: !2418)
!2427 = !DILocation(line: 275, column: 7, scope: !2428)
!2428 = distinct !DILexicalBlock(scope: !2418, file: !103, line: 275, column: 7)
!2429 = !DILocation(line: 275, column: 10, scope: !2428)
!2430 = !DILocation(line: 275, column: 7, scope: !2418)
!2431 = !DILocalVariable(name: "f", scope: !2432, file: !103, line: 276, type: !1987)
!2432 = distinct !DILexicalBlock(scope: !2428, file: !103, line: 275, column: 23)
!2433 = !DILocation(line: 276, column: 17, scope: !2432)
!2434 = !DILocation(line: 276, column: 32, scope: !2432)
!2435 = !DILocation(line: 276, column: 21, scope: !2432)
!2436 = !DILocation(line: 278, column: 10, scope: !2437)
!2437 = distinct !DILexicalBlock(scope: !2432, file: !103, line: 278, column: 9)
!2438 = !DILocation(line: 278, column: 9, scope: !2432)
!2439 = !DILocation(line: 279, column: 7, scope: !2440)
!2440 = distinct !DILexicalBlock(scope: !2437, file: !103, line: 278, column: 13)
!2441 = !DILocation(line: 279, column: 13, scope: !2440)
!2442 = !DILocation(line: 280, column: 7, scope: !2440)
!2443 = !DILocation(line: 281, column: 16, scope: !2444)
!2444 = distinct !DILexicalBlock(scope: !2437, file: !103, line: 281, column: 16)
!2445 = !DILocation(line: 281, column: 19, scope: !2444)
!2446 = !DILocation(line: 281, column: 16, scope: !2437)
!2447 = !DILocation(line: 282, column: 7, scope: !2448)
!2448 = distinct !DILexicalBlock(scope: !2444, file: !103, line: 281, column: 26)
!2449 = !DILocation(line: 283, column: 7, scope: !2448)
!2450 = !DILocation(line: 283, column: 13, scope: !2448)
!2451 = !DILocation(line: 284, column: 7, scope: !2448)
!2452 = !DILocation(line: 286, column: 10, scope: !2432)
!2453 = !DILocation(line: 286, column: 13, scope: !2432)
!2454 = !DILocation(line: 286, column: 8, scope: !2432)
!2455 = !DILocation(line: 287, column: 3, scope: !2432)
!2456 = !DILocation(line: 288, column: 22, scope: !2457)
!2457 = distinct !DILexicalBlock(scope: !2418, file: !103, line: 288, column: 7)
!2458 = !DILocation(line: 288, column: 7, scope: !2457)
!2459 = !DILocation(line: 288, column: 7, scope: !2418)
!2460 = !DILocation(line: 289, column: 19, scope: !2461)
!2461 = distinct !DILexicalBlock(scope: !2457, file: !103, line: 288, column: 29)
!2462 = !DILocation(line: 289, column: 25, scope: !2461)
!2463 = !DILocation(line: 289, column: 12, scope: !2461)
!2464 = !DILocation(line: 289, column: 5, scope: !2461)
!2465 = !DILocation(line: 292, column: 40, scope: !2418)
!2466 = !DILocation(line: 292, column: 34, scope: !2418)
!2467 = !DILocation(line: 293, column: 19, scope: !2418)
!2468 = !DILocation(line: 293, column: 46, scope: !2418)
!2469 = !DILocation(line: 293, column: 26, scope: !2418)
!2470 = !DILocation(line: 293, column: 61, scope: !2418)
!2471 = !DILocation(line: 292, column: 10, scope: !2418)
!2472 = !DILocation(line: 292, column: 3, scope: !2418)
!2473 = !DILocation(line: 294, column: 1, scope: !2418)
!2474 = !DILocalVariable(name: "fd", arg: 1, scope: !102, file: !103, line: 296, type: !44)
!2475 = !DILocation(line: 296, column: 15, scope: !102)
!2476 = !DILocalVariable(name: "f", scope: !102, file: !103, line: 298, type: !1987)
!2477 = !DILocation(line: 298, column: 15, scope: !102)
!2478 = !DILocalVariable(name: "r", scope: !102, file: !103, line: 299, type: !44)
!2479 = !DILocation(line: 299, column: 7, scope: !102)
!2480 = !DILocation(line: 301, column: 10, scope: !102)
!2481 = !DILocation(line: 303, column: 18, scope: !102)
!2482 = !DILocation(line: 303, column: 7, scope: !102)
!2483 = !DILocation(line: 303, column: 5, scope: !102)
!2484 = !DILocation(line: 304, column: 8, scope: !2485)
!2485 = distinct !DILexicalBlock(scope: !102, file: !103, line: 304, column: 7)
!2486 = !DILocation(line: 304, column: 7, scope: !102)
!2487 = !DILocation(line: 305, column: 5, scope: !2488)
!2488 = distinct !DILexicalBlock(scope: !2485, file: !103, line: 304, column: 11)
!2489 = !DILocation(line: 305, column: 11, scope: !2488)
!2490 = !DILocation(line: 306, column: 5, scope: !2488)
!2491 = !DILocation(line: 309, column: 16, scope: !2492)
!2492 = distinct !DILexicalBlock(scope: !102, file: !103, line: 309, column: 7)
!2493 = !DILocation(line: 309, column: 7, scope: !2492)
!2494 = !DILocation(line: 309, column: 29, scope: !2492)
!2495 = !DILocation(line: 309, column: 42, scope: !2492)
!2496 = !DILocation(line: 309, column: 32, scope: !2492)
!2497 = !DILocation(line: 309, column: 56, scope: !2492)
!2498 = !DILocation(line: 309, column: 53, scope: !2492)
!2499 = !DILocation(line: 309, column: 7, scope: !102)
!2500 = !DILocation(line: 310, column: 26, scope: !2501)
!2501 = distinct !DILexicalBlock(scope: !2492, file: !103, line: 309, column: 65)
!2502 = !DILocation(line: 311, column: 5, scope: !2501)
!2503 = !DILocation(line: 311, column: 11, scope: !2501)
!2504 = !DILocation(line: 312, column: 5, scope: !2501)
!2505 = !DILocation(line: 323, column: 10, scope: !102)
!2506 = !DILocation(line: 323, column: 3, scope: !102)
!2507 = !DILocation(line: 325, column: 10, scope: !102)
!2508 = !DILocation(line: 325, column: 3, scope: !102)
!2509 = !DILocation(line: 326, column: 1, scope: !102)
!2510 = !DILocalVariable(name: "fd", arg: 1, scope: !151, file: !103, line: 328, type: !44)
!2511 = !DILocation(line: 328, column: 18, scope: !151)
!2512 = !DILocalVariable(name: "buf", arg: 2, scope: !151, file: !103, line: 328, type: !109)
!2513 = !DILocation(line: 328, column: 28, scope: !151)
!2514 = !DILocalVariable(name: "count", arg: 3, scope: !151, file: !103, line: 328, type: !156)
!2515 = !DILocation(line: 328, column: 40, scope: !151)
!2516 = !DILocalVariable(name: "f", scope: !151, file: !103, line: 330, type: !1987)
!2517 = !DILocation(line: 330, column: 15, scope: !151)
!2518 = !DILocation(line: 332, column: 10, scope: !151)
!2519 = !DILocation(line: 334, column: 7, scope: !2520)
!2520 = distinct !DILexicalBlock(scope: !151, file: !103, line: 334, column: 7)
!2521 = !DILocation(line: 334, column: 13, scope: !2520)
!2522 = !DILocation(line: 334, column: 7, scope: !151)
!2523 = !DILocation(line: 335, column: 5, scope: !2520)
!2524 = !DILocation(line: 337, column: 7, scope: !2525)
!2525 = distinct !DILexicalBlock(scope: !151, file: !103, line: 337, column: 7)
!2526 = !DILocation(line: 337, column: 11, scope: !2525)
!2527 = !DILocation(line: 337, column: 7, scope: !151)
!2528 = !DILocation(line: 338, column: 5, scope: !2529)
!2529 = distinct !DILexicalBlock(scope: !2525, file: !103, line: 337, column: 20)
!2530 = !DILocation(line: 338, column: 11, scope: !2529)
!2531 = !DILocation(line: 339, column: 5, scope: !2529)
!2532 = !DILocation(line: 342, column: 18, scope: !151)
!2533 = !DILocation(line: 342, column: 7, scope: !151)
!2534 = !DILocation(line: 342, column: 5, scope: !151)
!2535 = !DILocation(line: 344, column: 8, scope: !2536)
!2536 = distinct !DILexicalBlock(scope: !151, file: !103, line: 344, column: 7)
!2537 = !DILocation(line: 344, column: 7, scope: !151)
!2538 = !DILocation(line: 345, column: 5, scope: !2539)
!2539 = distinct !DILexicalBlock(scope: !2536, file: !103, line: 344, column: 11)
!2540 = !DILocation(line: 345, column: 11, scope: !2539)
!2541 = !DILocation(line: 346, column: 5, scope: !2539)
!2542 = !DILocation(line: 349, column: 16, scope: !2543)
!2543 = distinct !DILexicalBlock(scope: !151, file: !103, line: 349, column: 7)
!2544 = !DILocation(line: 349, column: 7, scope: !2543)
!2545 = !DILocation(line: 349, column: 29, scope: !2543)
!2546 = !DILocation(line: 349, column: 42, scope: !2543)
!2547 = !DILocation(line: 349, column: 32, scope: !2543)
!2548 = !DILocation(line: 349, column: 55, scope: !2543)
!2549 = !DILocation(line: 349, column: 52, scope: !2543)
!2550 = !DILocation(line: 349, column: 7, scope: !151)
!2551 = !DILocation(line: 350, column: 26, scope: !2552)
!2552 = distinct !DILexicalBlock(scope: !2543, file: !103, line: 349, column: 64)
!2553 = !DILocation(line: 351, column: 5, scope: !2552)
!2554 = !DILocation(line: 351, column: 11, scope: !2552)
!2555 = !DILocation(line: 352, column: 5, scope: !2552)
!2556 = !DILocation(line: 355, column: 8, scope: !2557)
!2557 = distinct !DILexicalBlock(scope: !151, file: !103, line: 355, column: 7)
!2558 = !DILocation(line: 355, column: 11, scope: !2557)
!2559 = !DILocation(line: 355, column: 7, scope: !151)
!2560 = !DILocalVariable(name: "r", scope: !2561, file: !103, line: 357, type: !44)
!2561 = distinct !DILexicalBlock(scope: !2557, file: !103, line: 355, column: 18)
!2562 = !DILocation(line: 357, column: 9, scope: !2561)
!2563 = !DILocation(line: 358, column: 28, scope: !2561)
!2564 = !DILocation(line: 358, column: 11, scope: !2561)
!2565 = !DILocation(line: 358, column: 9, scope: !2561)
!2566 = !DILocation(line: 359, column: 31, scope: !2561)
!2567 = !DILocation(line: 359, column: 13, scope: !2561)
!2568 = !DILocation(line: 359, column: 11, scope: !2561)
!2569 = !DILocation(line: 363, column: 30, scope: !2561)
!2570 = !DILocation(line: 363, column: 35, scope: !2561)
!2571 = !DILocation(line: 363, column: 5, scope: !2561)
!2572 = !DILocation(line: 364, column: 9, scope: !2573)
!2573 = distinct !DILexicalBlock(scope: !2561, file: !103, line: 364, column: 9)
!2574 = !DILocation(line: 364, column: 12, scope: !2573)
!2575 = !DILocation(line: 364, column: 15, scope: !2573)
!2576 = !DILocation(line: 0, scope: !2573)
!2577 = !DILocation(line: 364, column: 9, scope: !2561)
!2578 = !DILocation(line: 365, column: 11, scope: !2573)
!2579 = !DILocation(line: 365, column: 9, scope: !2573)
!2580 = !DILocation(line: 365, column: 7, scope: !2573)
!2581 = !DILocation(line: 367, column: 62, scope: !2573)
!2582 = !DILocation(line: 367, column: 65, scope: !2573)
!2583 = !DILocation(line: 367, column: 11, scope: !2573)
!2584 = !DILocation(line: 367, column: 9, scope: !2573)
!2585 = !DILocation(line: 369, column: 9, scope: !2586)
!2586 = distinct !DILexicalBlock(scope: !2561, file: !103, line: 369, column: 9)
!2587 = !DILocation(line: 369, column: 11, scope: !2586)
!2588 = !DILocation(line: 369, column: 9, scope: !2561)
!2589 = !DILocation(line: 370, column: 7, scope: !2586)
!2590 = !DILocation(line: 372, column: 9, scope: !2591)
!2591 = distinct !DILexicalBlock(scope: !2561, file: !103, line: 372, column: 9)
!2592 = !DILocation(line: 372, column: 12, scope: !2591)
!2593 = !DILocation(line: 372, column: 15, scope: !2591)
!2594 = !DILocation(line: 372, column: 9, scope: !2561)
!2595 = !DILocation(line: 373, column: 17, scope: !2591)
!2596 = !DILocation(line: 373, column: 7, scope: !2591)
!2597 = !DILocation(line: 373, column: 10, scope: !2591)
!2598 = !DILocation(line: 373, column: 14, scope: !2591)
!2599 = !DILocation(line: 374, column: 12, scope: !2561)
!2600 = !DILocation(line: 374, column: 5, scope: !2561)
!2601 = !DILocation(line: 377, column: 5, scope: !2602)
!2602 = distinct !DILexicalBlock(scope: !2603, file: !103, line: 377, column: 5)
!2603 = distinct !DILexicalBlock(scope: !2604, file: !103, line: 377, column: 5)
!2604 = distinct !DILexicalBlock(scope: !2557, file: !103, line: 376, column: 8)
!2605 = !DILocation(line: 377, column: 5, scope: !2603)
!2606 = !DILocation(line: 378, column: 19, scope: !2607)
!2607 = distinct !DILexicalBlock(scope: !2604, file: !103, line: 378, column: 9)
!2608 = !DILocation(line: 378, column: 22, scope: !2607)
!2609 = !DILocation(line: 378, column: 29, scope: !2607)
!2610 = !DILocation(line: 378, column: 10, scope: !2607)
!2611 = !DILocation(line: 378, column: 37, scope: !2607)
!2612 = !DILocation(line: 378, column: 40, scope: !2607)
!2613 = !DILocation(line: 378, column: 35, scope: !2607)
!2614 = !DILocation(line: 378, column: 9, scope: !2604)
!2615 = !DILocation(line: 379, column: 7, scope: !2607)
!2616 = !DILocation(line: 382, column: 9, scope: !2617)
!2617 = distinct !DILexicalBlock(scope: !2604, file: !103, line: 382, column: 9)
!2618 = !DILocation(line: 382, column: 12, scope: !2617)
!2619 = !DILocation(line: 382, column: 18, scope: !2617)
!2620 = !DILocation(line: 382, column: 16, scope: !2617)
!2621 = !DILocation(line: 382, column: 26, scope: !2617)
!2622 = !DILocation(line: 382, column: 29, scope: !2617)
!2623 = !DILocation(line: 382, column: 36, scope: !2617)
!2624 = !DILocation(line: 382, column: 24, scope: !2617)
!2625 = !DILocation(line: 382, column: 9, scope: !2604)
!2626 = !DILocation(line: 383, column: 15, scope: !2627)
!2627 = distinct !DILexicalBlock(scope: !2617, file: !103, line: 382, column: 42)
!2628 = !DILocation(line: 383, column: 18, scope: !2627)
!2629 = !DILocation(line: 383, column: 25, scope: !2627)
!2630 = !DILocation(line: 383, column: 32, scope: !2627)
!2631 = !DILocation(line: 383, column: 35, scope: !2627)
!2632 = !DILocation(line: 383, column: 30, scope: !2627)
!2633 = !DILocation(line: 383, column: 13, scope: !2627)
!2634 = !DILocation(line: 384, column: 5, scope: !2627)
!2635 = !DILocation(line: 386, column: 12, scope: !2604)
!2636 = !DILocation(line: 386, column: 17, scope: !2604)
!2637 = !DILocation(line: 386, column: 20, scope: !2604)
!2638 = !DILocation(line: 386, column: 27, scope: !2604)
!2639 = !DILocation(line: 386, column: 38, scope: !2604)
!2640 = !DILocation(line: 386, column: 41, scope: !2604)
!2641 = !DILocation(line: 386, column: 36, scope: !2604)
!2642 = !DILocation(line: 386, column: 46, scope: !2604)
!2643 = !DILocation(line: 386, column: 5, scope: !2604)
!2644 = !DILocation(line: 387, column: 15, scope: !2604)
!2645 = !DILocation(line: 387, column: 5, scope: !2604)
!2646 = !DILocation(line: 387, column: 8, scope: !2604)
!2647 = !DILocation(line: 387, column: 12, scope: !2604)
!2648 = !DILocation(line: 389, column: 12, scope: !2604)
!2649 = !DILocation(line: 389, column: 5, scope: !2604)
!2650 = !DILocation(line: 391, column: 1, scope: !151)
!2651 = distinct !DISubprogram(name: "__concretize_size", scope: !103, file: !103, line: 1345, type: !2652, scopeLine: 1345, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !106, retainedNodes: !4)
!2652 = !DISubroutineType(types: !2653)
!2653 = !{!156, !156}
!2654 = !DILocalVariable(name: "s", arg: 1, scope: !2651, file: !103, line: 1345, type: !156)
!2655 = !DILocation(line: 1345, column: 40, scope: !2651)
!2656 = !DILocalVariable(name: "sc", scope: !2651, file: !103, line: 1346, type: !156)
!2657 = !DILocation(line: 1346, column: 10, scope: !2651)
!2658 = !DILocation(line: 1346, column: 37, scope: !2651)
!2659 = !DILocation(line: 1346, column: 15, scope: !2651)
!2660 = !DILocation(line: 1347, column: 15, scope: !2651)
!2661 = !DILocation(line: 1347, column: 21, scope: !2651)
!2662 = !DILocation(line: 1347, column: 18, scope: !2651)
!2663 = !DILocation(line: 1347, column: 3, scope: !2651)
!2664 = !DILocation(line: 1348, column: 10, scope: !2651)
!2665 = !DILocation(line: 1348, column: 3, scope: !2651)
!2666 = !DILocalVariable(name: "fd", arg: 1, scope: !160, file: !103, line: 394, type: !44)
!2667 = !DILocation(line: 394, column: 19, scope: !160)
!2668 = !DILocalVariable(name: "buf", arg: 2, scope: !160, file: !103, line: 394, type: !163)
!2669 = !DILocation(line: 394, column: 35, scope: !160)
!2670 = !DILocalVariable(name: "count", arg: 3, scope: !160, file: !103, line: 394, type: !156)
!2671 = !DILocation(line: 394, column: 47, scope: !160)
!2672 = !DILocalVariable(name: "f", scope: !160, file: !103, line: 396, type: !1987)
!2673 = !DILocation(line: 396, column: 15, scope: !160)
!2674 = !DILocation(line: 398, column: 10, scope: !160)
!2675 = !DILocation(line: 400, column: 18, scope: !160)
!2676 = !DILocation(line: 400, column: 7, scope: !160)
!2677 = !DILocation(line: 400, column: 5, scope: !160)
!2678 = !DILocation(line: 402, column: 8, scope: !2679)
!2679 = distinct !DILexicalBlock(scope: !160, file: !103, line: 402, column: 7)
!2680 = !DILocation(line: 402, column: 7, scope: !160)
!2681 = !DILocation(line: 403, column: 5, scope: !2682)
!2682 = distinct !DILexicalBlock(scope: !2679, file: !103, line: 402, column: 11)
!2683 = !DILocation(line: 403, column: 11, scope: !2682)
!2684 = !DILocation(line: 404, column: 5, scope: !2682)
!2685 = !DILocation(line: 407, column: 16, scope: !2686)
!2686 = distinct !DILexicalBlock(scope: !160, file: !103, line: 407, column: 7)
!2687 = !DILocation(line: 407, column: 7, scope: !2686)
!2688 = !DILocation(line: 407, column: 29, scope: !2686)
!2689 = !DILocation(line: 407, column: 42, scope: !2686)
!2690 = !DILocation(line: 407, column: 32, scope: !2686)
!2691 = !DILocation(line: 407, column: 56, scope: !2686)
!2692 = !DILocation(line: 407, column: 53, scope: !2686)
!2693 = !DILocation(line: 407, column: 7, scope: !160)
!2694 = !DILocation(line: 408, column: 26, scope: !2695)
!2695 = distinct !DILexicalBlock(scope: !2686, file: !103, line: 407, column: 65)
!2696 = !DILocation(line: 409, column: 5, scope: !2695)
!2697 = !DILocation(line: 409, column: 11, scope: !2695)
!2698 = !DILocation(line: 410, column: 5, scope: !2695)
!2699 = !DILocation(line: 413, column: 8, scope: !2700)
!2700 = distinct !DILexicalBlock(scope: !160, file: !103, line: 413, column: 7)
!2701 = !DILocation(line: 413, column: 11, scope: !2700)
!2702 = !DILocation(line: 413, column: 7, scope: !160)
!2703 = !DILocalVariable(name: "r", scope: !2704, file: !103, line: 414, type: !44)
!2704 = distinct !DILexicalBlock(scope: !2700, file: !103, line: 413, column: 18)
!2705 = !DILocation(line: 414, column: 9, scope: !2704)
!2706 = !DILocation(line: 416, column: 28, scope: !2704)
!2707 = !DILocation(line: 416, column: 11, scope: !2704)
!2708 = !DILocation(line: 416, column: 9, scope: !2704)
!2709 = !DILocation(line: 417, column: 31, scope: !2704)
!2710 = !DILocation(line: 417, column: 13, scope: !2704)
!2711 = !DILocation(line: 417, column: 11, scope: !2704)
!2712 = !DILocation(line: 421, column: 30, scope: !2704)
!2713 = !DILocation(line: 421, column: 35, scope: !2704)
!2714 = !DILocation(line: 421, column: 5, scope: !2704)
!2715 = !DILocation(line: 422, column: 9, scope: !2716)
!2716 = distinct !DILexicalBlock(scope: !2704, file: !103, line: 422, column: 9)
!2717 = !DILocation(line: 422, column: 12, scope: !2716)
!2718 = !DILocation(line: 422, column: 15, scope: !2716)
!2719 = !DILocation(line: 422, column: 20, scope: !2716)
!2720 = !DILocation(line: 422, column: 23, scope: !2716)
!2721 = !DILocation(line: 422, column: 26, scope: !2716)
!2722 = !DILocation(line: 422, column: 29, scope: !2716)
!2723 = !DILocation(line: 422, column: 9, scope: !2704)
!2724 = !DILocation(line: 423, column: 31, scope: !2716)
!2725 = !DILocation(line: 423, column: 34, scope: !2716)
!2726 = !DILocation(line: 423, column: 38, scope: !2716)
!2727 = !DILocation(line: 423, column: 43, scope: !2716)
!2728 = !DILocation(line: 423, column: 11, scope: !2716)
!2729 = !DILocation(line: 423, column: 9, scope: !2716)
!2730 = !DILocation(line: 423, column: 7, scope: !2716)
!2731 = !DILocation(line: 424, column: 37, scope: !2716)
!2732 = !DILocation(line: 424, column: 40, scope: !2716)
!2733 = !DILocation(line: 424, column: 44, scope: !2716)
!2734 = !DILocation(line: 424, column: 49, scope: !2716)
!2735 = !DILocation(line: 424, column: 66, scope: !2716)
!2736 = !DILocation(line: 424, column: 69, scope: !2716)
!2737 = !DILocation(line: 424, column: 14, scope: !2716)
!2738 = !DILocation(line: 424, column: 12, scope: !2716)
!2739 = !DILocation(line: 426, column: 9, scope: !2740)
!2740 = distinct !DILexicalBlock(scope: !2704, file: !103, line: 426, column: 9)
!2741 = !DILocation(line: 426, column: 11, scope: !2740)
!2742 = !DILocation(line: 426, column: 9, scope: !2704)
!2743 = !DILocation(line: 427, column: 7, scope: !2740)
!2744 = !DILocation(line: 429, column: 5, scope: !2745)
!2745 = distinct !DILexicalBlock(scope: !2746, file: !103, line: 429, column: 5)
!2746 = distinct !DILexicalBlock(scope: !2704, file: !103, line: 429, column: 5)
!2747 = !DILocation(line: 429, column: 5, scope: !2746)
!2748 = !DILocation(line: 430, column: 9, scope: !2749)
!2749 = distinct !DILexicalBlock(scope: !2704, file: !103, line: 430, column: 9)
!2750 = !DILocation(line: 430, column: 12, scope: !2749)
!2751 = !DILocation(line: 430, column: 15, scope: !2749)
!2752 = !DILocation(line: 430, column: 20, scope: !2749)
!2753 = !DILocation(line: 430, column: 23, scope: !2749)
!2754 = !DILocation(line: 430, column: 26, scope: !2749)
!2755 = !DILocation(line: 430, column: 29, scope: !2749)
!2756 = !DILocation(line: 430, column: 9, scope: !2704)
!2757 = !DILocation(line: 431, column: 17, scope: !2749)
!2758 = !DILocation(line: 431, column: 7, scope: !2749)
!2759 = !DILocation(line: 431, column: 10, scope: !2749)
!2760 = !DILocation(line: 431, column: 14, scope: !2749)
!2761 = !DILocation(line: 433, column: 12, scope: !2704)
!2762 = !DILocation(line: 433, column: 5, scope: !2704)
!2763 = !DILocalVariable(name: "actual_count", scope: !2764, file: !103, line: 437, type: !156)
!2764 = distinct !DILexicalBlock(scope: !2700, file: !103, line: 435, column: 8)
!2765 = !DILocation(line: 437, column: 12, scope: !2764)
!2766 = !DILocation(line: 438, column: 9, scope: !2767)
!2767 = distinct !DILexicalBlock(scope: !2764, file: !103, line: 438, column: 9)
!2768 = !DILocation(line: 438, column: 12, scope: !2767)
!2769 = !DILocation(line: 438, column: 18, scope: !2767)
!2770 = !DILocation(line: 438, column: 16, scope: !2767)
!2771 = !DILocation(line: 438, column: 27, scope: !2767)
!2772 = !DILocation(line: 438, column: 30, scope: !2767)
!2773 = !DILocation(line: 438, column: 37, scope: !2767)
!2774 = !DILocation(line: 438, column: 24, scope: !2767)
!2775 = !DILocation(line: 438, column: 9, scope: !2764)
!2776 = !DILocation(line: 439, column: 22, scope: !2767)
!2777 = !DILocation(line: 439, column: 20, scope: !2767)
!2778 = !DILocation(line: 439, column: 7, scope: !2767)
!2779 = !DILocation(line: 441, column: 21, scope: !2780)
!2780 = distinct !DILexicalBlock(scope: !2781, file: !103, line: 441, column: 11)
!2781 = distinct !DILexicalBlock(scope: !2767, file: !103, line: 440, column: 10)
!2782 = !DILocation(line: 441, column: 11, scope: !2780)
!2783 = !DILocation(line: 441, column: 11, scope: !2781)
!2784 = !DILocation(line: 442, column: 2, scope: !2785)
!2785 = distinct !DILexicalBlock(scope: !2786, file: !103, line: 442, column: 2)
!2786 = distinct !DILexicalBlock(scope: !2780, file: !103, line: 442, column: 2)
!2787 = !DILocation(line: 444, column: 6, scope: !2788)
!2788 = distinct !DILexicalBlock(scope: !2789, file: !103, line: 444, column: 6)
!2789 = distinct !DILexicalBlock(scope: !2780, file: !103, line: 443, column: 12)
!2790 = !DILocation(line: 444, column: 9, scope: !2788)
!2791 = !DILocation(line: 444, column: 25, scope: !2788)
!2792 = !DILocation(line: 444, column: 28, scope: !2788)
!2793 = !DILocation(line: 444, column: 35, scope: !2788)
!2794 = !DILocation(line: 444, column: 15, scope: !2788)
!2795 = !DILocation(line: 444, column: 13, scope: !2788)
!2796 = !DILocation(line: 444, column: 6, scope: !2789)
!2797 = !DILocation(line: 445, column: 19, scope: !2788)
!2798 = !DILocation(line: 445, column: 22, scope: !2788)
!2799 = !DILocation(line: 445, column: 29, scope: !2788)
!2800 = !DILocation(line: 445, column: 36, scope: !2788)
!2801 = !DILocation(line: 445, column: 39, scope: !2788)
!2802 = !DILocation(line: 445, column: 34, scope: !2788)
!2803 = !DILocation(line: 445, column: 17, scope: !2788)
!2804 = !DILocation(line: 445, column: 4, scope: !2788)
!2805 = !DILocation(line: 449, column: 9, scope: !2806)
!2806 = distinct !DILexicalBlock(scope: !2764, file: !103, line: 449, column: 9)
!2807 = !DILocation(line: 449, column: 9, scope: !2764)
!2808 = !DILocation(line: 450, column: 14, scope: !2806)
!2809 = !DILocation(line: 450, column: 17, scope: !2806)
!2810 = !DILocation(line: 450, column: 24, scope: !2806)
!2811 = !DILocation(line: 450, column: 35, scope: !2806)
!2812 = !DILocation(line: 450, column: 38, scope: !2806)
!2813 = !DILocation(line: 450, column: 33, scope: !2806)
!2814 = !DILocation(line: 450, column: 43, scope: !2806)
!2815 = !DILocation(line: 450, column: 48, scope: !2806)
!2816 = !DILocation(line: 450, column: 7, scope: !2806)
!2817 = !DILocation(line: 452, column: 9, scope: !2818)
!2818 = distinct !DILexicalBlock(scope: !2764, file: !103, line: 452, column: 9)
!2819 = !DILocation(line: 452, column: 18, scope: !2818)
!2820 = !DILocation(line: 452, column: 15, scope: !2818)
!2821 = !DILocation(line: 452, column: 9, scope: !2764)
!2822 = !DILocation(line: 453, column: 7, scope: !2818)
!2823 = !DILocation(line: 455, column: 9, scope: !2824)
!2824 = distinct !DILexicalBlock(scope: !2764, file: !103, line: 455, column: 9)
!2825 = !DILocation(line: 455, column: 12, scope: !2824)
!2826 = !DILocation(line: 455, column: 30, scope: !2824)
!2827 = !DILocation(line: 455, column: 18, scope: !2824)
!2828 = !DILocation(line: 455, column: 9, scope: !2764)
!2829 = !DILocation(line: 456, column: 33, scope: !2824)
!2830 = !DILocation(line: 456, column: 30, scope: !2824)
!2831 = !DILocation(line: 456, column: 7, scope: !2824)
!2832 = !DILocation(line: 458, column: 15, scope: !2764)
!2833 = !DILocation(line: 458, column: 5, scope: !2764)
!2834 = !DILocation(line: 458, column: 8, scope: !2764)
!2835 = !DILocation(line: 458, column: 12, scope: !2764)
!2836 = !DILocation(line: 459, column: 12, scope: !2764)
!2837 = !DILocation(line: 459, column: 5, scope: !2764)
!2838 = !DILocation(line: 461, column: 1, scope: !160)
!2839 = distinct !DISubprogram(name: "__fd_lseek", scope: !103, file: !103, line: 464, type: !2840, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !106, retainedNodes: !4)
!2840 = !DISubroutineType(types: !2841)
!2841 = !{!90, !44, !90, !44}
!2842 = !DILocalVariable(name: "fd", arg: 1, scope: !2839, file: !103, line: 464, type: !44)
!2843 = !DILocation(line: 464, column: 24, scope: !2839)
!2844 = !DILocalVariable(name: "offset", arg: 2, scope: !2839, file: !103, line: 464, type: !90)
!2845 = !DILocation(line: 464, column: 36, scope: !2839)
!2846 = !DILocalVariable(name: "whence", arg: 3, scope: !2839, file: !103, line: 464, type: !44)
!2847 = !DILocation(line: 464, column: 48, scope: !2839)
!2848 = !DILocalVariable(name: "new_off", scope: !2839, file: !103, line: 465, type: !90)
!2849 = !DILocation(line: 465, column: 11, scope: !2839)
!2850 = !DILocalVariable(name: "f", scope: !2839, file: !103, line: 466, type: !1987)
!2851 = !DILocation(line: 466, column: 15, scope: !2839)
!2852 = !DILocation(line: 466, column: 30, scope: !2839)
!2853 = !DILocation(line: 466, column: 19, scope: !2839)
!2854 = !DILocation(line: 468, column: 8, scope: !2855)
!2855 = distinct !DILexicalBlock(scope: !2839, file: !103, line: 468, column: 7)
!2856 = !DILocation(line: 468, column: 7, scope: !2839)
!2857 = !DILocation(line: 469, column: 5, scope: !2858)
!2858 = distinct !DILexicalBlock(scope: !2855, file: !103, line: 468, column: 11)
!2859 = !DILocation(line: 469, column: 11, scope: !2858)
!2860 = !DILocation(line: 470, column: 5, scope: !2858)
!2861 = !DILocation(line: 473, column: 8, scope: !2862)
!2862 = distinct !DILexicalBlock(scope: !2839, file: !103, line: 473, column: 7)
!2863 = !DILocation(line: 473, column: 11, scope: !2862)
!2864 = !DILocation(line: 0, scope: !2839)
!2865 = !DILocation(line: 473, column: 7, scope: !2839)
!2866 = !DILocation(line: 480, column: 16, scope: !2867)
!2867 = distinct !DILexicalBlock(scope: !2868, file: !103, line: 480, column: 9)
!2868 = distinct !DILexicalBlock(scope: !2862, file: !103, line: 473, column: 18)
!2869 = !DILocation(line: 0, scope: !2867)
!2870 = !DILocation(line: 480, column: 9, scope: !2868)
!2871 = !DILocation(line: 481, column: 44, scope: !2872)
!2872 = distinct !DILexicalBlock(scope: !2867, file: !103, line: 480, column: 29)
!2873 = !DILocation(line: 481, column: 17, scope: !2872)
!2874 = !DILocation(line: 481, column: 15, scope: !2872)
!2875 = !DILocation(line: 482, column: 5, scope: !2872)
!2876 = !DILocation(line: 483, column: 44, scope: !2877)
!2877 = distinct !DILexicalBlock(scope: !2867, file: !103, line: 482, column: 12)
!2878 = !DILocation(line: 483, column: 47, scope: !2877)
!2879 = !DILocation(line: 483, column: 17, scope: !2877)
!2880 = !DILocation(line: 483, column: 15, scope: !2877)
!2881 = !DILocation(line: 487, column: 11, scope: !2882)
!2882 = distinct !DILexicalBlock(scope: !2877, file: !103, line: 487, column: 11)
!2883 = !DILocation(line: 487, column: 19, scope: !2882)
!2884 = !DILocation(line: 487, column: 11, scope: !2877)
!2885 = !DILocation(line: 488, column: 9, scope: !2886)
!2886 = distinct !DILexicalBlock(scope: !2887, file: !103, line: 488, column: 9)
!2887 = distinct !DILexicalBlock(scope: !2888, file: !103, line: 488, column: 9)
!2888 = distinct !DILexicalBlock(scope: !2882, file: !103, line: 487, column: 26)
!2889 = !DILocation(line: 488, column: 9, scope: !2887)
!2890 = !DILocation(line: 489, column: 39, scope: !2888)
!2891 = !DILocation(line: 489, column: 42, scope: !2888)
!2892 = !DILocation(line: 489, column: 46, scope: !2888)
!2893 = !DILocation(line: 489, column: 54, scope: !2888)
!2894 = !DILocation(line: 489, column: 19, scope: !2888)
!2895 = !DILocation(line: 489, column: 17, scope: !2888)
!2896 = !DILocation(line: 490, column: 7, scope: !2888)
!2897 = !DILocation(line: 493, column: 9, scope: !2898)
!2898 = distinct !DILexicalBlock(scope: !2868, file: !103, line: 493, column: 9)
!2899 = !DILocation(line: 493, column: 17, scope: !2898)
!2900 = !DILocation(line: 493, column: 9, scope: !2868)
!2901 = !DILocation(line: 494, column: 7, scope: !2898)
!2902 = !DILocation(line: 496, column: 14, scope: !2868)
!2903 = !DILocation(line: 496, column: 5, scope: !2868)
!2904 = !DILocation(line: 496, column: 8, scope: !2868)
!2905 = !DILocation(line: 496, column: 12, scope: !2868)
!2906 = !DILocation(line: 497, column: 12, scope: !2868)
!2907 = !DILocation(line: 497, column: 5, scope: !2868)
!2908 = !DILocation(line: 500, column: 3, scope: !2839)
!2909 = !DILocation(line: 501, column: 28, scope: !2910)
!2910 = distinct !DILexicalBlock(scope: !2839, file: !103, line: 500, column: 19)
!2911 = !DILocation(line: 501, column: 26, scope: !2910)
!2912 = !DILocation(line: 501, column: 36, scope: !2910)
!2913 = !DILocation(line: 502, column: 28, scope: !2910)
!2914 = !DILocation(line: 502, column: 31, scope: !2910)
!2915 = !DILocation(line: 502, column: 37, scope: !2910)
!2916 = !DILocation(line: 502, column: 35, scope: !2910)
!2917 = !DILocation(line: 502, column: 26, scope: !2910)
!2918 = !DILocation(line: 502, column: 45, scope: !2910)
!2919 = !DILocation(line: 503, column: 28, scope: !2910)
!2920 = !DILocation(line: 503, column: 31, scope: !2910)
!2921 = !DILocation(line: 503, column: 38, scope: !2910)
!2922 = !DILocation(line: 503, column: 45, scope: !2910)
!2923 = !DILocation(line: 503, column: 43, scope: !2910)
!2924 = !DILocation(line: 503, column: 26, scope: !2910)
!2925 = !DILocation(line: 503, column: 53, scope: !2910)
!2926 = !DILocation(line: 505, column: 5, scope: !2927)
!2927 = distinct !DILexicalBlock(scope: !2910, file: !103, line: 504, column: 12)
!2928 = !DILocation(line: 505, column: 11, scope: !2927)
!2929 = !DILocation(line: 506, column: 5, scope: !2927)
!2930 = !DILocation(line: 510, column: 7, scope: !2931)
!2931 = distinct !DILexicalBlock(scope: !2839, file: !103, line: 510, column: 7)
!2932 = !DILocation(line: 510, column: 15, scope: !2931)
!2933 = !DILocation(line: 510, column: 7, scope: !2839)
!2934 = !DILocation(line: 511, column: 5, scope: !2935)
!2935 = distinct !DILexicalBlock(scope: !2931, file: !103, line: 510, column: 20)
!2936 = !DILocation(line: 511, column: 11, scope: !2935)
!2937 = !DILocation(line: 512, column: 5, scope: !2935)
!2938 = !DILocation(line: 515, column: 12, scope: !2839)
!2939 = !DILocation(line: 515, column: 3, scope: !2839)
!2940 = !DILocation(line: 515, column: 6, scope: !2839)
!2941 = !DILocation(line: 515, column: 10, scope: !2839)
!2942 = !DILocation(line: 516, column: 10, scope: !2839)
!2943 = !DILocation(line: 516, column: 13, scope: !2839)
!2944 = !DILocation(line: 516, column: 3, scope: !2839)
!2945 = !DILocation(line: 517, column: 1, scope: !2839)
!2946 = distinct !DISubprogram(name: "__fd_stat", scope: !103, file: !103, line: 519, type: !2947, scopeLine: 519, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !106, retainedNodes: !4)
!2947 = !DISubroutineType(types: !2948)
!2948 = !{!44, !170, !1779}
!2949 = !DILocalVariable(name: "path", arg: 1, scope: !2946, file: !103, line: 519, type: !170)
!2950 = !DILocation(line: 519, column: 27, scope: !2946)
!2951 = !DILocalVariable(name: "buf", arg: 2, scope: !2946, file: !103, line: 519, type: !1779)
!2952 = !DILocation(line: 519, column: 48, scope: !2946)
!2953 = !DILocalVariable(name: "dfile", scope: !2946, file: !103, line: 520, type: !1772)
!2954 = !DILocation(line: 520, column: 20, scope: !2946)
!2955 = !DILocation(line: 520, column: 43, scope: !2946)
!2956 = !DILocation(line: 520, column: 28, scope: !2946)
!2957 = !DILocation(line: 521, column: 7, scope: !2958)
!2958 = distinct !DILexicalBlock(scope: !2946, file: !103, line: 521, column: 7)
!2959 = !DILocation(line: 521, column: 7, scope: !2946)
!2960 = !DILocation(line: 522, column: 12, scope: !2961)
!2961 = distinct !DILexicalBlock(scope: !2958, file: !103, line: 521, column: 14)
!2962 = !DILocation(line: 522, column: 5, scope: !2961)
!2963 = !DILocation(line: 522, column: 17, scope: !2961)
!2964 = !DILocation(line: 522, column: 24, scope: !2961)
!2965 = !DILocation(line: 523, column: 5, scope: !2961)
!2966 = !DILocation(line: 528, column: 51, scope: !2967)
!2967 = distinct !DILexicalBlock(scope: !2946, file: !103, line: 526, column: 3)
!2968 = !DILocation(line: 528, column: 31, scope: !2967)
!2969 = !DILocation(line: 528, column: 58, scope: !2967)
!2970 = !DILocation(line: 528, column: 12, scope: !2967)
!2971 = !DILocation(line: 528, column: 5, scope: !2967)
!2972 = !DILocation(line: 533, column: 1, scope: !2946)
!2973 = distinct !DISubprogram(name: "fstatat", scope: !103, file: !103, line: 535, type: !2974, scopeLine: 535, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !106, retainedNodes: !4)
!2974 = !DISubroutineType(types: !2975)
!2975 = !{!44, !44, !170, !124, !44}
!2976 = !DILocalVariable(name: "fd", arg: 1, scope: !2973, file: !103, line: 535, type: !44)
!2977 = !DILocation(line: 535, column: 17, scope: !2973)
!2978 = !DILocalVariable(name: "path", arg: 2, scope: !2973, file: !103, line: 535, type: !170)
!2979 = !DILocation(line: 535, column: 33, scope: !2973)
!2980 = !DILocalVariable(name: "buf", arg: 3, scope: !2973, file: !103, line: 535, type: !124)
!2981 = !DILocation(line: 535, column: 52, scope: !2973)
!2982 = !DILocalVariable(name: "flags", arg: 4, scope: !2973, file: !103, line: 535, type: !44)
!2983 = !DILocation(line: 535, column: 61, scope: !2973)
!2984 = !DILocation(line: 536, column: 7, scope: !2985)
!2985 = distinct !DILexicalBlock(scope: !2973, file: !103, line: 536, column: 7)
!2986 = !DILocation(line: 536, column: 10, scope: !2985)
!2987 = !DILocation(line: 536, column: 7, scope: !2973)
!2988 = !DILocalVariable(name: "f", scope: !2989, file: !103, line: 537, type: !1987)
!2989 = distinct !DILexicalBlock(scope: !2985, file: !103, line: 536, column: 23)
!2990 = !DILocation(line: 537, column: 17, scope: !2989)
!2991 = !DILocation(line: 537, column: 32, scope: !2989)
!2992 = !DILocation(line: 537, column: 21, scope: !2989)
!2993 = !DILocation(line: 539, column: 10, scope: !2994)
!2994 = distinct !DILexicalBlock(scope: !2989, file: !103, line: 539, column: 9)
!2995 = !DILocation(line: 539, column: 9, scope: !2989)
!2996 = !DILocation(line: 540, column: 7, scope: !2997)
!2997 = distinct !DILexicalBlock(scope: !2994, file: !103, line: 539, column: 13)
!2998 = !DILocation(line: 540, column: 13, scope: !2997)
!2999 = !DILocation(line: 541, column: 7, scope: !2997)
!3000 = !DILocation(line: 542, column: 16, scope: !3001)
!3001 = distinct !DILexicalBlock(scope: !2994, file: !103, line: 542, column: 16)
!3002 = !DILocation(line: 542, column: 19, scope: !3001)
!3003 = !DILocation(line: 542, column: 16, scope: !2994)
!3004 = !DILocation(line: 543, column: 7, scope: !3005)
!3005 = distinct !DILexicalBlock(scope: !3001, file: !103, line: 542, column: 26)
!3006 = !DILocation(line: 544, column: 7, scope: !3005)
!3007 = !DILocation(line: 544, column: 13, scope: !3005)
!3008 = !DILocation(line: 545, column: 7, scope: !3005)
!3009 = !DILocation(line: 547, column: 10, scope: !2989)
!3010 = !DILocation(line: 547, column: 13, scope: !2989)
!3011 = !DILocation(line: 547, column: 8, scope: !2989)
!3012 = !DILocation(line: 548, column: 3, scope: !2989)
!3013 = !DILocalVariable(name: "dfile", scope: !2973, file: !103, line: 549, type: !1772)
!3014 = !DILocation(line: 549, column: 20, scope: !2973)
!3015 = !DILocation(line: 549, column: 43, scope: !2973)
!3016 = !DILocation(line: 549, column: 28, scope: !2973)
!3017 = !DILocation(line: 550, column: 7, scope: !3018)
!3018 = distinct !DILexicalBlock(scope: !2973, file: !103, line: 550, column: 7)
!3019 = !DILocation(line: 550, column: 7, scope: !2973)
!3020 = !DILocation(line: 551, column: 12, scope: !3021)
!3021 = distinct !DILexicalBlock(scope: !3018, file: !103, line: 550, column: 14)
!3022 = !DILocation(line: 551, column: 5, scope: !3021)
!3023 = !DILocation(line: 551, column: 17, scope: !3021)
!3024 = !DILocation(line: 551, column: 24, scope: !3021)
!3025 = !DILocation(line: 552, column: 5, scope: !3021)
!3026 = !DILocation(line: 556, column: 41, scope: !2973)
!3027 = !DILocation(line: 556, column: 35, scope: !2973)
!3028 = !DILocation(line: 557, column: 19, scope: !2973)
!3029 = !DILocation(line: 557, column: 46, scope: !2973)
!3030 = !DILocation(line: 557, column: 26, scope: !2973)
!3031 = !DILocation(line: 557, column: 61, scope: !2973)
!3032 = !DILocation(line: 557, column: 72, scope: !2973)
!3033 = !DILocation(line: 557, column: 66, scope: !2973)
!3034 = !DILocation(line: 556, column: 10, scope: !2973)
!3035 = !DILocation(line: 556, column: 3, scope: !2973)
!3036 = !DILocation(line: 562, column: 1, scope: !2973)
!3037 = distinct !DISubprogram(name: "__fd_lstat", scope: !103, file: !103, line: 565, type: !2947, scopeLine: 565, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !106, retainedNodes: !4)
!3038 = !DILocalVariable(name: "path", arg: 1, scope: !3037, file: !103, line: 565, type: !170)
!3039 = !DILocation(line: 565, column: 28, scope: !3037)
!3040 = !DILocalVariable(name: "buf", arg: 2, scope: !3037, file: !103, line: 565, type: !1779)
!3041 = !DILocation(line: 565, column: 49, scope: !3037)
!3042 = !DILocalVariable(name: "dfile", scope: !3037, file: !103, line: 566, type: !1772)
!3043 = !DILocation(line: 566, column: 20, scope: !3037)
!3044 = !DILocation(line: 566, column: 43, scope: !3037)
!3045 = !DILocation(line: 566, column: 28, scope: !3037)
!3046 = !DILocation(line: 567, column: 7, scope: !3047)
!3047 = distinct !DILexicalBlock(scope: !3037, file: !103, line: 567, column: 7)
!3048 = !DILocation(line: 567, column: 7, scope: !3037)
!3049 = !DILocation(line: 568, column: 12, scope: !3050)
!3050 = distinct !DILexicalBlock(scope: !3047, file: !103, line: 567, column: 14)
!3051 = !DILocation(line: 568, column: 5, scope: !3050)
!3052 = !DILocation(line: 568, column: 17, scope: !3050)
!3053 = !DILocation(line: 568, column: 24, scope: !3050)
!3054 = !DILocation(line: 569, column: 5, scope: !3050)
!3055 = !DILocation(line: 574, column: 52, scope: !3056)
!3056 = distinct !DILexicalBlock(scope: !3037, file: !103, line: 572, column: 3)
!3057 = !DILocation(line: 574, column: 32, scope: !3056)
!3058 = !DILocation(line: 574, column: 59, scope: !3056)
!3059 = !DILocation(line: 574, column: 12, scope: !3056)
!3060 = !DILocation(line: 574, column: 5, scope: !3056)
!3061 = !DILocation(line: 579, column: 1, scope: !3037)
!3062 = distinct !DISubprogram(name: "chdir", scope: !103, file: !103, line: 581, type: !3063, scopeLine: 581, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !106, retainedNodes: !4)
!3063 = !DISubroutineType(types: !3064)
!3064 = !{!44, !170}
!3065 = !DILocalVariable(name: "path", arg: 1, scope: !3062, file: !103, line: 581, type: !170)
!3066 = !DILocation(line: 581, column: 23, scope: !3062)
!3067 = !DILocalVariable(name: "dfile", scope: !3062, file: !103, line: 582, type: !1772)
!3068 = !DILocation(line: 582, column: 20, scope: !3062)
!3069 = !DILocation(line: 582, column: 43, scope: !3062)
!3070 = !DILocation(line: 582, column: 28, scope: !3062)
!3071 = !DILocation(line: 584, column: 7, scope: !3072)
!3072 = distinct !DILexicalBlock(scope: !3062, file: !103, line: 584, column: 7)
!3073 = !DILocation(line: 584, column: 7, scope: !3062)
!3074 = !DILocation(line: 586, column: 5, scope: !3075)
!3075 = distinct !DILexicalBlock(scope: !3072, file: !103, line: 584, column: 14)
!3076 = !DILocation(line: 587, column: 5, scope: !3075)
!3077 = !DILocation(line: 587, column: 11, scope: !3075)
!3078 = !DILocation(line: 588, column: 5, scope: !3075)
!3079 = !DILocation(line: 591, column: 50, scope: !3062)
!3080 = !DILocation(line: 591, column: 30, scope: !3062)
!3081 = !DILocation(line: 591, column: 10, scope: !3062)
!3082 = !DILocation(line: 591, column: 3, scope: !3062)
!3083 = !DILocation(line: 592, column: 1, scope: !3062)
!3084 = distinct !DISubprogram(name: "fchdir", scope: !103, file: !103, line: 594, type: !104, scopeLine: 594, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !106, retainedNodes: !4)
!3085 = !DILocalVariable(name: "fd", arg: 1, scope: !3084, file: !103, line: 594, type: !44)
!3086 = !DILocation(line: 594, column: 16, scope: !3084)
!3087 = !DILocalVariable(name: "f", scope: !3084, file: !103, line: 595, type: !1987)
!3088 = !DILocation(line: 595, column: 15, scope: !3084)
!3089 = !DILocation(line: 595, column: 30, scope: !3084)
!3090 = !DILocation(line: 595, column: 19, scope: !3084)
!3091 = !DILocation(line: 597, column: 8, scope: !3092)
!3092 = distinct !DILexicalBlock(scope: !3084, file: !103, line: 597, column: 7)
!3093 = !DILocation(line: 597, column: 7, scope: !3084)
!3094 = !DILocation(line: 598, column: 5, scope: !3095)
!3095 = distinct !DILexicalBlock(scope: !3092, file: !103, line: 597, column: 11)
!3096 = !DILocation(line: 598, column: 11, scope: !3095)
!3097 = !DILocation(line: 599, column: 5, scope: !3095)
!3098 = !DILocation(line: 602, column: 7, scope: !3099)
!3099 = distinct !DILexicalBlock(scope: !3084, file: !103, line: 602, column: 7)
!3100 = !DILocation(line: 602, column: 10, scope: !3099)
!3101 = !DILocation(line: 602, column: 7, scope: !3084)
!3102 = !DILocation(line: 603, column: 5, scope: !3103)
!3103 = distinct !DILexicalBlock(scope: !3099, file: !103, line: 602, column: 17)
!3104 = !DILocation(line: 604, column: 5, scope: !3103)
!3105 = !DILocation(line: 604, column: 11, scope: !3103)
!3106 = !DILocation(line: 605, column: 5, scope: !3103)
!3107 = !DILocation(line: 608, column: 31, scope: !3084)
!3108 = !DILocation(line: 608, column: 34, scope: !3084)
!3109 = !DILocation(line: 608, column: 10, scope: !3084)
!3110 = !DILocation(line: 608, column: 3, scope: !3084)
!3111 = !DILocation(line: 609, column: 1, scope: !3084)
!3112 = !DILocalVariable(name: "path", arg: 1, scope: !167, file: !103, line: 625, type: !170)
!3113 = !DILocation(line: 625, column: 23, scope: !167)
!3114 = !DILocalVariable(name: "mode", arg: 2, scope: !167, file: !103, line: 625, type: !97)
!3115 = !DILocation(line: 625, column: 36, scope: !167)
!3116 = !DILocalVariable(name: "dfile", scope: !167, file: !103, line: 628, type: !1772)
!3117 = !DILocation(line: 628, column: 20, scope: !167)
!3118 = !DILocation(line: 628, column: 43, scope: !167)
!3119 = !DILocation(line: 628, column: 28, scope: !167)
!3120 = !DILocation(line: 630, column: 10, scope: !167)
!3121 = !DILocation(line: 631, column: 16, scope: !3122)
!3122 = distinct !DILexicalBlock(scope: !167, file: !103, line: 631, column: 7)
!3123 = !DILocation(line: 631, column: 7, scope: !3122)
!3124 = !DILocation(line: 631, column: 29, scope: !3122)
!3125 = !DILocation(line: 631, column: 42, scope: !3122)
!3126 = !DILocation(line: 631, column: 32, scope: !3122)
!3127 = !DILocation(line: 631, column: 56, scope: !3122)
!3128 = !DILocation(line: 631, column: 53, scope: !3122)
!3129 = !DILocation(line: 631, column: 7, scope: !167)
!3130 = !DILocation(line: 632, column: 26, scope: !3131)
!3131 = distinct !DILexicalBlock(scope: !3122, file: !103, line: 631, column: 65)
!3132 = !DILocation(line: 633, column: 5, scope: !3131)
!3133 = !DILocation(line: 633, column: 11, scope: !3131)
!3134 = !DILocation(line: 634, column: 5, scope: !3131)
!3135 = !DILocation(line: 637, column: 7, scope: !3136)
!3136 = distinct !DILexicalBlock(scope: !167, file: !103, line: 637, column: 7)
!3137 = !DILocation(line: 637, column: 7, scope: !167)
!3138 = !DILocation(line: 638, column: 23, scope: !3139)
!3139 = distinct !DILexicalBlock(scope: !3136, file: !103, line: 637, column: 14)
!3140 = !DILocation(line: 638, column: 30, scope: !3139)
!3141 = !DILocation(line: 638, column: 12, scope: !3139)
!3142 = !DILocation(line: 638, column: 5, scope: !3139)
!3143 = !DILocation(line: 641, column: 50, scope: !167)
!3144 = !DILocation(line: 641, column: 30, scope: !167)
!3145 = !DILocation(line: 641, column: 57, scope: !167)
!3146 = !DILocation(line: 641, column: 10, scope: !167)
!3147 = !DILocation(line: 641, column: 3, scope: !167)
!3148 = !DILocation(line: 642, column: 1, scope: !167)
!3149 = distinct !DISubprogram(name: "__df_chmod", scope: !103, file: !103, line: 612, type: !3150, scopeLine: 612, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !106, retainedNodes: !4)
!3150 = !DISubroutineType(types: !3151)
!3151 = !{!44, !1772, !97}
!3152 = !DILocalVariable(name: "df", arg: 1, scope: !3149, file: !103, line: 612, type: !1772)
!3153 = !DILocation(line: 612, column: 40, scope: !3149)
!3154 = !DILocalVariable(name: "mode", arg: 2, scope: !3149, file: !103, line: 612, type: !97)
!3155 = !DILocation(line: 612, column: 51, scope: !3149)
!3156 = !DILocation(line: 613, column: 7, scope: !3157)
!3157 = distinct !DILexicalBlock(scope: !3149, file: !103, line: 613, column: 7)
!3158 = !DILocation(line: 613, column: 20, scope: !3157)
!3159 = !DILocation(line: 613, column: 24, scope: !3157)
!3160 = !DILocation(line: 613, column: 30, scope: !3157)
!3161 = !DILocation(line: 613, column: 17, scope: !3157)
!3162 = !DILocation(line: 613, column: 7, scope: !3149)
!3163 = !DILocation(line: 614, column: 9, scope: !3164)
!3164 = distinct !DILexicalBlock(scope: !3165, file: !103, line: 614, column: 9)
!3165 = distinct !DILexicalBlock(scope: !3157, file: !103, line: 613, column: 38)
!3166 = !DILocation(line: 614, column: 21, scope: !3164)
!3167 = !DILocation(line: 614, column: 25, scope: !3164)
!3168 = !DILocation(line: 614, column: 31, scope: !3164)
!3169 = !DILocation(line: 614, column: 18, scope: !3164)
!3170 = !DILocation(line: 614, column: 9, scope: !3165)
!3171 = !DILocation(line: 615, column: 12, scope: !3164)
!3172 = !DILocation(line: 615, column: 7, scope: !3164)
!3173 = !DILocation(line: 616, column: 27, scope: !3165)
!3174 = !DILocation(line: 616, column: 31, scope: !3165)
!3175 = !DILocation(line: 616, column: 37, scope: !3165)
!3176 = !DILocation(line: 616, column: 45, scope: !3165)
!3177 = !DILocation(line: 617, column: 27, scope: !3165)
!3178 = !DILocation(line: 617, column: 32, scope: !3165)
!3179 = !DILocation(line: 616, column: 55, scope: !3165)
!3180 = !DILocation(line: 616, column: 5, scope: !3165)
!3181 = !DILocation(line: 616, column: 9, scope: !3165)
!3182 = !DILocation(line: 616, column: 15, scope: !3165)
!3183 = !DILocation(line: 616, column: 23, scope: !3165)
!3184 = !DILocation(line: 618, column: 5, scope: !3165)
!3185 = !DILocation(line: 620, column: 5, scope: !3186)
!3186 = distinct !DILexicalBlock(scope: !3157, file: !103, line: 619, column: 10)
!3187 = !DILocation(line: 620, column: 11, scope: !3186)
!3188 = !DILocation(line: 621, column: 5, scope: !3186)
!3189 = !DILocation(line: 623, column: 1, scope: !3149)
!3190 = !DILocalVariable(name: "fd", arg: 1, scope: !174, file: !103, line: 644, type: !44)
!3191 = !DILocation(line: 644, column: 16, scope: !174)
!3192 = !DILocalVariable(name: "mode", arg: 2, scope: !174, file: !103, line: 644, type: !97)
!3193 = !DILocation(line: 644, column: 27, scope: !174)
!3194 = !DILocalVariable(name: "f", scope: !174, file: !103, line: 647, type: !1987)
!3195 = !DILocation(line: 647, column: 15, scope: !174)
!3196 = !DILocation(line: 647, column: 30, scope: !174)
!3197 = !DILocation(line: 647, column: 19, scope: !174)
!3198 = !DILocation(line: 649, column: 8, scope: !3199)
!3199 = distinct !DILexicalBlock(scope: !174, file: !103, line: 649, column: 7)
!3200 = !DILocation(line: 649, column: 7, scope: !174)
!3201 = !DILocation(line: 650, column: 5, scope: !3202)
!3202 = distinct !DILexicalBlock(scope: !3199, file: !103, line: 649, column: 11)
!3203 = !DILocation(line: 650, column: 11, scope: !3202)
!3204 = !DILocation(line: 651, column: 5, scope: !3202)
!3205 = !DILocation(line: 654, column: 10, scope: !174)
!3206 = !DILocation(line: 655, column: 16, scope: !3207)
!3207 = distinct !DILexicalBlock(scope: !174, file: !103, line: 655, column: 7)
!3208 = !DILocation(line: 655, column: 7, scope: !3207)
!3209 = !DILocation(line: 655, column: 29, scope: !3207)
!3210 = !DILocation(line: 655, column: 42, scope: !3207)
!3211 = !DILocation(line: 655, column: 32, scope: !3207)
!3212 = !DILocation(line: 655, column: 57, scope: !3207)
!3213 = !DILocation(line: 655, column: 54, scope: !3207)
!3214 = !DILocation(line: 655, column: 7, scope: !174)
!3215 = !DILocation(line: 656, column: 26, scope: !3216)
!3216 = distinct !DILexicalBlock(scope: !3207, file: !103, line: 655, column: 66)
!3217 = !DILocation(line: 657, column: 5, scope: !3216)
!3218 = !DILocation(line: 657, column: 11, scope: !3216)
!3219 = !DILocation(line: 658, column: 5, scope: !3216)
!3220 = !DILocation(line: 661, column: 7, scope: !3221)
!3221 = distinct !DILexicalBlock(scope: !174, file: !103, line: 661, column: 7)
!3222 = !DILocation(line: 661, column: 10, scope: !3221)
!3223 = !DILocation(line: 0, scope: !174)
!3224 = !DILocation(line: 661, column: 7, scope: !174)
!3225 = !DILocation(line: 662, column: 26, scope: !3226)
!3226 = distinct !DILexicalBlock(scope: !3221, file: !103, line: 661, column: 17)
!3227 = !DILocation(line: 662, column: 33, scope: !3226)
!3228 = !DILocation(line: 662, column: 12, scope: !3226)
!3229 = !DILocation(line: 662, column: 5, scope: !3226)
!3230 = !DILocation(line: 665, column: 34, scope: !174)
!3231 = !DILocation(line: 665, column: 38, scope: !174)
!3232 = !DILocation(line: 665, column: 10, scope: !174)
!3233 = !DILocation(line: 665, column: 3, scope: !174)
!3234 = !DILocation(line: 666, column: 1, scope: !174)
!3235 = distinct !DISubprogram(name: "chown", scope: !103, file: !103, line: 674, type: !3236, scopeLine: 674, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !106, retainedNodes: !4)
!3236 = !DISubroutineType(types: !3237)
!3237 = !{!44, !170, !3238, !3239}
!3238 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !91, line: 80, baseType: !40)
!3239 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !91, line: 65, baseType: !42)
!3240 = !DILocalVariable(name: "path", arg: 1, scope: !3235, file: !103, line: 674, type: !170)
!3241 = !DILocation(line: 674, column: 23, scope: !3235)
!3242 = !DILocalVariable(name: "owner", arg: 2, scope: !3235, file: !103, line: 674, type: !3238)
!3243 = !DILocation(line: 674, column: 35, scope: !3235)
!3244 = !DILocalVariable(name: "group", arg: 3, scope: !3235, file: !103, line: 674, type: !3239)
!3245 = !DILocation(line: 674, column: 48, scope: !3235)
!3246 = !DILocalVariable(name: "df", scope: !3235, file: !103, line: 675, type: !1772)
!3247 = !DILocation(line: 675, column: 20, scope: !3235)
!3248 = !DILocation(line: 675, column: 40, scope: !3235)
!3249 = !DILocation(line: 675, column: 25, scope: !3235)
!3250 = !DILocation(line: 677, column: 7, scope: !3251)
!3251 = distinct !DILexicalBlock(scope: !3235, file: !103, line: 677, column: 7)
!3252 = !DILocation(line: 677, column: 7, scope: !3235)
!3253 = !DILocation(line: 678, column: 23, scope: !3254)
!3254 = distinct !DILexicalBlock(scope: !3251, file: !103, line: 677, column: 11)
!3255 = !DILocation(line: 678, column: 27, scope: !3254)
!3256 = !DILocation(line: 678, column: 34, scope: !3254)
!3257 = !DILocation(line: 678, column: 12, scope: !3254)
!3258 = !DILocation(line: 678, column: 5, scope: !3254)
!3259 = !DILocation(line: 681, column: 50, scope: !3235)
!3260 = !DILocation(line: 681, column: 30, scope: !3235)
!3261 = !DILocation(line: 681, column: 57, scope: !3235)
!3262 = !DILocation(line: 681, column: 64, scope: !3235)
!3263 = !DILocation(line: 681, column: 10, scope: !3235)
!3264 = !DILocation(line: 681, column: 3, scope: !3235)
!3265 = !DILocation(line: 682, column: 1, scope: !3235)
!3266 = distinct !DISubprogram(name: "__df_chown", scope: !103, file: !103, line: 668, type: !3267, scopeLine: 668, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !106, retainedNodes: !4)
!3267 = !DISubroutineType(types: !3268)
!3268 = !{!44, !1772, !3238, !3239}
!3269 = !DILocalVariable(name: "df", arg: 1, scope: !3266, file: !103, line: 668, type: !1772)
!3270 = !DILocation(line: 668, column: 40, scope: !3266)
!3271 = !DILocalVariable(name: "owner", arg: 2, scope: !3266, file: !103, line: 668, type: !3238)
!3272 = !DILocation(line: 668, column: 50, scope: !3266)
!3273 = !DILocalVariable(name: "group", arg: 3, scope: !3266, file: !103, line: 668, type: !3239)
!3274 = !DILocation(line: 668, column: 63, scope: !3266)
!3275 = !DILocation(line: 669, column: 3, scope: !3266)
!3276 = !DILocation(line: 670, column: 3, scope: !3266)
!3277 = !DILocation(line: 670, column: 9, scope: !3266)
!3278 = !DILocation(line: 671, column: 3, scope: !3266)
!3279 = distinct !DISubprogram(name: "fchown", scope: !103, file: !103, line: 684, type: !3280, scopeLine: 684, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !106, retainedNodes: !4)
!3280 = !DISubroutineType(types: !3281)
!3281 = !{!44, !44, !3238, !3239}
!3282 = !DILocalVariable(name: "fd", arg: 1, scope: !3279, file: !103, line: 684, type: !44)
!3283 = !DILocation(line: 684, column: 16, scope: !3279)
!3284 = !DILocalVariable(name: "owner", arg: 2, scope: !3279, file: !103, line: 684, type: !3238)
!3285 = !DILocation(line: 684, column: 26, scope: !3279)
!3286 = !DILocalVariable(name: "group", arg: 3, scope: !3279, file: !103, line: 684, type: !3239)
!3287 = !DILocation(line: 684, column: 39, scope: !3279)
!3288 = !DILocalVariable(name: "f", scope: !3279, file: !103, line: 685, type: !1987)
!3289 = !DILocation(line: 685, column: 15, scope: !3279)
!3290 = !DILocation(line: 685, column: 30, scope: !3279)
!3291 = !DILocation(line: 685, column: 19, scope: !3279)
!3292 = !DILocation(line: 687, column: 8, scope: !3293)
!3293 = distinct !DILexicalBlock(scope: !3279, file: !103, line: 687, column: 7)
!3294 = !DILocation(line: 687, column: 7, scope: !3279)
!3295 = !DILocation(line: 688, column: 5, scope: !3296)
!3296 = distinct !DILexicalBlock(scope: !3293, file: !103, line: 687, column: 11)
!3297 = !DILocation(line: 688, column: 11, scope: !3296)
!3298 = !DILocation(line: 689, column: 5, scope: !3296)
!3299 = !DILocation(line: 692, column: 7, scope: !3300)
!3300 = distinct !DILexicalBlock(scope: !3279, file: !103, line: 692, column: 7)
!3301 = !DILocation(line: 692, column: 10, scope: !3300)
!3302 = !DILocation(line: 692, column: 7, scope: !3279)
!3303 = !DILocation(line: 693, column: 23, scope: !3304)
!3304 = distinct !DILexicalBlock(scope: !3300, file: !103, line: 692, column: 17)
!3305 = !DILocation(line: 693, column: 26, scope: !3304)
!3306 = !DILocation(line: 693, column: 33, scope: !3304)
!3307 = !DILocation(line: 693, column: 40, scope: !3304)
!3308 = !DILocation(line: 693, column: 12, scope: !3304)
!3309 = !DILocation(line: 693, column: 5, scope: !3304)
!3310 = !DILocation(line: 696, column: 31, scope: !3279)
!3311 = !DILocation(line: 696, column: 35, scope: !3279)
!3312 = !DILocation(line: 696, column: 42, scope: !3279)
!3313 = !DILocation(line: 696, column: 10, scope: !3279)
!3314 = !DILocation(line: 696, column: 3, scope: !3279)
!3315 = !DILocation(line: 697, column: 1, scope: !3279)
!3316 = distinct !DISubprogram(name: "lchown", scope: !103, file: !103, line: 699, type: !3236, scopeLine: 699, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !106, retainedNodes: !4)
!3317 = !DILocalVariable(name: "path", arg: 1, scope: !3316, file: !103, line: 699, type: !170)
!3318 = !DILocation(line: 699, column: 24, scope: !3316)
!3319 = !DILocalVariable(name: "owner", arg: 2, scope: !3316, file: !103, line: 699, type: !3238)
!3320 = !DILocation(line: 699, column: 36, scope: !3316)
!3321 = !DILocalVariable(name: "group", arg: 3, scope: !3316, file: !103, line: 699, type: !3239)
!3322 = !DILocation(line: 699, column: 49, scope: !3316)
!3323 = !DILocalVariable(name: "df", scope: !3316, file: !103, line: 701, type: !1772)
!3324 = !DILocation(line: 701, column: 20, scope: !3316)
!3325 = !DILocation(line: 701, column: 40, scope: !3316)
!3326 = !DILocation(line: 701, column: 25, scope: !3316)
!3327 = !DILocation(line: 703, column: 7, scope: !3328)
!3328 = distinct !DILexicalBlock(scope: !3316, file: !103, line: 703, column: 7)
!3329 = !DILocation(line: 703, column: 7, scope: !3316)
!3330 = !DILocation(line: 704, column: 23, scope: !3331)
!3331 = distinct !DILexicalBlock(scope: !3328, file: !103, line: 703, column: 11)
!3332 = !DILocation(line: 704, column: 27, scope: !3331)
!3333 = !DILocation(line: 704, column: 34, scope: !3331)
!3334 = !DILocation(line: 704, column: 12, scope: !3331)
!3335 = !DILocation(line: 704, column: 5, scope: !3331)
!3336 = !DILocation(line: 707, column: 50, scope: !3316)
!3337 = !DILocation(line: 707, column: 30, scope: !3316)
!3338 = !DILocation(line: 707, column: 57, scope: !3316)
!3339 = !DILocation(line: 707, column: 64, scope: !3316)
!3340 = !DILocation(line: 707, column: 10, scope: !3316)
!3341 = !DILocation(line: 707, column: 3, scope: !3316)
!3342 = !DILocation(line: 708, column: 1, scope: !3316)
!3343 = distinct !DISubprogram(name: "__fd_fstat", scope: !103, file: !103, line: 710, type: !2145, scopeLine: 710, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !106, retainedNodes: !4)
!3344 = !DILocalVariable(name: "fd", arg: 1, scope: !3343, file: !103, line: 710, type: !44)
!3345 = !DILocation(line: 710, column: 20, scope: !3343)
!3346 = !DILocalVariable(name: "buf", arg: 2, scope: !3343, file: !103, line: 710, type: !1779)
!3347 = !DILocation(line: 710, column: 39, scope: !3343)
!3348 = !DILocalVariable(name: "f", scope: !3343, file: !103, line: 711, type: !1987)
!3349 = !DILocation(line: 711, column: 15, scope: !3343)
!3350 = !DILocation(line: 711, column: 30, scope: !3343)
!3351 = !DILocation(line: 711, column: 19, scope: !3343)
!3352 = !DILocation(line: 713, column: 8, scope: !3353)
!3353 = distinct !DILexicalBlock(scope: !3343, file: !103, line: 713, column: 7)
!3354 = !DILocation(line: 713, column: 7, scope: !3343)
!3355 = !DILocation(line: 714, column: 5, scope: !3356)
!3356 = distinct !DILexicalBlock(scope: !3353, file: !103, line: 713, column: 11)
!3357 = !DILocation(line: 714, column: 11, scope: !3356)
!3358 = !DILocation(line: 715, column: 5, scope: !3356)
!3359 = !DILocation(line: 718, column: 8, scope: !3360)
!3360 = distinct !DILexicalBlock(scope: !3343, file: !103, line: 718, column: 7)
!3361 = !DILocation(line: 718, column: 11, scope: !3360)
!3362 = !DILocation(line: 718, column: 7, scope: !3343)
!3363 = !DILocation(line: 720, column: 32, scope: !3364)
!3364 = distinct !DILexicalBlock(scope: !3360, file: !103, line: 718, column: 18)
!3365 = !DILocation(line: 720, column: 35, scope: !3364)
!3366 = !DILocation(line: 720, column: 39, scope: !3364)
!3367 = !DILocation(line: 720, column: 12, scope: !3364)
!3368 = !DILocation(line: 720, column: 5, scope: !3364)
!3369 = !DILocation(line: 726, column: 10, scope: !3343)
!3370 = !DILocation(line: 726, column: 3, scope: !3343)
!3371 = !DILocation(line: 726, column: 15, scope: !3343)
!3372 = !DILocation(line: 726, column: 18, scope: !3343)
!3373 = !DILocation(line: 726, column: 25, scope: !3343)
!3374 = !DILocation(line: 727, column: 3, scope: !3343)
!3375 = !DILocation(line: 728, column: 1, scope: !3343)
!3376 = !DILocalVariable(name: "fd", arg: 1, scope: !179, file: !103, line: 730, type: !44)
!3377 = !DILocation(line: 730, column: 24, scope: !179)
!3378 = !DILocalVariable(name: "length", arg: 2, scope: !179, file: !103, line: 730, type: !90)
!3379 = !DILocation(line: 730, column: 36, scope: !179)
!3380 = !DILocalVariable(name: "f", scope: !179, file: !103, line: 732, type: !1987)
!3381 = !DILocation(line: 732, column: 15, scope: !179)
!3382 = !DILocation(line: 732, column: 30, scope: !179)
!3383 = !DILocation(line: 732, column: 19, scope: !179)
!3384 = !DILocation(line: 734, column: 10, scope: !179)
!3385 = !DILocation(line: 736, column: 8, scope: !3386)
!3386 = distinct !DILexicalBlock(scope: !179, file: !103, line: 736, column: 7)
!3387 = !DILocation(line: 736, column: 7, scope: !179)
!3388 = !DILocation(line: 737, column: 5, scope: !3389)
!3389 = distinct !DILexicalBlock(scope: !3386, file: !103, line: 736, column: 11)
!3390 = !DILocation(line: 737, column: 11, scope: !3389)
!3391 = !DILocation(line: 738, column: 5, scope: !3389)
!3392 = !DILocation(line: 741, column: 16, scope: !3393)
!3393 = distinct !DILexicalBlock(scope: !179, file: !103, line: 741, column: 7)
!3394 = !DILocation(line: 741, column: 7, scope: !3393)
!3395 = !DILocation(line: 741, column: 29, scope: !3393)
!3396 = !DILocation(line: 741, column: 42, scope: !3393)
!3397 = !DILocation(line: 741, column: 32, scope: !3393)
!3398 = !DILocation(line: 741, column: 60, scope: !3393)
!3399 = !DILocation(line: 741, column: 57, scope: !3393)
!3400 = !DILocation(line: 741, column: 7, scope: !179)
!3401 = !DILocation(line: 742, column: 26, scope: !3402)
!3402 = distinct !DILexicalBlock(scope: !3393, file: !103, line: 741, column: 69)
!3403 = !DILocation(line: 743, column: 5, scope: !3402)
!3404 = !DILocation(line: 743, column: 11, scope: !3402)
!3405 = !DILocation(line: 744, column: 5, scope: !3402)
!3406 = !DILocation(line: 747, column: 7, scope: !3407)
!3407 = distinct !DILexicalBlock(scope: !179, file: !103, line: 747, column: 7)
!3408 = !DILocation(line: 747, column: 10, scope: !3407)
!3409 = !DILocation(line: 747, column: 7, scope: !179)
!3410 = !DILocation(line: 748, column: 5, scope: !3411)
!3411 = distinct !DILexicalBlock(scope: !3407, file: !103, line: 747, column: 17)
!3412 = !DILocation(line: 749, column: 5, scope: !3411)
!3413 = !DILocation(line: 749, column: 11, scope: !3411)
!3414 = !DILocation(line: 750, column: 5, scope: !3411)
!3415 = !DILocation(line: 753, column: 34, scope: !179)
!3416 = !DILocation(line: 753, column: 37, scope: !179)
!3417 = !DILocation(line: 753, column: 41, scope: !179)
!3418 = !DILocation(line: 753, column: 10, scope: !179)
!3419 = !DILocation(line: 753, column: 3, scope: !179)
!3420 = !DILocation(line: 757, column: 1, scope: !179)
!3421 = distinct !DISubprogram(name: "__fd_getdents", scope: !103, file: !103, line: 759, type: !3422, scopeLine: 759, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !106, retainedNodes: !4)
!3422 = !DISubroutineType(types: !3423)
!3423 = !{!44, !14, !110, !14}
!3424 = !DILocalVariable(name: "fd", arg: 1, scope: !3421, file: !103, line: 759, type: !14)
!3425 = !DILocation(line: 759, column: 32, scope: !3421)
!3426 = !DILocalVariable(name: "dirp", arg: 2, scope: !3421, file: !103, line: 759, type: !110)
!3427 = !DILocation(line: 759, column: 53, scope: !3421)
!3428 = !DILocalVariable(name: "count", arg: 3, scope: !3421, file: !103, line: 759, type: !14)
!3429 = !DILocation(line: 759, column: 72, scope: !3421)
!3430 = !DILocalVariable(name: "f", scope: !3421, file: !103, line: 760, type: !1987)
!3431 = !DILocation(line: 760, column: 15, scope: !3421)
!3432 = !DILocation(line: 760, column: 30, scope: !3421)
!3433 = !DILocation(line: 760, column: 19, scope: !3421)
!3434 = !DILocation(line: 762, column: 8, scope: !3435)
!3435 = distinct !DILexicalBlock(scope: !3421, file: !103, line: 762, column: 7)
!3436 = !DILocation(line: 762, column: 7, scope: !3421)
!3437 = !DILocation(line: 763, column: 5, scope: !3438)
!3438 = distinct !DILexicalBlock(scope: !3435, file: !103, line: 762, column: 11)
!3439 = !DILocation(line: 763, column: 11, scope: !3438)
!3440 = !DILocation(line: 764, column: 5, scope: !3438)
!3441 = !DILocation(line: 767, column: 7, scope: !3442)
!3442 = distinct !DILexicalBlock(scope: !3421, file: !103, line: 767, column: 7)
!3443 = !DILocation(line: 767, column: 10, scope: !3442)
!3444 = !DILocation(line: 767, column: 7, scope: !3421)
!3445 = !DILocation(line: 768, column: 5, scope: !3446)
!3446 = distinct !DILexicalBlock(scope: !3442, file: !103, line: 767, column: 17)
!3447 = !DILocation(line: 769, column: 5, scope: !3446)
!3448 = !DILocation(line: 769, column: 11, scope: !3446)
!3449 = !DILocation(line: 770, column: 5, scope: !3446)
!3450 = !DILocation(line: 772, column: 25, scope: !3451)
!3451 = distinct !DILexicalBlock(scope: !3452, file: !103, line: 772, column: 9)
!3452 = distinct !DILexicalBlock(scope: !3442, file: !103, line: 771, column: 10)
!3453 = !DILocation(line: 772, column: 28, scope: !3451)
!3454 = !DILocation(line: 772, column: 32, scope: !3451)
!3455 = !DILocation(line: 772, column: 9, scope: !3452)
!3456 = !DILocalVariable(name: "i", scope: !3457, file: !103, line: 774, type: !90)
!3457 = distinct !DILexicalBlock(scope: !3451, file: !103, line: 772, column: 41)
!3458 = !DILocation(line: 774, column: 15, scope: !3457)
!3459 = !DILocalVariable(name: "pad", scope: !3457, file: !103, line: 774, type: !90)
!3460 = !DILocation(line: 774, column: 18, scope: !3457)
!3461 = !DILocalVariable(name: "bytes", scope: !3457, file: !103, line: 774, type: !90)
!3462 = !DILocation(line: 774, column: 23, scope: !3457)
!3463 = !DILocation(line: 777, column: 11, scope: !3457)
!3464 = !DILocation(line: 777, column: 14, scope: !3457)
!3465 = !DILocation(line: 777, column: 18, scope: !3457)
!3466 = !DILocation(line: 777, column: 9, scope: !3457)
!3467 = !DILocation(line: 778, column: 23, scope: !3468)
!3468 = distinct !DILexicalBlock(scope: !3457, file: !103, line: 778, column: 11)
!3469 = !DILocation(line: 778, column: 25, scope: !3468)
!3470 = !DILocation(line: 778, column: 45, scope: !3468)
!3471 = !DILocation(line: 778, column: 48, scope: !3468)
!3472 = !DILocation(line: 778, column: 42, scope: !3468)
!3473 = !DILocation(line: 778, column: 53, scope: !3468)
!3474 = !DILocation(line: 779, column: 11, scope: !3468)
!3475 = !DILocation(line: 779, column: 24, scope: !3468)
!3476 = !DILocation(line: 779, column: 15, scope: !3468)
!3477 = !DILocation(line: 779, column: 13, scope: !3468)
!3478 = !DILocation(line: 778, column: 11, scope: !3457)
!3479 = !DILocation(line: 780, column: 9, scope: !3480)
!3480 = distinct !DILexicalBlock(scope: !3468, file: !103, line: 779, column: 37)
!3481 = !DILocation(line: 780, column: 15, scope: !3480)
!3482 = !DILocation(line: 781, column: 9, scope: !3480)
!3483 = !DILocation(line: 783, column: 14, scope: !3484)
!3484 = distinct !DILexicalBlock(scope: !3485, file: !103, line: 783, column: 7)
!3485 = distinct !DILexicalBlock(scope: !3457, file: !103, line: 783, column: 7)
!3486 = !DILocation(line: 783, column: 25, scope: !3484)
!3487 = !DILocation(line: 783, column: 16, scope: !3484)
!3488 = !DILocation(line: 783, column: 15, scope: !3484)
!3489 = !DILocation(line: 783, column: 7, scope: !3485)
!3490 = !DILocalVariable(name: "df", scope: !3491, file: !103, line: 784, type: !1772)
!3491 = distinct !DILexicalBlock(scope: !3484, file: !103, line: 783, column: 43)
!3492 = !DILocation(line: 784, column: 26, scope: !3491)
!3493 = !DILocation(line: 784, column: 41, scope: !3491)
!3494 = !DILocation(line: 784, column: 51, scope: !3491)
!3495 = !DILocation(line: 784, column: 32, scope: !3491)
!3496 = !DILocation(line: 785, column: 23, scope: !3491)
!3497 = !DILocation(line: 785, column: 27, scope: !3491)
!3498 = !DILocation(line: 785, column: 33, scope: !3491)
!3499 = !DILocation(line: 785, column: 9, scope: !3491)
!3500 = !DILocation(line: 785, column: 15, scope: !3491)
!3501 = !DILocation(line: 785, column: 21, scope: !3491)
!3502 = !DILocation(line: 786, column: 9, scope: !3491)
!3503 = !DILocation(line: 786, column: 15, scope: !3491)
!3504 = !DILocation(line: 786, column: 24, scope: !3491)
!3505 = !DILocation(line: 787, column: 24, scope: !3491)
!3506 = !DILocation(line: 787, column: 9, scope: !3491)
!3507 = !DILocation(line: 787, column: 15, scope: !3491)
!3508 = !DILocation(line: 787, column: 22, scope: !3491)
!3509 = !DILocation(line: 788, column: 33, scope: !3491)
!3510 = !DILocation(line: 788, column: 31, scope: !3491)
!3511 = !DILocation(line: 788, column: 27, scope: !3491)
!3512 = !DILocation(line: 788, column: 9, scope: !3491)
!3513 = !DILocation(line: 788, column: 15, scope: !3491)
!3514 = !DILocation(line: 788, column: 25, scope: !3491)
!3515 = !DILocation(line: 789, column: 9, scope: !3491)
!3516 = !DILocation(line: 789, column: 15, scope: !3491)
!3517 = !DILocation(line: 789, column: 25, scope: !3491)
!3518 = !DILocation(line: 791, column: 24, scope: !3491)
!3519 = !DILocation(line: 791, column: 25, scope: !3491)
!3520 = !DILocation(line: 791, column: 29, scope: !3491)
!3521 = !DILocation(line: 791, column: 9, scope: !3491)
!3522 = !DILocation(line: 791, column: 15, scope: !3491)
!3523 = !DILocation(line: 791, column: 21, scope: !3491)
!3524 = !DILocation(line: 793, column: 18, scope: !3491)
!3525 = !DILocation(line: 793, column: 24, scope: !3491)
!3526 = !DILocation(line: 793, column: 15, scope: !3491)
!3527 = !DILocation(line: 794, column: 9, scope: !3491)
!3528 = !DILocation(line: 783, column: 38, scope: !3484)
!3529 = !DILocation(line: 783, column: 7, scope: !3484)
!3530 = distinct !{!3530, !3489, !3531}
!3531 = !DILocation(line: 795, column: 7, scope: !3485)
!3532 = !DILocation(line: 798, column: 13, scope: !3457)
!3533 = !DILocation(line: 798, column: 18, scope: !3457)
!3534 = !DILocation(line: 798, column: 11, scope: !3457)
!3535 = !DILocation(line: 799, column: 7, scope: !3457)
!3536 = !DILocation(line: 799, column: 13, scope: !3457)
!3537 = !DILocation(line: 799, column: 19, scope: !3457)
!3538 = !DILocation(line: 800, column: 24, scope: !3457)
!3539 = !DILocation(line: 800, column: 30, scope: !3457)
!3540 = !DILocation(line: 800, column: 28, scope: !3457)
!3541 = !DILocation(line: 800, column: 7, scope: !3457)
!3542 = !DILocation(line: 800, column: 13, scope: !3457)
!3543 = !DILocation(line: 800, column: 22, scope: !3457)
!3544 = !DILocation(line: 801, column: 7, scope: !3457)
!3545 = !DILocation(line: 801, column: 13, scope: !3457)
!3546 = !DILocation(line: 801, column: 20, scope: !3457)
!3547 = !DILocation(line: 802, column: 7, scope: !3457)
!3548 = !DILocation(line: 802, column: 13, scope: !3457)
!3549 = !DILocation(line: 802, column: 23, scope: !3457)
!3550 = !DILocation(line: 804, column: 7, scope: !3457)
!3551 = !DILocation(line: 804, column: 13, scope: !3457)
!3552 = !DILocation(line: 804, column: 19, scope: !3457)
!3553 = !DILocation(line: 806, column: 16, scope: !3457)
!3554 = !DILocation(line: 806, column: 22, scope: !3457)
!3555 = !DILocation(line: 806, column: 13, scope: !3457)
!3556 = !DILocation(line: 807, column: 16, scope: !3457)
!3557 = !DILocation(line: 807, column: 7, scope: !3457)
!3558 = !DILocation(line: 807, column: 10, scope: !3457)
!3559 = !DILocation(line: 807, column: 14, scope: !3457)
!3560 = !DILocation(line: 809, column: 14, scope: !3457)
!3561 = !DILocation(line: 809, column: 7, scope: !3457)
!3562 = !DILocalVariable(name: "os_pos", scope: !3563, file: !103, line: 811, type: !90)
!3563 = distinct !DILexicalBlock(scope: !3451, file: !103, line: 810, column: 12)
!3564 = !DILocation(line: 811, column: 15, scope: !3563)
!3565 = !DILocation(line: 811, column: 24, scope: !3563)
!3566 = !DILocation(line: 811, column: 27, scope: !3563)
!3567 = !DILocation(line: 811, column: 31, scope: !3563)
!3568 = !DILocalVariable(name: "res", scope: !3563, file: !103, line: 812, type: !44)
!3569 = !DILocation(line: 812, column: 11, scope: !3563)
!3570 = !DILocalVariable(name: "s", scope: !3563, file: !103, line: 813, type: !90)
!3571 = !DILocation(line: 813, column: 15, scope: !3563)
!3572 = !DILocation(line: 822, column: 14, scope: !3563)
!3573 = !DILocation(line: 822, column: 7, scope: !3563)
!3574 = !DILocation(line: 822, column: 23, scope: !3563)
!3575 = !DILocation(line: 823, column: 31, scope: !3563)
!3576 = !DILocation(line: 823, column: 34, scope: !3563)
!3577 = !DILocation(line: 823, column: 38, scope: !3563)
!3578 = !DILocation(line: 823, column: 11, scope: !3563)
!3579 = !DILocation(line: 823, column: 9, scope: !3563)
!3580 = !DILocation(line: 824, column: 7, scope: !3581)
!3581 = distinct !DILexicalBlock(scope: !3582, file: !103, line: 824, column: 7)
!3582 = distinct !DILexicalBlock(scope: !3563, file: !103, line: 824, column: 7)
!3583 = !DILocation(line: 824, column: 7, scope: !3582)
!3584 = !DILocation(line: 825, column: 38, scope: !3563)
!3585 = !DILocation(line: 825, column: 41, scope: !3563)
!3586 = !DILocation(line: 825, column: 45, scope: !3563)
!3587 = !DILocation(line: 825, column: 51, scope: !3563)
!3588 = !DILocation(line: 825, column: 13, scope: !3563)
!3589 = !DILocation(line: 825, column: 11, scope: !3563)
!3590 = !DILocation(line: 826, column: 11, scope: !3591)
!3591 = distinct !DILexicalBlock(scope: !3563, file: !103, line: 826, column: 11)
!3592 = !DILocation(line: 826, column: 15, scope: !3591)
!3593 = !DILocation(line: 826, column: 11, scope: !3563)
!3594 = !DILocalVariable(name: "pos", scope: !3595, file: !103, line: 827, type: !44)
!3595 = distinct !DILexicalBlock(scope: !3591, file: !103, line: 826, column: 21)
!3596 = !DILocation(line: 827, column: 13, scope: !3595)
!3597 = !DILocation(line: 828, column: 38, scope: !3595)
!3598 = !DILocation(line: 828, column: 41, scope: !3595)
!3599 = !DILocation(line: 828, column: 18, scope: !3595)
!3600 = !DILocation(line: 828, column: 9, scope: !3595)
!3601 = !DILocation(line: 828, column: 12, scope: !3595)
!3602 = !DILocation(line: 828, column: 16, scope: !3595)
!3603 = !DILocation(line: 829, column: 9, scope: !3604)
!3604 = distinct !DILexicalBlock(scope: !3605, file: !103, line: 829, column: 9)
!3605 = distinct !DILexicalBlock(scope: !3595, file: !103, line: 829, column: 9)
!3606 = !DILocation(line: 829, column: 9, scope: !3605)
!3607 = !DILocation(line: 830, column: 9, scope: !3595)
!3608 = !DILocation(line: 830, column: 12, scope: !3595)
!3609 = !DILocation(line: 830, column: 16, scope: !3595)
!3610 = !DILocation(line: 833, column: 9, scope: !3595)
!3611 = !DILocation(line: 833, column: 16, scope: !3595)
!3612 = !DILocation(line: 833, column: 22, scope: !3595)
!3613 = !DILocation(line: 833, column: 20, scope: !3595)
!3614 = !DILocalVariable(name: "dp", scope: !3615, file: !103, line: 834, type: !110)
!3615 = distinct !DILexicalBlock(scope: !3595, file: !103, line: 833, column: 27)
!3616 = !DILocation(line: 834, column: 28, scope: !3615)
!3617 = !DILocation(line: 834, column: 61, scope: !3615)
!3618 = !DILocation(line: 834, column: 53, scope: !3615)
!3619 = !DILocation(line: 834, column: 68, scope: !3615)
!3620 = !DILocation(line: 834, column: 66, scope: !3615)
!3621 = !DILocation(line: 834, column: 33, scope: !3615)
!3622 = !DILocation(line: 836, column: 11, scope: !3615)
!3623 = !DILocation(line: 836, column: 15, scope: !3615)
!3624 = !DILocation(line: 836, column: 21, scope: !3615)
!3625 = !DILocation(line: 838, column: 18, scope: !3615)
!3626 = !DILocation(line: 838, column: 22, scope: !3615)
!3627 = !DILocation(line: 838, column: 15, scope: !3615)
!3628 = distinct !{!3628, !3610, !3629}
!3629 = !DILocation(line: 839, column: 9, scope: !3595)
!3630 = !DILocation(line: 841, column: 14, scope: !3563)
!3631 = !DILocation(line: 841, column: 7, scope: !3563)
!3632 = !DILocation(line: 844, column: 1, scope: !3421)
!3633 = distinct !DISubprogram(name: "ioctl", scope: !103, file: !103, line: 847, type: !3634, scopeLine: 847, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !106, retainedNodes: !4)
!3634 = !DISubroutineType(types: !3635)
!3635 = !{!44, !44, !32, null}
!3636 = !DILocalVariable(name: "fd", arg: 1, scope: !3633, file: !103, line: 847, type: !44)
!3637 = !DILocation(line: 847, column: 15, scope: !3633)
!3638 = !DILocalVariable(name: "request", arg: 2, scope: !3633, file: !103, line: 847, type: !32)
!3639 = !DILocation(line: 847, column: 37, scope: !3633)
!3640 = !DILocalVariable(name: "f", scope: !3633, file: !103, line: 851, type: !1987)
!3641 = !DILocation(line: 851, column: 15, scope: !3633)
!3642 = !DILocation(line: 851, column: 30, scope: !3633)
!3643 = !DILocation(line: 851, column: 19, scope: !3633)
!3644 = !DILocalVariable(name: "ap", scope: !3633, file: !103, line: 852, type: !3645)
!3645 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !1540, line: 46, baseType: !3646)
!3646 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !1542, line: 32, baseType: !3647)
!3647 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !107, line: 852, baseType: !3648)
!3648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3649, size: 192, elements: !1551)
!3649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !107, line: 852, size: 192, elements: !3650)
!3650 = !{!3651, !3652, !3653, !3654}
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !3649, file: !107, line: 852, baseType: !14, size: 32)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !3649, file: !107, line: 852, baseType: !14, size: 32, offset: 32)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !3649, file: !107, line: 852, baseType: !109, size: 64, offset: 64)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !3649, file: !107, line: 852, baseType: !109, size: 64, offset: 128)
!3655 = !DILocation(line: 852, column: 11, scope: !3633)
!3656 = !DILocalVariable(name: "buf", scope: !3633, file: !103, line: 853, type: !109)
!3657 = !DILocation(line: 853, column: 9, scope: !3633)
!3658 = !DILocation(line: 859, column: 8, scope: !3659)
!3659 = distinct !DILexicalBlock(scope: !3633, file: !103, line: 859, column: 7)
!3660 = !DILocation(line: 859, column: 7, scope: !3633)
!3661 = !DILocation(line: 860, column: 5, scope: !3662)
!3662 = distinct !DILexicalBlock(scope: !3659, file: !103, line: 859, column: 11)
!3663 = !DILocation(line: 860, column: 11, scope: !3662)
!3664 = !DILocation(line: 861, column: 5, scope: !3662)
!3665 = !DILocation(line: 864, column: 3, scope: !3633)
!3666 = !DILocation(line: 865, column: 9, scope: !3633)
!3667 = !DILocation(line: 865, column: 7, scope: !3633)
!3668 = !DILocation(line: 866, column: 3, scope: !3633)
!3669 = !DILocation(line: 867, column: 7, scope: !3670)
!3670 = distinct !DILexicalBlock(scope: !3633, file: !103, line: 867, column: 7)
!3671 = !DILocation(line: 867, column: 10, scope: !3670)
!3672 = !DILocation(line: 0, scope: !3633)
!3673 = !DILocation(line: 867, column: 7, scope: !3633)
!3674 = !DILocalVariable(name: "stat", scope: !3675, file: !103, line: 868, type: !124)
!3675 = distinct !DILexicalBlock(scope: !3670, file: !103, line: 867, column: 17)
!3676 = !DILocation(line: 868, column: 18, scope: !3675)
!3677 = !DILocation(line: 868, column: 43, scope: !3675)
!3678 = !DILocation(line: 868, column: 50, scope: !3675)
!3679 = !DILocation(line: 868, column: 25, scope: !3675)
!3680 = !DILocation(line: 870, column: 13, scope: !3675)
!3681 = !DILocation(line: 870, column: 5, scope: !3675)
!3682 = !DILocalVariable(name: "ts", scope: !3683, file: !103, line: 872, type: !3685)
!3683 = distinct !DILexicalBlock(scope: !3684, file: !103, line: 871, column: 18)
!3684 = distinct !DILexicalBlock(scope: !3675, file: !103, line: 870, column: 22)
!3685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3686, size: 64)
!3686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "termios", file: !3687, line: 28, size: 480, elements: !3688)
!3687 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/termios.h", directory: "")
!3688 = !{!3689, !3691, !3692, !3693, !3694, !3696, !3698, !3700}
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "c_iflag", scope: !3686, file: !3687, line: 30, baseType: !3690, size: 32)
!3690 = !DIDerivedType(tag: DW_TAG_typedef, name: "tcflag_t", file: !3687, line: 25, baseType: !14)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "c_oflag", scope: !3686, file: !3687, line: 31, baseType: !3690, size: 32, offset: 32)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "c_cflag", scope: !3686, file: !3687, line: 32, baseType: !3690, size: 32, offset: 64)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "c_lflag", scope: !3686, file: !3687, line: 33, baseType: !3690, size: 32, offset: 96)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "c_line", scope: !3686, file: !3687, line: 34, baseType: !3695, size: 8, offset: 128)
!3695 = !DIDerivedType(tag: DW_TAG_typedef, name: "cc_t", file: !3687, line: 23, baseType: !119)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "c_cc", scope: !3686, file: !3687, line: 35, baseType: !3697, size: 256, offset: 136)
!3697 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3695, size: 256, elements: !94)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "c_ispeed", scope: !3686, file: !3687, line: 36, baseType: !3699, size: 32, offset: 416)
!3699 = !DIDerivedType(tag: DW_TAG_typedef, name: "speed_t", file: !3687, line: 24, baseType: !14)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "c_ospeed", scope: !3686, file: !3687, line: 37, baseType: !3699, size: 32, offset: 448)
!3701 = !DILocation(line: 872, column: 23, scope: !3683)
!3702 = !DILocation(line: 872, column: 28, scope: !3683)
!3703 = !DILocation(line: 874, column: 7, scope: !3683)
!3704 = !DILocation(line: 877, column: 11, scope: !3705)
!3705 = distinct !DILexicalBlock(scope: !3683, file: !103, line: 877, column: 11)
!3706 = !DILocation(line: 877, column: 11, scope: !3683)
!3707 = !DILocation(line: 880, column: 9, scope: !3708)
!3708 = distinct !DILexicalBlock(scope: !3705, file: !103, line: 877, column: 35)
!3709 = !DILocation(line: 880, column: 13, scope: !3708)
!3710 = !DILocation(line: 880, column: 21, scope: !3708)
!3711 = !DILocation(line: 881, column: 9, scope: !3708)
!3712 = !DILocation(line: 881, column: 13, scope: !3708)
!3713 = !DILocation(line: 881, column: 21, scope: !3708)
!3714 = !DILocation(line: 882, column: 9, scope: !3708)
!3715 = !DILocation(line: 882, column: 13, scope: !3708)
!3716 = !DILocation(line: 882, column: 21, scope: !3708)
!3717 = !DILocation(line: 883, column: 9, scope: !3708)
!3718 = !DILocation(line: 883, column: 13, scope: !3708)
!3719 = !DILocation(line: 883, column: 21, scope: !3708)
!3720 = !DILocation(line: 885, column: 9, scope: !3708)
!3721 = !DILocation(line: 885, column: 13, scope: !3708)
!3722 = !DILocation(line: 885, column: 20, scope: !3708)
!3723 = !DILocation(line: 887, column: 9, scope: !3708)
!3724 = !DILocation(line: 887, column: 13, scope: !3708)
!3725 = !DILocation(line: 887, column: 21, scope: !3708)
!3726 = !DILocation(line: 888, column: 9, scope: !3708)
!3727 = !DILocation(line: 888, column: 13, scope: !3708)
!3728 = !DILocation(line: 888, column: 21, scope: !3708)
!3729 = !DILocation(line: 889, column: 9, scope: !3708)
!3730 = !DILocation(line: 889, column: 13, scope: !3708)
!3731 = !DILocation(line: 889, column: 21, scope: !3708)
!3732 = !DILocation(line: 890, column: 9, scope: !3708)
!3733 = !DILocation(line: 890, column: 13, scope: !3708)
!3734 = !DILocation(line: 890, column: 21, scope: !3708)
!3735 = !DILocation(line: 891, column: 9, scope: !3708)
!3736 = !DILocation(line: 891, column: 13, scope: !3708)
!3737 = !DILocation(line: 891, column: 21, scope: !3708)
!3738 = !DILocation(line: 892, column: 9, scope: !3708)
!3739 = !DILocation(line: 892, column: 13, scope: !3708)
!3740 = !DILocation(line: 892, column: 21, scope: !3708)
!3741 = !DILocation(line: 893, column: 9, scope: !3708)
!3742 = !DILocation(line: 893, column: 13, scope: !3708)
!3743 = !DILocation(line: 893, column: 21, scope: !3708)
!3744 = !DILocation(line: 894, column: 9, scope: !3708)
!3745 = !DILocation(line: 894, column: 13, scope: !3708)
!3746 = !DILocation(line: 894, column: 21, scope: !3708)
!3747 = !DILocation(line: 895, column: 9, scope: !3708)
!3748 = !DILocation(line: 895, column: 13, scope: !3708)
!3749 = !DILocation(line: 895, column: 21, scope: !3708)
!3750 = !DILocation(line: 896, column: 9, scope: !3708)
!3751 = !DILocation(line: 896, column: 13, scope: !3708)
!3752 = !DILocation(line: 896, column: 21, scope: !3708)
!3753 = !DILocation(line: 897, column: 9, scope: !3708)
!3754 = !DILocation(line: 897, column: 13, scope: !3708)
!3755 = !DILocation(line: 897, column: 22, scope: !3708)
!3756 = !DILocation(line: 898, column: 9, scope: !3708)
!3757 = !DILocation(line: 898, column: 13, scope: !3708)
!3758 = !DILocation(line: 898, column: 22, scope: !3708)
!3759 = !DILocation(line: 899, column: 9, scope: !3708)
!3760 = !DILocation(line: 899, column: 13, scope: !3708)
!3761 = !DILocation(line: 899, column: 22, scope: !3708)
!3762 = !DILocation(line: 900, column: 9, scope: !3708)
!3763 = !DILocation(line: 900, column: 13, scope: !3708)
!3764 = !DILocation(line: 900, column: 22, scope: !3708)
!3765 = !DILocation(line: 901, column: 9, scope: !3708)
!3766 = !DILocation(line: 901, column: 13, scope: !3708)
!3767 = !DILocation(line: 901, column: 22, scope: !3708)
!3768 = !DILocation(line: 902, column: 9, scope: !3708)
!3769 = !DILocation(line: 902, column: 13, scope: !3708)
!3770 = !DILocation(line: 902, column: 22, scope: !3708)
!3771 = !DILocation(line: 903, column: 9, scope: !3708)
!3772 = !DILocation(line: 903, column: 13, scope: !3708)
!3773 = !DILocation(line: 903, column: 22, scope: !3708)
!3774 = !DILocation(line: 904, column: 9, scope: !3708)
!3775 = !DILocation(line: 904, column: 13, scope: !3708)
!3776 = !DILocation(line: 904, column: 22, scope: !3708)
!3777 = !DILocation(line: 905, column: 9, scope: !3708)
!3778 = !DILocation(line: 905, column: 13, scope: !3708)
!3779 = !DILocation(line: 905, column: 22, scope: !3708)
!3780 = !DILocation(line: 906, column: 9, scope: !3708)
!3781 = !DILocation(line: 908, column: 9, scope: !3782)
!3782 = distinct !DILexicalBlock(scope: !3705, file: !103, line: 907, column: 14)
!3783 = !DILocation(line: 908, column: 15, scope: !3782)
!3784 = !DILocation(line: 909, column: 9, scope: !3782)
!3785 = !DILocation(line: 914, column: 7, scope: !3786)
!3786 = distinct !DILexicalBlock(scope: !3684, file: !103, line: 912, column: 18)
!3787 = !DILocation(line: 915, column: 11, scope: !3788)
!3788 = distinct !DILexicalBlock(scope: !3786, file: !103, line: 915, column: 11)
!3789 = !DILocation(line: 915, column: 11, scope: !3786)
!3790 = !DILocation(line: 916, column: 9, scope: !3791)
!3791 = distinct !DILexicalBlock(scope: !3788, file: !103, line: 915, column: 35)
!3792 = !DILocation(line: 918, column: 9, scope: !3793)
!3793 = distinct !DILexicalBlock(scope: !3788, file: !103, line: 917, column: 14)
!3794 = !DILocation(line: 918, column: 15, scope: !3793)
!3795 = !DILocation(line: 919, column: 9, scope: !3793)
!3796 = !DILocation(line: 924, column: 7, scope: !3797)
!3797 = distinct !DILexicalBlock(scope: !3684, file: !103, line: 922, column: 19)
!3798 = !DILocation(line: 925, column: 11, scope: !3799)
!3799 = distinct !DILexicalBlock(scope: !3797, file: !103, line: 925, column: 11)
!3800 = !DILocation(line: 925, column: 13, scope: !3799)
!3801 = !DILocation(line: 925, column: 11, scope: !3797)
!3802 = !DILocation(line: 926, column: 9, scope: !3803)
!3803 = distinct !DILexicalBlock(scope: !3799, file: !103, line: 925, column: 18)
!3804 = !DILocation(line: 928, column: 9, scope: !3805)
!3805 = distinct !DILexicalBlock(scope: !3799, file: !103, line: 927, column: 14)
!3806 = !DILocation(line: 928, column: 15, scope: !3805)
!3807 = !DILocation(line: 929, column: 9, scope: !3805)
!3808 = !DILocation(line: 934, column: 7, scope: !3809)
!3809 = distinct !DILexicalBlock(scope: !3684, file: !103, line: 932, column: 19)
!3810 = !DILocation(line: 935, column: 11, scope: !3811)
!3811 = distinct !DILexicalBlock(scope: !3809, file: !103, line: 935, column: 11)
!3812 = !DILocation(line: 935, column: 11, scope: !3809)
!3813 = !DILocation(line: 936, column: 9, scope: !3814)
!3814 = distinct !DILexicalBlock(scope: !3811, file: !103, line: 935, column: 35)
!3815 = !DILocation(line: 938, column: 9, scope: !3816)
!3816 = distinct !DILexicalBlock(scope: !3811, file: !103, line: 937, column: 14)
!3817 = !DILocation(line: 938, column: 15, scope: !3816)
!3818 = !DILocation(line: 939, column: 9, scope: !3816)
!3819 = !DILocalVariable(name: "ws", scope: !3820, file: !103, line: 943, type: !3821)
!3820 = distinct !DILexicalBlock(scope: !3684, file: !103, line: 942, column: 22)
!3821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3822, size: 64)
!3822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "winsize", file: !3823, line: 27, size: 64, elements: !3824)
!3823 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/ioctl-types.h", directory: "")
!3824 = !{!3825, !3826, !3827, !3828}
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "ws_row", scope: !3822, file: !3823, line: 29, baseType: !117, size: 16)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "ws_col", scope: !3822, file: !3823, line: 30, baseType: !117, size: 16, offset: 16)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "ws_xpixel", scope: !3822, file: !3823, line: 31, baseType: !117, size: 16, offset: 32)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "ws_ypixel", scope: !3822, file: !3823, line: 32, baseType: !117, size: 16, offset: 48)
!3829 = !DILocation(line: 943, column: 23, scope: !3820)
!3830 = !DILocation(line: 943, column: 28, scope: !3820)
!3831 = !DILocation(line: 944, column: 7, scope: !3820)
!3832 = !DILocation(line: 944, column: 11, scope: !3820)
!3833 = !DILocation(line: 944, column: 18, scope: !3820)
!3834 = !DILocation(line: 945, column: 7, scope: !3820)
!3835 = !DILocation(line: 945, column: 11, scope: !3820)
!3836 = !DILocation(line: 945, column: 18, scope: !3820)
!3837 = !DILocation(line: 946, column: 7, scope: !3820)
!3838 = !DILocation(line: 947, column: 11, scope: !3839)
!3839 = distinct !DILexicalBlock(scope: !3820, file: !103, line: 947, column: 11)
!3840 = !DILocation(line: 947, column: 11, scope: !3820)
!3841 = !DILocation(line: 948, column: 9, scope: !3842)
!3842 = distinct !DILexicalBlock(scope: !3839, file: !103, line: 947, column: 35)
!3843 = !DILocation(line: 950, column: 9, scope: !3844)
!3844 = distinct !DILexicalBlock(scope: !3839, file: !103, line: 949, column: 14)
!3845 = !DILocation(line: 950, column: 15, scope: !3844)
!3846 = !DILocation(line: 951, column: 9, scope: !3844)
!3847 = !DILocation(line: 956, column: 7, scope: !3848)
!3848 = distinct !DILexicalBlock(scope: !3684, file: !103, line: 954, column: 22)
!3849 = !DILocation(line: 957, column: 11, scope: !3850)
!3850 = distinct !DILexicalBlock(scope: !3848, file: !103, line: 957, column: 11)
!3851 = !DILocation(line: 0, scope: !3850)
!3852 = !DILocation(line: 957, column: 11, scope: !3848)
!3853 = !DILocation(line: 958, column: 15, scope: !3854)
!3854 = distinct !DILexicalBlock(scope: !3850, file: !103, line: 957, column: 35)
!3855 = !DILocation(line: 959, column: 9, scope: !3854)
!3856 = !DILocation(line: 961, column: 15, scope: !3857)
!3857 = distinct !DILexicalBlock(scope: !3850, file: !103, line: 960, column: 14)
!3858 = !DILocation(line: 962, column: 9, scope: !3857)
!3859 = !DILocalVariable(name: "res", scope: !3860, file: !103, line: 966, type: !72)
!3860 = distinct !DILexicalBlock(scope: !3684, file: !103, line: 965, column: 20)
!3861 = !DILocation(line: 966, column: 12, scope: !3860)
!3862 = !DILocation(line: 966, column: 18, scope: !3860)
!3863 = !DILocation(line: 967, column: 7, scope: !3860)
!3864 = !DILocation(line: 968, column: 11, scope: !3865)
!3865 = distinct !DILexicalBlock(scope: !3860, file: !103, line: 968, column: 11)
!3866 = !DILocation(line: 968, column: 11, scope: !3860)
!3867 = !DILocation(line: 969, column: 13, scope: !3868)
!3868 = distinct !DILexicalBlock(scope: !3869, file: !103, line: 969, column: 13)
!3869 = distinct !DILexicalBlock(scope: !3865, file: !103, line: 968, column: 35)
!3870 = !DILocation(line: 969, column: 16, scope: !3868)
!3871 = !DILocation(line: 969, column: 32, scope: !3868)
!3872 = !DILocation(line: 969, column: 35, scope: !3868)
!3873 = !DILocation(line: 969, column: 42, scope: !3868)
!3874 = !DILocation(line: 969, column: 22, scope: !3868)
!3875 = !DILocation(line: 969, column: 20, scope: !3868)
!3876 = !DILocation(line: 969, column: 13, scope: !3869)
!3877 = !DILocation(line: 970, column: 18, scope: !3878)
!3878 = distinct !DILexicalBlock(scope: !3868, file: !103, line: 969, column: 48)
!3879 = !DILocation(line: 970, column: 21, scope: !3878)
!3880 = !DILocation(line: 970, column: 28, scope: !3878)
!3881 = !DILocation(line: 970, column: 35, scope: !3878)
!3882 = !DILocation(line: 970, column: 38, scope: !3878)
!3883 = !DILocation(line: 970, column: 33, scope: !3878)
!3884 = !DILocation(line: 970, column: 12, scope: !3878)
!3885 = !DILocation(line: 970, column: 16, scope: !3878)
!3886 = !DILocation(line: 971, column: 9, scope: !3878)
!3887 = !DILocation(line: 972, column: 12, scope: !3888)
!3888 = distinct !DILexicalBlock(scope: !3868, file: !103, line: 971, column: 16)
!3889 = !DILocation(line: 972, column: 16, scope: !3888)
!3890 = !DILocation(line: 974, column: 9, scope: !3869)
!3891 = !DILocation(line: 976, column: 9, scope: !3892)
!3892 = distinct !DILexicalBlock(scope: !3865, file: !103, line: 975, column: 14)
!3893 = !DILocation(line: 976, column: 15, scope: !3892)
!3894 = !DILocation(line: 977, column: 9, scope: !3892)
!3895 = !DILocation(line: 981, column: 7, scope: !3896)
!3896 = distinct !DILexicalBlock(scope: !3684, file: !103, line: 980, column: 20)
!3897 = !DILocation(line: 982, column: 7, scope: !3896)
!3898 = !DILocation(line: 982, column: 13, scope: !3896)
!3899 = !DILocation(line: 983, column: 7, scope: !3896)
!3900 = !DILocation(line: 986, column: 7, scope: !3684)
!3901 = !DILocation(line: 987, column: 7, scope: !3684)
!3902 = !DILocation(line: 987, column: 13, scope: !3684)
!3903 = !DILocation(line: 988, column: 7, scope: !3684)
!3904 = !DILocation(line: 991, column: 33, scope: !3633)
!3905 = !DILocation(line: 991, column: 37, scope: !3633)
!3906 = !DILocation(line: 991, column: 46, scope: !3633)
!3907 = !DILocation(line: 991, column: 10, scope: !3633)
!3908 = !DILocation(line: 991, column: 3, scope: !3633)
!3909 = !DILocation(line: 992, column: 1, scope: !3633)
!3910 = distinct !DISubprogram(name: "fcntl", scope: !103, file: !103, line: 994, type: !3911, scopeLine: 994, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !106, retainedNodes: !4)
!3911 = !DISubroutineType(types: !3912)
!3912 = !{!44, !44, !44, null}
!3913 = !DILocalVariable(name: "fd", arg: 1, scope: !3910, file: !103, line: 994, type: !44)
!3914 = !DILocation(line: 994, column: 15, scope: !3910)
!3915 = !DILocalVariable(name: "cmd", arg: 2, scope: !3910, file: !103, line: 994, type: !44)
!3916 = !DILocation(line: 994, column: 23, scope: !3910)
!3917 = !DILocalVariable(name: "f", scope: !3910, file: !103, line: 995, type: !1987)
!3918 = !DILocation(line: 995, column: 15, scope: !3910)
!3919 = !DILocation(line: 995, column: 30, scope: !3910)
!3920 = !DILocation(line: 995, column: 19, scope: !3910)
!3921 = !DILocalVariable(name: "ap", scope: !3910, file: !103, line: 996, type: !3645)
!3922 = !DILocation(line: 996, column: 11, scope: !3910)
!3923 = !DILocalVariable(name: "arg", scope: !3910, file: !103, line: 997, type: !14)
!3924 = !DILocation(line: 997, column: 12, scope: !3910)
!3925 = !DILocation(line: 999, column: 8, scope: !3926)
!3926 = distinct !DILexicalBlock(scope: !3910, file: !103, line: 999, column: 7)
!3927 = !DILocation(line: 999, column: 7, scope: !3910)
!3928 = !DILocation(line: 1000, column: 5, scope: !3929)
!3929 = distinct !DILexicalBlock(scope: !3926, file: !103, line: 999, column: 11)
!3930 = !DILocation(line: 1000, column: 11, scope: !3929)
!3931 = !DILocation(line: 1001, column: 5, scope: !3929)
!3932 = !DILocation(line: 1004, column: 7, scope: !3933)
!3933 = distinct !DILexicalBlock(scope: !3910, file: !103, line: 1004, column: 7)
!3934 = !DILocation(line: 1004, column: 10, scope: !3933)
!3935 = !DILocation(line: 1004, column: 23, scope: !3933)
!3936 = !DILocation(line: 1004, column: 26, scope: !3933)
!3937 = !DILocation(line: 1004, column: 20, scope: !3933)
!3938 = !DILocation(line: 1004, column: 39, scope: !3933)
!3939 = !DILocation(line: 1004, column: 42, scope: !3933)
!3940 = !DILocation(line: 1004, column: 56, scope: !3933)
!3941 = !DILocation(line: 1004, column: 59, scope: !3933)
!3942 = !DILocation(line: 1005, column: 7, scope: !3933)
!3943 = !DILocation(line: 1005, column: 10, scope: !3933)
!3944 = !DILocation(line: 1005, column: 26, scope: !3933)
!3945 = !DILocation(line: 1005, column: 29, scope: !3933)
!3946 = !DILocation(line: 1009, column: 9, scope: !3947)
!3947 = distinct !DILexicalBlock(scope: !3933, file: !103, line: 1005, column: 41)
!3948 = !DILocation(line: 1010, column: 3, scope: !3947)
!3949 = !DILocation(line: 1011, column: 5, scope: !3950)
!3950 = distinct !DILexicalBlock(scope: !3933, file: !103, line: 1010, column: 10)
!3951 = !DILocation(line: 1012, column: 11, scope: !3950)
!3952 = !DILocation(line: 1012, column: 9, scope: !3950)
!3953 = !DILocation(line: 1013, column: 5, scope: !3950)
!3954 = !DILocation(line: 1016, column: 7, scope: !3955)
!3955 = distinct !DILexicalBlock(scope: !3910, file: !103, line: 1016, column: 7)
!3956 = !DILocation(line: 1016, column: 10, scope: !3955)
!3957 = !DILocation(line: 1016, column: 7, scope: !3910)
!3958 = !DILocation(line: 1017, column: 12, scope: !3959)
!3959 = distinct !DILexicalBlock(scope: !3955, file: !103, line: 1016, column: 17)
!3960 = !DILocation(line: 1017, column: 5, scope: !3959)
!3961 = !DILocalVariable(name: "flags", scope: !3962, file: !103, line: 1019, type: !44)
!3962 = distinct !DILexicalBlock(scope: !3963, file: !103, line: 1018, column: 19)
!3963 = distinct !DILexicalBlock(scope: !3959, file: !103, line: 1017, column: 17)
!3964 = !DILocation(line: 1019, column: 11, scope: !3962)
!3965 = !DILocation(line: 1020, column: 11, scope: !3966)
!3966 = distinct !DILexicalBlock(scope: !3962, file: !103, line: 1020, column: 11)
!3967 = !DILocation(line: 1020, column: 14, scope: !3966)
!3968 = !DILocation(line: 1020, column: 20, scope: !3966)
!3969 = !DILocation(line: 1020, column: 11, scope: !3962)
!3970 = !DILocation(line: 1021, column: 15, scope: !3966)
!3971 = !DILocation(line: 1021, column: 9, scope: !3966)
!3972 = !DILocation(line: 1022, column: 14, scope: !3962)
!3973 = !DILocation(line: 1022, column: 7, scope: !3962)
!3974 = !DILocation(line: 1025, column: 7, scope: !3975)
!3975 = distinct !DILexicalBlock(scope: !3963, file: !103, line: 1024, column: 19)
!3976 = !DILocation(line: 1025, column: 10, scope: !3975)
!3977 = !DILocation(line: 1025, column: 16, scope: !3975)
!3978 = !DILocation(line: 1026, column: 11, scope: !3979)
!3979 = distinct !DILexicalBlock(scope: !3975, file: !103, line: 1026, column: 11)
!3980 = !DILocation(line: 1026, column: 15, scope: !3979)
!3981 = !DILocation(line: 1026, column: 11, scope: !3975)
!3982 = !DILocation(line: 1027, column: 9, scope: !3979)
!3983 = !DILocation(line: 1027, column: 12, scope: !3979)
!3984 = !DILocation(line: 1027, column: 18, scope: !3979)
!3985 = !DILocation(line: 1028, column: 7, scope: !3975)
!3986 = !DILocation(line: 1037, column: 7, scope: !3987)
!3987 = distinct !DILexicalBlock(scope: !3963, file: !103, line: 1030, column: 19)
!3988 = !DILocation(line: 1040, column: 7, scope: !3963)
!3989 = !DILocation(line: 1041, column: 7, scope: !3963)
!3990 = !DILocation(line: 1041, column: 13, scope: !3963)
!3991 = !DILocation(line: 1042, column: 7, scope: !3963)
!3992 = !DILocation(line: 1045, column: 30, scope: !3910)
!3993 = !DILocation(line: 1045, column: 33, scope: !3910)
!3994 = !DILocation(line: 1045, column: 37, scope: !3910)
!3995 = !DILocation(line: 1045, column: 42, scope: !3910)
!3996 = !DILocation(line: 1045, column: 10, scope: !3910)
!3997 = !DILocation(line: 1045, column: 3, scope: !3910)
!3998 = !DILocation(line: 1046, column: 1, scope: !3910)
!3999 = distinct !DISubprogram(name: "__fd_statfs", scope: !103, file: !103, line: 1048, type: !4000, scopeLine: 1048, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !106, retainedNodes: !4)
!4000 = !DISubroutineType(types: !4001)
!4001 = !{!44, !170, !4002}
!4002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4003, size: 64)
!4003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "statfs", file: !1713, line: 24, size: 960, elements: !4004)
!4004 = !{!4005, !4006, !4007, !4009, !4010, !4011, !4013, !4014, !4019, !4020, !4021, !4022}
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "f_type", scope: !4003, file: !1713, line: 26, baseType: !1716, size: 64)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "f_bsize", scope: !4003, file: !1713, line: 27, baseType: !1716, size: 64, offset: 64)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "f_blocks", scope: !4003, file: !1713, line: 29, baseType: !4008, size: 64, offset: 128)
!4008 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsblkcnt_t", file: !31, line: 171, baseType: !32)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "f_bfree", scope: !4003, file: !1713, line: 30, baseType: !4008, size: 64, offset: 192)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "f_bavail", scope: !4003, file: !1713, line: 31, baseType: !4008, size: 64, offset: 256)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "f_files", scope: !4003, file: !1713, line: 32, baseType: !4012, size: 64, offset: 320)
!4012 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsfilcnt_t", file: !31, line: 175, baseType: !32)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "f_ffree", scope: !4003, file: !1713, line: 33, baseType: !4012, size: 64, offset: 384)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "f_fsid", scope: !4003, file: !1713, line: 41, baseType: !4015, size: 64, offset: 448)
!4015 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsid_t", file: !31, line: 143, baseType: !4016)
!4016 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !31, line: 143, size: 64, elements: !4017)
!4017 = !{!4018}
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "__val", scope: !4016, file: !31, line: 143, baseType: !1730, size: 64)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "f_namelen", scope: !4003, file: !1713, line: 42, baseType: !1716, size: 64, offset: 512)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "f_frsize", scope: !4003, file: !1713, line: 43, baseType: !1716, size: 64, offset: 576)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !4003, file: !1713, line: 44, baseType: !1716, size: 64, offset: 640)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "f_spare", scope: !4003, file: !1713, line: 45, baseType: !1737, size: 256, offset: 704)
!4023 = !DILocalVariable(name: "path", arg: 1, scope: !3999, file: !103, line: 1048, type: !170)
!4024 = !DILocation(line: 1048, column: 29, scope: !3999)
!4025 = !DILocalVariable(name: "buf", arg: 2, scope: !3999, file: !103, line: 1048, type: !4002)
!4026 = !DILocation(line: 1048, column: 50, scope: !3999)
!4027 = !DILocalVariable(name: "dfile", scope: !3999, file: !103, line: 1049, type: !1772)
!4028 = !DILocation(line: 1049, column: 20, scope: !3999)
!4029 = !DILocation(line: 1049, column: 43, scope: !3999)
!4030 = !DILocation(line: 1049, column: 28, scope: !3999)
!4031 = !DILocation(line: 1050, column: 7, scope: !4032)
!4032 = distinct !DILexicalBlock(scope: !3999, file: !103, line: 1050, column: 7)
!4033 = !DILocation(line: 1050, column: 7, scope: !3999)
!4034 = !DILocation(line: 1052, column: 5, scope: !4035)
!4035 = distinct !DILexicalBlock(scope: !4032, file: !103, line: 1050, column: 14)
!4036 = !DILocation(line: 1053, column: 5, scope: !4035)
!4037 = !DILocation(line: 1053, column: 11, scope: !4035)
!4038 = !DILocation(line: 1054, column: 5, scope: !4035)
!4039 = !DILocation(line: 1057, column: 51, scope: !3999)
!4040 = !DILocation(line: 1057, column: 31, scope: !3999)
!4041 = !DILocation(line: 1057, column: 58, scope: !3999)
!4042 = !DILocation(line: 1057, column: 10, scope: !3999)
!4043 = !DILocation(line: 1057, column: 3, scope: !3999)
!4044 = !DILocation(line: 1058, column: 1, scope: !3999)
!4045 = distinct !DISubprogram(name: "fstatfs", scope: !103, file: !103, line: 1060, type: !4046, scopeLine: 1060, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !106, retainedNodes: !4)
!4046 = !DISubroutineType(types: !4047)
!4047 = !{!44, !44, !4002}
!4048 = !DILocalVariable(name: "fd", arg: 1, scope: !4045, file: !103, line: 1060, type: !44)
!4049 = !DILocation(line: 1060, column: 17, scope: !4045)
!4050 = !DILocalVariable(name: "buf", arg: 2, scope: !4045, file: !103, line: 1060, type: !4002)
!4051 = !DILocation(line: 1060, column: 36, scope: !4045)
!4052 = !DILocalVariable(name: "f", scope: !4045, file: !103, line: 1061, type: !1987)
!4053 = !DILocation(line: 1061, column: 15, scope: !4045)
!4054 = !DILocation(line: 1061, column: 30, scope: !4045)
!4055 = !DILocation(line: 1061, column: 19, scope: !4045)
!4056 = !DILocation(line: 1063, column: 8, scope: !4057)
!4057 = distinct !DILexicalBlock(scope: !4045, file: !103, line: 1063, column: 7)
!4058 = !DILocation(line: 1063, column: 7, scope: !4045)
!4059 = !DILocation(line: 1064, column: 5, scope: !4060)
!4060 = distinct !DILexicalBlock(scope: !4057, file: !103, line: 1063, column: 11)
!4061 = !DILocation(line: 1064, column: 11, scope: !4060)
!4062 = !DILocation(line: 1065, column: 5, scope: !4060)
!4063 = !DILocation(line: 1068, column: 7, scope: !4064)
!4064 = distinct !DILexicalBlock(scope: !4045, file: !103, line: 1068, column: 7)
!4065 = !DILocation(line: 1068, column: 10, scope: !4064)
!4066 = !DILocation(line: 1068, column: 7, scope: !4045)
!4067 = !DILocation(line: 1069, column: 5, scope: !4068)
!4068 = distinct !DILexicalBlock(scope: !4064, file: !103, line: 1068, column: 17)
!4069 = !DILocation(line: 1070, column: 5, scope: !4068)
!4070 = !DILocation(line: 1070, column: 11, scope: !4068)
!4071 = !DILocation(line: 1071, column: 5, scope: !4068)
!4072 = !DILocation(line: 1073, column: 32, scope: !4045)
!4073 = !DILocation(line: 1073, column: 35, scope: !4045)
!4074 = !DILocation(line: 1073, column: 39, scope: !4045)
!4075 = !DILocation(line: 1073, column: 10, scope: !4045)
!4076 = !DILocation(line: 1073, column: 3, scope: !4045)
!4077 = !DILocation(line: 1074, column: 1, scope: !4045)
!4078 = distinct !DISubprogram(name: "fsync", scope: !103, file: !103, line: 1076, type: !104, scopeLine: 1076, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !106, retainedNodes: !4)
!4079 = !DILocalVariable(name: "fd", arg: 1, scope: !4078, file: !103, line: 1076, type: !44)
!4080 = !DILocation(line: 1076, column: 15, scope: !4078)
!4081 = !DILocalVariable(name: "f", scope: !4078, file: !103, line: 1077, type: !1987)
!4082 = !DILocation(line: 1077, column: 15, scope: !4078)
!4083 = !DILocation(line: 1077, column: 30, scope: !4078)
!4084 = !DILocation(line: 1077, column: 19, scope: !4078)
!4085 = !DILocation(line: 1079, column: 8, scope: !4086)
!4086 = distinct !DILexicalBlock(scope: !4078, file: !103, line: 1079, column: 7)
!4087 = !DILocation(line: 1079, column: 7, scope: !4078)
!4088 = !DILocation(line: 1080, column: 5, scope: !4089)
!4089 = distinct !DILexicalBlock(scope: !4086, file: !103, line: 1079, column: 11)
!4090 = !DILocation(line: 1080, column: 11, scope: !4089)
!4091 = !DILocation(line: 1081, column: 5, scope: !4089)
!4092 = !DILocation(line: 1082, column: 14, scope: !4093)
!4093 = distinct !DILexicalBlock(scope: !4086, file: !103, line: 1082, column: 14)
!4094 = !DILocation(line: 1082, column: 17, scope: !4093)
!4095 = !DILocation(line: 1082, column: 14, scope: !4086)
!4096 = !DILocation(line: 1083, column: 5, scope: !4097)
!4097 = distinct !DILexicalBlock(scope: !4093, file: !103, line: 1082, column: 24)
!4098 = !DILocation(line: 1085, column: 30, scope: !4078)
!4099 = !DILocation(line: 1085, column: 33, scope: !4078)
!4100 = !DILocation(line: 1085, column: 10, scope: !4078)
!4101 = !DILocation(line: 1085, column: 3, scope: !4078)
!4102 = !DILocation(line: 1086, column: 1, scope: !4078)
!4103 = distinct !DISubprogram(name: "dup2", scope: !103, file: !103, line: 1088, type: !4104, scopeLine: 1088, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !106, retainedNodes: !4)
!4104 = !DISubroutineType(types: !4105)
!4105 = !{!44, !44, !44}
!4106 = !DILocalVariable(name: "oldfd", arg: 1, scope: !4103, file: !103, line: 1088, type: !44)
!4107 = !DILocation(line: 1088, column: 14, scope: !4103)
!4108 = !DILocalVariable(name: "newfd", arg: 2, scope: !4103, file: !103, line: 1088, type: !44)
!4109 = !DILocation(line: 1088, column: 25, scope: !4103)
!4110 = !DILocalVariable(name: "f", scope: !4103, file: !103, line: 1089, type: !1987)
!4111 = !DILocation(line: 1089, column: 15, scope: !4103)
!4112 = !DILocation(line: 1089, column: 30, scope: !4103)
!4113 = !DILocation(line: 1089, column: 19, scope: !4103)
!4114 = !DILocation(line: 1091, column: 8, scope: !4115)
!4115 = distinct !DILexicalBlock(scope: !4103, file: !103, line: 1091, column: 7)
!4116 = !DILocation(line: 1091, column: 15, scope: !4115)
!4117 = !DILocation(line: 1091, column: 20, scope: !4115)
!4118 = !DILocation(line: 1091, column: 10, scope: !4115)
!4119 = !DILocation(line: 1091, column: 27, scope: !4115)
!4120 = !DILocation(line: 1091, column: 32, scope: !4115)
!4121 = !DILocation(line: 1092, column: 5, scope: !4122)
!4122 = distinct !DILexicalBlock(scope: !4115, file: !103, line: 1091, column: 43)
!4123 = !DILocation(line: 1092, column: 11, scope: !4122)
!4124 = !DILocation(line: 1093, column: 5, scope: !4122)
!4125 = !DILocalVariable(name: "f2", scope: !4126, file: !103, line: 1095, type: !1987)
!4126 = distinct !DILexicalBlock(scope: !4115, file: !103, line: 1094, column: 10)
!4127 = !DILocation(line: 1095, column: 17, scope: !4126)
!4128 = !DILocation(line: 1095, column: 37, scope: !4126)
!4129 = !DILocation(line: 1095, column: 23, scope: !4126)
!4130 = !DILocation(line: 1096, column: 9, scope: !4131)
!4131 = distinct !DILexicalBlock(scope: !4126, file: !103, line: 1096, column: 9)
!4132 = !DILocation(line: 1096, column: 13, scope: !4131)
!4133 = !DILocation(line: 1096, column: 19, scope: !4131)
!4134 = !DILocation(line: 1096, column: 9, scope: !4126)
!4135 = !DILocation(line: 1096, column: 34, scope: !4131)
!4136 = !DILocation(line: 1096, column: 28, scope: !4131)
!4137 = !DILocation(line: 1100, column: 6, scope: !4126)
!4138 = !DILocation(line: 1100, column: 12, scope: !4126)
!4139 = !DILocation(line: 1100, column: 11, scope: !4126)
!4140 = !DILocation(line: 1102, column: 5, scope: !4126)
!4141 = !DILocation(line: 1102, column: 9, scope: !4126)
!4142 = !DILocation(line: 1102, column: 15, scope: !4126)
!4143 = !DILocation(line: 1109, column: 12, scope: !4126)
!4144 = !DILocation(line: 1109, column: 5, scope: !4126)
!4145 = !DILocation(line: 1111, column: 1, scope: !4103)
!4146 = distinct !DISubprogram(name: "dup", scope: !103, file: !103, line: 1113, type: !104, scopeLine: 1113, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !106, retainedNodes: !4)
!4147 = !DILocalVariable(name: "oldfd", arg: 1, scope: !4146, file: !103, line: 1113, type: !44)
!4148 = !DILocation(line: 1113, column: 13, scope: !4146)
!4149 = !DILocalVariable(name: "f", scope: !4146, file: !103, line: 1114, type: !1987)
!4150 = !DILocation(line: 1114, column: 15, scope: !4146)
!4151 = !DILocation(line: 1114, column: 30, scope: !4146)
!4152 = !DILocation(line: 1114, column: 19, scope: !4146)
!4153 = !DILocation(line: 1115, column: 8, scope: !4154)
!4154 = distinct !DILexicalBlock(scope: !4146, file: !103, line: 1115, column: 7)
!4155 = !DILocation(line: 1115, column: 7, scope: !4146)
!4156 = !DILocation(line: 1116, column: 5, scope: !4157)
!4157 = distinct !DILexicalBlock(scope: !4154, file: !103, line: 1115, column: 11)
!4158 = !DILocation(line: 1116, column: 11, scope: !4157)
!4159 = !DILocation(line: 1117, column: 5, scope: !4157)
!4160 = !DILocalVariable(name: "fd", scope: !4161, file: !103, line: 1119, type: !44)
!4161 = distinct !DILexicalBlock(scope: !4154, file: !103, line: 1118, column: 10)
!4162 = !DILocation(line: 1119, column: 9, scope: !4161)
!4163 = !DILocation(line: 1120, column: 13, scope: !4164)
!4164 = distinct !DILexicalBlock(scope: !4161, file: !103, line: 1120, column: 5)
!4165 = !DILocation(line: 1120, column: 10, scope: !4164)
!4166 = !DILocation(line: 1120, column: 18, scope: !4167)
!4167 = distinct !DILexicalBlock(scope: !4164, file: !103, line: 1120, column: 5)
!4168 = !DILocation(line: 1120, column: 21, scope: !4167)
!4169 = !DILocation(line: 1120, column: 5, scope: !4164)
!4170 = !DILocation(line: 1121, column: 27, scope: !4171)
!4171 = distinct !DILexicalBlock(scope: !4167, file: !103, line: 1121, column: 11)
!4172 = !DILocation(line: 1121, column: 13, scope: !4171)
!4173 = !DILocation(line: 1121, column: 31, scope: !4171)
!4174 = !DILocation(line: 1121, column: 37, scope: !4171)
!4175 = !DILocation(line: 1121, column: 11, scope: !4167)
!4176 = !DILocation(line: 1120, column: 32, scope: !4167)
!4177 = !DILocation(line: 1120, column: 5, scope: !4167)
!4178 = distinct !{!4178, !4169, !4179}
!4179 = !DILocation(line: 1122, column: 9, scope: !4164)
!4180 = !DILocation(line: 1123, column: 9, scope: !4181)
!4181 = distinct !DILexicalBlock(scope: !4161, file: !103, line: 1123, column: 9)
!4182 = !DILocation(line: 1123, column: 12, scope: !4181)
!4183 = !DILocation(line: 1123, column: 9, scope: !4161)
!4184 = !DILocation(line: 1124, column: 7, scope: !4185)
!4185 = distinct !DILexicalBlock(scope: !4181, file: !103, line: 1123, column: 24)
!4186 = !DILocation(line: 1124, column: 13, scope: !4185)
!4187 = !DILocation(line: 1125, column: 7, scope: !4185)
!4188 = !DILocation(line: 1127, column: 19, scope: !4189)
!4189 = distinct !DILexicalBlock(scope: !4181, file: !103, line: 1126, column: 12)
!4190 = !DILocation(line: 1127, column: 26, scope: !4189)
!4191 = !DILocation(line: 1127, column: 14, scope: !4189)
!4192 = !DILocation(line: 1127, column: 7, scope: !4189)
!4193 = !DILocation(line: 1130, column: 1, scope: !4146)
!4194 = distinct !DISubprogram(name: "rmdir", scope: !103, file: !103, line: 1132, type: !3063, scopeLine: 1132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !106, retainedNodes: !4)
!4195 = !DILocalVariable(name: "pathname", arg: 1, scope: !4194, file: !103, line: 1132, type: !170)
!4196 = !DILocation(line: 1132, column: 23, scope: !4194)
!4197 = !DILocalVariable(name: "dfile", scope: !4194, file: !103, line: 1133, type: !1772)
!4198 = !DILocation(line: 1133, column: 20, scope: !4194)
!4199 = !DILocation(line: 1133, column: 43, scope: !4194)
!4200 = !DILocation(line: 1133, column: 28, scope: !4194)
!4201 = !DILocation(line: 1134, column: 7, scope: !4202)
!4202 = distinct !DILexicalBlock(scope: !4194, file: !103, line: 1134, column: 7)
!4203 = !DILocation(line: 1134, column: 7, scope: !4194)
!4204 = !DILocation(line: 1136, column: 9, scope: !4205)
!4205 = distinct !DILexicalBlock(scope: !4206, file: !103, line: 1136, column: 9)
!4206 = distinct !DILexicalBlock(scope: !4202, file: !103, line: 1134, column: 14)
!4207 = !DILocation(line: 1136, column: 9, scope: !4206)
!4208 = !DILocation(line: 1137, column: 7, scope: !4209)
!4209 = distinct !DILexicalBlock(scope: !4205, file: !103, line: 1136, column: 40)
!4210 = !DILocation(line: 1137, column: 14, scope: !4209)
!4211 = !DILocation(line: 1137, column: 20, scope: !4209)
!4212 = !DILocation(line: 1137, column: 27, scope: !4209)
!4213 = !DILocation(line: 1138, column: 7, scope: !4209)
!4214 = !DILocation(line: 1140, column: 7, scope: !4215)
!4215 = distinct !DILexicalBlock(scope: !4205, file: !103, line: 1139, column: 12)
!4216 = !DILocation(line: 1140, column: 13, scope: !4215)
!4217 = !DILocation(line: 1141, column: 7, scope: !4215)
!4218 = !DILocation(line: 1145, column: 3, scope: !4194)
!4219 = !DILocation(line: 1146, column: 3, scope: !4194)
!4220 = !DILocation(line: 1146, column: 9, scope: !4194)
!4221 = !DILocation(line: 1147, column: 3, scope: !4194)
!4222 = !DILocation(line: 1148, column: 1, scope: !4194)
!4223 = distinct !DISubprogram(name: "unlink", scope: !103, file: !103, line: 1150, type: !3063, scopeLine: 1150, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !106, retainedNodes: !4)
!4224 = !DILocalVariable(name: "pathname", arg: 1, scope: !4223, file: !103, line: 1150, type: !170)
!4225 = !DILocation(line: 1150, column: 24, scope: !4223)
!4226 = !DILocalVariable(name: "dfile", scope: !4223, file: !103, line: 1151, type: !1772)
!4227 = !DILocation(line: 1151, column: 20, scope: !4223)
!4228 = !DILocation(line: 1151, column: 43, scope: !4223)
!4229 = !DILocation(line: 1151, column: 28, scope: !4223)
!4230 = !DILocation(line: 1152, column: 7, scope: !4231)
!4231 = distinct !DILexicalBlock(scope: !4223, file: !103, line: 1152, column: 7)
!4232 = !DILocation(line: 1152, column: 7, scope: !4223)
!4233 = !DILocation(line: 1154, column: 9, scope: !4234)
!4234 = distinct !DILexicalBlock(scope: !4235, file: !103, line: 1154, column: 9)
!4235 = distinct !DILexicalBlock(scope: !4231, file: !103, line: 1152, column: 14)
!4236 = !DILocation(line: 0, scope: !4234)
!4237 = !DILocation(line: 1154, column: 9, scope: !4235)
!4238 = !DILocation(line: 1155, column: 20, scope: !4239)
!4239 = distinct !DILexicalBlock(scope: !4234, file: !103, line: 1154, column: 40)
!4240 = !DILocation(line: 1155, column: 27, scope: !4239)
!4241 = !DILocation(line: 1156, column: 7, scope: !4239)
!4242 = !DILocation(line: 1157, column: 16, scope: !4243)
!4243 = distinct !DILexicalBlock(scope: !4234, file: !103, line: 1157, column: 16)
!4244 = !DILocation(line: 0, scope: !4243)
!4245 = !DILocation(line: 1157, column: 16, scope: !4234)
!4246 = !DILocation(line: 1158, column: 13, scope: !4247)
!4247 = distinct !DILexicalBlock(scope: !4243, file: !103, line: 1157, column: 47)
!4248 = !DILocation(line: 1159, column: 7, scope: !4247)
!4249 = !DILocation(line: 1161, column: 13, scope: !4250)
!4250 = distinct !DILexicalBlock(scope: !4243, file: !103, line: 1160, column: 12)
!4251 = !DILocation(line: 1162, column: 7, scope: !4250)
!4252 = !DILocation(line: 1166, column: 3, scope: !4223)
!4253 = !DILocation(line: 1167, column: 3, scope: !4223)
!4254 = !DILocation(line: 1167, column: 9, scope: !4223)
!4255 = !DILocation(line: 1168, column: 3, scope: !4223)
!4256 = !DILocation(line: 1169, column: 1, scope: !4223)
!4257 = distinct !DISubprogram(name: "unlinkat", scope: !103, file: !103, line: 1171, type: !4258, scopeLine: 1171, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !106, retainedNodes: !4)
!4258 = !DISubroutineType(types: !4259)
!4259 = !{!44, !44, !170, !44}
!4260 = !DILocalVariable(name: "dirfd", arg: 1, scope: !4257, file: !103, line: 1171, type: !44)
!4261 = !DILocation(line: 1171, column: 18, scope: !4257)
!4262 = !DILocalVariable(name: "pathname", arg: 2, scope: !4257, file: !103, line: 1171, type: !170)
!4263 = !DILocation(line: 1171, column: 37, scope: !4257)
!4264 = !DILocalVariable(name: "flags", arg: 3, scope: !4257, file: !103, line: 1171, type: !44)
!4265 = !DILocation(line: 1171, column: 51, scope: !4257)
!4266 = !DILocalVariable(name: "dfile", scope: !4257, file: !103, line: 1174, type: !1772)
!4267 = !DILocation(line: 1174, column: 20, scope: !4257)
!4268 = !DILocation(line: 1174, column: 43, scope: !4257)
!4269 = !DILocation(line: 1174, column: 28, scope: !4257)
!4270 = !DILocation(line: 1175, column: 7, scope: !4271)
!4271 = distinct !DILexicalBlock(scope: !4257, file: !103, line: 1175, column: 7)
!4272 = !DILocation(line: 1175, column: 7, scope: !4257)
!4273 = !DILocation(line: 1177, column: 9, scope: !4274)
!4274 = distinct !DILexicalBlock(scope: !4275, file: !103, line: 1177, column: 9)
!4275 = distinct !DILexicalBlock(scope: !4271, file: !103, line: 1175, column: 14)
!4276 = !DILocation(line: 0, scope: !4274)
!4277 = !DILocation(line: 1177, column: 9, scope: !4275)
!4278 = !DILocation(line: 1178, column: 20, scope: !4279)
!4279 = distinct !DILexicalBlock(scope: !4274, file: !103, line: 1177, column: 40)
!4280 = !DILocation(line: 1178, column: 27, scope: !4279)
!4281 = !DILocation(line: 1179, column: 7, scope: !4279)
!4282 = !DILocation(line: 1180, column: 16, scope: !4283)
!4283 = distinct !DILexicalBlock(scope: !4274, file: !103, line: 1180, column: 16)
!4284 = !DILocation(line: 0, scope: !4283)
!4285 = !DILocation(line: 1180, column: 16, scope: !4274)
!4286 = !DILocation(line: 1181, column: 13, scope: !4287)
!4287 = distinct !DILexicalBlock(scope: !4283, file: !103, line: 1180, column: 47)
!4288 = !DILocation(line: 1182, column: 7, scope: !4287)
!4289 = !DILocation(line: 1184, column: 13, scope: !4290)
!4290 = distinct !DILexicalBlock(scope: !4283, file: !103, line: 1183, column: 12)
!4291 = !DILocation(line: 1185, column: 7, scope: !4290)
!4292 = !DILocation(line: 1189, column: 3, scope: !4257)
!4293 = !DILocation(line: 1190, column: 3, scope: !4257)
!4294 = !DILocation(line: 1190, column: 9, scope: !4257)
!4295 = !DILocation(line: 1191, column: 3, scope: !4257)
!4296 = !DILocation(line: 1192, column: 1, scope: !4257)
!4297 = distinct !DISubprogram(name: "readlink", scope: !103, file: !103, line: 1194, type: !4298, scopeLine: 1194, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !106, retainedNodes: !4)
!4298 = !DISubroutineType(types: !4299)
!4299 = !{!154, !170, !22, !156}
!4300 = !DILocalVariable(name: "path", arg: 1, scope: !4297, file: !103, line: 1194, type: !170)
!4301 = !DILocation(line: 1194, column: 30, scope: !4297)
!4302 = !DILocalVariable(name: "buf", arg: 2, scope: !4297, file: !103, line: 1194, type: !22)
!4303 = !DILocation(line: 1194, column: 42, scope: !4297)
!4304 = !DILocalVariable(name: "bufsize", arg: 3, scope: !4297, file: !103, line: 1194, type: !156)
!4305 = !DILocation(line: 1194, column: 54, scope: !4297)
!4306 = !DILocalVariable(name: "dfile", scope: !4297, file: !103, line: 1195, type: !1772)
!4307 = !DILocation(line: 1195, column: 20, scope: !4297)
!4308 = !DILocation(line: 1195, column: 43, scope: !4297)
!4309 = !DILocation(line: 1195, column: 28, scope: !4297)
!4310 = !DILocation(line: 1196, column: 7, scope: !4311)
!4311 = distinct !DILexicalBlock(scope: !4297, file: !103, line: 1196, column: 7)
!4312 = !DILocation(line: 1196, column: 7, scope: !4297)
!4313 = !DILocation(line: 1199, column: 9, scope: !4314)
!4314 = distinct !DILexicalBlock(scope: !4315, file: !103, line: 1199, column: 9)
!4315 = distinct !DILexicalBlock(scope: !4311, file: !103, line: 1196, column: 14)
!4316 = !DILocation(line: 1199, column: 9, scope: !4315)
!4317 = !DILocation(line: 1200, column: 16, scope: !4318)
!4318 = distinct !DILexicalBlock(scope: !4314, file: !103, line: 1199, column: 40)
!4319 = !DILocation(line: 1200, column: 7, scope: !4318)
!4320 = !DILocation(line: 1200, column: 14, scope: !4318)
!4321 = !DILocation(line: 1201, column: 11, scope: !4322)
!4322 = distinct !DILexicalBlock(scope: !4318, file: !103, line: 1201, column: 11)
!4323 = !DILocation(line: 1201, column: 18, scope: !4322)
!4324 = !DILocation(line: 1201, column: 11, scope: !4318)
!4325 = !DILocation(line: 1201, column: 22, scope: !4322)
!4326 = !DILocation(line: 1201, column: 29, scope: !4322)
!4327 = !DILocation(line: 1202, column: 11, scope: !4328)
!4328 = distinct !DILexicalBlock(scope: !4318, file: !103, line: 1202, column: 11)
!4329 = !DILocation(line: 1202, column: 18, scope: !4328)
!4330 = !DILocation(line: 1202, column: 11, scope: !4318)
!4331 = !DILocation(line: 1202, column: 22, scope: !4328)
!4332 = !DILocation(line: 1202, column: 29, scope: !4328)
!4333 = !DILocation(line: 1203, column: 11, scope: !4334)
!4334 = distinct !DILexicalBlock(scope: !4318, file: !103, line: 1203, column: 11)
!4335 = !DILocation(line: 1203, column: 18, scope: !4334)
!4336 = !DILocation(line: 1203, column: 11, scope: !4318)
!4337 = !DILocation(line: 1203, column: 22, scope: !4334)
!4338 = !DILocation(line: 1203, column: 29, scope: !4334)
!4339 = !DILocation(line: 1204, column: 11, scope: !4340)
!4340 = distinct !DILexicalBlock(scope: !4318, file: !103, line: 1204, column: 11)
!4341 = !DILocation(line: 1204, column: 18, scope: !4340)
!4342 = !DILocation(line: 1204, column: 11, scope: !4318)
!4343 = !DILocation(line: 1204, column: 22, scope: !4340)
!4344 = !DILocation(line: 1204, column: 29, scope: !4340)
!4345 = !DILocation(line: 1205, column: 15, scope: !4318)
!4346 = !DILocation(line: 1205, column: 22, scope: !4318)
!4347 = !DILocation(line: 1205, column: 14, scope: !4318)
!4348 = !DILocation(line: 1205, column: 7, scope: !4318)
!4349 = !DILocation(line: 1207, column: 7, scope: !4350)
!4350 = distinct !DILexicalBlock(scope: !4314, file: !103, line: 1206, column: 12)
!4351 = !DILocation(line: 1207, column: 13, scope: !4350)
!4352 = !DILocation(line: 1208, column: 7, scope: !4350)
!4353 = !DILocation(line: 1211, column: 33, scope: !4297)
!4354 = !DILocation(line: 1211, column: 39, scope: !4297)
!4355 = !DILocation(line: 1211, column: 44, scope: !4297)
!4356 = !DILocation(line: 1211, column: 10, scope: !4297)
!4357 = !DILocation(line: 1211, column: 3, scope: !4297)
!4358 = !DILocation(line: 1212, column: 1, scope: !4297)
!4359 = distinct !DISubprogram(name: "select", scope: !103, file: !103, line: 1222, type: !4360, scopeLine: 1223, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !106, retainedNodes: !4)
!4360 = !DISubroutineType(types: !4361)
!4361 = !{!44, !44, !4362, !4362, !4362, !4372}
!4362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4363, size: 64)
!4363 = !DIDerivedType(tag: DW_TAG_typedef, name: "fd_set", file: !4364, line: 70, baseType: !4365)
!4364 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/select.h", directory: "")
!4365 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4364, line: 59, size: 1024, elements: !4366)
!4366 = !{!4367}
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "fds_bits", scope: !4365, file: !4364, line: 64, baseType: !4368, size: 1024)
!4368 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4369, size: 1024, elements: !4370)
!4369 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fd_mask", file: !4364, line: 49, baseType: !48)
!4370 = !{!4371}
!4371 = !DISubrange(count: 16)
!4372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2367, size: 64)
!4373 = !DILocalVariable(name: "nfds", arg: 1, scope: !4359, file: !103, line: 1222, type: !44)
!4374 = !DILocation(line: 1222, column: 16, scope: !4359)
!4375 = !DILocalVariable(name: "read", arg: 2, scope: !4359, file: !103, line: 1222, type: !4362)
!4376 = !DILocation(line: 1222, column: 30, scope: !4359)
!4377 = !DILocalVariable(name: "write", arg: 3, scope: !4359, file: !103, line: 1222, type: !4362)
!4378 = !DILocation(line: 1222, column: 44, scope: !4359)
!4379 = !DILocalVariable(name: "except", arg: 4, scope: !4359, file: !103, line: 1223, type: !4362)
!4380 = !DILocation(line: 1223, column: 20, scope: !4359)
!4381 = !DILocalVariable(name: "timeout", arg: 5, scope: !4359, file: !103, line: 1223, type: !4372)
!4382 = !DILocation(line: 1223, column: 44, scope: !4359)
!4383 = !DILocalVariable(name: "in_read", scope: !4359, file: !103, line: 1224, type: !4363)
!4384 = !DILocation(line: 1224, column: 10, scope: !4359)
!4385 = !DILocalVariable(name: "in_write", scope: !4359, file: !103, line: 1224, type: !4363)
!4386 = !DILocation(line: 1224, column: 19, scope: !4359)
!4387 = !DILocalVariable(name: "in_except", scope: !4359, file: !103, line: 1224, type: !4363)
!4388 = !DILocation(line: 1224, column: 29, scope: !4359)
!4389 = !DILocalVariable(name: "os_read", scope: !4359, file: !103, line: 1224, type: !4363)
!4390 = !DILocation(line: 1224, column: 40, scope: !4359)
!4391 = !DILocalVariable(name: "os_write", scope: !4359, file: !103, line: 1224, type: !4363)
!4392 = !DILocation(line: 1224, column: 49, scope: !4359)
!4393 = !DILocalVariable(name: "os_except", scope: !4359, file: !103, line: 1224, type: !4363)
!4394 = !DILocation(line: 1224, column: 59, scope: !4359)
!4395 = !DILocalVariable(name: "i", scope: !4359, file: !103, line: 1225, type: !44)
!4396 = !DILocation(line: 1225, column: 7, scope: !4359)
!4397 = !DILocalVariable(name: "count", scope: !4359, file: !103, line: 1225, type: !44)
!4398 = !DILocation(line: 1225, column: 10, scope: !4359)
!4399 = !DILocalVariable(name: "os_nfds", scope: !4359, file: !103, line: 1225, type: !44)
!4400 = !DILocation(line: 1225, column: 21, scope: !4359)
!4401 = !DILocation(line: 1227, column: 7, scope: !4402)
!4402 = distinct !DILexicalBlock(scope: !4359, file: !103, line: 1227, column: 7)
!4403 = !DILocation(line: 1227, column: 7, scope: !4359)
!4404 = !DILocation(line: 1228, column: 16, scope: !4405)
!4405 = distinct !DILexicalBlock(scope: !4402, file: !103, line: 1227, column: 13)
!4406 = !DILocation(line: 1228, column: 15, scope: !4405)
!4407 = !DILocation(line: 1229, column: 5, scope: !4405)
!4408 = !DILocation(line: 1230, column: 3, scope: !4405)
!4409 = !DILocation(line: 1231, column: 5, scope: !4410)
!4410 = distinct !DILexicalBlock(scope: !4402, file: !103, line: 1230, column: 10)
!4411 = !DILocation(line: 1234, column: 7, scope: !4412)
!4412 = distinct !DILexicalBlock(scope: !4359, file: !103, line: 1234, column: 7)
!4413 = !DILocation(line: 1234, column: 7, scope: !4359)
!4414 = !DILocation(line: 1235, column: 17, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4412, file: !103, line: 1234, column: 14)
!4416 = !DILocation(line: 1235, column: 16, scope: !4415)
!4417 = !DILocation(line: 1236, column: 5, scope: !4415)
!4418 = !DILocation(line: 1237, column: 3, scope: !4415)
!4419 = !DILocation(line: 1238, column: 5, scope: !4420)
!4420 = distinct !DILexicalBlock(scope: !4412, file: !103, line: 1237, column: 10)
!4421 = !DILocation(line: 1241, column: 7, scope: !4422)
!4422 = distinct !DILexicalBlock(scope: !4359, file: !103, line: 1241, column: 7)
!4423 = !DILocation(line: 1241, column: 7, scope: !4359)
!4424 = !DILocation(line: 1242, column: 18, scope: !4425)
!4425 = distinct !DILexicalBlock(scope: !4422, file: !103, line: 1241, column: 15)
!4426 = !DILocation(line: 1242, column: 17, scope: !4425)
!4427 = !DILocation(line: 1243, column: 5, scope: !4425)
!4428 = !DILocation(line: 1244, column: 3, scope: !4425)
!4429 = !DILocation(line: 1245, column: 5, scope: !4430)
!4430 = distinct !DILexicalBlock(scope: !4422, file: !103, line: 1244, column: 10)
!4431 = !DILocation(line: 1248, column: 3, scope: !4359)
!4432 = !DILocation(line: 1249, column: 3, scope: !4359)
!4433 = !DILocation(line: 1250, column: 3, scope: !4359)
!4434 = !DILocation(line: 1253, column: 9, scope: !4435)
!4435 = distinct !DILexicalBlock(scope: !4359, file: !103, line: 1253, column: 3)
!4436 = !DILocation(line: 1253, column: 8, scope: !4435)
!4437 = !DILocation(line: 1253, column: 13, scope: !4438)
!4438 = distinct !DILexicalBlock(scope: !4435, file: !103, line: 1253, column: 3)
!4439 = !DILocation(line: 1253, column: 15, scope: !4438)
!4440 = !DILocation(line: 1253, column: 14, scope: !4438)
!4441 = !DILocation(line: 1253, column: 3, scope: !4435)
!4442 = !DILocation(line: 1254, column: 9, scope: !4443)
!4443 = distinct !DILexicalBlock(scope: !4444, file: !103, line: 1254, column: 9)
!4444 = distinct !DILexicalBlock(scope: !4438, file: !103, line: 1253, column: 26)
!4445 = !DILocation(line: 1254, column: 31, scope: !4443)
!4446 = !DILocation(line: 1254, column: 34, scope: !4443)
!4447 = !DILocation(line: 1254, column: 57, scope: !4443)
!4448 = !DILocation(line: 1254, column: 60, scope: !4443)
!4449 = !DILocation(line: 1254, column: 9, scope: !4444)
!4450 = !DILocalVariable(name: "f", scope: !4451, file: !103, line: 1255, type: !1987)
!4451 = distinct !DILexicalBlock(scope: !4443, file: !103, line: 1254, column: 85)
!4452 = !DILocation(line: 1255, column: 19, scope: !4451)
!4453 = !DILocation(line: 1255, column: 34, scope: !4451)
!4454 = !DILocation(line: 1255, column: 23, scope: !4451)
!4455 = !DILocation(line: 1256, column: 12, scope: !4456)
!4456 = distinct !DILexicalBlock(scope: !4451, file: !103, line: 1256, column: 11)
!4457 = !DILocation(line: 1256, column: 11, scope: !4451)
!4458 = !DILocation(line: 1257, column: 9, scope: !4459)
!4459 = distinct !DILexicalBlock(scope: !4456, file: !103, line: 1256, column: 15)
!4460 = !DILocation(line: 1257, column: 15, scope: !4459)
!4461 = !DILocation(line: 1258, column: 9, scope: !4459)
!4462 = !DILocation(line: 1259, column: 18, scope: !4463)
!4463 = distinct !DILexicalBlock(scope: !4456, file: !103, line: 1259, column: 18)
!4464 = !DILocation(line: 1259, column: 21, scope: !4463)
!4465 = !DILocation(line: 0, scope: !4463)
!4466 = !DILocation(line: 1259, column: 18, scope: !4456)
!4467 = !DILocation(line: 1261, column: 13, scope: !4468)
!4468 = distinct !DILexicalBlock(scope: !4463, file: !103, line: 1259, column: 28)
!4469 = !DILocation(line: 1261, column: 36, scope: !4470)
!4470 = distinct !DILexicalBlock(scope: !4468, file: !103, line: 1261, column: 13)
!4471 = !DILocation(line: 1262, column: 13, scope: !4472)
!4472 = distinct !DILexicalBlock(scope: !4468, file: !103, line: 1262, column: 13)
!4473 = !DILocation(line: 1262, column: 13, scope: !4468)
!4474 = !DILocation(line: 1262, column: 37, scope: !4472)
!4475 = !DILocation(line: 1263, column: 13, scope: !4476)
!4476 = distinct !DILexicalBlock(scope: !4468, file: !103, line: 1263, column: 13)
!4477 = !DILocation(line: 1263, column: 13, scope: !4468)
!4478 = !DILocation(line: 1263, column: 38, scope: !4476)
!4479 = !DILocation(line: 1264, column: 9, scope: !4468)
!4480 = !DILocation(line: 1265, column: 7, scope: !4468)
!4481 = !DILocation(line: 1266, column: 13, scope: !4482)
!4482 = distinct !DILexicalBlock(scope: !4463, file: !103, line: 1265, column: 14)
!4483 = !DILocation(line: 1266, column: 36, scope: !4484)
!4484 = distinct !DILexicalBlock(scope: !4482, file: !103, line: 1266, column: 13)
!4485 = !DILocation(line: 1267, column: 13, scope: !4486)
!4486 = distinct !DILexicalBlock(scope: !4482, file: !103, line: 1267, column: 13)
!4487 = !DILocation(line: 1267, column: 13, scope: !4482)
!4488 = !DILocation(line: 1267, column: 37, scope: !4486)
!4489 = !DILocation(line: 1268, column: 13, scope: !4490)
!4490 = distinct !DILexicalBlock(scope: !4482, file: !103, line: 1268, column: 13)
!4491 = !DILocation(line: 1268, column: 13, scope: !4482)
!4492 = !DILocation(line: 1268, column: 38, scope: !4490)
!4493 = !DILocation(line: 1269, column: 13, scope: !4494)
!4494 = distinct !DILexicalBlock(scope: !4482, file: !103, line: 1269, column: 13)
!4495 = !DILocation(line: 1269, column: 16, scope: !4494)
!4496 = !DILocation(line: 1269, column: 22, scope: !4494)
!4497 = !DILocation(line: 1269, column: 19, scope: !4494)
!4498 = !DILocation(line: 1269, column: 13, scope: !4482)
!4499 = !DILocation(line: 1269, column: 41, scope: !4494)
!4500 = !DILocation(line: 1269, column: 44, scope: !4494)
!4501 = !DILocation(line: 1269, column: 47, scope: !4494)
!4502 = !DILocation(line: 1269, column: 39, scope: !4494)
!4503 = !DILocation(line: 1269, column: 31, scope: !4494)
!4504 = !DILocation(line: 1253, column: 22, scope: !4438)
!4505 = !DILocation(line: 1253, column: 3, scope: !4438)
!4506 = distinct !{!4506, !4441, !4507}
!4507 = !DILocation(line: 1272, column: 3, scope: !4435)
!4508 = !DILocation(line: 1274, column: 7, scope: !4509)
!4509 = distinct !DILexicalBlock(scope: !4359, file: !103, line: 1274, column: 7)
!4510 = !DILocation(line: 1274, column: 15, scope: !4509)
!4511 = !DILocation(line: 1274, column: 7, scope: !4359)
!4512 = !DILocalVariable(name: "tv", scope: !4513, file: !103, line: 1277, type: !2367)
!4513 = distinct !DILexicalBlock(scope: !4509, file: !103, line: 1274, column: 20)
!4514 = !DILocation(line: 1277, column: 20, scope: !4513)
!4515 = !DILocalVariable(name: "r", scope: !4513, file: !103, line: 1278, type: !44)
!4516 = !DILocation(line: 1278, column: 9, scope: !4513)
!4517 = !DILocation(line: 1278, column: 34, scope: !4513)
!4518 = !DILocation(line: 1278, column: 13, scope: !4513)
!4519 = !DILocation(line: 1281, column: 9, scope: !4520)
!4520 = distinct !DILexicalBlock(scope: !4513, file: !103, line: 1281, column: 9)
!4521 = !DILocation(line: 1281, column: 11, scope: !4520)
!4522 = !DILocation(line: 1281, column: 9, scope: !4513)
!4523 = !DILocation(line: 1284, column: 12, scope: !4524)
!4524 = distinct !DILexicalBlock(scope: !4525, file: !103, line: 1284, column: 11)
!4525 = distinct !DILexicalBlock(scope: !4520, file: !103, line: 1281, column: 18)
!4526 = !DILocation(line: 1284, column: 11, scope: !4525)
!4527 = !DILocation(line: 1285, column: 9, scope: !4524)
!4528 = !DILocation(line: 1287, column: 16, scope: !4529)
!4529 = distinct !DILexicalBlock(scope: !4520, file: !103, line: 1286, column: 12)
!4530 = !DILocation(line: 1287, column: 13, scope: !4529)
!4531 = !DILocation(line: 1290, column: 13, scope: !4532)
!4532 = distinct !DILexicalBlock(scope: !4529, file: !103, line: 1290, column: 7)
!4533 = !DILocation(line: 1290, column: 12, scope: !4532)
!4534 = !DILocation(line: 1290, column: 17, scope: !4535)
!4535 = distinct !DILexicalBlock(scope: !4532, file: !103, line: 1290, column: 7)
!4536 = !DILocation(line: 1290, column: 19, scope: !4535)
!4537 = !DILocation(line: 1290, column: 18, scope: !4535)
!4538 = !DILocation(line: 1290, column: 7, scope: !4532)
!4539 = !DILocalVariable(name: "f", scope: !4540, file: !103, line: 1291, type: !1987)
!4540 = distinct !DILexicalBlock(scope: !4535, file: !103, line: 1290, column: 30)
!4541 = !DILocation(line: 1291, column: 21, scope: !4540)
!4542 = !DILocation(line: 1291, column: 36, scope: !4540)
!4543 = !DILocation(line: 1291, column: 25, scope: !4540)
!4544 = !DILocation(line: 1292, column: 13, scope: !4545)
!4545 = distinct !DILexicalBlock(scope: !4540, file: !103, line: 1292, column: 13)
!4546 = !DILocation(line: 1292, column: 15, scope: !4545)
!4547 = !DILocation(line: 1292, column: 19, scope: !4545)
!4548 = !DILocation(line: 1292, column: 22, scope: !4545)
!4549 = !DILocation(line: 1292, column: 13, scope: !4540)
!4550 = !DILocation(line: 1293, column: 15, scope: !4551)
!4551 = distinct !DILexicalBlock(scope: !4552, file: !103, line: 1293, column: 15)
!4552 = distinct !DILexicalBlock(scope: !4545, file: !103, line: 1292, column: 29)
!4553 = !DILocation(line: 1293, column: 20, scope: !4551)
!4554 = !DILocation(line: 1293, column: 23, scope: !4551)
!4555 = !DILocation(line: 1293, column: 15, scope: !4552)
!4556 = !DILocation(line: 1293, column: 50, scope: !4551)
!4557 = !DILocation(line: 1294, column: 15, scope: !4558)
!4558 = distinct !DILexicalBlock(scope: !4552, file: !103, line: 1294, column: 15)
!4559 = !DILocation(line: 1294, column: 21, scope: !4558)
!4560 = !DILocation(line: 1294, column: 24, scope: !4558)
!4561 = !DILocation(line: 1294, column: 15, scope: !4552)
!4562 = !DILocation(line: 1294, column: 52, scope: !4558)
!4563 = !DILocation(line: 1295, column: 15, scope: !4564)
!4564 = distinct !DILexicalBlock(scope: !4552, file: !103, line: 1295, column: 15)
!4565 = !DILocation(line: 1295, column: 22, scope: !4564)
!4566 = !DILocation(line: 1295, column: 25, scope: !4564)
!4567 = !DILocation(line: 1295, column: 15, scope: !4552)
!4568 = !DILocation(line: 1295, column: 54, scope: !4564)
!4569 = !DILocation(line: 1290, column: 26, scope: !4535)
!4570 = !DILocation(line: 1290, column: 7, scope: !4535)
!4571 = distinct !{!4571, !4538, !4572}
!4572 = !DILocation(line: 1297, column: 7, scope: !4532)
!4573 = !DILocation(line: 1301, column: 10, scope: !4359)
!4574 = !DILocation(line: 1301, column: 3, scope: !4359)
!4575 = !DILocation(line: 1302, column: 1, scope: !4359)
!4576 = !DILocalVariable(name: "buf", arg: 1, scope: !184, file: !103, line: 1306, type: !22)
!4577 = !DILocation(line: 1306, column: 20, scope: !184)
!4578 = !DILocalVariable(name: "size", arg: 2, scope: !184, file: !103, line: 1306, type: !156)
!4579 = !DILocation(line: 1306, column: 32, scope: !184)
!4580 = !DILocalVariable(name: "r", scope: !184, file: !103, line: 1308, type: !44)
!4581 = !DILocation(line: 1308, column: 7, scope: !184)
!4582 = !DILocation(line: 1310, column: 10, scope: !184)
!4583 = !DILocation(line: 1312, column: 16, scope: !4584)
!4584 = distinct !DILexicalBlock(scope: !184, file: !103, line: 1312, column: 7)
!4585 = !DILocation(line: 1312, column: 7, scope: !4584)
!4586 = !DILocation(line: 1312, column: 29, scope: !4584)
!4587 = !DILocation(line: 1312, column: 42, scope: !4584)
!4588 = !DILocation(line: 1312, column: 32, scope: !4584)
!4589 = !DILocation(line: 1312, column: 57, scope: !4584)
!4590 = !DILocation(line: 1312, column: 54, scope: !4584)
!4591 = !DILocation(line: 1312, column: 7, scope: !184)
!4592 = !DILocation(line: 1313, column: 26, scope: !4593)
!4593 = distinct !DILexicalBlock(scope: !4584, file: !103, line: 1312, column: 66)
!4594 = !DILocation(line: 1314, column: 5, scope: !4593)
!4595 = !DILocation(line: 1314, column: 11, scope: !4593)
!4596 = !DILocation(line: 1315, column: 5, scope: !4593)
!4597 = !DILocation(line: 1318, column: 8, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !184, file: !103, line: 1318, column: 7)
!4599 = !DILocation(line: 1318, column: 7, scope: !184)
!4600 = !DILocation(line: 1319, column: 10, scope: !4601)
!4601 = distinct !DILexicalBlock(scope: !4602, file: !103, line: 1319, column: 9)
!4602 = distinct !DILexicalBlock(scope: !4598, file: !103, line: 1318, column: 13)
!4603 = !DILocation(line: 1319, column: 9, scope: !4602)
!4604 = !DILocation(line: 1320, column: 12, scope: !4601)
!4605 = !DILocation(line: 1320, column: 7, scope: !4601)
!4606 = !DILocation(line: 1321, column: 18, scope: !4602)
!4607 = !DILocation(line: 1321, column: 11, scope: !4602)
!4608 = !DILocation(line: 1321, column: 9, scope: !4602)
!4609 = !DILocation(line: 1322, column: 3, scope: !4602)
!4610 = !DILocation(line: 1324, column: 26, scope: !184)
!4611 = !DILocation(line: 1324, column: 9, scope: !184)
!4612 = !DILocation(line: 1324, column: 7, scope: !184)
!4613 = !DILocation(line: 1325, column: 28, scope: !184)
!4614 = !DILocation(line: 1325, column: 10, scope: !184)
!4615 = !DILocation(line: 1325, column: 8, scope: !184)
!4616 = !DILocation(line: 1329, column: 28, scope: !184)
!4617 = !DILocation(line: 1329, column: 33, scope: !184)
!4618 = !DILocation(line: 1329, column: 3, scope: !184)
!4619 = !DILocation(line: 1330, column: 28, scope: !184)
!4620 = !DILocation(line: 1330, column: 33, scope: !184)
!4621 = !DILocation(line: 1330, column: 7, scope: !184)
!4622 = !DILocation(line: 1330, column: 5, scope: !184)
!4623 = !DILocation(line: 1331, column: 7, scope: !4624)
!4624 = distinct !DILexicalBlock(scope: !184, file: !103, line: 1331, column: 7)
!4625 = !DILocation(line: 1331, column: 9, scope: !4624)
!4626 = !DILocation(line: 1331, column: 7, scope: !184)
!4627 = !DILocation(line: 1332, column: 5, scope: !4624)
!4628 = !DILocation(line: 1333, column: 10, scope: !184)
!4629 = !DILocation(line: 1333, column: 3, scope: !184)
!4630 = !DILocation(line: 1334, column: 1, scope: !184)
!4631 = distinct !DISubprogram(name: "chroot", scope: !103, file: !103, line: 1386, type: !3063, scopeLine: 1386, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !106, retainedNodes: !4)
!4632 = !DILocalVariable(name: "path", arg: 1, scope: !4631, file: !103, line: 1386, type: !170)
!4633 = !DILocation(line: 1386, column: 24, scope: !4631)
!4634 = !DILocation(line: 1387, column: 7, scope: !4635)
!4635 = distinct !DILexicalBlock(scope: !4631, file: !103, line: 1387, column: 7)
!4636 = !DILocation(line: 1387, column: 15, scope: !4635)
!4637 = !DILocation(line: 1387, column: 7, scope: !4631)
!4638 = !DILocation(line: 1388, column: 5, scope: !4639)
!4639 = distinct !DILexicalBlock(scope: !4635, file: !103, line: 1387, column: 24)
!4640 = !DILocation(line: 1388, column: 11, scope: !4639)
!4641 = !DILocation(line: 1389, column: 5, scope: !4639)
!4642 = !DILocation(line: 1392, column: 7, scope: !4643)
!4643 = distinct !DILexicalBlock(scope: !4631, file: !103, line: 1392, column: 7)
!4644 = !DILocation(line: 1392, column: 15, scope: !4643)
!4645 = !DILocation(line: 1392, column: 22, scope: !4643)
!4646 = !DILocation(line: 1392, column: 25, scope: !4643)
!4647 = !DILocation(line: 1392, column: 33, scope: !4643)
!4648 = !DILocation(line: 1392, column: 7, scope: !4631)
!4649 = !DILocation(line: 1393, column: 5, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4643, file: !103, line: 1392, column: 42)
!4651 = !DILocation(line: 1396, column: 3, scope: !4631)
!4652 = !DILocation(line: 1397, column: 3, scope: !4631)
!4653 = !DILocation(line: 1397, column: 9, scope: !4631)
!4654 = !DILocation(line: 1398, column: 3, scope: !4631)
!4655 = !DILocation(line: 1399, column: 1, scope: !4631)
!4656 = distinct !DISubprogram(name: "__syscall_rt_sigaction", scope: !270, file: !270, line: 44, type: !4657, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!4657 = !DISubroutineType(types: !4658)
!4658 = !{!44, !44, !4659, !4765, !156}
!4659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4660, size: 64)
!4660 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4661)
!4661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !4662, line: 24, size: 1216, elements: !4663)
!4662 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/sigaction.h", directory: "")
!4663 = !{!4664, !4753, !4760, !4761}
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "__sigaction_handler", scope: !4661, file: !4662, line: 35, baseType: !4665, size: 64)
!4665 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4661, file: !4662, line: 28, size: 64, elements: !4666)
!4666 = !{!4667, !4673}
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !4665, file: !4662, line: 31, baseType: !4668, size: 64)
!4668 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !4669, line: 72, baseType: !4670)
!4669 = !DIFile(filename: "/usr/include/signal.h", directory: "")
!4670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4671, size: 64)
!4671 = !DISubroutineType(types: !4672)
!4672 = !{null, !44}
!4673 = !DIDerivedType(tag: DW_TAG_member, name: "sa_sigaction", scope: !4665, file: !4662, line: 33, baseType: !4674, size: 64)
!4674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4675, size: 64)
!4675 = !DISubroutineType(types: !4676)
!4676 = !{null, !44, !4677, !109}
!4677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4678, size: 64)
!4678 = !DIDerivedType(tag: DW_TAG_typedef, name: "siginfo_t", file: !4679, line: 124, baseType: !4680)
!4679 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/siginfo_t.h", directory: "")
!4680 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4679, line: 36, size: 1024, elements: !4681)
!4681 = !{!4682, !4683, !4684, !4685, !4686}
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !4680, file: !4679, line: 38, baseType: !44, size: 32)
!4683 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !4680, file: !4679, line: 40, baseType: !44, size: 32, offset: 32)
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !4680, file: !4679, line: 42, baseType: !44, size: 32, offset: 64)
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !4680, file: !4679, line: 48, baseType: !44, size: 32, offset: 96)
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !4680, file: !4679, line: 123, baseType: !4687, size: 896, offset: 128)
!4687 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4680, file: !4679, line: 51, size: 896, elements: !4688)
!4688 = !{!4689, !4693, !4699, !4711, !4717, !4726, !4742, !4747}
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !4687, file: !4679, line: 53, baseType: !4690, size: 896)
!4690 = !DICompositeType(tag: DW_TAG_array_type, baseType: !44, size: 896, elements: !4691)
!4691 = !{!4692}
!4692 = !DISubrange(count: 28)
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !4687, file: !4679, line: 60, baseType: !4694, size: 64)
!4694 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4687, file: !4679, line: 56, size: 64, elements: !4695)
!4695 = !{!4696, !4698}
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !4694, file: !4679, line: 58, baseType: !4697, size: 32)
!4697 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pid_t", file: !31, line: 142, baseType: !44)
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "si_uid", scope: !4694, file: !4679, line: 59, baseType: !40, size: 32, offset: 32)
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !4687, file: !4679, line: 68, baseType: !4700, size: 128)
!4700 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4687, file: !4679, line: 63, size: 128, elements: !4701)
!4701 = !{!4702, !4703, !4704}
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "si_tid", scope: !4700, file: !4679, line: 65, baseType: !44, size: 32)
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "si_overrun", scope: !4700, file: !4679, line: 66, baseType: !44, size: 32, offset: 32)
!4704 = !DIDerivedType(tag: DW_TAG_member, name: "si_sigval", scope: !4700, file: !4679, line: 67, baseType: !4705, size: 64, offset: 64)
!4705 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigval_t", file: !4706, line: 30, baseType: !4707)
!4706 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__sigval_t.h", directory: "")
!4707 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !4706, line: 24, size: 64, elements: !4708)
!4708 = !{!4709, !4710}
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !4707, file: !4706, line: 26, baseType: !44, size: 32)
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !4707, file: !4706, line: 27, baseType: !109, size: 64)
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !4687, file: !4679, line: 76, baseType: !4712, size: 128)
!4712 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4687, file: !4679, line: 71, size: 128, elements: !4713)
!4713 = !{!4714, !4715, !4716}
!4714 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !4712, file: !4679, line: 73, baseType: !4697, size: 32)
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "si_uid", scope: !4712, file: !4679, line: 74, baseType: !40, size: 32, offset: 32)
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "si_sigval", scope: !4712, file: !4679, line: 75, baseType: !4705, size: 64, offset: 64)
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !4687, file: !4679, line: 86, baseType: !4718, size: 256)
!4718 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4687, file: !4679, line: 79, size: 256, elements: !4719)
!4719 = !{!4720, !4721, !4722, !4723, !4725}
!4720 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !4718, file: !4679, line: 81, baseType: !4697, size: 32)
!4721 = !DIDerivedType(tag: DW_TAG_member, name: "si_uid", scope: !4718, file: !4679, line: 82, baseType: !40, size: 32, offset: 32)
!4722 = !DIDerivedType(tag: DW_TAG_member, name: "si_status", scope: !4718, file: !4679, line: 83, baseType: !44, size: 32, offset: 64)
!4723 = !DIDerivedType(tag: DW_TAG_member, name: "si_utime", scope: !4718, file: !4679, line: 84, baseType: !4724, size: 64, offset: 128)
!4724 = !DIDerivedType(tag: DW_TAG_typedef, name: "__clock_t", file: !31, line: 144, baseType: !48)
!4725 = !DIDerivedType(tag: DW_TAG_member, name: "si_stime", scope: !4718, file: !4679, line: 85, baseType: !4724, size: 64, offset: 192)
!4726 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !4687, file: !4679, line: 105, baseType: !4727, size: 256)
!4727 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4687, file: !4679, line: 89, size: 256, elements: !4728)
!4728 = !{!4729, !4730, !4732}
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "si_addr", scope: !4727, file: !4679, line: 91, baseType: !109, size: 64)
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "si_addr_lsb", scope: !4727, file: !4679, line: 93, baseType: !4731, size: 16, offset: 64)
!4731 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!4732 = !DIDerivedType(tag: DW_TAG_member, name: "_bounds", scope: !4727, file: !4679, line: 104, baseType: !4733, size: 128, offset: 128)
!4733 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4727, file: !4679, line: 94, size: 128, elements: !4734)
!4734 = !{!4735, !4740}
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !4733, file: !4679, line: 101, baseType: !4736, size: 128)
!4736 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4733, file: !4679, line: 97, size: 128, elements: !4737)
!4737 = !{!4738, !4739}
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !4736, file: !4679, line: 99, baseType: !109, size: 64)
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !4736, file: !4679, line: 100, baseType: !109, size: 64, offset: 64)
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !4733, file: !4679, line: 103, baseType: !4741, size: 32)
!4741 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !31, line: 41, baseType: !14)
!4742 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !4687, file: !4679, line: 112, baseType: !4743, size: 128)
!4743 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4687, file: !4679, line: 108, size: 128, elements: !4744)
!4744 = !{!4745, !4746}
!4745 = !DIDerivedType(tag: DW_TAG_member, name: "si_band", scope: !4743, file: !4679, line: 110, baseType: !48, size: 64)
!4746 = !DIDerivedType(tag: DW_TAG_member, name: "si_fd", scope: !4743, file: !4679, line: 111, baseType: !44, size: 32, offset: 64)
!4747 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !4687, file: !4679, line: 121, baseType: !4748, size: 128)
!4748 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4687, file: !4679, line: 116, size: 128, elements: !4749)
!4749 = !{!4750, !4751, !4752}
!4750 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !4748, file: !4679, line: 118, baseType: !109, size: 64)
!4751 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !4748, file: !4679, line: 119, baseType: !44, size: 32, offset: 64)
!4752 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !4748, file: !4679, line: 120, baseType: !14, size: 32, offset: 96)
!4753 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !4661, file: !4662, line: 43, baseType: !4754, size: 1024, offset: 64)
!4754 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigset_t", file: !4755, line: 8, baseType: !4756)
!4755 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h", directory: "")
!4756 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4755, line: 5, size: 1024, elements: !4757)
!4757 = !{!4758}
!4758 = !DIDerivedType(tag: DW_TAG_member, name: "__val", scope: !4756, file: !4755, line: 7, baseType: !4759, size: 1024)
!4759 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 1024, elements: !4370)
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !4661, file: !4662, line: 46, baseType: !44, size: 32, offset: 1088)
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !4661, file: !4662, line: 49, baseType: !4762, size: 64, offset: 1152)
!4762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4763, size: 64)
!4763 = !DISubroutineType(types: !4764)
!4764 = !{null}
!4765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4661, size: 64)
!4766 = !DILocalVariable(name: "signum", arg: 1, scope: !4656, file: !270, line: 44, type: !44)
!4767 = !DILocation(line: 44, column: 32, scope: !4656)
!4768 = !DILocalVariable(name: "act", arg: 2, scope: !4656, file: !270, line: 44, type: !4659)
!4769 = !DILocation(line: 44, column: 64, scope: !4656)
!4770 = !DILocalVariable(name: "oldact", arg: 3, scope: !4656, file: !270, line: 45, type: !4765)
!4771 = !DILocation(line: 45, column: 46, scope: !4656)
!4772 = !DILocalVariable(name: "_something", arg: 4, scope: !4656, file: !270, line: 45, type: !156)
!4773 = !DILocation(line: 45, column: 61, scope: !4656)
!4774 = !DILocation(line: 46, column: 3, scope: !4656)
!4775 = !DILocation(line: 47, column: 3, scope: !4656)
!4776 = distinct !DISubprogram(name: "sigaction", scope: !270, file: !270, line: 53, type: !4777, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!4777 = !DISubroutineType(types: !4778)
!4778 = !{!44, !44, !4659, !4765}
!4779 = !DILocalVariable(name: "signum", arg: 1, scope: !4776, file: !270, line: 53, type: !44)
!4780 = !DILocation(line: 53, column: 19, scope: !4776)
!4781 = !DILocalVariable(name: "act", arg: 2, scope: !4776, file: !270, line: 53, type: !4659)
!4782 = !DILocation(line: 53, column: 51, scope: !4776)
!4783 = !DILocalVariable(name: "oldact", arg: 3, scope: !4776, file: !270, line: 54, type: !4765)
!4784 = !DILocation(line: 54, column: 33, scope: !4776)
!4785 = !DILocation(line: 55, column: 3, scope: !4776)
!4786 = !DILocation(line: 56, column: 3, scope: !4776)
!4787 = distinct !DISubprogram(name: "sigprocmask", scope: !270, file: !270, line: 61, type: !4788, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!4788 = !DISubroutineType(types: !4789)
!4789 = !{!44, !44, !4790, !4794}
!4790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4791, size: 64)
!4791 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4792)
!4792 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !4793, line: 7, baseType: !4754)
!4793 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/sigset_t.h", directory: "")
!4794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4792, size: 64)
!4795 = !DILocalVariable(name: "how", arg: 1, scope: !4787, file: !270, line: 61, type: !44)
!4796 = !DILocation(line: 61, column: 21, scope: !4787)
!4797 = !DILocalVariable(name: "set", arg: 2, scope: !4787, file: !270, line: 61, type: !4790)
!4798 = !DILocation(line: 61, column: 42, scope: !4787)
!4799 = !DILocalVariable(name: "oldset", arg: 3, scope: !4787, file: !270, line: 61, type: !4794)
!4800 = !DILocation(line: 61, column: 57, scope: !4787)
!4801 = !DILocation(line: 62, column: 3, scope: !4787)
!4802 = !DILocation(line: 63, column: 3, scope: !4787)
!4803 = distinct !DISubprogram(name: "fdatasync", scope: !270, file: !270, line: 68, type: !104, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!4804 = !DILocalVariable(name: "fd", arg: 1, scope: !4803, file: !270, line: 68, type: !44)
!4805 = !DILocation(line: 68, column: 19, scope: !4803)
!4806 = !DILocation(line: 69, column: 3, scope: !4803)
!4807 = distinct !DISubprogram(name: "sync", scope: !270, file: !270, line: 74, type: !4763, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!4808 = !DILocation(line: 75, column: 1, scope: !4807)
!4809 = distinct !DISubprogram(name: "__socketcall", scope: !270, file: !270, line: 83, type: !4810, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!4810 = !DISubroutineType(types: !4811)
!4811 = !{!44, !44, !72}
!4812 = !DILocalVariable(name: "type", arg: 1, scope: !4809, file: !270, line: 83, type: !44)
!4813 = !DILocation(line: 83, column: 22, scope: !4809)
!4814 = !DILocalVariable(name: "args", arg: 2, scope: !4809, file: !270, line: 83, type: !72)
!4815 = !DILocation(line: 83, column: 33, scope: !4809)
!4816 = !DILocation(line: 84, column: 3, scope: !4809)
!4817 = !DILocation(line: 85, column: 3, scope: !4809)
!4818 = !DILocation(line: 85, column: 9, scope: !4809)
!4819 = !DILocation(line: 86, column: 3, scope: !4809)
!4820 = distinct !DISubprogram(name: "_IO_getc", scope: !270, file: !270, line: 90, type: !4821, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!4821 = !DISubroutineType(types: !4822)
!4822 = !{!44, !4823}
!4823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4824, size: 64)
!4824 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !4825, line: 7, baseType: !4826)
!4825 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!4826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4827, line: 245, size: 1728, elements: !4828)
!4827 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/libio.h", directory: "")
!4828 = !{!4829, !4830, !4831, !4832, !4833, !4834, !4835, !4836, !4837, !4838, !4839, !4840, !4841, !4849, !4850, !4851, !4852, !4853, !4854, !4856, !4858, !4861, !4862, !4863, !4864, !4865, !4866, !4867, !4868}
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4826, file: !4827, line: 246, baseType: !44, size: 32)
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !4826, file: !4827, line: 251, baseType: !22, size: 64, offset: 64)
!4831 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !4826, file: !4827, line: 252, baseType: !22, size: 64, offset: 128)
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !4826, file: !4827, line: 253, baseType: !22, size: 64, offset: 192)
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !4826, file: !4827, line: 254, baseType: !22, size: 64, offset: 256)
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !4826, file: !4827, line: 255, baseType: !22, size: 64, offset: 320)
!4835 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !4826, file: !4827, line: 256, baseType: !22, size: 64, offset: 384)
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !4826, file: !4827, line: 257, baseType: !22, size: 64, offset: 448)
!4837 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !4826, file: !4827, line: 258, baseType: !22, size: 64, offset: 512)
!4838 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !4826, file: !4827, line: 260, baseType: !22, size: 64, offset: 576)
!4839 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !4826, file: !4827, line: 261, baseType: !22, size: 64, offset: 640)
!4840 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !4826, file: !4827, line: 262, baseType: !22, size: 64, offset: 704)
!4841 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !4826, file: !4827, line: 264, baseType: !4842, size: 64, offset: 768)
!4842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4843, size: 64)
!4843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !4827, line: 160, size: 192, elements: !4844)
!4844 = !{!4845, !4846, !4848}
!4845 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !4843, file: !4827, line: 161, baseType: !4842, size: 64)
!4846 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !4843, file: !4827, line: 162, baseType: !4847, size: 64, offset: 64)
!4847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4826, size: 64)
!4848 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !4843, file: !4827, line: 166, baseType: !44, size: 32, offset: 128)
!4849 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !4826, file: !4827, line: 266, baseType: !4847, size: 64, offset: 832)
!4850 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !4826, file: !4827, line: 268, baseType: !44, size: 32, offset: 896)
!4851 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !4826, file: !4827, line: 272, baseType: !44, size: 32, offset: 928)
!4852 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !4826, file: !4827, line: 274, baseType: !47, size: 64, offset: 960)
!4853 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !4826, file: !4827, line: 278, baseType: !117, size: 16, offset: 1024)
!4854 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !4826, file: !4827, line: 279, baseType: !4855, size: 8, offset: 1040)
!4855 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!4856 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !4826, file: !4827, line: 280, baseType: !4857, size: 8, offset: 1048)
!4857 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 8, elements: !1551)
!4858 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !4826, file: !4827, line: 284, baseType: !4859, size: 64, offset: 1088)
!4859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4860, size: 64)
!4860 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !4827, line: 154, baseType: null)
!4861 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !4826, file: !4827, line: 293, baseType: !92, size: 64, offset: 1152)
!4862 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !4826, file: !4827, line: 301, baseType: !109, size: 64, offset: 1216)
!4863 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !4826, file: !4827, line: 302, baseType: !109, size: 64, offset: 1280)
!4864 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !4826, file: !4827, line: 303, baseType: !109, size: 64, offset: 1344)
!4865 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !4826, file: !4827, line: 304, baseType: !109, size: 64, offset: 1408)
!4866 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !4826, file: !4827, line: 306, baseType: !156, size: 64, offset: 1472)
!4867 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !4826, file: !4827, line: 307, baseType: !44, size: 32, offset: 1536)
!4868 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !4826, file: !4827, line: 309, baseType: !4869, size: 160, offset: 1568)
!4869 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 160, elements: !4870)
!4870 = !{!4871}
!4871 = !DISubrange(count: 20)
!4872 = !DILocalVariable(name: "f", arg: 1, scope: !4820, file: !270, line: 90, type: !4823)
!4873 = !DILocation(line: 90, column: 20, scope: !4820)
!4874 = !DILocation(line: 91, column: 27, scope: !4820)
!4875 = !DILocation(line: 91, column: 10, scope: !4820)
!4876 = !DILocation(line: 91, column: 3, scope: !4820)
!4877 = distinct !DISubprogram(name: "_IO_putc", scope: !270, file: !270, line: 95, type: !4878, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!4878 = !DISubroutineType(types: !4879)
!4879 = !{!44, !44, !4823}
!4880 = !DILocalVariable(name: "c", arg: 1, scope: !4877, file: !270, line: 95, type: !44)
!4881 = !DILocation(line: 95, column: 18, scope: !4877)
!4882 = !DILocalVariable(name: "f", arg: 2, scope: !4877, file: !270, line: 95, type: !4823)
!4883 = !DILocation(line: 95, column: 27, scope: !4877)
!4884 = !DILocation(line: 96, column: 27, scope: !4877)
!4885 = !DILocation(line: 96, column: 30, scope: !4877)
!4886 = !DILocation(line: 96, column: 10, scope: !4877)
!4887 = !DILocation(line: 96, column: 3, scope: !4877)
!4888 = distinct !DISubprogram(name: "mkdir", scope: !270, file: !270, line: 100, type: !168, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!4889 = !DILocalVariable(name: "pathname", arg: 1, scope: !4888, file: !270, line: 100, type: !170)
!4890 = !DILocation(line: 100, column: 23, scope: !4888)
!4891 = !DILocalVariable(name: "mode", arg: 2, scope: !4888, file: !270, line: 100, type: !97)
!4892 = !DILocation(line: 100, column: 40, scope: !4888)
!4893 = !DILocation(line: 101, column: 3, scope: !4888)
!4894 = !DILocation(line: 102, column: 3, scope: !4888)
!4895 = !DILocation(line: 102, column: 9, scope: !4888)
!4896 = !DILocation(line: 103, column: 3, scope: !4888)
!4897 = distinct !DISubprogram(name: "mkfifo", scope: !270, file: !270, line: 107, type: !168, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!4898 = !DILocalVariable(name: "pathname", arg: 1, scope: !4897, file: !270, line: 107, type: !170)
!4899 = !DILocation(line: 107, column: 24, scope: !4897)
!4900 = !DILocalVariable(name: "mode", arg: 2, scope: !4897, file: !270, line: 107, type: !97)
!4901 = !DILocation(line: 107, column: 41, scope: !4897)
!4902 = !DILocation(line: 108, column: 3, scope: !4897)
!4903 = !DILocation(line: 109, column: 3, scope: !4897)
!4904 = !DILocation(line: 109, column: 9, scope: !4897)
!4905 = !DILocation(line: 110, column: 3, scope: !4897)
!4906 = distinct !DISubprogram(name: "mknod", scope: !270, file: !270, line: 114, type: !4907, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!4907 = !DISubroutineType(types: !4908)
!4908 = !{!44, !170, !97, !271}
!4909 = !DILocalVariable(name: "pathname", arg: 1, scope: !4906, file: !270, line: 114, type: !170)
!4910 = !DILocation(line: 114, column: 23, scope: !4906)
!4911 = !DILocalVariable(name: "mode", arg: 2, scope: !4906, file: !270, line: 114, type: !97)
!4912 = !DILocation(line: 114, column: 40, scope: !4906)
!4913 = !DILocalVariable(name: "dev", arg: 3, scope: !4906, file: !270, line: 114, type: !271)
!4914 = !DILocation(line: 114, column: 52, scope: !4906)
!4915 = !DILocation(line: 115, column: 3, scope: !4906)
!4916 = !DILocation(line: 116, column: 3, scope: !4906)
!4917 = !DILocation(line: 116, column: 9, scope: !4906)
!4918 = !DILocation(line: 117, column: 3, scope: !4906)
!4919 = distinct !DISubprogram(name: "pipe", scope: !270, file: !270, line: 121, type: !4920, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!4920 = !DISubroutineType(types: !4921)
!4921 = !{!44, !72}
!4922 = !DILocalVariable(name: "filedes", arg: 1, scope: !4919, file: !270, line: 121, type: !72)
!4923 = !DILocation(line: 121, column: 14, scope: !4919)
!4924 = !DILocation(line: 122, column: 3, scope: !4919)
!4925 = !DILocation(line: 123, column: 3, scope: !4919)
!4926 = !DILocation(line: 123, column: 9, scope: !4919)
!4927 = !DILocation(line: 124, column: 3, scope: !4919)
!4928 = distinct !DISubprogram(name: "link", scope: !270, file: !270, line: 128, type: !680, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!4929 = !DILocalVariable(name: "oldpath", arg: 1, scope: !4928, file: !270, line: 128, type: !170)
!4930 = !DILocation(line: 128, column: 22, scope: !4928)
!4931 = !DILocalVariable(name: "newpath", arg: 2, scope: !4928, file: !270, line: 128, type: !170)
!4932 = !DILocation(line: 128, column: 43, scope: !4928)
!4933 = !DILocation(line: 129, column: 3, scope: !4928)
!4934 = !DILocation(line: 130, column: 3, scope: !4928)
!4935 = !DILocation(line: 130, column: 9, scope: !4928)
!4936 = !DILocation(line: 131, column: 3, scope: !4928)
!4937 = distinct !DISubprogram(name: "symlink", scope: !270, file: !270, line: 135, type: !680, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!4938 = !DILocalVariable(name: "oldpath", arg: 1, scope: !4937, file: !270, line: 135, type: !170)
!4939 = !DILocation(line: 135, column: 25, scope: !4937)
!4940 = !DILocalVariable(name: "newpath", arg: 2, scope: !4937, file: !270, line: 135, type: !170)
!4941 = !DILocation(line: 135, column: 46, scope: !4937)
!4942 = !DILocation(line: 136, column: 3, scope: !4937)
!4943 = !DILocation(line: 137, column: 3, scope: !4937)
!4944 = !DILocation(line: 137, column: 9, scope: !4937)
!4945 = !DILocation(line: 138, column: 3, scope: !4937)
!4946 = distinct !DISubprogram(name: "rename", scope: !270, file: !270, line: 142, type: !680, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!4947 = !DILocalVariable(name: "oldpath", arg: 1, scope: !4946, file: !270, line: 142, type: !170)
!4948 = !DILocation(line: 142, column: 24, scope: !4946)
!4949 = !DILocalVariable(name: "newpath", arg: 2, scope: !4946, file: !270, line: 142, type: !170)
!4950 = !DILocation(line: 142, column: 45, scope: !4946)
!4951 = !DILocation(line: 143, column: 3, scope: !4946)
!4952 = !DILocation(line: 144, column: 3, scope: !4946)
!4953 = !DILocation(line: 144, column: 9, scope: !4946)
!4954 = !DILocation(line: 145, column: 3, scope: !4946)
!4955 = distinct !DISubprogram(name: "nanosleep", scope: !270, file: !270, line: 149, type: !4956, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!4956 = !DISubroutineType(types: !4957)
!4957 = !{!44, !4958, !4964}
!4958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4959, size: 64)
!4959 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4960)
!4960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !55, line: 9, size: 128, elements: !4961)
!4961 = !{!4962, !4963}
!4962 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !4960, file: !55, line: 11, baseType: !58, size: 64)
!4963 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !4960, file: !55, line: 12, baseType: !60, size: 64, offset: 64)
!4964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4960, size: 64)
!4965 = !DILocalVariable(name: "req", arg: 1, scope: !4955, file: !270, line: 149, type: !4958)
!4966 = !DILocation(line: 149, column: 38, scope: !4955)
!4967 = !DILocalVariable(name: "rem", arg: 2, scope: !4955, file: !270, line: 149, type: !4964)
!4968 = !DILocation(line: 149, column: 60, scope: !4955)
!4969 = !DILocation(line: 150, column: 3, scope: !4955)
!4970 = distinct !DISubprogram(name: "clock_gettime", scope: !270, file: !270, line: 155, type: !4971, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!4971 = !DISubroutineType(types: !4972)
!4972 = !{!44, !4973, !4964}
!4973 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !4974, line: 7, baseType: !4975)
!4974 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/clockid_t.h", directory: "")
!4975 = !DIDerivedType(tag: DW_TAG_typedef, name: "__clockid_t", file: !31, line: 156, baseType: !44)
!4976 = !DILocalVariable(name: "clk_id", arg: 1, scope: !4970, file: !270, line: 155, type: !4973)
!4977 = !DILocation(line: 155, column: 29, scope: !4970)
!4978 = !DILocalVariable(name: "res", arg: 2, scope: !4970, file: !270, line: 155, type: !4964)
!4979 = !DILocation(line: 155, column: 54, scope: !4970)
!4980 = !DILocalVariable(name: "tv", scope: !4970, file: !270, line: 157, type: !4981)
!4981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !2368, line: 8, size: 128, elements: !4982)
!4982 = !{!4983, !4984}
!4983 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !4981, file: !2368, line: 10, baseType: !58, size: 64)
!4984 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !4981, file: !2368, line: 11, baseType: !2372, size: 64, offset: 64)
!4985 = !DILocation(line: 157, column: 18, scope: !4970)
!4986 = !DILocation(line: 158, column: 3, scope: !4970)
!4987 = !DILocation(line: 159, column: 20, scope: !4970)
!4988 = !DILocation(line: 159, column: 3, scope: !4970)
!4989 = !DILocation(line: 159, column: 8, scope: !4970)
!4990 = !DILocation(line: 159, column: 15, scope: !4970)
!4991 = !DILocation(line: 160, column: 21, scope: !4970)
!4992 = !DILocation(line: 160, column: 29, scope: !4970)
!4993 = !DILocation(line: 160, column: 3, scope: !4970)
!4994 = !DILocation(line: 160, column: 8, scope: !4970)
!4995 = !DILocation(line: 160, column: 16, scope: !4970)
!4996 = !DILocation(line: 161, column: 3, scope: !4970)
!4997 = distinct !DISubprogram(name: "clock_settime", scope: !270, file: !270, line: 165, type: !4998, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!4998 = !DISubroutineType(types: !4999)
!4999 = !{!44, !4973, !4958}
!5000 = !DILocalVariable(name: "clk_id", arg: 1, scope: !4997, file: !270, line: 165, type: !4973)
!5001 = !DILocation(line: 165, column: 29, scope: !4997)
!5002 = !DILocalVariable(name: "res", arg: 2, scope: !4997, file: !270, line: 165, type: !4958)
!5003 = !DILocation(line: 165, column: 60, scope: !4997)
!5004 = !DILocation(line: 166, column: 3, scope: !4997)
!5005 = !DILocation(line: 167, column: 3, scope: !4997)
!5006 = !DILocation(line: 167, column: 9, scope: !4997)
!5007 = !DILocation(line: 168, column: 3, scope: !4997)
!5008 = distinct !DISubprogram(name: "time", scope: !270, file: !270, line: 171, type: !5009, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!5009 = !DISubroutineType(types: !5010)
!5010 = !{!5011, !5013}
!5011 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !5012, line: 7, baseType: !58)
!5012 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/time_t.h", directory: "")
!5013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5011, size: 64)
!5014 = !DILocalVariable(name: "t", arg: 1, scope: !5008, file: !270, line: 171, type: !5013)
!5015 = !DILocation(line: 171, column: 21, scope: !5008)
!5016 = !DILocalVariable(name: "tv", scope: !5008, file: !270, line: 172, type: !4981)
!5017 = !DILocation(line: 172, column: 18, scope: !5008)
!5018 = !DILocation(line: 173, column: 3, scope: !5008)
!5019 = !DILocation(line: 174, column: 7, scope: !5020)
!5020 = distinct !DILexicalBlock(scope: !5008, file: !270, line: 174, column: 7)
!5021 = !DILocation(line: 174, column: 7, scope: !5008)
!5022 = !DILocation(line: 175, column: 13, scope: !5020)
!5023 = !DILocation(line: 175, column: 6, scope: !5020)
!5024 = !DILocation(line: 175, column: 8, scope: !5020)
!5025 = !DILocation(line: 175, column: 5, scope: !5020)
!5026 = !DILocation(line: 176, column: 13, scope: !5008)
!5027 = !DILocation(line: 176, column: 3, scope: !5008)
!5028 = distinct !DISubprogram(name: "times", scope: !270, file: !270, line: 179, type: !5029, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!5029 = !DISubroutineType(types: !5030)
!5030 = !{!5031, !5033}
!5031 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_t", file: !5032, line: 7, baseType: !4724)
!5032 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/clock_t.h", directory: "")
!5033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5034, size: 64)
!5034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tms", file: !5035, line: 32, size: 256, elements: !5036)
!5035 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/times.h", directory: "")
!5036 = !{!5037, !5038, !5039, !5040}
!5037 = !DIDerivedType(tag: DW_TAG_member, name: "tms_utime", scope: !5034, file: !5035, line: 34, baseType: !5031, size: 64)
!5038 = !DIDerivedType(tag: DW_TAG_member, name: "tms_stime", scope: !5034, file: !5035, line: 35, baseType: !5031, size: 64, offset: 64)
!5039 = !DIDerivedType(tag: DW_TAG_member, name: "tms_cutime", scope: !5034, file: !5035, line: 37, baseType: !5031, size: 64, offset: 128)
!5040 = !DIDerivedType(tag: DW_TAG_member, name: "tms_cstime", scope: !5034, file: !5035, line: 38, baseType: !5031, size: 64, offset: 192)
!5041 = !DILocalVariable(name: "buf", arg: 1, scope: !5028, file: !270, line: 179, type: !5033)
!5042 = !DILocation(line: 179, column: 27, scope: !5028)
!5043 = !DILocation(line: 181, column: 8, scope: !5044)
!5044 = distinct !DILexicalBlock(scope: !5028, file: !270, line: 181, column: 7)
!5045 = !DILocation(line: 181, column: 7, scope: !5028)
!5046 = !DILocation(line: 182, column: 5, scope: !5044)
!5047 = !DILocation(line: 184, column: 5, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !5044, file: !270, line: 183, column: 8)
!5049 = !DILocation(line: 185, column: 5, scope: !5048)
!5050 = !DILocation(line: 185, column: 10, scope: !5048)
!5051 = !DILocation(line: 185, column: 20, scope: !5048)
!5052 = !DILocation(line: 186, column: 5, scope: !5048)
!5053 = !DILocation(line: 186, column: 10, scope: !5048)
!5054 = !DILocation(line: 186, column: 20, scope: !5048)
!5055 = !DILocation(line: 187, column: 5, scope: !5048)
!5056 = !DILocation(line: 187, column: 10, scope: !5048)
!5057 = !DILocation(line: 187, column: 21, scope: !5048)
!5058 = !DILocation(line: 188, column: 5, scope: !5048)
!5059 = !DILocation(line: 188, column: 10, scope: !5048)
!5060 = !DILocation(line: 188, column: 21, scope: !5048)
!5061 = !DILocation(line: 190, column: 3, scope: !5028)
!5062 = distinct !DISubprogram(name: "getutxent", scope: !270, file: !270, line: 195, type: !5063, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!5063 = !DISubroutineType(types: !5064)
!5064 = !{!268}
!5065 = !DILocation(line: 196, column: 26, scope: !5062)
!5066 = !DILocation(line: 196, column: 10, scope: !5062)
!5067 = !DILocation(line: 196, column: 3, scope: !5062)
!5068 = distinct !DISubprogram(name: "setutxent", scope: !270, file: !270, line: 200, type: !4763, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!5069 = !DILocation(line: 201, column: 3, scope: !5068)
!5070 = !DILocation(line: 202, column: 1, scope: !5068)
!5071 = distinct !DISubprogram(name: "endutxent", scope: !270, file: !270, line: 205, type: !4763, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!5072 = !DILocation(line: 206, column: 3, scope: !5071)
!5073 = !DILocation(line: 207, column: 1, scope: !5071)
!5074 = distinct !DISubprogram(name: "utmpxname", scope: !270, file: !270, line: 210, type: !3063, scopeLine: 210, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!5075 = !DILocalVariable(name: "file", arg: 1, scope: !5074, file: !270, line: 210, type: !170)
!5076 = !DILocation(line: 210, column: 27, scope: !5074)
!5077 = !DILocation(line: 211, column: 12, scope: !5074)
!5078 = !DILocation(line: 211, column: 3, scope: !5074)
!5079 = !DILocation(line: 212, column: 3, scope: !5074)
!5080 = distinct !DISubprogram(name: "euidaccess", scope: !270, file: !270, line: 217, type: !1765, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!5081 = !DILocalVariable(name: "pathname", arg: 1, scope: !5080, file: !270, line: 217, type: !170)
!5082 = !DILocation(line: 217, column: 28, scope: !5080)
!5083 = !DILocalVariable(name: "mode", arg: 2, scope: !5080, file: !270, line: 217, type: !44)
!5084 = !DILocation(line: 217, column: 42, scope: !5080)
!5085 = !DILocation(line: 218, column: 17, scope: !5080)
!5086 = !DILocation(line: 218, column: 27, scope: !5080)
!5087 = !DILocation(line: 218, column: 10, scope: !5080)
!5088 = !DILocation(line: 218, column: 3, scope: !5080)
!5089 = distinct !DISubprogram(name: "eaccess", scope: !270, file: !270, line: 222, type: !1765, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!5090 = !DILocalVariable(name: "pathname", arg: 1, scope: !5089, file: !270, line: 222, type: !170)
!5091 = !DILocation(line: 222, column: 25, scope: !5089)
!5092 = !DILocalVariable(name: "mode", arg: 2, scope: !5089, file: !270, line: 222, type: !44)
!5093 = !DILocation(line: 222, column: 39, scope: !5089)
!5094 = !DILocation(line: 223, column: 21, scope: !5089)
!5095 = !DILocation(line: 223, column: 31, scope: !5089)
!5096 = !DILocation(line: 223, column: 10, scope: !5089)
!5097 = !DILocation(line: 223, column: 3, scope: !5089)
!5098 = distinct !DISubprogram(name: "group_member", scope: !270, file: !270, line: 227, type: !5099, scopeLine: 227, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!5099 = !DISubroutineType(types: !5100)
!5100 = !{!44, !3239}
!5101 = !DILocalVariable(name: "__gid", arg: 1, scope: !5098, file: !270, line: 227, type: !3239)
!5102 = !DILocation(line: 227, column: 25, scope: !5098)
!5103 = !DILocation(line: 228, column: 12, scope: !5098)
!5104 = !DILocation(line: 228, column: 21, scope: !5098)
!5105 = !DILocation(line: 228, column: 18, scope: !5098)
!5106 = !DILocation(line: 228, column: 32, scope: !5098)
!5107 = !DILocation(line: 228, column: 36, scope: !5098)
!5108 = !DILocation(line: 228, column: 45, scope: !5098)
!5109 = !DILocation(line: 228, column: 42, scope: !5098)
!5110 = !DILocation(line: 228, column: 3, scope: !5098)
!5111 = distinct !DISubprogram(name: "utime", scope: !270, file: !270, line: 232, type: !5112, scopeLine: 232, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!5112 = !DISubroutineType(types: !5113)
!5113 = !{!44, !170, !5114}
!5114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5115, size: 64)
!5115 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5116)
!5116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utimbuf", file: !5117, line: 36, size: 128, elements: !5118)
!5117 = !DIFile(filename: "/usr/include/utime.h", directory: "")
!5118 = !{!5119, !5120}
!5119 = !DIDerivedType(tag: DW_TAG_member, name: "actime", scope: !5116, file: !5117, line: 38, baseType: !58, size: 64)
!5120 = !DIDerivedType(tag: DW_TAG_member, name: "modtime", scope: !5116, file: !5117, line: 39, baseType: !58, size: 64, offset: 64)
!5121 = !DILocalVariable(name: "filename", arg: 1, scope: !5111, file: !270, line: 232, type: !170)
!5122 = !DILocation(line: 232, column: 23, scope: !5111)
!5123 = !DILocalVariable(name: "buf", arg: 2, scope: !5111, file: !270, line: 232, type: !5114)
!5124 = !DILocation(line: 232, column: 55, scope: !5111)
!5125 = !DILocation(line: 233, column: 3, scope: !5111)
!5126 = !DILocation(line: 234, column: 3, scope: !5111)
!5127 = !DILocation(line: 234, column: 9, scope: !5111)
!5128 = !DILocation(line: 235, column: 3, scope: !5111)
!5129 = distinct !DISubprogram(name: "futimes", scope: !270, file: !270, line: 239, type: !5130, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!5130 = !DISubroutineType(types: !5131)
!5131 = !{!44, !44, !5132}
!5132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5133, size: 64)
!5133 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4981)
!5134 = !DILocalVariable(name: "fd", arg: 1, scope: !5129, file: !270, line: 239, type: !44)
!5135 = !DILocation(line: 239, column: 17, scope: !5129)
!5136 = !DILocalVariable(name: "times", arg: 2, scope: !5129, file: !270, line: 239, type: !5132)
!5137 = !DILocation(line: 239, column: 42, scope: !5129)
!5138 = !DILocation(line: 240, column: 3, scope: !5129)
!5139 = !DILocation(line: 241, column: 3, scope: !5129)
!5140 = !DILocation(line: 241, column: 9, scope: !5129)
!5141 = !DILocation(line: 242, column: 3, scope: !5129)
!5142 = distinct !DISubprogram(name: "strverscmp", scope: !270, file: !270, line: 245, type: !680, scopeLine: 245, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!5143 = !DILocalVariable(name: "__s1", arg: 1, scope: !5142, file: !270, line: 245, type: !170)
!5144 = !DILocation(line: 245, column: 31, scope: !5142)
!5145 = !DILocalVariable(name: "__s2", arg: 2, scope: !5142, file: !270, line: 245, type: !170)
!5146 = !DILocation(line: 245, column: 51, scope: !5142)
!5147 = !DILocation(line: 246, column: 17, scope: !5142)
!5148 = !DILocation(line: 246, column: 23, scope: !5142)
!5149 = !DILocation(line: 246, column: 10, scope: !5142)
!5150 = !DILocation(line: 246, column: 3, scope: !5142)
!5151 = distinct !DISubprogram(name: "gnu_dev_major", scope: !270, file: !270, line: 256, type: !5152, scopeLine: 256, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!5152 = !DISubroutineType(types: !5153)
!5153 = !{!14, !271}
!5154 = !DILocalVariable(name: "__dev", arg: 1, scope: !5151, file: !270, line: 256, type: !271)
!5155 = !DILocation(line: 256, column: 41, scope: !5151)
!5156 = !DILocation(line: 257, column: 12, scope: !5151)
!5157 = !DILocation(line: 257, column: 18, scope: !5151)
!5158 = !DILocation(line: 257, column: 24, scope: !5151)
!5159 = !DILocation(line: 257, column: 52, scope: !5151)
!5160 = !DILocation(line: 257, column: 58, scope: !5151)
!5161 = !DILocation(line: 257, column: 36, scope: !5151)
!5162 = !DILocation(line: 257, column: 65, scope: !5151)
!5163 = !DILocation(line: 257, column: 35, scope: !5151)
!5164 = !DILocation(line: 257, column: 33, scope: !5151)
!5165 = !DILocation(line: 257, column: 10, scope: !5151)
!5166 = !DILocation(line: 257, column: 3, scope: !5151)
!5167 = distinct !DISubprogram(name: "gnu_dev_minor", scope: !270, file: !270, line: 261, type: !5152, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!5168 = !DILocalVariable(name: "__dev", arg: 1, scope: !5167, file: !270, line: 261, type: !271)
!5169 = !DILocation(line: 261, column: 41, scope: !5167)
!5170 = !DILocation(line: 262, column: 11, scope: !5167)
!5171 = !DILocation(line: 262, column: 17, scope: !5167)
!5172 = !DILocation(line: 262, column: 44, scope: !5167)
!5173 = !DILocation(line: 262, column: 50, scope: !5167)
!5174 = !DILocation(line: 262, column: 28, scope: !5167)
!5175 = !DILocation(line: 262, column: 57, scope: !5167)
!5176 = !DILocation(line: 262, column: 27, scope: !5167)
!5177 = !DILocation(line: 262, column: 25, scope: !5167)
!5178 = !DILocation(line: 262, column: 10, scope: !5167)
!5179 = !DILocation(line: 262, column: 3, scope: !5167)
!5180 = distinct !DISubprogram(name: "gnu_dev_makedev", scope: !270, file: !270, line: 266, type: !5181, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!5181 = !DISubroutineType(types: !5182)
!5182 = !{!30, !14, !14}
!5183 = !DILocalVariable(name: "__major", arg: 1, scope: !5180, file: !270, line: 266, type: !14)
!5184 = !DILocation(line: 266, column: 43, scope: !5180)
!5185 = !DILocalVariable(name: "__minor", arg: 2, scope: !5180, file: !270, line: 266, type: !14)
!5186 = !DILocation(line: 266, column: 65, scope: !5180)
!5187 = !DILocation(line: 267, column: 12, scope: !5180)
!5188 = !DILocation(line: 267, column: 20, scope: !5180)
!5189 = !DILocation(line: 267, column: 32, scope: !5180)
!5190 = !DILocation(line: 267, column: 40, scope: !5180)
!5191 = !DILocation(line: 267, column: 49, scope: !5180)
!5192 = !DILocation(line: 267, column: 28, scope: !5180)
!5193 = !DILocation(line: 267, column: 11, scope: !5180)
!5194 = !DILocation(line: 268, column: 31, scope: !5180)
!5195 = !DILocation(line: 268, column: 39, scope: !5180)
!5196 = !DILocation(line: 268, column: 15, scope: !5180)
!5197 = !DILocation(line: 268, column: 49, scope: !5180)
!5198 = !DILocation(line: 268, column: 11, scope: !5180)
!5199 = !DILocation(line: 269, column: 31, scope: !5180)
!5200 = !DILocation(line: 269, column: 39, scope: !5180)
!5201 = !DILocation(line: 269, column: 15, scope: !5180)
!5202 = !DILocation(line: 269, column: 50, scope: !5180)
!5203 = !DILocation(line: 269, column: 11, scope: !5180)
!5204 = !DILocation(line: 267, column: 3, scope: !5180)
!5205 = distinct !DISubprogram(name: "canonicalize_file_name", scope: !270, file: !270, line: 273, type: !5206, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!5206 = !DISubroutineType(types: !5207)
!5207 = !{!22, !170}
!5208 = !DILocalVariable(name: "name", arg: 1, scope: !5205, file: !270, line: 273, type: !170)
!5209 = !DILocation(line: 273, column: 43, scope: !5205)
!5210 = !DILocalVariable(name: "resolved_name", scope: !5205, file: !270, line: 276, type: !22)
!5211 = !DILocation(line: 276, column: 10, scope: !5205)
!5212 = !DILocation(line: 276, column: 26, scope: !5205)
!5213 = !DILocation(line: 277, column: 8, scope: !5214)
!5214 = distinct !DILexicalBlock(scope: !5205, file: !270, line: 277, column: 7)
!5215 = !DILocation(line: 277, column: 7, scope: !5205)
!5216 = !DILocation(line: 277, column: 23, scope: !5214)
!5217 = !DILocation(line: 278, column: 17, scope: !5218)
!5218 = distinct !DILexicalBlock(scope: !5205, file: !270, line: 278, column: 7)
!5219 = !DILocation(line: 278, column: 23, scope: !5218)
!5220 = !DILocation(line: 278, column: 8, scope: !5218)
!5221 = !DILocation(line: 0, scope: !5205)
!5222 = !DILocation(line: 278, column: 7, scope: !5205)
!5223 = !DILocation(line: 279, column: 5, scope: !5224)
!5224 = distinct !DILexicalBlock(scope: !5218, file: !270, line: 278, column: 39)
!5225 = !DILocation(line: 280, column: 5, scope: !5224)
!5226 = !DILocation(line: 282, column: 3, scope: !5205)
!5227 = !DILocation(line: 283, column: 1, scope: !5205)
!5228 = distinct !DISubprogram(name: "getloadavg", scope: !270, file: !270, line: 286, type: !5229, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!5229 = !DISubroutineType(types: !5230)
!5230 = !{!44, !5231, !44}
!5231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5232, size: 64)
!5232 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!5233 = !DILocalVariable(name: "loadavg", arg: 1, scope: !5228, file: !270, line: 286, type: !5231)
!5234 = !DILocation(line: 286, column: 23, scope: !5228)
!5235 = !DILocalVariable(name: "nelem", arg: 2, scope: !5228, file: !270, line: 286, type: !44)
!5236 = !DILocation(line: 286, column: 38, scope: !5228)
!5237 = !DILocation(line: 287, column: 3, scope: !5228)
!5238 = !DILocation(line: 288, column: 3, scope: !5228)
!5239 = distinct !DISubprogram(name: "wait", scope: !270, file: !270, line: 292, type: !5240, scopeLine: 292, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!5240 = !DISubroutineType(types: !5241)
!5241 = !{!4697, !72}
!5242 = !DILocalVariable(name: "status", arg: 1, scope: !5239, file: !270, line: 292, type: !72)
!5243 = !DILocation(line: 292, column: 17, scope: !5239)
!5244 = !DILocation(line: 293, column: 3, scope: !5239)
!5245 = !DILocation(line: 294, column: 3, scope: !5239)
!5246 = !DILocation(line: 294, column: 9, scope: !5239)
!5247 = !DILocation(line: 295, column: 3, scope: !5239)
!5248 = distinct !DISubprogram(name: "wait3", scope: !270, file: !270, line: 299, type: !5249, scopeLine: 299, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!5249 = !DISubroutineType(types: !5250)
!5250 = !{!4697, !72, !44, !5251}
!5251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5252, size: 64)
!5252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rusage", file: !5253, line: 31, size: 1152, elements: !5254)
!5253 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_rusage.h", directory: "")
!5254 = !{!5255, !5256, !5257, !5262, !5267, !5272, !5277, !5282, !5287, !5292, !5297, !5302, !5307, !5312, !5317, !5322}
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "ru_utime", scope: !5252, file: !5253, line: 34, baseType: !4981, size: 128)
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "ru_stime", scope: !5252, file: !5253, line: 36, baseType: !4981, size: 128, offset: 128)
!5257 = !DIDerivedType(tag: DW_TAG_member, scope: !5252, file: !5253, line: 38, baseType: !5258, size: 64, offset: 256)
!5258 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5252, file: !5253, line: 38, size: 64, elements: !5259)
!5259 = !{!5260, !5261}
!5260 = !DIDerivedType(tag: DW_TAG_member, name: "ru_maxrss", scope: !5258, file: !5253, line: 40, baseType: !48, size: 64)
!5261 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_maxrss_word", scope: !5258, file: !5253, line: 41, baseType: !60, size: 64)
!5262 = !DIDerivedType(tag: DW_TAG_member, scope: !5252, file: !5253, line: 46, baseType: !5263, size: 64, offset: 320)
!5263 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5252, file: !5253, line: 46, size: 64, elements: !5264)
!5264 = !{!5265, !5266}
!5265 = !DIDerivedType(tag: DW_TAG_member, name: "ru_ixrss", scope: !5263, file: !5253, line: 48, baseType: !48, size: 64)
!5266 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_ixrss_word", scope: !5263, file: !5253, line: 49, baseType: !60, size: 64)
!5267 = !DIDerivedType(tag: DW_TAG_member, scope: !5252, file: !5253, line: 52, baseType: !5268, size: 64, offset: 384)
!5268 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5252, file: !5253, line: 52, size: 64, elements: !5269)
!5269 = !{!5270, !5271}
!5270 = !DIDerivedType(tag: DW_TAG_member, name: "ru_idrss", scope: !5268, file: !5253, line: 54, baseType: !48, size: 64)
!5271 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_idrss_word", scope: !5268, file: !5253, line: 55, baseType: !60, size: 64)
!5272 = !DIDerivedType(tag: DW_TAG_member, scope: !5252, file: !5253, line: 58, baseType: !5273, size: 64, offset: 448)
!5273 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5252, file: !5253, line: 58, size: 64, elements: !5274)
!5274 = !{!5275, !5276}
!5275 = !DIDerivedType(tag: DW_TAG_member, name: "ru_isrss", scope: !5273, file: !5253, line: 60, baseType: !48, size: 64)
!5276 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_isrss_word", scope: !5273, file: !5253, line: 61, baseType: !60, size: 64)
!5277 = !DIDerivedType(tag: DW_TAG_member, scope: !5252, file: !5253, line: 65, baseType: !5278, size: 64, offset: 512)
!5278 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5252, file: !5253, line: 65, size: 64, elements: !5279)
!5279 = !{!5280, !5281}
!5280 = !DIDerivedType(tag: DW_TAG_member, name: "ru_minflt", scope: !5278, file: !5253, line: 67, baseType: !48, size: 64)
!5281 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_minflt_word", scope: !5278, file: !5253, line: 68, baseType: !60, size: 64)
!5282 = !DIDerivedType(tag: DW_TAG_member, scope: !5252, file: !5253, line: 71, baseType: !5283, size: 64, offset: 576)
!5283 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5252, file: !5253, line: 71, size: 64, elements: !5284)
!5284 = !{!5285, !5286}
!5285 = !DIDerivedType(tag: DW_TAG_member, name: "ru_majflt", scope: !5283, file: !5253, line: 73, baseType: !48, size: 64)
!5286 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_majflt_word", scope: !5283, file: !5253, line: 74, baseType: !60, size: 64)
!5287 = !DIDerivedType(tag: DW_TAG_member, scope: !5252, file: !5253, line: 77, baseType: !5288, size: 64, offset: 640)
!5288 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5252, file: !5253, line: 77, size: 64, elements: !5289)
!5289 = !{!5290, !5291}
!5290 = !DIDerivedType(tag: DW_TAG_member, name: "ru_nswap", scope: !5288, file: !5253, line: 79, baseType: !48, size: 64)
!5291 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_nswap_word", scope: !5288, file: !5253, line: 80, baseType: !60, size: 64)
!5292 = !DIDerivedType(tag: DW_TAG_member, scope: !5252, file: !5253, line: 84, baseType: !5293, size: 64, offset: 704)
!5293 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5252, file: !5253, line: 84, size: 64, elements: !5294)
!5294 = !{!5295, !5296}
!5295 = !DIDerivedType(tag: DW_TAG_member, name: "ru_inblock", scope: !5293, file: !5253, line: 86, baseType: !48, size: 64)
!5296 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_inblock_word", scope: !5293, file: !5253, line: 87, baseType: !60, size: 64)
!5297 = !DIDerivedType(tag: DW_TAG_member, scope: !5252, file: !5253, line: 90, baseType: !5298, size: 64, offset: 768)
!5298 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5252, file: !5253, line: 90, size: 64, elements: !5299)
!5299 = !{!5300, !5301}
!5300 = !DIDerivedType(tag: DW_TAG_member, name: "ru_oublock", scope: !5298, file: !5253, line: 92, baseType: !48, size: 64)
!5301 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_oublock_word", scope: !5298, file: !5253, line: 93, baseType: !60, size: 64)
!5302 = !DIDerivedType(tag: DW_TAG_member, scope: !5252, file: !5253, line: 96, baseType: !5303, size: 64, offset: 832)
!5303 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5252, file: !5253, line: 96, size: 64, elements: !5304)
!5304 = !{!5305, !5306}
!5305 = !DIDerivedType(tag: DW_TAG_member, name: "ru_msgsnd", scope: !5303, file: !5253, line: 98, baseType: !48, size: 64)
!5306 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_msgsnd_word", scope: !5303, file: !5253, line: 99, baseType: !60, size: 64)
!5307 = !DIDerivedType(tag: DW_TAG_member, scope: !5252, file: !5253, line: 102, baseType: !5308, size: 64, offset: 896)
!5308 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5252, file: !5253, line: 102, size: 64, elements: !5309)
!5309 = !{!5310, !5311}
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "ru_msgrcv", scope: !5308, file: !5253, line: 104, baseType: !48, size: 64)
!5311 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_msgrcv_word", scope: !5308, file: !5253, line: 105, baseType: !60, size: 64)
!5312 = !DIDerivedType(tag: DW_TAG_member, scope: !5252, file: !5253, line: 108, baseType: !5313, size: 64, offset: 960)
!5313 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5252, file: !5253, line: 108, size: 64, elements: !5314)
!5314 = !{!5315, !5316}
!5315 = !DIDerivedType(tag: DW_TAG_member, name: "ru_nsignals", scope: !5313, file: !5253, line: 110, baseType: !48, size: 64)
!5316 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_nsignals_word", scope: !5313, file: !5253, line: 111, baseType: !60, size: 64)
!5317 = !DIDerivedType(tag: DW_TAG_member, scope: !5252, file: !5253, line: 116, baseType: !5318, size: 64, offset: 1024)
!5318 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5252, file: !5253, line: 116, size: 64, elements: !5319)
!5319 = !{!5320, !5321}
!5320 = !DIDerivedType(tag: DW_TAG_member, name: "ru_nvcsw", scope: !5318, file: !5253, line: 118, baseType: !48, size: 64)
!5321 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_nvcsw_word", scope: !5318, file: !5253, line: 119, baseType: !60, size: 64)
!5322 = !DIDerivedType(tag: DW_TAG_member, scope: !5252, file: !5253, line: 123, baseType: !5323, size: 64, offset: 1088)
!5323 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5252, file: !5253, line: 123, size: 64, elements: !5324)
!5324 = !{!5325, !5326}
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "ru_nivcsw", scope: !5323, file: !5253, line: 125, baseType: !48, size: 64)
!5326 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_nivcsw_word", scope: !5323, file: !5253, line: 126, baseType: !60, size: 64)
!5327 = !DILocalVariable(name: "status", arg: 1, scope: !5248, file: !270, line: 299, type: !72)
!5328 = !DILocation(line: 299, column: 18, scope: !5248)
!5329 = !DILocalVariable(name: "options", arg: 2, scope: !5248, file: !270, line: 299, type: !44)
!5330 = !DILocation(line: 299, column: 30, scope: !5248)
!5331 = !DILocalVariable(name: "rusage", arg: 3, scope: !5248, file: !270, line: 299, type: !5251)
!5332 = !DILocation(line: 299, column: 54, scope: !5248)
!5333 = !DILocation(line: 300, column: 3, scope: !5248)
!5334 = !DILocation(line: 301, column: 3, scope: !5248)
!5335 = !DILocation(line: 301, column: 9, scope: !5248)
!5336 = !DILocation(line: 302, column: 3, scope: !5248)
!5337 = distinct !DISubprogram(name: "wait4", scope: !270, file: !270, line: 306, type: !5338, scopeLine: 306, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!5338 = !DISubroutineType(types: !5339)
!5339 = !{!4697, !5340, !72, !44, !5251}
!5340 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !4669, line: 40, baseType: !4697)
!5341 = !DILocalVariable(name: "pid", arg: 1, scope: !5337, file: !270, line: 306, type: !5340)
!5342 = !DILocation(line: 306, column: 19, scope: !5337)
!5343 = !DILocalVariable(name: "status", arg: 2, scope: !5337, file: !270, line: 306, type: !72)
!5344 = !DILocation(line: 306, column: 29, scope: !5337)
!5345 = !DILocalVariable(name: "options", arg: 3, scope: !5337, file: !270, line: 306, type: !44)
!5346 = !DILocation(line: 306, column: 41, scope: !5337)
!5347 = !DILocalVariable(name: "rusage", arg: 4, scope: !5337, file: !270, line: 306, type: !5251)
!5348 = !DILocation(line: 306, column: 65, scope: !5337)
!5349 = !DILocation(line: 307, column: 3, scope: !5337)
!5350 = !DILocation(line: 308, column: 3, scope: !5337)
!5351 = !DILocation(line: 308, column: 9, scope: !5337)
!5352 = !DILocation(line: 309, column: 3, scope: !5337)
!5353 = distinct !DISubprogram(name: "waitpid", scope: !270, file: !270, line: 313, type: !5354, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!5354 = !DISubroutineType(types: !5355)
!5355 = !{!4697, !5340, !72, !44}
!5356 = !DILocalVariable(name: "pid", arg: 1, scope: !5353, file: !270, line: 313, type: !5340)
!5357 = !DILocation(line: 313, column: 21, scope: !5353)
!5358 = !DILocalVariable(name: "status", arg: 2, scope: !5353, file: !270, line: 313, type: !72)
!5359 = !DILocation(line: 313, column: 31, scope: !5353)
!5360 = !DILocalVariable(name: "options", arg: 3, scope: !5353, file: !270, line: 313, type: !44)
!5361 = !DILocation(line: 313, column: 43, scope: !5353)
!5362 = !DILocation(line: 314, column: 3, scope: !5353)
!5363 = !DILocation(line: 315, column: 3, scope: !5353)
!5364 = !DILocation(line: 315, column: 9, scope: !5353)
!5365 = !DILocation(line: 316, column: 3, scope: !5353)
!5366 = distinct !DISubprogram(name: "waitid", scope: !270, file: !270, line: 320, type: !5367, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!5367 = !DISubroutineType(types: !5368)
!5368 = !{!44, !5369, !5370, !4677, !44}
!5369 = !DIDerivedType(tag: DW_TAG_typedef, name: "idtype_t", file: !235, line: 57, baseType: !234)
!5370 = !DIDerivedType(tag: DW_TAG_typedef, name: "id_t", file: !91, line: 104, baseType: !5371)
!5371 = !DIDerivedType(tag: DW_TAG_typedef, name: "__id_t", file: !31, line: 147, baseType: !14)
!5372 = !DILocalVariable(name: "idtype", arg: 1, scope: !5366, file: !270, line: 320, type: !5369)
!5373 = !DILocation(line: 320, column: 23, scope: !5366)
!5374 = !DILocalVariable(name: "id", arg: 2, scope: !5366, file: !270, line: 320, type: !5370)
!5375 = !DILocation(line: 320, column: 36, scope: !5366)
!5376 = !DILocalVariable(name: "infop", arg: 3, scope: !5366, file: !270, line: 320, type: !4677)
!5377 = !DILocation(line: 320, column: 51, scope: !5366)
!5378 = !DILocalVariable(name: "options", arg: 4, scope: !5366, file: !270, line: 320, type: !44)
!5379 = !DILocation(line: 320, column: 62, scope: !5366)
!5380 = !DILocation(line: 321, column: 3, scope: !5366)
!5381 = !DILocation(line: 322, column: 3, scope: !5366)
!5382 = !DILocation(line: 322, column: 9, scope: !5366)
!5383 = !DILocation(line: 323, column: 3, scope: !5366)
!5384 = distinct !DISubprogram(name: "mount", scope: !270, file: !270, line: 400, type: !5385, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!5385 = !DISubroutineType(types: !5386)
!5386 = !{!44, !170, !170, !170, !32, !163}
!5387 = !DILocalVariable(name: "source", arg: 1, scope: !5384, file: !270, line: 400, type: !170)
!5388 = !DILocation(line: 400, column: 23, scope: !5384)
!5389 = !DILocalVariable(name: "target", arg: 2, scope: !5384, file: !270, line: 400, type: !170)
!5390 = !DILocation(line: 400, column: 43, scope: !5384)
!5391 = !DILocalVariable(name: "filesystemtype", arg: 3, scope: !5384, file: !270, line: 400, type: !170)
!5392 = !DILocation(line: 400, column: 63, scope: !5384)
!5393 = !DILocalVariable(name: "mountflags", arg: 4, scope: !5384, file: !270, line: 400, type: !32)
!5394 = !DILocation(line: 400, column: 93, scope: !5384)
!5395 = !DILocalVariable(name: "data", arg: 5, scope: !5384, file: !270, line: 400, type: !163)
!5396 = !DILocation(line: 400, column: 117, scope: !5384)
!5397 = !DILocation(line: 401, column: 3, scope: !5384)
!5398 = !DILocation(line: 402, column: 3, scope: !5384)
!5399 = !DILocation(line: 402, column: 9, scope: !5384)
!5400 = !DILocation(line: 403, column: 3, scope: !5384)
!5401 = distinct !DISubprogram(name: "umount", scope: !270, file: !270, line: 407, type: !3063, scopeLine: 407, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!5402 = !DILocalVariable(name: "target", arg: 1, scope: !5401, file: !270, line: 407, type: !170)
!5403 = !DILocation(line: 407, column: 24, scope: !5401)
!5404 = !DILocation(line: 408, column: 3, scope: !5401)
!5405 = !DILocation(line: 409, column: 3, scope: !5401)
!5406 = !DILocation(line: 409, column: 9, scope: !5401)
!5407 = !DILocation(line: 410, column: 3, scope: !5401)
!5408 = distinct !DISubprogram(name: "umount2", scope: !270, file: !270, line: 414, type: !1765, scopeLine: 414, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!5409 = !DILocalVariable(name: "target", arg: 1, scope: !5408, file: !270, line: 414, type: !170)
!5410 = !DILocation(line: 414, column: 25, scope: !5408)
!5411 = !DILocalVariable(name: "flags", arg: 2, scope: !5408, file: !270, line: 414, type: !44)
!5412 = !DILocation(line: 414, column: 37, scope: !5408)
!5413 = !DILocation(line: 415, column: 3, scope: !5408)
!5414 = !DILocation(line: 416, column: 3, scope: !5408)
!5415 = !DILocation(line: 416, column: 9, scope: !5408)
!5416 = !DILocation(line: 417, column: 3, scope: !5408)
!5417 = distinct !DISubprogram(name: "swapon", scope: !270, file: !270, line: 422, type: !1765, scopeLine: 422, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!5418 = !DILocalVariable(name: "path", arg: 1, scope: !5417, file: !270, line: 422, type: !170)
!5419 = !DILocation(line: 422, column: 24, scope: !5417)
!5420 = !DILocalVariable(name: "swapflags", arg: 2, scope: !5417, file: !270, line: 422, type: !44)
!5421 = !DILocation(line: 422, column: 34, scope: !5417)
!5422 = !DILocation(line: 428, column: 3, scope: !5417)
!5423 = !DILocation(line: 429, column: 3, scope: !5417)
!5424 = !DILocation(line: 429, column: 9, scope: !5417)
!5425 = !DILocation(line: 430, column: 3, scope: !5417)
!5426 = distinct !DISubprogram(name: "swapoff", scope: !270, file: !270, line: 434, type: !3063, scopeLine: 434, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!5427 = !DILocalVariable(name: "path", arg: 1, scope: !5426, file: !270, line: 434, type: !170)
!5428 = !DILocation(line: 434, column: 25, scope: !5426)
!5429 = !DILocation(line: 435, column: 3, scope: !5426)
!5430 = !DILocation(line: 436, column: 3, scope: !5426)
!5431 = !DILocation(line: 436, column: 9, scope: !5426)
!5432 = !DILocation(line: 437, column: 3, scope: !5426)
!5433 = distinct !DISubprogram(name: "setgid", scope: !270, file: !270, line: 441, type: !5099, scopeLine: 441, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!5434 = !DILocalVariable(name: "gid", arg: 1, scope: !5433, file: !270, line: 441, type: !3239)
!5435 = !DILocation(line: 441, column: 18, scope: !5433)
!5436 = !DILocation(line: 442, column: 3, scope: !5433)
!5437 = !DILocation(line: 443, column: 3, scope: !5433)
!5438 = distinct !DISubprogram(name: "setgroups", scope: !270, file: !270, line: 448, type: !5439, scopeLine: 448, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!5439 = !DISubroutineType(types: !5440)
!5440 = !{!44, !156, !5441}
!5441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5442, size: 64)
!5442 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3239)
!5443 = !DILocalVariable(name: "size", arg: 1, scope: !5438, file: !270, line: 448, type: !156)
!5444 = !DILocation(line: 448, column: 22, scope: !5438)
!5445 = !DILocalVariable(name: "list", arg: 2, scope: !5438, file: !270, line: 448, type: !5441)
!5446 = !DILocation(line: 448, column: 41, scope: !5438)
!5447 = !DILocation(line: 453, column: 3, scope: !5438)
!5448 = !DILocation(line: 454, column: 3, scope: !5438)
!5449 = !DILocation(line: 454, column: 9, scope: !5438)
!5450 = !DILocation(line: 455, column: 3, scope: !5438)
!5451 = distinct !DISubprogram(name: "sethostname", scope: !270, file: !270, line: 460, type: !5452, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!5452 = !DISubroutineType(types: !5453)
!5453 = !{!44, !170, !156}
!5454 = !DILocalVariable(name: "name", arg: 1, scope: !5451, file: !270, line: 460, type: !170)
!5455 = !DILocation(line: 460, column: 29, scope: !5451)
!5456 = !DILocalVariable(name: "len", arg: 2, scope: !5451, file: !270, line: 460, type: !156)
!5457 = !DILocation(line: 460, column: 42, scope: !5451)
!5458 = !DILocation(line: 465, column: 3, scope: !5451)
!5459 = !DILocation(line: 466, column: 3, scope: !5451)
!5460 = !DILocation(line: 466, column: 9, scope: !5451)
!5461 = !DILocation(line: 467, column: 3, scope: !5451)
!5462 = distinct !DISubprogram(name: "setpgid", scope: !270, file: !270, line: 471, type: !5463, scopeLine: 471, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!5463 = !DISubroutineType(types: !5464)
!5464 = !{!44, !5340, !5340}
!5465 = !DILocalVariable(name: "pid", arg: 1, scope: !5462, file: !270, line: 471, type: !5340)
!5466 = !DILocation(line: 471, column: 19, scope: !5462)
!5467 = !DILocalVariable(name: "pgid", arg: 2, scope: !5462, file: !270, line: 471, type: !5340)
!5468 = !DILocation(line: 471, column: 30, scope: !5462)
!5469 = !DILocation(line: 472, column: 3, scope: !5462)
!5470 = !DILocation(line: 473, column: 3, scope: !5462)
!5471 = !DILocation(line: 473, column: 9, scope: !5462)
!5472 = !DILocation(line: 474, column: 3, scope: !5462)
!5473 = distinct !DISubprogram(name: "setpgrp", scope: !270, file: !270, line: 479, type: !1035, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!5474 = !DILocation(line: 484, column: 3, scope: !5473)
!5475 = !DILocation(line: 485, column: 3, scope: !5473)
!5476 = !DILocation(line: 485, column: 9, scope: !5473)
!5477 = !DILocation(line: 486, column: 3, scope: !5473)
!5478 = distinct !DISubprogram(name: "setpriority", scope: !270, file: !270, line: 491, type: !5479, scopeLine: 491, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!5479 = !DISubroutineType(types: !5480)
!5480 = !{!44, !5481, !5370, !44}
!5481 = !DIDerivedType(tag: DW_TAG_typedef, name: "__priority_which_t", file: !5482, line: 40, baseType: !240)
!5482 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/resource.h", directory: "")
!5483 = !DILocalVariable(name: "which", arg: 1, scope: !5478, file: !270, line: 491, type: !5481)
!5484 = !DILocation(line: 491, column: 36, scope: !5478)
!5485 = !DILocalVariable(name: "who", arg: 2, scope: !5478, file: !270, line: 491, type: !5370)
!5486 = !DILocation(line: 491, column: 48, scope: !5478)
!5487 = !DILocalVariable(name: "prio", arg: 3, scope: !5478, file: !270, line: 491, type: !44)
!5488 = !DILocation(line: 491, column: 57, scope: !5478)
!5489 = !DILocation(line: 496, column: 3, scope: !5478)
!5490 = !DILocation(line: 497, column: 3, scope: !5478)
!5491 = !DILocation(line: 497, column: 9, scope: !5478)
!5492 = !DILocation(line: 498, column: 3, scope: !5478)
!5493 = distinct !DISubprogram(name: "setresgid", scope: !270, file: !270, line: 502, type: !5494, scopeLine: 502, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!5494 = !DISubroutineType(types: !5495)
!5495 = !{!44, !3239, !3239, !3239}
!5496 = !DILocalVariable(name: "rgid", arg: 1, scope: !5493, file: !270, line: 502, type: !3239)
!5497 = !DILocation(line: 502, column: 21, scope: !5493)
!5498 = !DILocalVariable(name: "egid", arg: 2, scope: !5493, file: !270, line: 502, type: !3239)
!5499 = !DILocation(line: 502, column: 33, scope: !5493)
!5500 = !DILocalVariable(name: "sgid", arg: 3, scope: !5493, file: !270, line: 502, type: !3239)
!5501 = !DILocation(line: 502, column: 45, scope: !5493)
!5502 = !DILocation(line: 503, column: 3, scope: !5493)
!5503 = !DILocation(line: 504, column: 3, scope: !5493)
!5504 = !DILocation(line: 504, column: 9, scope: !5493)
!5505 = !DILocation(line: 505, column: 3, scope: !5493)
!5506 = distinct !DISubprogram(name: "setresuid", scope: !270, file: !270, line: 509, type: !5507, scopeLine: 509, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!5507 = !DISubroutineType(types: !5508)
!5508 = !{!44, !5509, !5509, !5509}
!5509 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !4669, line: 46, baseType: !40)
!5510 = !DILocalVariable(name: "ruid", arg: 1, scope: !5506, file: !270, line: 509, type: !5509)
!5511 = !DILocation(line: 509, column: 21, scope: !5506)
!5512 = !DILocalVariable(name: "euid", arg: 2, scope: !5506, file: !270, line: 509, type: !5509)
!5513 = !DILocation(line: 509, column: 33, scope: !5506)
!5514 = !DILocalVariable(name: "suid", arg: 3, scope: !5506, file: !270, line: 509, type: !5509)
!5515 = !DILocation(line: 509, column: 45, scope: !5506)
!5516 = !DILocation(line: 510, column: 3, scope: !5506)
!5517 = !DILocation(line: 511, column: 3, scope: !5506)
!5518 = !DILocation(line: 511, column: 9, scope: !5506)
!5519 = !DILocation(line: 512, column: 3, scope: !5506)
!5520 = distinct !DISubprogram(name: "setrlimit", scope: !270, file: !270, line: 517, type: !5521, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!5521 = !DISubroutineType(types: !5522)
!5522 = !{!44, !5523, !5524}
!5523 = !DIDerivedType(tag: DW_TAG_typedef, name: "__rlimit_resource_t", file: !5482, line: 38, baseType: !246)
!5524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5525, size: 64)
!5525 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5526)
!5526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !241, line: 139, size: 128, elements: !5527)
!5527 = !{!5528, !5531}
!5528 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !5526, file: !241, line: 142, baseType: !5529, size: 64)
!5529 = !DIDerivedType(tag: DW_TAG_typedef, name: "rlim_t", file: !241, line: 131, baseType: !5530)
!5530 = !DIDerivedType(tag: DW_TAG_typedef, name: "__rlim_t", file: !31, line: 145, baseType: !32)
!5531 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !5526, file: !241, line: 144, baseType: !5529, size: 64, offset: 64)
!5532 = !DILocalVariable(name: "resource", arg: 1, scope: !5520, file: !270, line: 517, type: !5523)
!5533 = !DILocation(line: 517, column: 35, scope: !5520)
!5534 = !DILocalVariable(name: "rlim", arg: 2, scope: !5520, file: !270, line: 517, type: !5524)
!5535 = !DILocation(line: 517, column: 66, scope: !5520)
!5536 = !DILocation(line: 522, column: 3, scope: !5520)
!5537 = !DILocation(line: 523, column: 3, scope: !5520)
!5538 = !DILocation(line: 523, column: 9, scope: !5520)
!5539 = !DILocation(line: 524, column: 3, scope: !5520)
!5540 = distinct !DISubprogram(name: "setrlimit64", scope: !270, file: !270, line: 529, type: !5541, scopeLine: 529, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!5541 = !DISubroutineType(types: !5542)
!5542 = !{!44, !5523, !5543}
!5543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5544, size: 64)
!5544 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5545)
!5545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit64", file: !241, line: 148, size: 128, elements: !5546)
!5546 = !{!5547, !5550}
!5547 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !5545, file: !241, line: 151, baseType: !5548, size: 64)
!5548 = !DIDerivedType(tag: DW_TAG_typedef, name: "rlim64_t", file: !241, line: 136, baseType: !5549)
!5549 = !DIDerivedType(tag: DW_TAG_typedef, name: "__rlim64_t", file: !31, line: 146, baseType: !32)
!5550 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !5545, file: !241, line: 153, baseType: !5548, size: 64, offset: 64)
!5551 = !DILocalVariable(name: "resource", arg: 1, scope: !5540, file: !270, line: 529, type: !5523)
!5552 = !DILocation(line: 529, column: 37, scope: !5540)
!5553 = !DILocalVariable(name: "rlim", arg: 2, scope: !5540, file: !270, line: 529, type: !5543)
!5554 = !DILocation(line: 529, column: 70, scope: !5540)
!5555 = !DILocation(line: 530, column: 3, scope: !5540)
!5556 = !DILocation(line: 531, column: 3, scope: !5540)
!5557 = !DILocation(line: 531, column: 9, scope: !5540)
!5558 = !DILocation(line: 532, column: 3, scope: !5540)
!5559 = distinct !DISubprogram(name: "setsid", scope: !270, file: !270, line: 537, type: !5560, scopeLine: 537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!5560 = !DISubroutineType(types: !5561)
!5561 = !{!4697}
!5562 = !DILocation(line: 538, column: 3, scope: !5559)
!5563 = !DILocation(line: 539, column: 3, scope: !5559)
!5564 = !DILocation(line: 539, column: 9, scope: !5559)
!5565 = !DILocation(line: 540, column: 3, scope: !5559)
!5566 = distinct !DISubprogram(name: "settimeofday", scope: !270, file: !270, line: 544, type: !5567, scopeLine: 544, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!5567 = !DISubroutineType(types: !5568)
!5568 = !{!44, !5132, !5569}
!5569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5570, size: 64)
!5570 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5571)
!5571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timezone", file: !5572, line: 52, size: 64, elements: !5573)
!5572 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/time.h", directory: "")
!5573 = !{!5574, !5575}
!5574 = !DIDerivedType(tag: DW_TAG_member, name: "tz_minuteswest", scope: !5571, file: !5572, line: 54, baseType: !44, size: 32)
!5575 = !DIDerivedType(tag: DW_TAG_member, name: "tz_dsttime", scope: !5571, file: !5572, line: 55, baseType: !44, size: 32, offset: 32)
!5576 = !DILocalVariable(name: "tv", arg: 1, scope: !5566, file: !270, line: 544, type: !5132)
!5577 = !DILocation(line: 544, column: 40, scope: !5566)
!5578 = !DILocalVariable(name: "tz", arg: 2, scope: !5566, file: !270, line: 544, type: !5569)
!5579 = !DILocation(line: 544, column: 67, scope: !5566)
!5580 = !DILocation(line: 545, column: 3, scope: !5566)
!5581 = !DILocation(line: 546, column: 3, scope: !5566)
!5582 = !DILocation(line: 546, column: 9, scope: !5566)
!5583 = !DILocation(line: 547, column: 3, scope: !5566)
!5584 = distinct !DISubprogram(name: "setuid", scope: !270, file: !270, line: 551, type: !5585, scopeLine: 551, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!5585 = !DISubroutineType(types: !5586)
!5586 = !{!44, !5509}
!5587 = !DILocalVariable(name: "uid", arg: 1, scope: !5584, file: !270, line: 551, type: !5509)
!5588 = !DILocation(line: 551, column: 18, scope: !5584)
!5589 = !DILocation(line: 552, column: 3, scope: !5584)
!5590 = !DILocation(line: 553, column: 3, scope: !5584)
!5591 = distinct !DISubprogram(name: "reboot", scope: !270, file: !270, line: 557, type: !104, scopeLine: 557, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!5592 = !DILocalVariable(name: "flag", arg: 1, scope: !5591, file: !270, line: 557, type: !44)
!5593 = !DILocation(line: 557, column: 16, scope: !5591)
!5594 = !DILocation(line: 558, column: 3, scope: !5591)
!5595 = !DILocation(line: 559, column: 3, scope: !5591)
!5596 = !DILocation(line: 559, column: 9, scope: !5591)
!5597 = !DILocation(line: 560, column: 3, scope: !5591)
!5598 = distinct !DISubprogram(name: "mlock", scope: !270, file: !270, line: 564, type: !5599, scopeLine: 564, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!5599 = !DISubroutineType(types: !5600)
!5600 = !{!44, !163, !156}
!5601 = !DILocalVariable(name: "addr", arg: 1, scope: !5598, file: !270, line: 564, type: !163)
!5602 = !DILocation(line: 564, column: 23, scope: !5598)
!5603 = !DILocalVariable(name: "len", arg: 2, scope: !5598, file: !270, line: 564, type: !156)
!5604 = !DILocation(line: 564, column: 36, scope: !5598)
!5605 = !DILocation(line: 565, column: 3, scope: !5598)
!5606 = !DILocation(line: 566, column: 3, scope: !5598)
!5607 = !DILocation(line: 566, column: 9, scope: !5598)
!5608 = !DILocation(line: 567, column: 3, scope: !5598)
!5609 = distinct !DISubprogram(name: "munlock", scope: !270, file: !270, line: 571, type: !5599, scopeLine: 571, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!5610 = !DILocalVariable(name: "addr", arg: 1, scope: !5609, file: !270, line: 571, type: !163)
!5611 = !DILocation(line: 571, column: 25, scope: !5609)
!5612 = !DILocalVariable(name: "len", arg: 2, scope: !5609, file: !270, line: 571, type: !156)
!5613 = !DILocation(line: 571, column: 38, scope: !5609)
!5614 = !DILocation(line: 572, column: 3, scope: !5609)
!5615 = !DILocation(line: 573, column: 3, scope: !5609)
!5616 = !DILocation(line: 573, column: 9, scope: !5609)
!5617 = !DILocation(line: 574, column: 3, scope: !5609)
!5618 = distinct !DISubprogram(name: "pause", scope: !270, file: !270, line: 578, type: !1035, scopeLine: 578, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!5619 = !DILocation(line: 579, column: 3, scope: !5618)
!5620 = !DILocation(line: 580, column: 3, scope: !5618)
!5621 = !DILocation(line: 580, column: 9, scope: !5618)
!5622 = !DILocation(line: 581, column: 3, scope: !5618)
!5623 = distinct !DISubprogram(name: "readahead", scope: !270, file: !270, line: 585, type: !5624, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!5624 = !DISubroutineType(types: !5625)
!5625 = !{!5626, !44, !5627, !156}
!5626 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !1540, line: 71, baseType: !155)
!5627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5628, size: 64)
!5628 = !DIDerivedType(tag: DW_TAG_typedef, name: "off64_t", file: !1540, line: 64, baseType: !92)
!5629 = !DILocalVariable(name: "fd", arg: 1, scope: !5623, file: !270, line: 585, type: !44)
!5630 = !DILocation(line: 585, column: 23, scope: !5623)
!5631 = !DILocalVariable(name: "offset", arg: 2, scope: !5623, file: !270, line: 585, type: !5627)
!5632 = !DILocation(line: 585, column: 36, scope: !5623)
!5633 = !DILocalVariable(name: "count", arg: 3, scope: !5623, file: !270, line: 585, type: !156)
!5634 = !DILocation(line: 585, column: 51, scope: !5623)
!5635 = !DILocation(line: 586, column: 3, scope: !5623)
!5636 = !DILocation(line: 587, column: 3, scope: !5623)
!5637 = !DILocation(line: 587, column: 9, scope: !5623)
!5638 = !DILocation(line: 588, column: 3, scope: !5623)
!5639 = distinct !DISubprogram(name: "mmap", scope: !270, file: !270, line: 592, type: !5640, scopeLine: 592, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!5640 = !DISubroutineType(types: !5641)
!5641 = !{!109, !109, !156, !44, !44, !44, !5642}
!5642 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !1540, line: 57, baseType: !47)
!5643 = !DILocalVariable(name: "start", arg: 1, scope: !5639, file: !270, line: 592, type: !109)
!5644 = !DILocation(line: 592, column: 18, scope: !5639)
!5645 = !DILocalVariable(name: "length", arg: 2, scope: !5639, file: !270, line: 592, type: !156)
!5646 = !DILocation(line: 592, column: 32, scope: !5639)
!5647 = !DILocalVariable(name: "prot", arg: 3, scope: !5639, file: !270, line: 592, type: !44)
!5648 = !DILocation(line: 592, column: 44, scope: !5639)
!5649 = !DILocalVariable(name: "flags", arg: 4, scope: !5639, file: !270, line: 592, type: !44)
!5650 = !DILocation(line: 592, column: 54, scope: !5639)
!5651 = !DILocalVariable(name: "fd", arg: 5, scope: !5639, file: !270, line: 592, type: !44)
!5652 = !DILocation(line: 592, column: 65, scope: !5639)
!5653 = !DILocalVariable(name: "offset", arg: 6, scope: !5639, file: !270, line: 592, type: !5642)
!5654 = !DILocation(line: 592, column: 75, scope: !5639)
!5655 = !DILocation(line: 593, column: 3, scope: !5639)
!5656 = !DILocation(line: 594, column: 3, scope: !5639)
!5657 = !DILocation(line: 594, column: 9, scope: !5639)
!5658 = !DILocation(line: 595, column: 3, scope: !5639)
!5659 = distinct !DISubprogram(name: "mmap64", scope: !270, file: !270, line: 599, type: !5660, scopeLine: 599, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!5660 = !DISubroutineType(types: !5661)
!5661 = !{!109, !109, !156, !44, !44, !44, !5628}
!5662 = !DILocalVariable(name: "start", arg: 1, scope: !5659, file: !270, line: 599, type: !109)
!5663 = !DILocation(line: 599, column: 20, scope: !5659)
!5664 = !DILocalVariable(name: "length", arg: 2, scope: !5659, file: !270, line: 599, type: !156)
!5665 = !DILocation(line: 599, column: 34, scope: !5659)
!5666 = !DILocalVariable(name: "prot", arg: 3, scope: !5659, file: !270, line: 599, type: !44)
!5667 = !DILocation(line: 599, column: 46, scope: !5659)
!5668 = !DILocalVariable(name: "flags", arg: 4, scope: !5659, file: !270, line: 599, type: !44)
!5669 = !DILocation(line: 599, column: 56, scope: !5659)
!5670 = !DILocalVariable(name: "fd", arg: 5, scope: !5659, file: !270, line: 599, type: !44)
!5671 = !DILocation(line: 599, column: 67, scope: !5659)
!5672 = !DILocalVariable(name: "offset", arg: 6, scope: !5659, file: !270, line: 599, type: !5628)
!5673 = !DILocation(line: 599, column: 79, scope: !5659)
!5674 = !DILocation(line: 600, column: 3, scope: !5659)
!5675 = !DILocation(line: 601, column: 3, scope: !5659)
!5676 = !DILocation(line: 601, column: 9, scope: !5659)
!5677 = !DILocation(line: 602, column: 3, scope: !5659)
!5678 = distinct !DISubprogram(name: "munmap", scope: !270, file: !270, line: 606, type: !5679, scopeLine: 606, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !231, retainedNodes: !4)
!5679 = !DISubroutineType(types: !5680)
!5680 = !{!44, !109, !156}
!5681 = !DILocalVariable(name: "start", arg: 1, scope: !5678, file: !270, line: 606, type: !109)
!5682 = !DILocation(line: 606, column: 17, scope: !5678)
!5683 = !DILocalVariable(name: "length", arg: 2, scope: !5678, file: !270, line: 606, type: !156)
!5684 = !DILocation(line: 606, column: 31, scope: !5678)
!5685 = !DILocation(line: 607, column: 3, scope: !5678)
!5686 = !DILocation(line: 608, column: 3, scope: !5678)
!5687 = !DILocation(line: 608, column: 9, scope: !5678)
!5688 = !DILocation(line: 609, column: 3, scope: !5678)
!5689 = distinct !DISubprogram(name: "memcpy", scope: !5690, file: !5690, line: 12, type: !5691, scopeLine: 12, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !272, retainedNodes: !4)
!5690 = !DIFile(filename: "/home/haoxin/haoxin-data/smu-research/klee/runtime/FreeStanding/memcpy.c", directory: "")
!5691 = !DISubroutineType(types: !5692)
!5692 = !{!109, !109, !163, !156}
!5693 = !DILocalVariable(name: "destaddr", arg: 1, scope: !5689, file: !5690, line: 12, type: !109)
!5694 = !DILocation(line: 12, column: 20, scope: !5689)
!5695 = !DILocalVariable(name: "srcaddr", arg: 2, scope: !5689, file: !5690, line: 12, type: !163)
!5696 = !DILocation(line: 12, column: 42, scope: !5689)
!5697 = !DILocalVariable(name: "len", arg: 3, scope: !5689, file: !5690, line: 12, type: !156)
!5698 = !DILocation(line: 12, column: 58, scope: !5689)
!5699 = !DILocalVariable(name: "dest", scope: !5689, file: !5690, line: 13, type: !22)
!5700 = !DILocation(line: 13, column: 9, scope: !5689)
!5701 = !DILocation(line: 13, column: 16, scope: !5689)
!5702 = !DILocalVariable(name: "src", scope: !5689, file: !5690, line: 14, type: !170)
!5703 = !DILocation(line: 14, column: 15, scope: !5689)
!5704 = !DILocation(line: 14, column: 21, scope: !5689)
!5705 = !DILocation(line: 16, column: 3, scope: !5689)
!5706 = !DILocation(line: 16, column: 13, scope: !5689)
!5707 = !DILocation(line: 16, column: 16, scope: !5689)
!5708 = !DILocation(line: 17, column: 19, scope: !5689)
!5709 = !DILocation(line: 17, column: 15, scope: !5689)
!5710 = !DILocation(line: 17, column: 10, scope: !5689)
!5711 = !DILocation(line: 17, column: 13, scope: !5689)
!5712 = distinct !{!5712, !5705, !5708}
!5713 = !DILocation(line: 18, column: 10, scope: !5689)
!5714 = !DILocation(line: 18, column: 3, scope: !5689)
!5715 = distinct !DISubprogram(name: "memset", scope: !5716, file: !5716, line: 12, type: !5717, scopeLine: 12, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !274, retainedNodes: !4)
!5716 = !DIFile(filename: "/home/haoxin/haoxin-data/smu-research/klee/runtime/FreeStanding/memset.c", directory: "")
!5717 = !DISubroutineType(types: !5718)
!5718 = !{!109, !109, !44, !156}
!5719 = !DILocalVariable(name: "dst", arg: 1, scope: !5715, file: !5716, line: 12, type: !109)
!5720 = !DILocation(line: 12, column: 20, scope: !5715)
!5721 = !DILocalVariable(name: "s", arg: 2, scope: !5715, file: !5716, line: 12, type: !44)
!5722 = !DILocation(line: 12, column: 29, scope: !5715)
!5723 = !DILocalVariable(name: "count", arg: 3, scope: !5715, file: !5716, line: 12, type: !156)
!5724 = !DILocation(line: 12, column: 39, scope: !5715)
!5725 = !DILocalVariable(name: "a", scope: !5715, file: !5716, line: 13, type: !22)
!5726 = !DILocation(line: 13, column: 9, scope: !5715)
!5727 = !DILocation(line: 13, column: 13, scope: !5715)
!5728 = !DILocation(line: 14, column: 3, scope: !5715)
!5729 = !DILocation(line: 14, column: 15, scope: !5715)
!5730 = !DILocation(line: 14, column: 18, scope: !5715)
!5731 = !DILocation(line: 15, column: 12, scope: !5715)
!5732 = !DILocation(line: 15, column: 7, scope: !5715)
!5733 = !DILocation(line: 15, column: 10, scope: !5715)
!5734 = distinct !{!5734, !5728, !5731}
!5735 = !DILocation(line: 16, column: 10, scope: !5715)
!5736 = !DILocation(line: 16, column: 3, scope: !5715)
!5737 = distinct !DISubprogram(name: "klee_overshift_check", scope: !5738, file: !5738, line: 20, type: !5739, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !276, retainedNodes: !4)
!5738 = !DIFile(filename: "/home/haoxin/haoxin-data/smu-research/klee/runtime/Intrinsic/klee_overshift_check.c", directory: "")
!5739 = !DISubroutineType(types: !5740)
!5740 = !{null, !5741, !5741}
!5741 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!5742 = !DILocalVariable(name: "bitWidth", arg: 1, scope: !5737, file: !5738, line: 20, type: !5741)
!5743 = !DILocation(line: 20, column: 46, scope: !5737)
!5744 = !DILocalVariable(name: "shift", arg: 2, scope: !5737, file: !5738, line: 20, type: !5741)
!5745 = !DILocation(line: 20, column: 75, scope: !5737)
!5746 = !DILocation(line: 21, column: 7, scope: !5747)
!5747 = distinct !DILexicalBlock(scope: !5737, file: !5738, line: 21, column: 7)
!5748 = !DILocation(line: 21, column: 16, scope: !5747)
!5749 = !DILocation(line: 21, column: 13, scope: !5747)
!5750 = !DILocation(line: 21, column: 7, scope: !5737)
!5751 = !DILocation(line: 27, column: 5, scope: !5752)
!5752 = distinct !DILexicalBlock(scope: !5747, file: !5738, line: 21, column: 26)
!5753 = !DILocation(line: 29, column: 1, scope: !5737)
