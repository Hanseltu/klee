KLEE: This is a debuging version of KLEE

KLEE: NOTE: Using klee-uclibc : /home/haoxin/haoxin-data/smu-research/klee/smu-build/Debug+Asserts/lib/klee-uclibc.bca
KLEE: output directory is "/home/haoxin/haoxin-data/smu-research/klee/examples/exploit-example/klee-out-1"
KLEE: Using STP solver backend
KLEE: WARNING: undefined reference to function: __syscall_rt_sigaction
KLEE: WARNING: undefined reference to function: fcntl
KLEE: WARNING: undefined reference to function: fstat
KLEE: WARNING: undefined reference to function: ioctl
KLEE: WARNING: undefined reference to function: llvm.dbg.label
KLEE: WARNING: undefined reference to function: open
KLEE: WARNING: undefined reference to function: write
KLEE: WARNING: undefined reference to function: kill (UNSAFE)!
i32 (i32)*
111840096
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
Function name in initializeGlobals __uClibc_init
Function name in initializeGlobals __uClibc_fini
Function name in initializeGlobals __uClibc_main
Function name in initializeGlobals llvm.dbg.declare
Function name in initializeGlobals __check_suid
Function name in initializeGlobals __check_one_fd
Function name in initializeGlobals getuid
Function name in initializeGlobals geteuid
Function name in initializeGlobals getgid
Function name in initializeGlobals getegid
Function name in initializeGlobals fcntl
Function name in initializeGlobals open
Function name in initializeGlobals fstat
Function name in initializeGlobals gnu_dev_makedev
Function name in initializeGlobals main
Function name in initializeGlobals goodFunc
Function name in initializeGlobals printf
Function name in initializeGlobals badFunc
Function name in initializeGlobals __user_main
Function name in initializeGlobals malloc
Function name in initializeGlobals klee_make_symbolic
Function name in initializeGlobals llvm.memcpy.p0i8.p0i8.i64
Function name in initializeGlobals __errno_location
Function name in initializeGlobals __h_errno_location
Function name in initializeGlobals _locale_set_l
Function name in initializeGlobals init_cur_collate
Function name in initializeGlobals free
Function name in initializeGlobals calloc
Function name in initializeGlobals llvm.dbg.label
Function name in initializeGlobals _locale_init_l
Function name in initializeGlobals _locale_init
Function name in initializeGlobals _stdio_term
Function name in initializeGlobals _stdio_init
Function name in initializeGlobals abort
Function name in initializeGlobals sigprocmask
Function name in initializeGlobals _exit
Function name in initializeGlobals exit
Function name in initializeGlobals memcpy
Function name in initializeGlobals memset
Function name in initializeGlobals strrchr
Function name in initializeGlobals __locale_mbrtowc_l
Function name in initializeGlobals __raise
Function name in initializeGlobals getpid
Function name in initializeGlobals kill
Function name in initializeGlobals __libc_sigaction
Function name in initializeGlobals __syscall_rt_sigaction
Function name in initializeGlobals __sigismember
Function name in initializeGlobals __sigaddset
Function name in initializeGlobals __sigdelset
Function name in initializeGlobals __stdio_wcommit
Function name in initializeGlobals strlen
Function name in initializeGlobals isatty
Function name in initializeGlobals _wchar_utf8sntowcs
Function name in initializeGlobals __stdio_WRITE
Function name in initializeGlobals write
Function name in initializeGlobals tcgetattr
Function name in initializeGlobals ioctl
Function name in initializeGlobals mempcpy
Function name in initializeGlobals klee_overshift_check
Function name in initializeGlobals klee_report_error
mo for global handler : 
  mo->address = 111840096
  mo->name = unnamed
  os->concreteStore = 111840104
Iterate globalAddresses:
find the address of handler!
ki->getSourceLocation = [no debug info]
ki->info->line = 0
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
 in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in st  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
ack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  %s.addr = alloca i8*, align 8
  %c.addr = alloca i32, align 4
  %n.addr = alloca i64, align 8
  %p = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !2157, metadata !DIExpression()), !dbg !2158
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !2159, metadata !DIExpression()), !dbg !2160
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !2161, metadata !DIExpression()), !dbg !2162
  call void @llvm.dbg.declare(metadata i8** %p, metadata !2163, metadata !DIExpression()), !dbg !2164
  %0 = load i8*, i8** %s.addr, align 8, !dbg !668
  store i8* %0, i8** %p, align 8, !dbg !667
  br label %while.cond, !dbg !669
  %1 = load i64, i64* %n.addr, align 8, !dbg !670
  %tobool = icmp ne i64 %1, 0, !dbg !669
  br i1 %tobool, label %while.body, label %while.end, !dbg !669
  %2 = load i32, i32* %c.addr, align 4, !dbg !671
  %conv = trunc i32 %2 to i8, !dbg !673
  %3 = load i8*, i8** %p, align 8, !dbg !674
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !674
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !674
  store i8 %conv, i8* %3, align 1, !dbg !675
  %4 = load i64, i64* %n.addr, align 8, !dbg !676
  %dec = add i64 %4, -1, !dbg !676
  store i64 %dec, i64* %n.addr, align 8, !dbg !676
  br label %while.cond, !dbg !669, !llvm.loop !677
  %5 = load i8*, i8** %s.addr, align 8, !dbg !679
  ret i8* %5, !dbg !680
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions i  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
n stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  %0 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !657
  %tobool = icmp ne i32 %0, 0, !dbg !657
  br i1 %tobool, label %if.then, label %if.end, !dbg !659
  br label %if.end4, !dbg !660
  %1 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  %inc = add nsw i32 %1, 1, !dbg !661
  store i32 %inc, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  store i64 4096, i64* @__pagesize, align 8, !dbg !662
  br i1 true, label %if.then1, label %if.end2, !dbg !663
  call void @_locale_init() #10, !dbg !664
  br label %if.end2, !dbg !664
  br i1 true, label %if.then3, label %if.end4, !dbg !666
  call void @_stdio_init() #10, !dbg !667
  br label %if.end4, !dbg !667
  ret void, !dbg !669
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack:  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
 Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  %0 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !657
  %tobool = icmp ne i32 %0, 0, !dbg !657
  br i1 %tobool, label %if.then, label %if.end, !dbg !659
  br label %if.end4, !dbg !660
  %1 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  %inc = add nsw i32 %1, 1, !dbg !661
  store i32 %inc, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  store i64 4096, i64* @__pagesize, align 8, !dbg !662
  br i1 true, label %if.then1, label %if.end2, !dbg !663
  call void @_locale_init() #10, !dbg !664
  br label %if.end2, !dbg !664
  br i1 true, label %if.then3, label %if.end4, !dbg !666
  call void @_stdio_init() #10, !dbg !667
  br label %if.end4, !dbg !667
  ret void, !dbg !669
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** @__global_locale, align 8, !dbg !658
  call void @_locale_init_l(%struct.__uclibc_locale_struct.160* %0) #10, !dbg !659
  ret void, !dbg !660
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
 stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  %0 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !657
  %tobool = icmp ne i32 %0, 0, !dbg !657
  br i1 %tobool, label %if.then, label %if.end, !dbg !659
  br label %if.end4, !dbg !660
  %1 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  %inc = add nsw i32 %1, 1, !dbg !661
  store i32 %inc, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  store i64 4096, i64* @__pagesize, align 8, !dbg !662
  br i1 true, label %if.then1, label %if.end2, !dbg !663
  call void @_locale_init() #10, !dbg !664
  br label %if.end2, !dbg !664
  br i1 true, label %if.then3, label %if.end4, !dbg !666
  call void @_stdio_init() #10, !dbg !667
  br label %if.end4, !dbg !667
  ret void, !dbg !669
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** @__global_locale, align 8, !dbg !658
  call void @_locale_init_l(%struct.__uclibc_locale_struct.160* %0) #10, !dbg !659
  ret void, !dbg !660
  %base.addr = alloca %struct.__uclibc_locale_struct.160*, align 8
  store %struct.__uclibc_locale_struct.160* %base, %struct.__uclibc_locale_struct.160** %base.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__uclibc_locale_struct.160** %base.addr, metadata !1973, metadata !DIExpression()), !dbg !1974
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !662
  %cur_locale = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %0, i32 0, i32 6, !dbg !663
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale, i64 0, i64 0, !dbg !662
  %call = call i8* @memset(i8* %arraydecay, i32 0, i64 14) #10, !dbg !664
: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in  %1 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !665
  %cur_locale1 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %1, i32 0, i32 6, !dbg !666
  %arrayidx = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale1, i64 0, i64 0, !dbg !665
  store i8 35, i8* %arrayidx, align 8, !dbg !667
  %2 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !668
  %category_item_count = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %2, i32 0, i32 8, !dbg !669
  %arraydecay2 = getelementptr inbounds [6 x i8], [6 x i8]* %category_item_count, i64 0, i64 0, !dbg !668
  %3 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !670
  %lc_common_item_offsets_LEN = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %3, i32 0, i32 29, !dbg !671
  %arraydecay3 = getelementptr inbounds [6 x i8], [6 x i8]* %lc_common_item_offsets_LEN, i64 0, i64 0, !dbg !670
  %call4 = call i8* @memcpy(i8* %arraydecay2, i8* %arraydecay3, i64 6) #10, !dbg !672
  %4 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !673
  %category_item_count5 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %4, i32 0, i32 8, !dbg !674
  %arrayidx6 = getelementptr inbounds [6 x i8], [6 x i8]* %category_item_count5, i64 0, i64 0, !dbg !673
  %5 = load i8, i8* %arrayidx6, align 2, !dbg !675
  %inc = add i8 %5, 1, !dbg !675
  store i8 %inc, i8* %arrayidx6, align 2, !dbg !675
  %6 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !676
  %category_offsets = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %6, i32 0, i32 7, !dbg !677
  %arrayidx7 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets, i64 0, i64 0, !dbg !676
  store i16 2488, i16* %arrayidx7, align 2, !dbg !678
  %7 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !679
  %category_offsets8 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %7, i32 0, i32 7, !dbg !680
  %arrayidx9 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets8, i64 0, i64 1, !dbg !679
  store i16 2576, i16* %arrayidx9, align 2, !dbg !681
  %8 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !682
  %category_offsets10 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %8, i32 0, i32 7, !dbg !683
  %arrayidx11 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets10, i64 0, i64 2, !dbg !682
  store i16 2600, i16* %arrayidx11, align 2, !dbg !684
  %9 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !685
  %category_offsets12 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %9, i32 0, i32 7, !dbg !686
  %arrayidx13 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets12, i64 0, i64 3, !dbg !685
  store i16 2776, i16* %arrayidx13, align 2, !dbg !687
  %10 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !688
  %category_offsets14 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %10, i32 0, i32 7, !dbg !689
  %arrayidx15 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets14, i64 0, i64 5, !dbg !688
  store i16 3176, i16* %arrayidx15, align 2, !dbg !690
  %11 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !691
  %tbl8ctype = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %11, i32 0, i32 0, !dbg !692
  %12 = bitcast [420 x i8]* %tbl8ctype to i8*, !dbg !693
  %13 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !694
  %tbl8ctype16 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %13, i32 0, i32 13, !dbg !695
  store i8* %12, i8** %tbl8ctype16, align 8, !dbg !696
  %14 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !697
  %tbl8uplow = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %14, i32 0, i32 1, !dbg !698
  %15 = bitcast [504 x i8]* %tbl8uplow to i8*, !dbg !699
  %16 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !700
  %tbl8uplow17 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %16, i32 0, i32 15, !dbg !701
  store i8* %15, i8** %tbl8uplow17, align 8, !dbg !702
  %17 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !703
  %tbl8c2wc = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %17, i32 0, i32 2, !dbg !704
  %18 = bitcast [1760 x i16]* %tbl8c2wc to i16*, !dbg !705
  %19 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !706
  %tbl8c2wc18 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %19, i32 0, i32 17, !dbg !707
  store i16* %18, i16** %tbl8c2wc18, align 8, !dbg !708
  %20 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !709
  %tbl8wc2c = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %20, i32 0, i32 3, !dbg !710
  %21 = bitcast [4528 x i8]* %tbl8wc2c to i8*, !dbg !711
  %22 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !712
  %tbl8wc2c19 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %22, i32 0, i32 19, !dbg !713
  store i8* %21, i8** %tbl8wc2c19, align 8, !dbg !714
  %23 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !715
  %tblwctype = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %23, i32 0, i32 4, !dbg !716
  %24 = bitcast [3604 x i8]* %tblwctype to i8*, !dbg !717
  %25 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !718
  %tblwctype20 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %25, i32 0, i32 21, !dbg !719
  store i8* %24, i8** %tblwctype20, align 8, !dbg !720
  %26 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !721
  %tblwuplow = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %26, i32 0, i32 5, !dbg !722
  %27 = bitcast [1680 x i8]* %tblwuplow to i8*, !dbg !723
  %28 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !724
  %tblwuplow21 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %28, i32 0, i32 22, !dbg !725
  store i8* %27, i8** %tblwuplow21, align 8, !dbg !726
  %29 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !727
  %tblwuplow_diff = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %29, i32 0, i32 6, !dbg !728
  %30 = bitcast [196 x i16]* %tblwuplow_diff to i16*, !dbg !729
  %31 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !730
  %tblwuplow_diff22 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %31, i32 0, i32 23, !dbg !731
  store i16* %30, i16** %tblwuplow_diff22, align 8, !dbg !732
  %32 = load i16*, i16** @__C_ctype_b, align 8, !dbg !733
  %33 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !734
  %__ctype_b = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %33, i32 0, i32 0, !dbg !735
  store i16* %32, i16** %__ctype_b, align 8, !dbg !736
  %34 = load i16*, i16** @__C_ctype_tolower, align 8, !dbg !737
  %35 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !738
  %__ctype_tolower = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %35, i32 0, i32 1, !dbg !739
  store i16* %34, i16** %__ctype_tolower, align 8, !dbg !740
  %36 = load i16*, i16** @__C_ctype_toupper, align 8, !dbg !741
  %37 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !742
  %__ctype_toupper = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %37, i32 0, i32 2, !dbg !743
  store i16* %36, i16** %__ctype_toupper, align 8, !dbg !744
  %38 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !745
  %code2flag = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %38, i32 0, i32 20, !dbg !746
  store i16* getelementptr inbounds ([16 x i16], [16 x i16]* @__code2flag, i64 0, i64 0), i16** %code2flag, align 8, !dbg !747
  %39 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !748
  %call23 = call i32 @_locale_set_l(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), %struct.__uclibc_locale_struct.160* %39) #11, !dbg !749
  ret void, !dbg !750
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
 stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//In  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  %0 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !657
  %tobool = icmp ne i32 %0, 0, !dbg !657
  br i1 %tobool, label %if.then, label %if.end, !dbg !659
  br label %if.end4, !dbg !660
  %1 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  %inc = add nsw i32 %1, 1, !dbg !661
  store i32 %inc, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  store i64 4096, i64* @__pagesize, align 8, !dbg !662
  br i1 true, label %if.then1, label %if.end2, !dbg !663
  call void @_locale_init() #10, !dbg !664
  br label %if.end2, !dbg !664
  br i1 true, label %if.then3, label %if.end4, !dbg !666
  call void @_stdio_init() #10, !dbg !667
  br label %if.end4, !dbg !667
  ret void, !dbg !669
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** @__global_locale, align 8, !dbg !658
  call void @_locale_init_l(%struct.__uclibc_locale_struct.160* %0) #10, !dbg !659
  ret void, !dbg !660
  %base.addr = alloca %struct.__uclibc_locale_struct.160*, align 8
  store %struct.__uclibc_locale_struct.160* %base, %struct.__uclibc_locale_struct.160** %base.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__uclibc_locale_struct.160** %base.addr, metadata !1973, metadata !DIExpression()), !dbg !1974
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !662
  %cur_locale = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %0, i32 0, i32 6, !dbg !663
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale, i64 0, i64 0, !dbg !662
  %call = call i8* @memset(i8* %arraydecay, i32 0, i64 14) #10, !dbg !664
  %1 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !665
  %cur_locale1 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %1, i32 0, i32 6, !dbg !666
  %arrayidx = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale1, i64 0, i64 0, !dbg !665
  store i8 35, i8* %arrayidx, align 8, !dbg !667
  %2 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !668
  %category_item_count = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %2, i32 0, i32 8, !dbg !669
  %arraydecay2 = getelementptr inbounds [6 x i8], [6 x i8]* %category_item_count, i64 0, i64 0, !dbg !668
  %3 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !670
  %lc_common_item_offsets_LEN = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %3, i32 0, i32 29, !dbg !671
  %arraydecay3 = getelementptr inbounds [6 x i8], [6 x i8]* %lc_common_item_offsets_LEN, i64 0, i64 0, !dbg !670
  %call4 = call i8* @memcpy(i8* %arraydecay2, i8* %arraydecay3, i64 6) #10, !dbg !672
  %4 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !673
  %category_item_count5 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %4, i32 0, i32 8, !dbg !674
  %arrayidx6 = getelementptr inbounds [6 x i8], [6 x i8]* %category_item_count5, i64 0, i64 0, !dbg !673
  %5 = load i8, i8* %arrayidx6, align 2, !dbg !675
  %inc = add i8 %5, 1, !dbg !675
  store i8 %inc, i8* %arrayidx6, align 2, !dbg !675
  %6 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !676
  %category_offsets = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %6, i32 0, i32 7, !dbg !677
  %arrayidx7 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets, i64 0, i64 0, !dbg !676
  store i16 2488, i16* %arrayidx7, align 2, !dbg !678
  %7 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !679
  %category_offsets8 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %7, i32 0, i32 7, !dbg !680
  %arrayidx9 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets8, i64 0, i64 1, !dbg !679
  store i16 2576, i16* %arrayidx9, align 2, !dbg !681
  %8 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !682
  %category_offsets10 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %8, i32 0, i32 7, !dbg !683
  %arrayidx11 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets10, i64 0, i64 2, !dbg !682
  store i16 2600, i16* %arrayidx11, align 2, !dbg !684
  %9 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !685
  %category_offsets12 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %9, i32 0, i32 7, !dbg !686
  %arrayidx13 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets12, i64 0, i64 3, !dbg !685
  store i16 2776, i16* %arrayidx13, align 2, !dbg !687
  %10 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !688
  %category_offsets14 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %10, i32 0, i32 7, !dbg !689
  %arrayidx15 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets14, i64 0, i64 5, !dbg !688
  store i16 3176, i16* %arrayidx15, align 2, !dbg !690
  %11 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !691
  %tbl8ctype = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %11, i32 0, i32 0, !dbg !692
  %12 = bitcast [420 x i8]* %tbl8ctype to i8*, !dbg !693
  %13 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !694
  %tbl8ctype16 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %13, i32 0, i32 13, !dbg !695
  store i8* %12, i8** %tbl8ctype16, align 8, !dbg !696
  %14 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !697
  %tbl8uplow = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %14, i32 0, i32 1, !dbg !698
  %15 = bitcast [504 x i8]* %tbl8uplow to i8*, !dbg !699
  %16 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !700
  %tbl8uplow17 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %16, i32 0, i32 15, !dbg !701
  store i8* %15, i8** %tbl8uplow17, align 8, !dbg !702
  %17 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !703
  %tbl8c2wc = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %17, i32 0, i32 2, !dbg !704
  %18 = bitcast [1760 x i16]* %tbl8c2wc to i16*, !dbg !705
  %19 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !706
  %tbl8c2wc18 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %19, i32 0, i32 17, !dbg !707
  store i16* %18, i16** %tbl8c2wc18, align 8, !dbg !708
  %20 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !709
  %tbl8wc2c = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %20, i32 0, i32 3, !dbg !710
  %21 = bitcast [4528 x i8]* %tbl8wc2c to i8*, !dbg !711
  %22 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !712
  %tbl8wc2c19 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %22, i32 0, i32 19, !dbg !713
  store i8* %21, i8** %tbl8wc2c19, align 8, !dbg !714
  %23 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !715
  %tblwctype = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %23, i32 0, i32 4, !dbg !716
  %24 = bitcast [3604 x i8]* %tblwctype to i8*, !dbg !717
  %25 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !718
  %tblwctype20 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %25, i32 0, i32 21, !dbg !719
  store i8* %24, i8** %tblwctype20, align 8, !dbg !720
  %26 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !721
structions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack:   %tblwuplow = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %26, i32 0, i32 5, !dbg !722
  %27 = bitcast [1680 x i8]* %tblwuplow to i8*, !dbg !723
  %28 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !724
  %tblwuplow21 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %28, i32 0, i32 22, !dbg !725
  store i8* %27, i8** %tblwuplow21, align 8, !dbg !726
  %29 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !727
  %tblwuplow_diff = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %29, i32 0, i32 6, !dbg !728
  %30 = bitcast [196 x i16]* %tblwuplow_diff to i16*, !dbg !729
  %31 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !730
  %tblwuplow_diff22 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %31, i32 0, i32 23, !dbg !731
  store i16* %30, i16** %tblwuplow_diff22, align 8, !dbg !732
  %32 = load i16*, i16** @__C_ctype_b, align 8, !dbg !733
  %33 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !734
  %__ctype_b = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %33, i32 0, i32 0, !dbg !735
  store i16* %32, i16** %__ctype_b, align 8, !dbg !736
  %34 = load i16*, i16** @__C_ctype_tolower, align 8, !dbg !737
  %35 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !738
  %__ctype_tolower = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %35, i32 0, i32 1, !dbg !739
  store i16* %34, i16** %__ctype_tolower, align 8, !dbg !740
  %36 = load i16*, i16** @__C_ctype_toupper, align 8, !dbg !741
  %37 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !742
  %__ctype_toupper = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %37, i32 0, i32 2, !dbg !743
  store i16* %36, i16** %__ctype_toupper, align 8, !dbg !744
  %38 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !745
  %code2flag = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %38, i32 0, i32 20, !dbg !746
  store i16* getelementptr inbounds ([16 x i16], [16 x i16]* @__code2flag, i64 0, i64 0), i16** %code2flag, align 8, !dbg !747
  %39 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !748
  %call23 = call i32 @_locale_set_l(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), %struct.__uclibc_locale_struct.160* %39) #11, !dbg !749
  ret void, !dbg !750
  %s.addr = alloca i8*, align 8
  %c.addr = alloca i32, align 4
  %n.addr = alloca i64, align 8
  %p = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !2157, metadata !DIExpression()), !dbg !2158
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !2159, metadata !DIExpression()), !dbg !2160
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !2161, metadata !DIExpression()), !dbg !2162
  call void @llvm.dbg.declare(metadata i8** %p, metadata !2163, metadata !DIExpression()), !dbg !2164
  %0 = load i8*, i8** %s.addr, align 8, !dbg !668
  store i8* %0, i8** %p, align 8, !dbg !667
  br label %while.cond, !dbg !669
  %1 = load i64, i64* %n.addr, align 8, !dbg !670
  %tobool = icmp ne i64 %1, 0, !dbg !669
  br i1 %tobool, label %while.body, label %while.end, !dbg !669
  %2 = load i32, i32* %c.addr, align 4, !dbg !671
  %conv = trunc i32 %2 to i8, !dbg !673
  %3 = load i8*, i8** %p, align 8, !dbg !674
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !674
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !674
  store i8 %conv, i8* %3, align 1, !dbg !675
  %4 = load i64, i64* %n.addr, align 8, !dbg !676
  %dec = add i64 %4, -1, !dbg !676
  store i64 %dec, i64* %n.addr, align 8, !dbg !676
  br label %while.cond, !dbg !669, !llvm.loop !677
  %5 = load i8*, i8** %s.addr, align 8, !dbg !679
  ret i8* %5, !dbg !680
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructi  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  %0 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !657
  %tobool = icmp ne i32 %0, 0, !dbg !657
  br i1 %tobool, label %if.then, label %if.end, !dbg !659
  br label %if.end4, !dbg !660
ons in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in sta  %1 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  %inc = add nsw i32 %1, 1, !dbg !661
  store i32 %inc, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  store i64 4096, i64* @__pagesize, align 8, !dbg !662
  br i1 true, label %if.then1, label %if.end2, !dbg !663
  call void @_locale_init() #10, !dbg !664
  br label %if.end2, !dbg !664
  br i1 true, label %if.then3, label %if.end4, !dbg !666
  call void @_stdio_init() #10, !dbg !667
  br label %if.end4, !dbg !667
  ret void, !dbg !669
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** @__global_locale, align 8, !dbg !658
  call void @_locale_init_l(%struct.__uclibc_locale_struct.160* %0) #10, !dbg !659
  ret void, !dbg !660
  %base.addr = alloca %struct.__uclibc_locale_struct.160*, align 8
  store %struct.__uclibc_locale_struct.160* %base, %struct.__uclibc_locale_struct.160** %base.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__uclibc_locale_struct.160** %base.addr, metadata !1973, metadata !DIExpression()), !dbg !1974
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !662
  %cur_locale = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %0, i32 0, i32 6, !dbg !663
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale, i64 0, i64 0, !dbg !662
  %call = call i8* @memset(i8* %arraydecay, i32 0, i64 14) #10, !dbg !664
  %1 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !665
  %cur_locale1 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %1, i32 0, i32 6, !dbg !666
  %arrayidx = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale1, i64 0, i64 0, !dbg !665
  store i8 35, i8* %arrayidx, align 8, !dbg !667
  %2 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !668
  %category_item_count = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %2, i32 0, i32 8, !dbg !669
  %arraydecay2 = getelementptr inbounds [6 x i8], [6 x i8]* %category_item_count, i64 0, i64 0, !dbg !668
  %3 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !670
  %lc_common_item_offsets_LEN = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %3, i32 0, i32 29, !dbg !671
  %arraydecay3 = getelementptr inbounds [6 x i8], [6 x i8]* %lc_common_item_offsets_LEN, i64 0, i64 0, !dbg !670
  %call4 = call i8* @memcpy(i8* %arraydecay2, i8* %arraydecay3, i64 6) #10, !dbg !672
  %4 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !673
  %category_item_count5 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %4, i32 0, i32 8, !dbg !674
  %arrayidx6 = getelementptr inbounds [6 x i8], [6 x i8]* %category_item_count5, i64 0, i64 0, !dbg !673
  %5 = load i8, i8* %arrayidx6, align 2, !dbg !675
  %inc = add i8 %5, 1, !dbg !675
  store i8 %inc, i8* %arrayidx6, align 2, !dbg !675
  %6 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !676
  %category_offsets = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %6, i32 0, i32 7, !dbg !677
  %arrayidx7 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets, i64 0, i64 0, !dbg !676
  store i16 2488, i16* %arrayidx7, align 2, !dbg !678
  %7 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !679
  %category_offsets8 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %7, i32 0, i32 7, !dbg !680
  %arrayidx9 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets8, i64 0, i64 1, !dbg !679
  store i16 2576, i16* %arrayidx9, align 2, !dbg !681
  %8 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !682
  %category_offsets10 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %8, i32 0, i32 7, !dbg !683
  %arrayidx11 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets10, i64 0, i64 2, !dbg !682
  store i16 2600, i16* %arrayidx11, align 2, !dbg !684
  %9 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !685
  %category_offsets12 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %9, i32 0, i32 7, !dbg !686
  %arrayidx13 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets12, i64 0, i64 3, !dbg !685
  store i16 2776, i16* %arrayidx13, align 2, !dbg !687
  %10 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !688
  %category_offsets14 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %10, i32 0, i32 7, !dbg !689
  %arrayidx15 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets14, i64 0, i64 5, !dbg !688
  store i16 3176, i16* %arrayidx15, align 2, !dbg !690
  %11 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !691
  %tbl8ctype = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %11, i32 0, i32 0, !dbg !692
  %12 = bitcast [420 x i8]* %tbl8ctype to i8*, !dbg !693
  %13 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !694
  %tbl8ctype16 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %13, i32 0, i32 13, !dbg !695
  store i8* %12, i8** %tbl8ctype16, align 8, !dbg !696
  %14 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !697
  %tbl8uplow = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %14, i32 0, i32 1, !dbg !698
  %15 = bitcast [504 x i8]* %tbl8uplow to i8*, !dbg !699
  %16 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !700
  %tbl8uplow17 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %16, i32 0, i32 15, !dbg !701
  store i8* %15, i8** %tbl8uplow17, align 8, !dbg !702
  %17 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !703
  %tbl8c2wc = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %17, i32 0, i32 2, !dbg !704
  %18 = bitcast [1760 x i16]* %tbl8c2wc to i16*, !dbg !705
  %19 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !706
  %tbl8c2wc18 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %19, i32 0, i32 17, !dbg !707
  store i16* %18, i16** %tbl8c2wc18, align 8, !dbg !708
  %20 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !709
  %tbl8wc2c = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %20, i32 0, i32 3, !dbg !710
  %21 = bitcast [4528 x i8]* %tbl8wc2c to i8*, !dbg !711
  %22 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !712
  %tbl8wc2c19 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %22, i32 0, i32 19, !dbg !713
  store i8* %21, i8** %tbl8wc2c19, align 8, !dbg !714
  %23 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !715
  %tblwctype = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %23, i32 0, i32 4, !dbg !716
  %24 = bitcast [3604 x i8]* %tblwctype to i8*, !dbg !717
  %25 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !718
  %tblwctype20 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %25, i32 0, i32 21, !dbg !719
  store i8* %24, i8** %tblwctype20, align 8, !dbg !720
  %26 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !721
  %tblwuplow = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %26, i32 0, i32 5, !dbg !722
  %27 = bitcast [1680 x i8]* %tblwuplow to i8*, !dbg !723
  %28 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !724
  %tblwuplow21 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %28, i32 0, i32 22, !dbg !725
  store i8* %27, i8** %tblwuplow21, align 8, !dbg !726
  %29 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !727
  %tblwuplow_diff = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %29, i32 0, i32 6, !dbg !728
  %30 = bitcast [196 x i16]* %tblwuplow_diff to i16*, !dbg !729
  %31 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !730
  %tblwuplow_diff22 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %31, i32 0, i32 23, !dbg !731
  store i16* %30, i16** %tblwuplow_diff22, align 8, !dbg !732
  %32 = load i16*, i16** @__C_ctype_b, align 8, !dbg !733
  %33 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !734
  %__ctype_b = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %33, i32 0, i32 0, !dbg !735
  store i16* %32, i16** %__ctype_b, align 8, !dbg !736
  %34 = load i16*, i16** @__C_ctype_tolower, align 8, !dbg !737
  %35 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !738
  %__ctype_tolower = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %35, i32 0, i32 1, !dbg !739
  store i16* %34, i16** %__ctype_tolower, align 8, !dbg !740
  %36 = load i16*, i16** @__C_ctype_toupper, align 8, !dbg !741
  %37 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !742
  %__ctype_toupper = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %37, i32 0, i32 2, !dbg !743
  store i16* %36, i16** %__ctype_toupper, align 8, !dbg !744
  %38 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !745
  %code2flag = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %38, i32 0, i32 20, !dbg !746
  store i16* getelementptr inbounds ([16 x i16], [16 x i16]* @__code2flag, i64 0, i64 0), i16** %code2flag, align 8, !dbg !747
  %39 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !748
  %call23 = call i32 @_locale_set_l(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), %struct.__uclibc_locale_struct.160* %39) #11, !dbg !749
  ret void, !dbg !750
  %s1.addr = alloca i8*, align 8
  %s2.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %r1 = alloca i8*, align 8
  %r2 = alloca i8*, align 8
  store i8* %s1, i8** %s1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !2130, metadata !DIExpression()), !dbg !2131
  store i8* %s2, i8** %s2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !2132, metadata !DIExpression()), !dbg !2133
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !2134, metadata !DIExpression()), !dbg !2135
ck: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions  call void @llvm.dbg.declare(metadata i8** %r1, metadata !2136, metadata !DIExpression()), !dbg !2137
  %0 = load i8*, i8** %s1.addr, align 8, !dbg !672
  store i8* %0, i8** %r1, align 8, !dbg !671
  call void @llvm.dbg.declare(metadata i8** %r2, metadata !2139, metadata !DIExpression()), !dbg !2140
  %1 = load i8*, i8** %s2.addr, align 8, !dbg !675
  store i8* %1, i8** %r2, align 8, !dbg !674
  br label %while.cond, !dbg !676
  %2 = load i64, i64* %n.addr, align 8, !dbg !677
  %tobool = icmp ne i64 %2, 0, !dbg !676
  br i1 %tobool, label %while.body, label %while.end, !dbg !676
  %3 = load i8*, i8** %r2, align 8, !dbg !678
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !678
  store i8* %incdec.ptr, i8** %r2, align 8, !dbg !678
  %4 = load i8, i8* %3, align 1, !dbg !680
  %5 = load i8*, i8** %r1, align 8, !dbg !681
  %incdec.ptr1 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !681
  store i8* %incdec.ptr1, i8** %r1, align 8, !dbg !681
  store i8 %4, i8* %5, align 1, !dbg !682
  %6 = load i64, i64* %n.addr, align 8, !dbg !683
  %dec = add i64 %6, -1, !dbg !683
  store i64 %dec, i64* %n.addr, align 8, !dbg !683
  br label %while.cond, !dbg !676, !llvm.loop !684
  %7 = load i8*, i8** %s1.addr, align 8, !dbg !686
  ret i8* %7, !dbg !687
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
 in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack:  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  %0 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !657
  %tobool = icmp ne i32 %0, 0, !dbg !657
  br i1 %tobool, label %if.then, label %if.end, !dbg !659
  br label %if.end4, !dbg !660
  %1 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  %inc = add nsw i32 %1, 1, !dbg !661
  store i32 %inc, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  store i64 4096, i64* @__pagesize, align 8, !dbg !662
  br i1 true, label %if.then1, label %if.end2, !dbg !663
  call void @_locale_init() #10, !dbg !664
  br label %if.end2, !dbg !664
  br i1 true, label %if.then3, label %if.end4, !dbg !666
  call void @_stdio_init() #10, !dbg !667
  br label %if.end4, !dbg !667
  ret void, !dbg !669
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** @__global_locale, align 8, !dbg !658
  call void @_locale_init_l(%struct.__uclibc_locale_struct.160* %0) #10, !dbg !659
  ret void, !dbg !660
  %base.addr = alloca %struct.__uclibc_locale_struct.160*, align 8
  store %struct.__uclibc_locale_struct.160* %base, %struct.__uclibc_locale_struct.160** %base.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__uclibc_locale_struct.160** %base.addr, metadata !1973, metadata !DIExpression()), !dbg !1974
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !662
  %cur_locale = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %0, i32 0, i32 6, !dbg !663
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale, i64 0, i64 0, !dbg !662
  %call = call i8* @memset(i8* %arraydecay, i32 0, i64 14) #10, !dbg !664
  %1 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !665
  %cur_locale1 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %1, i32 0, i32 6, !dbg !666
  %arrayidx = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale1, i64 0, i64 0, !dbg !665
  store i8 35, i8* %arrayidx, align 8, !dbg !667
  %2 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !668
  %category_item_count = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %2, i32 0, i32 8, !dbg !669
  %arraydecay2 = getelementptr inbounds [6 x i8], [6 x i8]* %category_item_count, i64 0, i64 0, !dbg !668
  %3 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !670
  %lc_common_item_offsets_LEN = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %3, i32 0, i32 29, !dbg !671
  %arraydecay3 = getelementptr inbounds [6 x i8], [6 x i8]* %lc_common_item_offsets_LEN, i64 0, i64 0, !dbg !670
  %call4 = call i8* @memcpy(i8* %arraydecay2, i8* %arraydecay3, i64 6) #10, !dbg !672
  %4 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !673
  %category_item_count5 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %4, i32 0, i32 8, !dbg !674
 Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack  %arrayidx6 = getelementptr inbounds [6 x i8], [6 x i8]* %category_item_count5, i64 0, i64 0, !dbg !673
  %5 = load i8, i8* %arrayidx6, align 2, !dbg !675
  %inc = add i8 %5, 1, !dbg !675
  store i8 %inc, i8* %arrayidx6, align 2, !dbg !675
  %6 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !676
  %category_offsets = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %6, i32 0, i32 7, !dbg !677
  %arrayidx7 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets, i64 0, i64 0, !dbg !676
  store i16 2488, i16* %arrayidx7, align 2, !dbg !678
  %7 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !679
  %category_offsets8 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %7, i32 0, i32 7, !dbg !680
  %arrayidx9 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets8, i64 0, i64 1, !dbg !679
  store i16 2576, i16* %arrayidx9, align 2, !dbg !681
  %8 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !682
  %category_offsets10 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %8, i32 0, i32 7, !dbg !683
  %arrayidx11 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets10, i64 0, i64 2, !dbg !682
  store i16 2600, i16* %arrayidx11, align 2, !dbg !684
  %9 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !685
  %category_offsets12 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %9, i32 0, i32 7, !dbg !686
  %arrayidx13 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets12, i64 0, i64 3, !dbg !685
  store i16 2776, i16* %arrayidx13, align 2, !dbg !687
  %10 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !688
  %category_offsets14 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %10, i32 0, i32 7, !dbg !689
  %arrayidx15 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets14, i64 0, i64 5, !dbg !688
  store i16 3176, i16* %arrayidx15, align 2, !dbg !690
  %11 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !691
  %tbl8ctype = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %11, i32 0, i32 0, !dbg !692
  %12 = bitcast [420 x i8]* %tbl8ctype to i8*, !dbg !693
  %13 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !694
  %tbl8ctype16 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %13, i32 0, i32 13, !dbg !695
  store i8* %12, i8** %tbl8ctype16, align 8, !dbg !696
  %14 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !697
  %tbl8uplow = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %14, i32 0, i32 1, !dbg !698
  %15 = bitcast [504 x i8]* %tbl8uplow to i8*, !dbg !699
  %16 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !700
  %tbl8uplow17 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %16, i32 0, i32 15, !dbg !701
  store i8* %15, i8** %tbl8uplow17, align 8, !dbg !702
  %17 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !703
  %tbl8c2wc = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %17, i32 0, i32 2, !dbg !704
  %18 = bitcast [1760 x i16]* %tbl8c2wc to i16*, !dbg !705
  %19 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !706
  %tbl8c2wc18 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %19, i32 0, i32 17, !dbg !707
  store i16* %18, i16** %tbl8c2wc18, align 8, !dbg !708
  %20 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !709
  %tbl8wc2c = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %20, i32 0, i32 3, !dbg !710
  %21 = bitcast [4528 x i8]* %tbl8wc2c to i8*, !dbg !711
  %22 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !712
  %tbl8wc2c19 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %22, i32 0, i32 19, !dbg !713
  store i8* %21, i8** %tbl8wc2c19, align 8, !dbg !714
  %23 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !715
  %tblwctype = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %23, i32 0, i32 4, !dbg !716
  %24 = bitcast [3604 x i8]* %tblwctype to i8*, !dbg !717
  %25 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !718
  %tblwctype20 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %25, i32 0, i32 21, !dbg !719
  store i8* %24, i8** %tblwctype20, align 8, !dbg !720
  %26 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !721
  %tblwuplow = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %26, i32 0, i32 5, !dbg !722
  %27 = bitcast [1680 x i8]* %tblwuplow to i8*, !dbg !723
  %28 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !724
  %tblwuplow21 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %28, i32 0, i32 22, !dbg !725
  store i8* %27, i8** %tblwuplow21, align 8, !dbg !726
  %29 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !727
  %tblwuplow_diff = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %29, i32 0, i32 6, !dbg !728
  %30 = bitcast [196 x i16]* %tblwuplow_diff to i16*, !dbg !729
  %31 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !730
  %tblwuplow_diff22 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %31, i32 0, i32 23, !dbg !731
  store i16* %30, i16** %tblwuplow_diff22, align 8, !dbg !732
  %32 = load i16*, i16** @__C_ctype_b, align 8, !dbg !733
  %33 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !734
  %__ctype_b = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %33, i32 0, i32 0, !dbg !735
  store i16* %32, i16** %__ctype_b, align 8, !dbg !736
  %34 = load i16*, i16** @__C_ctype_tolower, align 8, !dbg !737
  %35 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !738
  %__ctype_tolower = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %35, i32 0, i32 1, !dbg !739
  store i16* %34, i16** %__ctype_tolower, align 8, !dbg !740
  %36 = load i16*, i16** @__C_ctype_toupper, align 8, !dbg !741
  %37 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !742
  %__ctype_toupper = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %37, i32 0, i32 2, !dbg !743
  store i16* %36, i16** %__ctype_toupper, align 8, !dbg !744
  %38 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !745
  %code2flag = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %38, i32 0, i32 20, !dbg !746
  store i16* getelementptr inbounds ([16 x i16], [16 x i16]* @__code2flag, i64 0, i64 0), i16** %code2flag, align 8, !dbg !747
  %39 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !748
  %call23 = call i32 @_locale_set_l(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), %struct.__uclibc_locale_struct.160* %39) #11, !dbg !749
  ret void, !dbg !750
  %retval = alloca i32, align 4
  %p.addr = alloca i8*, align 8
  %base.addr = alloca %struct.__uclibc_locale_struct.160*, align 8
  %x = alloca i8**, align 8
  %s = alloca i8*, align 8
  %stp = alloca i64*, align 8
  %r = alloca i8*, align 8
  %io = alloca i16*, align 8
  %ii = alloca i16*, align 8
  %d = alloca i8*, align 8
  %row = alloca i32, align 4
  %crow = alloca i32, align 4
  %len = alloca i32, align 4
  %c = alloca i32, align 4
  %i = alloca i32, align 4
  %newcol = alloca %struct.__collate_t.159, align 8
  %c8b = alloca %struct.__codeset_8_bit_t.161*, align 8
  %u = alloca i32, align 4
  %m = alloca i16, align 2
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !1060, metadata !DIExpression()), !dbg !1061
  store %struct.__uclibc_locale_struct.160* %base, %struct.__uclibc_locale_struct.160** %base.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__uclibc_locale_struct.160** %base.addr, metadata !1062, metadata !DIExpression()), !dbg !1063
  call void @llvm.dbg.declare(metadata i8*** %x, metadata !1064, metadata !DIExpression()), !dbg !1065
  call void @llvm.dbg.declare(metadata i8** %s, metadata !1066, metadata !DIExpression()), !dbg !1067
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !668
  %cur_locale = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %0, i32 0, i32 6, !dbg !669
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale, i64 0, i64 0, !dbg !668
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 1, !dbg !670
  store i8* %add.ptr, i8** %s, align 8, !dbg !667
  call void @llvm.dbg.declare(metadata i64** %stp, metadata !1071, metadata !DIExpression()), !dbg !1074
  call void @llvm.dbg.declare(metadata i8** %r, metadata !1075, metadata !DIExpression()), !dbg !1076
  call void @llvm.dbg.declare(metadata i16** %io, metadata !1077, metadata !DIExpression()), !dbg !1078
  call void @llvm.dbg.declare(metadata i16** %ii, metadata !1079, metadata !DIExpression()), !dbg !1080
  call void @llvm.dbg.declare(metadata i8** %d, metadata !1081, metadata !DIExpression()), !dbg !1082
  call void @llvm.dbg.declare(metadata i32* %row, metadata !1083, metadata !DIExpression()), !dbg !1084
  call void @llvm.dbg.declare(metadata i32* %crow, metadata !1085, metadata !DIExpression()), !dbg !1086
  call void @llvm.dbg.declare(metadata i32* %len, metadata !1087, metadata !DIExpression()), !dbg !1088
  call void @llvm.dbg.declare(metadata i32* %c, metadata !1089, metadata !DIExpression()), !dbg !1090
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1091, metadata !DIExpression()), !dbg !1092
  store i32 0, i32* %i, align 4, !dbg !692
  call void @llvm.dbg.declare(metadata %struct.__collate_t.159* %newcol, metadata !1093, metadata !DIExpression()), !dbg !1094
  %1 = load i8*, i8** %p.addr, align 8, !dbg !695
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i32 1, !dbg !695
: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.  store i8* %incdec.ptr, i8** %p.addr, align 8, !dbg !695
  %index2weight = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %newcol, i32 0, i32 23, !dbg !696
  store i16* null, i16** %index2weight, align 8, !dbg !697
  %2 = load i8*, i8** %p.addr, align 8, !dbg !698
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 8, !dbg !698
  %3 = load i8, i8* %arrayidx, align 1, !dbg !698
  %conv = zext i8 %3 to i32, !dbg !698
  %4 = load i8*, i8** %s, align 8, !dbg !700
  %arrayidx1 = getelementptr inbounds i8, i8* %4, i64 8, !dbg !700
  %5 = load i8, i8* %arrayidx1, align 1, !dbg !700
  %conv2 = zext i8 %5 to i32, !dbg !700
  %cmp = icmp ne i32 %conv, %conv2, !dbg !701
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !702
  %6 = load i8*, i8** %p.addr, align 8, !dbg !703
  %arrayidx4 = getelementptr inbounds i8, i8* %6, i64 9, !dbg !703
  %7 = load i8, i8* %arrayidx4, align 1, !dbg !703
  %conv5 = zext i8 %7 to i32, !dbg !703
  %8 = load i8*, i8** %s, align 8, !dbg !704
  %arrayidx6 = getelementptr inbounds i8, i8* %8, i64 9, !dbg !704
  %9 = load i8, i8* %arrayidx6, align 1, !dbg !704
  %conv7 = zext i8 %9 to i32, !dbg !704
  %cmp8 = icmp ne i32 %conv5, %conv7, !dbg !705
  br i1 %cmp8, label %if.then, label %if.end22, !dbg !706
  %10 = load i8*, i8** %p.addr, align 8, !dbg !707
  %11 = load i8, i8* %10, align 1, !dbg !709
  %conv10 = zext i8 %11 to i32, !dbg !709
  %and = and i32 %conv10, 127, !dbg !710
  %shl = shl i32 %and, 7, !dbg !711
  %12 = load i8*, i8** %p.addr, align 8, !dbg !712
  %arrayidx11 = getelementptr inbounds i8, i8* %12, i64 1, !dbg !712
  %13 = load i8, i8* %arrayidx11, align 1, !dbg !712
  %conv12 = zext i8 %13 to i32, !dbg !712
  %and13 = and i32 %conv12, 127, !dbg !713
  %add = add nsw i32 %shl, %and13, !dbg !714
  store i32 %add, i32* %row, align 4, !dbg !715
  %14 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !716
  %locales = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %14, i32 0, i32 31, !dbg !718
  %15 = load i32, i32* %row, align 4, !dbg !719
  %mul = mul nsw i32 9, %15, !dbg !720
  %add14 = add nsw i32 %mul, 3, !dbg !721
  %add15 = add nsw i32 %add14, 4, !dbg !722
  %idxprom = sext i32 %add15 to i64, !dbg !716
  %arrayidx16 = getelementptr inbounds [2826 x i8], [2826 x i8]* %locales, i64 0, i64 %idxprom, !dbg !716
  %16 = load i8, i8* %arrayidx16, align 1, !dbg !716
  %conv17 = zext i8 %16 to i32, !dbg !716
  %call = call i32 @init_cur_collate(i32 %conv17, %struct.__collate_t.159* %newcol) #10, !dbg !723
  %tobool = icmp ne i32 %call, 0, !dbg !723
  br i1 %tobool, label %if.end, label %if.then18, !dbg !724
  store i32 0, i32* %retval, align 4, !dbg !725
  br label %return, !dbg !725
  %17 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !727
  %collate = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %17, i32 0, i32 118, !dbg !728
  %index2weight19 = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %collate, i32 0, i32 23, !dbg !729
  %18 = load i16*, i16** %index2weight19, align 8, !dbg !729
  %19 = bitcast i16* %18 to i8*, !dbg !727
  call void @free(i8* %19) #11, !dbg !730
  %20 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !731
  %collate20 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %20, i32 0, i32 118, !dbg !732
  %21 = bitcast %struct.__collate_t.159* %collate20 to i8*, !dbg !733
  %22 = bitcast %struct.__collate_t.159* %newcol to i8*, !dbg !734
  %call21 = call i8* @memcpy(i8* %21, i8* %22, i64 112) #11, !dbg !735
  br label %if.end22, !dbg !736
  br label %do.body, !dbg !737
  %23 = load i8*, i8** %p.addr, align 8, !dbg !738
  %24 = load i8, i8* %23, align 1, !dbg !741
  %conv23 = zext i8 %24 to i32, !dbg !741
  %25 = load i8*, i8** %s, align 8, !dbg !742
  %26 = load i8, i8* %25, align 1, !dbg !743
  %conv24 = zext i8 %26 to i32, !dbg !743
  %cmp25 = icmp ne i32 %conv23, %conv24, !dbg !744
  br i1 %cmp25, label %if.then34, label %lor.lhs.false27, !dbg !745
  %27 = load i8*, i8** %p.addr, align 8, !dbg !746
  %arrayidx28 = getelementptr inbounds i8, i8* %27, i64 1, !dbg !746
  %28 = load i8, i8* %arrayidx28, align 1, !dbg !746
  %conv29 = zext i8 %28 to i32, !dbg !746
  %29 = load i8*, i8** %s, align 8, !dbg !747
  %arrayidx30 = getelementptr inbounds i8, i8* %29, i64 1, !dbg !747
  %30 = load i8, i8* %arrayidx30, align 1, !dbg !747
  %conv31 = zext i8 %30 to i32, !dbg !747
  %cmp32 = icmp ne i32 %conv29, %conv31, !dbg !748
  br i1 %cmp32, label %if.then34, label %if.end313, !dbg !749
  %31 = load i8*, i8** %p.addr, align 8, !dbg !750
  %32 = load i8, i8* %31, align 1, !dbg !752
  %conv35 = zext i8 %32 to i32, !dbg !752
  %and36 = and i32 %conv35, 127, !dbg !753
  %shl37 = shl i32 %and36, 7, !dbg !754
  %33 = load i8*, i8** %p.addr, align 8, !dbg !755
  %arrayidx38 = getelementptr inbounds i8, i8* %33, i64 1, !dbg !755
  %34 = load i8, i8* %arrayidx38, align 1, !dbg !755
  %conv39 = zext i8 %34 to i32, !dbg !755
  %and40 = and i32 %conv39, 127, !dbg !756
  %add41 = add nsw i32 %shl37, %and40, !dbg !757
  store i32 %add41, i32* %row, align 4, !dbg !758
  %35 = load i8*, i8** %p.addr, align 8, !dbg !759
  %36 = load i8, i8* %35, align 1, !dbg !760
  %37 = load i8*, i8** %s, align 8, !dbg !761
  store i8 %36, i8* %37, align 1, !dbg !762
  %38 = load i8*, i8** %p.addr, align 8, !dbg !763
  %arrayidx42 = getelementptr inbounds i8, i8* %38, i64 1, !dbg !763
  %39 = load i8, i8* %arrayidx42, align 1, !dbg !763
  %40 = load i8*, i8** %s, align 8, !dbg !764
  %arrayidx43 = getelementptr inbounds i8, i8* %40, i64 1, !dbg !764
  store i8 %39, i8* %arrayidx43, align 1, !dbg !765
  %41 = load i32, i32* %i, align 4, !dbg !766
  %cmp44 = icmp ne i32 %41, 4, !dbg !768
  br i1 %cmp44, label %land.lhs.true, label %if.end92, !dbg !769
  %42 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !770
  %lc_common_item_offsets_LEN = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %42, i32 0, i32 29, !dbg !771
  %43 = load i32, i32* %i, align 4, !dbg !772
  %idxprom46 = sext i32 %43 to i64, !dbg !770
  %arrayidx47 = getelementptr inbounds [6 x i8], [6 x i8]* %lc_common_item_offsets_LEN, i64 0, i64 %idxprom46, !dbg !770
  %44 = load i8, i8* %arrayidx47, align 1, !dbg !770
  %conv48 = zext i8 %44 to i32, !dbg !770
  store i32 %conv48, i32* %len, align 4, !dbg !773
  %cmp49 = icmp ne i32 %conv48, 0, !dbg !774
  br i1 %cmp49, label %if.then51, label %if.end92, !dbg !775
  %45 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !776
  %locales52 = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %45, i32 0, i32 31, !dbg !778
  %46 = load i32, i32* %row, align 4, !dbg !779
  %mul53 = mul nsw i32 9, %46, !dbg !780
  %add54 = add nsw i32 %mul53, 3, !dbg !781
  %47 = load i32, i32* %i, align 4, !dbg !782
  %add55 = add nsw i32 %add54, %47, !dbg !783
  %idxprom56 = sext i32 %add55 to i64, !dbg !776
  %arrayidx57 = getelementptr inbounds [2826 x i8], [2826 x i8]* %locales52, i64 0, i64 %idxprom56, !dbg !776
  %48 = load i8, i8* %arrayidx57, align 1, !dbg !776
44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack  %conv58 = zext i8 %48 to i32, !dbg !776
  %49 = load i32, i32* %len, align 4, !dbg !784
  %mul59 = mul nsw i32 %conv58, %49, !dbg !785
  store i32 %mul59, i32* %crow, align 4, !dbg !786
  %50 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !787
  %51 = bitcast %struct.__uclibc_locale_struct.160* %50 to i8*, !dbg !788
  %52 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !789
  %category_offsets = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %52, i32 0, i32 7, !dbg !790
  %53 = load i32, i32* %i, align 4, !dbg !791
  %idxprom60 = sext i32 %53 to i64, !dbg !789
  %arrayidx61 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets, i64 0, i64 %idxprom60, !dbg !789
  %54 = load i16, i16* %arrayidx61, align 2, !dbg !789
  %conv62 = zext i16 %54 to i32, !dbg !789
  %idx.ext = sext i32 %conv62 to i64, !dbg !792
  %add.ptr63 = getelementptr inbounds i8, i8* %51, i64 %idx.ext, !dbg !792
  %55 = bitcast i8* %add.ptr63 to i8**, !dbg !793
  store i8** %55, i8*** %x, align 8, !dbg !794
  %56 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !795
  %lc_common_tbl_offsets = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %56, i32 0, i32 30, !dbg !796
  %arraydecay64 = getelementptr inbounds [24 x i64], [24 x i64]* %lc_common_tbl_offsets, i64 0, i64 0, !dbg !795
  %57 = load i32, i32* %i, align 4, !dbg !797
  %mul65 = mul nsw i32 4, %57, !dbg !798
  %idx.ext66 = sext i32 %mul65 to i64, !dbg !799
  %add.ptr67 = getelementptr inbounds i64, i64* %arraydecay64, i64 %idx.ext66, !dbg !799
  store i64* %add.ptr67, i64** %stp, align 8, !dbg !800
  %58 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !801
  %59 = bitcast %struct.__locale_mmap_t.162* %58 to i8*, !dbg !802
  %60 = load i64*, i64** %stp, align 8, !dbg !803
  %61 = load i64, i64* %60, align 8, !dbg !804
  %add.ptr68 = getelementptr inbounds i8, i8* %59, i64 %61, !dbg !805
  store i8* %add.ptr68, i8** %r, align 8, !dbg !806
  %62 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !807
  %63 = bitcast %struct.__locale_mmap_t.162* %62 to i8*, !dbg !808
  %64 = load i64*, i64** %stp, align 8, !dbg !809
  %incdec.ptr69 = getelementptr inbounds i64, i64* %64, i32 1, !dbg !809
  store i64* %incdec.ptr69, i64** %stp, align 8, !dbg !809
  %65 = load i64, i64* %incdec.ptr69, align 8, !dbg !810
  %add.ptr70 = getelementptr inbounds i8, i8* %63, i64 %65, !dbg !811
  %66 = bitcast i8* %add.ptr70 to i16*, !dbg !812
  store i16* %66, i16** %io, align 8, !dbg !813
  %67 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !814
  %68 = bitcast %struct.__locale_mmap_t.162* %67 to i8*, !dbg !815
  %69 = load i64*, i64** %stp, align 8, !dbg !816
  %incdec.ptr71 = getelementptr inbounds i64, i64* %69, i32 1, !dbg !816
  store i64* %incdec.ptr71, i64** %stp, align 8, !dbg !816
  %70 = load i64, i64* %incdec.ptr71, align 8, !dbg !817
  %add.ptr72 = getelementptr inbounds i8, i8* %68, i64 %70, !dbg !818
  %71 = bitcast i8* %add.ptr72 to i16*, !dbg !819
  store i16* %71, i16** %ii, align 8, !dbg !820
  %72 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !821
  %73 = bitcast %struct.__locale_mmap_t.162* %72 to i8*, !dbg !822
  %74 = load i64*, i64** %stp, align 8, !dbg !823
  %incdec.ptr73 = getelementptr inbounds i64, i64* %74, i32 1, !dbg !823
  store i64* %incdec.ptr73, i64** %stp, align 8, !dbg !823
  %75 = load i64, i64* %incdec.ptr73, align 8, !dbg !824
  %add.ptr74 = getelementptr inbounds i8, i8* %73, i64 %75, !dbg !825
  store i8* %add.ptr74, i8** %d, align 8, !dbg !826
  store i32 0, i32* %c, align 4, !dbg !827
  br label %for.cond, !dbg !829
  %76 = load i32, i32* %c, align 4, !dbg !830
  %77 = load i32, i32* %len, align 4, !dbg !832
  %cmp75 = icmp slt i32 %76, %77, !dbg !833
  br i1 %cmp75, label %for.body, label %for.end, !dbg !834
  %78 = load i8*, i8** %d, align 8, !dbg !835
  %79 = load i16*, i16** %ii, align 8, !dbg !837
  %80 = load i8*, i8** %r, align 8, !dbg !838
  %81 = load i32, i32* %crow, align 4, !dbg !839
  %82 = load i32, i32* %c, align 4, !dbg !840
  %add77 = add nsw i32 %81, %82, !dbg !841
  %idxprom78 = sext i32 %add77 to i64, !dbg !838
  %arrayidx79 = getelementptr inbounds i8, i8* %80, i64 %idxprom78, !dbg !838
  %83 = load i8, i8* %arrayidx79, align 1, !dbg !838
  %conv80 = zext i8 %83 to i32, !dbg !838
  %84 = load i16*, i16** %io, align 8, !dbg !842
  %85 = load i32, i32* %c, align 4, !dbg !843
  %idxprom81 = sext i32 %85 to i64, !dbg !842
  %arrayidx82 = getelementptr inbounds i16, i16* %84, i64 %idxprom81, !dbg !842
  %86 = load i16, i16* %arrayidx82, align 2, !dbg !842
  %conv83 = zext i16 %86 to i32, !dbg !842
  %add84 = add nsw i32 %conv80, %conv83, !dbg !844
  %idxprom85 = sext i32 %add84 to i64, !dbg !837
  %arrayidx86 = getelementptr inbounds i16, i16* %79, i64 %idxprom85, !dbg !837
  %87 = load i16, i16* %arrayidx86, align 2, !dbg !837
  %conv87 = zext i16 %87 to i32, !dbg !837
  %idx.ext88 = sext i32 %conv87 to i64, !dbg !845
  %add.ptr89 = getelementptr inbounds i8, i8* %78, i64 %idx.ext88, !dbg !845
  %88 = load i8**, i8*** %x, align 8, !dbg !846
  %89 = load i32, i32* %c, align 4, !dbg !847
  %idx.ext90 = sext i32 %89 to i64, !dbg !848
  %add.ptr91 = getelementptr inbounds i8*, i8** %88, i64 %idx.ext90, !dbg !848
  store i8* %add.ptr89, i8** %add.ptr91, align 8, !dbg !849
  br label %for.inc, !dbg !850
  %90 = load i32, i32* %c, align 4, !dbg !851
  %inc = add nsw i32 %90, 1, !dbg !851
  store i32 %inc, i32* %c, align 4, !dbg !851
  br label %for.cond, !dbg !852, !llvm.loop !853
  br label %if.end92, !dbg !855
  %91 = load i32, i32* %i, align 4, !dbg !856
  %cmp93 = icmp eq i32 %91, 0, !dbg !858
  br i1 %cmp93, label %if.then95, label %if.else295, !dbg !859
  %92 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !860
  %locales96 = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %92, i32 0, i32 31, !dbg !862
  %93 = load i32, i32* %row, align 4, !dbg !863
  %mul97 = mul nsw i32 9, %93, !dbg !864
  %add98 = add nsw i32 %mul97, 2, !dbg !865
  %idxprom99 = sext i32 %add98 to i64, !dbg !860
  %arrayidx100 = getelementptr inbounds [2826 x i8], [2826 x i8]* %locales96, i64 0, i64 %idxprom99, !dbg !860
  %94 = load i8, i8* %arrayidx100, align 1, !dbg !860
  %conv101 = zext i8 %94 to i32, !dbg !860
  store i32 %conv101, i32* %c, align 4, !dbg !866
  %95 = load i32, i32* %c, align 4, !dbg !867
  %cmp102 = icmp sle i32 %95, 2, !dbg !869
  br i1 %cmp102, label %if.then104, label %if.else112, !dbg !870
  %96 = load i32, i32* %c, align 4, !dbg !871
  %cmp105 = icmp eq i32 %96, 2, !dbg !874
  br i1 %cmp105, label %if.then107, label %if.else, !dbg !875
  %97 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !876
  %codeset = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %97, i32 0, i32 38, !dbg !878
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @utf8, i64 0, i64 0), i8** %codeset, align 8, !dbg !879
  %98 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !880
  %encoding = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %98, i32 0, i32 9, !dbg !881
  store i8 1, i8* %encoding, align 8, !dbg !882
  %99 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !883
  %mb_cur_max = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %99, i32 0, i32 10, !dbg !884
: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.190
//Instructions in stack: Num.191
//Instructions in stack: Num.192
//Instructions in stack: Num.193
//Instructions in stack: Num.194
//Instructions in stack: Num.195
//Instructions in stack: Num.196
//Instructions in stack: Num.197
//Instructions in stack: Num.198
//Instructions in stack: Num.199
//Instructions in stack: Num.200
//Instructions in stack: Num.201
//Instructions in stack: Num.202
//Instructions in stack: Num.203
//Instructions in stack: Num.204
//Instructions in stack: Num.205
//Instructions in stack: Num.206
//Instructions in stack: Num.207
//Instructions in stack: Num.208
//Instructions in stack: Num.209
//Instructions in stack: Num.210
//Instructions in stack: Num.211
//Instructions in stack: Num.212
//Instructions in stack: Num.213
//Instructions in stack: Num.214
//Instructions in stack: Num.215
//Instructions in stack: Num.216
//Instructions in stack: Num.217
//Instructions in stack: Num.218
//Instructions in stack: Num.219
//Instructions in stack: Num.220
//Instructions in stack: Num.221
//Instructions in stack: Num.222
//Instructions in stack: Num.223
//Instructions in stack: Num.224
//Instructions in stack: Num.225
//Instructions in stack: Num.226
//Instructions in stack: Num.227
//Instructions in stack: Num.228
//Instructions in stack: Num.229
//Instructions in stack: Num.230
//Instructions in stack: Num.231
//Instructions in stack: Num.232
//Instructions in stack: Num.233
//Instructions in stack: Num.234
//Instructions in stack: Num.235
//Instructions in stack: Num.236
//Instructions in stack: Num.237
//Instructions in stack: Num.238
//Instructions in stack: Num.239
//Instructions in stack: Num.240
//Instructions in stack: Num.241
//Instructions in stack: Num.242
//Instructions in stack: Num.243
//Instructions in stack: Num.244
//Instructions in stack: Num.245
//Instructions in stack: Num.246
//Instructions in stack: Num.247
//Instructions in stack: Num.248
//Instructions in stack: Num.249
//Instructions in stack: Num.250
//Instructions in stack: Num.251
//Instructions in stack: Num.252
//Instructions in stack: Num.253
//Instructions in stack: Num.254
//Instructions in stack: Num.255
//Instructions in stack: Num.256
//Instructions in stack: Num.257
//Instructions in stack: Num.258
//Instructions in stack: Num.259
//Instructions in stack: Num.260
//Instructions in stack: Num.261
//Instructions in stack: Num.262
//Instructions in stack: Num.263
//Instructions in stack: Num.264
//Instructions in stack: Num.265
//Instructions in stack: Num.266
//Instructions in stack: Num.267
//Instructions in stack: Num.268
//Instructions in stack: Num.269
//Instructions in stack: Num.270
//Instructions in stack: Num.271
//Instructions in stack: Num.272
//Instructions in stack: Num.273
//Instructions in stack: Num.274
//Instructions in stack: Num.275
//Instructions in stack: Num.276
//Instructions in stack: Num.277
//Instructions in stack: Num.278
//Instructions in stack: Num.279
//Instructions in stack: Num.280
//Instructions in stack: Num.281
//Instructions in stack: Num.282
//Instructions in stack: Num.283
//Instructions in stack: Num.284
//Instructions in stack: Num.285
//Instructions in stack: Num.286
//Instructions in stack: Num.287
//Instructions in stack: Num.288
//Instructions in stack: Num.289
//Instructions in stack: Num.290
//Instructions in stack: Num.291
//Instructions in stack: Num.292
//Instructions in stack: Num.293
//Instructions in stack: Nu  store i8 6, i8* %mb_cur_max, align 1, !dbg !885
  br label %if.end111, !dbg !886
  %100 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !887
  %codeset108 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %100, i32 0, i32 38, !dbg !889
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @ascii, i64 0, i64 0), i8** %codeset108, align 8, !dbg !890
  %101 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !891
  %encoding109 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %101, i32 0, i32 9, !dbg !892
  store i8 0, i8* %encoding109, align 8, !dbg !893
  %102 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !894
  %mb_cur_max110 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %102, i32 0, i32 10, !dbg !895
  store i8 1, i8* %mb_cur_max110, align 1, !dbg !896
  br label %if.end111
  br label %if.end280, !dbg !897
  call void @llvm.dbg.declare(metadata %struct.__codeset_8_bit_t.161** %c8b, metadata !1298, metadata !DIExpression()), !dbg !1310
  %103 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !911
  %codeset_list = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %103, i32 0, i32 35, !dbg !911
  %arraydecay113 = getelementptr inbounds [255 x i8], [255 x i8]* %codeset_list, i64 0, i64 0, !dbg !911
  store i8* %arraydecay113, i8** %r, align 8, !dbg !912
  %104 = load i8*, i8** %r, align 8, !dbg !913
  %105 = load i8*, i8** %r, align 8, !dbg !914
  %106 = load i32, i32* %c, align 4, !dbg !915
  %sub = sub nsw i32 %106, 3, !dbg !915
  store i32 %sub, i32* %c, align 4, !dbg !915
  %idxprom114 = sext i32 %sub to i64, !dbg !914
  %arrayidx115 = getelementptr inbounds i8, i8* %105, i64 %idxprom114, !dbg !914
  %107 = load i8, i8* %arrayidx115, align 1, !dbg !914
  %conv116 = zext i8 %107 to i32, !dbg !914
  %idx.ext117 = sext i32 %conv116 to i64, !dbg !916
  %add.ptr118 = getelementptr inbounds i8, i8* %104, i64 %idx.ext117, !dbg !916
  %108 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !917
  %codeset119 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %108, i32 0, i32 38, !dbg !918
  store i8* %add.ptr118, i8** %codeset119, align 8, !dbg !919
  %109 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !920
  %encoding120 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %109, i32 0, i32 9, !dbg !921
  store i8 2, i8* %encoding120, align 8, !dbg !922
  %110 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !923
  %mb_cur_max121 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %110, i32 0, i32 10, !dbg !924
  store i8 1, i8* %mb_cur_max121, align 1, !dbg !925
  %111 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !926
  %codeset_8_bit = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %111, i32 0, i32 12, !dbg !927
  %arraydecay122 = getelementptr inbounds [23 x %struct.__codeset_8_bit_t.161], [23 x %struct.__codeset_8_bit_t.161]* %codeset_8_bit, i64 0, i64 0, !dbg !926
  %112 = load i32, i32* %c, align 4, !dbg !928
  %idx.ext123 = sext i32 %112 to i64, !dbg !929
  %add.ptr124 = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %arraydecay122, i64 %idx.ext123, !dbg !929
  store %struct.__codeset_8_bit_t.161* %add.ptr124, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !930
  %113 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !931
  %idx8ctype = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %113, i32 0, i32 0, !dbg !932
  %arraydecay125 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8ctype, i64 0, i64 0, !dbg !931
  %114 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !933
  %idx8ctype126 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %114, i32 0, i32 12, !dbg !934
  store i8* %arraydecay125, i8** %idx8ctype126, align 8, !dbg !935
  %115 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !936
  %idx8uplow = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %115, i32 0, i32 1, !dbg !937
  %arraydecay127 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8uplow, i64 0, i64 0, !dbg !936
  %116 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !938
  %idx8uplow128 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %116, i32 0, i32 14, !dbg !939
  store i8* %arraydecay127, i8** %idx8uplow128, align 8, !dbg !940
  %117 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !941
  %idx8c2wc = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %117, i32 0, i32 2, !dbg !942
  %arraydecay129 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8c2wc, i64 0, i64 0, !dbg !941
  %118 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !943
  %idx8c2wc130 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %118, i32 0, i32 16, !dbg !944
  store i8* %arraydecay129, i8** %idx8c2wc130, align 8, !dbg !945
  %119 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !946
  %idx8wc2c = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %119, i32 0, i32 3, !dbg !947
  %arraydecay131 = getelementptr inbounds [38 x i8], [38 x i8]* %idx8wc2c, i64 0, i64 0, !dbg !946
  %120 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !948
  %idx8wc2c132 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %120, i32 0, i32 18, !dbg !949
  store i8* %arraydecay131, i8** %idx8wc2c132, align 8, !dbg !950
  %121 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !951
  %__ctype_b_data = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %121, i32 0, i32 3, !dbg !952
  %arraydecay133 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data, i64 0, i64 0, !dbg !951
  %122 = bitcast i16* %arraydecay133 to i8*, !dbg !951
  %123 = load i16*, i16** @__C_ctype_b, align 8, !dbg !953
  %add.ptr134 = getelementptr inbounds i16, i16* %123, i64 -128, !dbg !954
  %124 = bitcast i16* %add.ptr134 to i8*, !dbg !953
  %call135 = call i8* @memcpy(i8* %122, i8* %124, i64 768) #11, !dbg !955
  %125 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !956
  %__ctype_tolower_data = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %125, i32 0, i32 4, !dbg !957
  %arraydecay136 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data, i64 0, i64 0, !dbg !956
  %126 = bitcast i16* %arraydecay136 to i8*, !dbg !956
  %127 = load i16*, i16** @__C_ctype_tolower, align 8, !dbg !958
  %add.ptr137 = getelementptr inbounds i16, i16* %127, i64 -128, !dbg !959
  %128 = bitcast i16* %add.ptr137 to i8*, !dbg !958
  %call138 = call i8* @memcpy(i8* %126, i8* %128, i64 768) #11, !dbg !960
  %129 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !961
  %__ctype_toupper_data = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %129, i32 0, i32 5, !dbg !962
  %arraydecay139 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data, i64 0, i64 0, !dbg !961
  %130 = bitcast i16* %arraydecay139 to i8*, !dbg !961
  %131 = load i16*, i16** @__C_ctype_toupper, align 8, !dbg !963
  %add.ptr140 = getelementptr inbounds i16, i16* %131, i64 -128, !dbg !964
  %132 = bitcast i16* %add.ptr140 to i8*, !dbg !963
  %call141 = call i8* @memcpy(i8* %130, i8* %132, i64 768) #11, !dbg !965
  call void @llvm.dbg.declare(metadata i32* %u, metadata !1366, metadata !DIExpression()), !dbg !1368
  call void @llvm.dbg.declare(metadata i16* %m, metadata !1369, metadata !DIExpression()), !dbg !1370
  store i32 0, i32* %u, align 4, !dbg !971
  br label %for.cond142, !dbg !973
  %133 = load i32, i32* %u, align 4, !dbg !974
  %cmp143 = icmp slt i32 %133, 128, !dbg !976
  br i1 %cmp143, label %for.body145, label %for.end270, !dbg !977
  %134 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !978
  %tbl8ctype = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %134, i32 0, i32 13, !dbg !980
  %135 = load i8*, i8** %tbl8ctype, align 8, !dbg !980
  %136 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !981
  %idx8ctype146 = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %136, i32 0, i32 0, !dbg !982
  %137 = load i32, i32* %u, align 4, !dbg !983
  %shr = ashr i32 %137, 3, !dbg !984
  %idxprom147 = sext i32 %shr to i64, !dbg !981
  %arrayidx148 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8ctype146, i64 0, i64 %idxprom147, !dbg !981
  %138 = load i8, i8* %arrayidx148, align 1, !dbg !981
  %conv149 = zext i8 %138 to i32, !dbg !985
  %shl150 = shl i32 %conv149, 2, !dbg !986
  %139 = load i32, i32* %u, align 4, !dbg !987
  %and151 = and i32 %139, 7, !dbg !988
  %shr152 = ashr i32 %and151, 1, !dbg !989
  %add153 = add nsw i32 %shl150, %shr152, !dbg !990
  %idxprom154 = sext i32 %add153 to i64, !dbg !978
  %arrayidx155 = getelementptr inbounds i8, i8* %135, i64 %idxprom154, !dbg !978
  %140 = load i8, i8* %arrayidx155, align 1, !dbg !978
  %conv156 = zext i8 %140 to i32, !dbg !978
  store i32 %conv156, i32* %c, align 4, !dbg !991
  %141 = load i32, i32* %u, align 4, !dbg !992
  %and157 = and i32 %141, 1, !dbg !993
  %tobool158 = icmp ne i32 %and157, 0, !dbg !993
m.294
//Instructions in stack: Num.295
//Instructions in stack: Num.296
//Instructions in stack: Num.297
//Instructions in stack: Num.298
//Instructions in stack: Num.299
//Instructions in stack: Num.300
//Instructions in stack: Num.301
//Instructions in stack: Num.302
//Instructions in stack: Num.303
//Instructions in stack: Num.304
//Instructions in stack: Num.305
//Instructions in stack: Num.306
//Instructions in stack: Num.307
//Instructions in stack: Num.308
//Instructions in stack: Num.309
//Instructions in stack: Num.310
//Instructions in stack: Num.311
//Instructions in stack: Num.312
//Instructions in stack: Num.313
//Instructions in stack: Num.314
//Instructions in stack: Num.315
//Instructions in stack: Num.316
//Instructions in stack: Num.317
//Instructions in stack: Num.318
//Instructions in stack: Num.319
//Instructions in stack: Num.320
//Instructions in stack: Num.321
//Instructions in stack: Num.322
//Instructions in stack: Num.323
//Instructions in stack: Num.324
//Instructions in stack: Num.325
//Instructions in stack: Num.326
//Instructions in stack: Num.327
//Instructions in stack: Num.328
//Instructions in stack: Num.329
//Instructions in stack: Num.330
//Instructions in stack: Num.331
//Instructions in stack: Num.332
//Instructions in stack: Num.333
//Instructions in stack: Num.334
//Instructions in stack: Num.335
//Instructions in stack: Num.336
//Instructions in stack: Num.337
//Instructions in stack: Num.338
//Instructions in stack: Num.339
//Instructions in stack: Num.340
//Instructions in stack: Num.341
//Instructions in stack: Num.342
//Instructions in stack: Num.343
//Instructions in stack: Num.344
//Instructions in stack: Num.345
//Instructions in stack: Num.346
//Instructions in stack: Num.347
//Instructions in stack: Num.348
//Instructions in stack: Num.349
//Instructions in stack: Num.350
//Instructions in stack: Num.351
//Instructions in stack: Num.352
//Instructions in stack: Num.353
//Instructions in stack: Num.354
//Instructions in stack: Num.355
//Instructions in stack: Num.356
//Instructions in stack: Num.357
//Instructions in stack: Num.358
//Instructions in stack: Num.359
//Instructions in stack: Num.360
//Instructions in stack: Num.361
//Instructions in stack: Num.362
//Instructions in stack: Num.363
//Instructions in stack: Num.364
//Instructions in stack: Num.365
//Instructions in stack: Num.366
//Instructions in stack: Num.367
//Instructions in stack: Num.368
//Instructions in stack: Num.369
//Instructions in stack: Num.370
//Instructions in stack: Num.371
//Instructions in stack: Num.372
//Instructions in stack: Num.373
//Instructions in stack: Num.374
//Instructions in stack: Num.375
//Instructions in stack: Num.376
//Instructions in stack: Num.377
//Instructions in stack: Num.378
//Instructions in stack: Num.379
//Instructions in stack: Num.380
//Instructions in stack: Num.381
//Instructions in stack: Num.382
//Instructions in stack: Num.383
//Instructions in stack: Num.384
//Instructions in stack: Num.385
//Instructions in stack: Num.386
//Instructions in stack: Num.387
//Instructions in stack: Num.388
//Instructions in stack: Num.389
//Instructions in stack: Num.390
//Instructions in stack: Num.391
//Instructions in stack: Num.392
//Instructions in stack: Num.393
//Instructions in stack: Num.394
//Instructions in stack: Num.395
//Instructions in stack: Num.396
//Instructions in stack: Num.397
//Instructions in stack: Num.398
//Instructions in stack: Num.399
//Instructions in stack: Num.400
//Instructions in stack: Num.401
//Instructions in stack: Num.402
//Instructions in stack: Num.403
//Instructions in stack: Num.404
//Instructions in stack: Num.405
//Instructions in stack: Num.406
//Instructions in stack: Num.407
//Instructions in stack: Num.408
//Instructions in stack: Num.409
//Instructions in stack: Num.410
//Instructions in stack: Num.411
//Instructions in stack: Num.412
//Instructions in stack: Num.413
//Instructions in stack: Num.414
//Instructions in stack: Num.415
//Instructions in stack: Num.416
//Instructions in stack: Num.417
//Instructions in stack: Num.41  br i1 %tobool158, label %cond.true, label %cond.false, !dbg !994
  %142 = load i32, i32* %c, align 4, !dbg !995
  %shr159 = ashr i32 %142, 4, !dbg !996
  br label %cond.end, !dbg !994
  %143 = load i32, i32* %c, align 4, !dbg !997
  %and160 = and i32 %143, 15, !dbg !998
  br label %cond.end, !dbg !994
  %cond = phi i32 [ %shr159, %cond.true ], [ %and160, %cond.false ], !dbg !994
  store i32 %cond, i32* %c, align 4, !dbg !999
  %144 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1000
  %code2flag = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %144, i32 0, i32 20, !dbg !1001
  %145 = load i16*, i16** %code2flag, align 8, !dbg !1001
  %146 = load i32, i32* %c, align 4, !dbg !1002
  %idxprom161 = sext i32 %146 to i64, !dbg !1000
  %arrayidx162 = getelementptr inbounds i16, i16* %145, i64 %idxprom161, !dbg !1000
  %147 = load i16, i16* %arrayidx162, align 2, !dbg !1000
  store i16 %147, i16* %m, align 2, !dbg !1003
  %148 = load i16, i16* %m, align 2, !dbg !1004
  %149 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1005
  %__ctype_b_data163 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %149, i32 0, i32 3, !dbg !1006
  %150 = load i32, i32* %u, align 4, !dbg !1007
  %add164 = add nsw i32 256, %150, !dbg !1008
  %idxprom165 = sext i32 %add164 to i64, !dbg !1005
  %arrayidx166 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data163, i64 0, i64 %idxprom165, !dbg !1005
  store i16 %148, i16* %arrayidx166, align 2, !dbg !1009
  %151 = load i32, i32* %u, align 4, !dbg !1010
  %add167 = add nsw i32 128, %151, !dbg !1012
  %conv168 = trunc i32 %add167 to i8, !dbg !1013
  %conv169 = sext i8 %conv168 to i32, !dbg !1014
  %cmp170 = icmp ne i32 %conv169, -1, !dbg !1015
  br i1 %cmp170, label %if.then172, label %if.end180, !dbg !1016
  %152 = load i16, i16* %m, align 2, !dbg !1017
  %153 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1019
  %__ctype_b_data173 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %153, i32 0, i32 3, !dbg !1020
  %154 = load i32, i32* %u, align 4, !dbg !1021
  %add174 = add nsw i32 128, %154, !dbg !1022
  %conv175 = trunc i32 %add174 to i8, !dbg !1023
  %conv176 = sext i8 %conv175 to i32, !dbg !1024
  %add177 = add nsw i32 128, %conv176, !dbg !1025
  %idxprom178 = sext i32 %add177 to i64, !dbg !1019
  %arrayidx179 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data173, i64 0, i64 %idxprom178, !dbg !1019
  store i16 %152, i16* %arrayidx179, align 2, !dbg !1026
  br label %if.end180, !dbg !1027
  %155 = load i32, i32* %u, align 4, !dbg !1028
  %add181 = add nsw i32 128, %155, !dbg !1029
  %conv182 = trunc i32 %add181 to i16, !dbg !1030
  %156 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1031
  %__ctype_tolower_data183 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %156, i32 0, i32 4, !dbg !1032
  %157 = load i32, i32* %u, align 4, !dbg !1033
  %add184 = add nsw i32 256, %157, !dbg !1034
  %idxprom185 = sext i32 %add184 to i64, !dbg !1031
  %arrayidx186 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data183, i64 0, i64 %idxprom185, !dbg !1031
  store i16 %conv182, i16* %arrayidx186, align 2, !dbg !1035
  %158 = load i32, i32* %u, align 4, !dbg !1036
  %add187 = add nsw i32 128, %158, !dbg !1037
  %conv188 = trunc i32 %add187 to i16, !dbg !1038
  %159 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1039
  %__ctype_toupper_data189 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %159, i32 0, i32 5, !dbg !1040
  %160 = load i32, i32* %u, align 4, !dbg !1041
  %add190 = add nsw i32 256, %160, !dbg !1042
  %idxprom191 = sext i32 %add190 to i64, !dbg !1039
  %arrayidx192 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data189, i64 0, i64 %idxprom191, !dbg !1039
  store i16 %conv188, i16* %arrayidx192, align 2, !dbg !1043
  %161 = load i16, i16* %m, align 2, !dbg !1044
  %conv193 = zext i16 %161 to i32, !dbg !1044
  %and194 = and i32 %conv193, 768, !dbg !1046
  %tobool195 = icmp ne i32 %and194, 0, !dbg !1046
  br i1 %tobool195, label %if.then196, label %if.end267, !dbg !1047
  %162 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1048
  %tbl8uplow = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %162, i32 0, i32 15, !dbg !1050
  %163 = load i8*, i8** %tbl8uplow, align 8, !dbg !1050
  %164 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !1051
  %idx8uplow197 = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %164, i32 0, i32 1, !dbg !1052
  %165 = load i32, i32* %u, align 4, !dbg !1053
  %shr198 = ashr i32 %165, 3, !dbg !1054
  %idxprom199 = sext i32 %shr198 to i64, !dbg !1051
  %arrayidx200 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8uplow197, i64 0, i64 %idxprom199, !dbg !1051
  %166 = load i8, i8* %arrayidx200, align 1, !dbg !1051
  %conv201 = zext i8 %166 to i32, !dbg !1055
  %shl202 = shl i32 %conv201, 3, !dbg !1056
  %167 = load i32, i32* %u, align 4, !dbg !1057
  %add203 = add nsw i32 128, %167, !dbg !1058
  %and204 = and i32 %add203, 7, !dbg !1059
  %add205 = add nsw i32 %shl202, %and204, !dbg !1060
  %idxprom206 = sext i32 %add205 to i64, !dbg !1048
  %arrayidx207 = getelementptr inbounds i8, i8* %163, i64 %idxprom206, !dbg !1048
  %168 = load i8, i8* %arrayidx207, align 1, !dbg !1048
  %conv208 = zext i8 %168 to i32, !dbg !1048
  store i32 %conv208, i32* %c, align 4, !dbg !1061
  %169 = load i16, i16* %m, align 2, !dbg !1062
  %conv209 = zext i16 %169 to i32, !dbg !1062
  %and210 = and i32 %conv209, 512, !dbg !1064
  %tobool211 = icmp ne i32 %and210, 0, !dbg !1064
  br i1 %tobool211, label %if.then212, label %if.else239, !dbg !1065
  %170 = load i32, i32* %u, align 4, !dbg !1066
  %add213 = add nsw i32 128, %170, !dbg !1068
  %171 = load i32, i32* %c, align 4, !dbg !1069
  %add214 = add nsw i32 %add213, %171, !dbg !1070
  %conv215 = trunc i32 %add214 to i8, !dbg !1071
  %conv216 = zext i8 %conv215 to i16, !dbg !1071
  %172 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1072
  %__ctype_toupper_data217 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %172, i32 0, i32 5, !dbg !1073
  %173 = load i32, i32* %u, align 4, !dbg !1074
  %add218 = add nsw i32 256, %173, !dbg !1075
  %idxprom219 = sext i32 %add218 to i64, !dbg !1072
  %arrayidx220 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data217, i64 0, i64 %idxprom219, !dbg !1072
  store i16 %conv216, i16* %arrayidx220, align 2, !dbg !1076
  %174 = load i32, i32* %u, align 4, !dbg !1077
  %add221 = add nsw i32 128, %174, !dbg !1079
  %conv222 = trunc i32 %add221 to i8, !dbg !1080
  %conv223 = sext i8 %conv222 to i32, !dbg !1081
  %cmp224 = icmp ne i32 %conv223, -1, !dbg !1082
  br i1 %cmp224, label %if.then226, label %if.end238, !dbg !1083
  %175 = load i32, i32* %u, align 4, !dbg !1084
  %add227 = add nsw i32 128, %175, !dbg !1086
  %176 = load i32, i32* %c, align 4, !dbg !1087
  %add228 = add nsw i32 %add227, %176, !dbg !1088
  %conv229 = trunc i32 %add228 to i8, !dbg !1089
  %conv230 = zext i8 %conv229 to i16, !dbg !1089
  %177 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1090
  %__ctype_toupper_data231 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %177, i32 0, i32 5, !dbg !1091
  %178 = load i32, i32* %u, align 4, !dbg !1092
  %add232 = add nsw i32 128, %178, !dbg !1093
  %conv233 = trunc i32 %add232 to i8, !dbg !1094
  %conv234 = sext i8 %conv233 to i32, !dbg !1095
8
//Instructions in stack: Num.419
//Instructions in stack: Num.420
//Instructions in stack: Num.421
//Instructions in stack: Num.422
//Instructions in stack: Num.423
//Instructions in stack: Num.424
//Instructions in stack: Num.425
//Instructions in stack: Num.426
//Instructions in stack: Num.427
//Instructions in stack: Num.428
//Instructions in stack: Num.429
//Instructions in stack: Num.430
//Instructions in stack: Num.431
//Instructions in stack: Num.432
//Instructions in stack: Num.433
//Instructions in stack: Num.434
//Instructions in stack: Num.435
//Instructions in stack: Num.436
//Instructions in stack: Num.437
//Instructions in stack: Num.438
//Instructions in stack: Num.439
//Instructions in stack: Num.440
//Instructions in stack: Num.441
//Instructions in stack: Num.442
//Instructions in stack: Num.443
//Instructions in stack: Num.444
//Instructions in stack: Num.445
//Instructions in stack: Num.446
//Instructions in stack: Num.447
//Instructions in stack: Num.448
//Instructions in stack: Num.449
//Instructions in stack: Num.450
//Instructions in stack: Num.451
//Instructions in stack: Num.452
//Instructions in stack: Num.453
//Instructions in stack: Num.454
//Instructions in stack: Num.455
//Instructions in stack: Num.456
//Instructions in stack: Num.457
//Instructions in stack: Num.458
//Instructions in stack: Num.459
//Instructions in stack: Num.460
//Instructions in stack: Num.461
//Instructions in stack: Num.462
//Instructions in stack: Num.463
//Instructions in stack: Num.464
//Instructions in stack: Num.465
//Instructions in stack: Num.466
//Instructions in stack: Num.467
//Instructions in stack: Num.468
//Instructions in stack: Num.469
//Instructions in stack: Num.470
//Instructions in stack: Num.471
//Instructions in stack: Num.472
//Instructions in stack: Num.473
//Instructions in stack: Num.474
//Instructions in stack: Num.475
//Instructions in stack: Num.476
//Instructions in stack: Num.477
//Instructions in stack: Num.478
//Instructions in stack: Num.479
//Instructions in stack: Num.480
//Instructions in stack: Num.481
//Instructions in stack: Num.482
//Instructions in stack: Num.483
//Instructions in stack: Num.484
//Instructions in stack: Num.485
//Instructions in stack: Num.486
//Instructions in stack: Num.487
//Instructions in stack: Num.488
//Instructions in stack: Num.489
//Instructions in stack: Num.490
//Instructions in stack: Num.491
//Instructions in stack: Num.492
//Instructions in stack: Num.493
//Instructions in stack: Num.494
//Instructions in stack: Num.495
//Instructions in stack: Num.496
//Instructions in stack: Num.497
//Instructions in stack: Num.498
//Instructions in stack: Num.499
//Instructions in stack: Num.500
//Instructions in stack: Num.501
//Instructions in stack: Num.502
//Instructions in stack: Num.503
//Instructions in stack: Num.504
//Instructions in stack: Num.505
//Instructions in stack: Num.506
//Instructions in stack: Num.507
//Instructions in stack: Num.508
//Instructions in stack: Num.509
//Instructions in stack: Num.510
//Instructions in stack: Num.511
//Instructions in stack: Num.512
//Instructions in stack: Num.513
//Instructions in stack: Num.514
//Instructions in stack: Num.515
//Instructions in stack: Num.516
//Instructions in stack: Num.517
//Instructions in stack: Num.518
//Instructions in stack: Num.519
//Instructions in stack: Num.520
//Instructions in stack: Num.521
//Instructions in stack: Num.522
//Instructions in stack: Num.523
//Instructions in stack: Num.524
//Instructions in stack: Num.525
//Instructions in stack: Num.526
//Instructions in stack: Num.527
//Instructions in stack: Num.528
//Instructions in stack: Num.529
//Instructions in stack: Num.530
//Instructions in stack: Num.531
//Instructions in stack: Num.532
//Instructions in stack: Num.533
//Instructions in stack: Num.534
//Instructions in stack: Num.535
//Instructions in stack: Num.536
//Instructions in stack: Num.537
//Instructions in stack: Num.538
//Instructions in stack: Num.539
//Instructions in stack: Num.540
//Instructions in stack: Num.541
//Instructions in stack: Num.542
//  %add235 = add nsw i32 128, %conv234, !dbg !1096
  %idxprom236 = sext i32 %add235 to i64, !dbg !1090
  %arrayidx237 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data231, i64 0, i64 %idxprom236, !dbg !1090
  store i16 %conv230, i16* %arrayidx237, align 2, !dbg !1097
  br label %if.end238, !dbg !1098
  br label %if.end266, !dbg !1099
  %179 = load i32, i32* %u, align 4, !dbg !1100
  %add240 = add nsw i32 128, %179, !dbg !1102
  %180 = load i32, i32* %c, align 4, !dbg !1103
  %sub241 = sub nsw i32 %add240, %180, !dbg !1104
  %conv242 = trunc i32 %sub241 to i8, !dbg !1105
  %conv243 = zext i8 %conv242 to i16, !dbg !1105
  %181 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1106
  %__ctype_tolower_data244 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %181, i32 0, i32 4, !dbg !1107
  %182 = load i32, i32* %u, align 4, !dbg !1108
  %add245 = add nsw i32 256, %182, !dbg !1109
  %idxprom246 = sext i32 %add245 to i64, !dbg !1106
  %arrayidx247 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data244, i64 0, i64 %idxprom246, !dbg !1106
  store i16 %conv243, i16* %arrayidx247, align 2, !dbg !1110
  %183 = load i32, i32* %u, align 4, !dbg !1111
  %add248 = add nsw i32 128, %183, !dbg !1113
  %conv249 = trunc i32 %add248 to i8, !dbg !1114
  %conv250 = sext i8 %conv249 to i32, !dbg !1115
  %cmp251 = icmp ne i32 %conv250, -1, !dbg !1116
  br i1 %cmp251, label %if.then253, label %if.end265, !dbg !1117
  %184 = load i32, i32* %u, align 4, !dbg !1118
  %add254 = add nsw i32 128, %184, !dbg !1120
  %185 = load i32, i32* %c, align 4, !dbg !1121
  %sub255 = sub nsw i32 %add254, %185, !dbg !1122
  %conv256 = trunc i32 %sub255 to i8, !dbg !1123
  %conv257 = zext i8 %conv256 to i16, !dbg !1123
  %186 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1124
  %__ctype_tolower_data258 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %186, i32 0, i32 4, !dbg !1125
  %187 = load i32, i32* %u, align 4, !dbg !1126
  %add259 = add nsw i32 128, %187, !dbg !1127
  %conv260 = trunc i32 %add259 to i8, !dbg !1128
  %conv261 = sext i8 %conv260 to i32, !dbg !1129
  %add262 = add nsw i32 128, %conv261, !dbg !1130
  %idxprom263 = sext i32 %add262 to i64, !dbg !1124
  %arrayidx264 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data258, i64 0, i64 %idxprom263, !dbg !1124
  store i16 %conv257, i16* %arrayidx264, align 2, !dbg !1131
  br label %if.end265, !dbg !1132
  br label %if.end266
  br label %if.end267, !dbg !1133
  br label %for.inc268, !dbg !1134
  %188 = load i32, i32* %u, align 4, !dbg !1135
  %inc269 = add nsw i32 %188, 1, !dbg !1135
  store i32 %inc269, i32* %u, align 4, !dbg !1135
  br label %for.cond142, !dbg !1136, !llvm.loop !1137
  %189 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1139
  %__ctype_b_data271 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %189, i32 0, i32 3, !dbg !1140
  %arraydecay272 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data271, i64 0, i64 0, !dbg !1139
  %add.ptr273 = getelementptr inbounds i16, i16* %arraydecay272, i64 128, !dbg !1141
  %190 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1142
  %__ctype_b = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %190, i32 0, i32 0, !dbg !1143
  store i16* %add.ptr273, i16** %__ctype_b, align 8, !dbg !1144
  %191 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1145
  %__ctype_tolower_data274 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %191, i32 0, i32 4, !dbg !1146
  %arraydecay275 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data274, i64 0, i64 0, !dbg !1145
  %add.ptr276 = getelementptr inbounds i16, i16* %arraydecay275, i64 128, !dbg !1147
  %192 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1148
  %__ctype_tolower = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %192, i32 0, i32 1, !dbg !1149
  store i16* %add.ptr276, i16** %__ctype_tolower, align 8, !dbg !1150
  %193 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1151
  %__ctype_toupper_data277 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %193, i32 0, i32 5, !dbg !1152
  %arraydecay278 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data277, i64 0, i64 0, !dbg !1151
  %add.ptr279 = getelementptr inbounds i16, i16* %arraydecay278, i64 128, !dbg !1153
  %194 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1154
  %__ctype_toupper = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %194, i32 0, i32 2, !dbg !1155
  store i16* %add.ptr279, i16** %__ctype_toupper, align 8, !dbg !1156
  br label %if.end280
  %195 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1157
  %outdigit_length = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %195, i32 0, i32 11, !dbg !1158
  %arraydecay281 = getelementptr inbounds [10 x i8], [10 x i8]* %outdigit_length, i64 0, i64 0, !dbg !1157
  store i8* %arraydecay281, i8** %d, align 8, !dbg !1159
  %196 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1160
  %outdigit0_mb = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %196, i32 0, i32 28, !dbg !1161
  store i8** %outdigit0_mb, i8*** %x, align 8, !dbg !1162
  store i32 0, i32* %c, align 4, !dbg !1163
  br label %for.cond282, !dbg !1165
  %197 = load i32, i32* %c, align 4, !dbg !1166
  %cmp283 = icmp slt i32 %197, 10, !dbg !1168
  br i1 %cmp283, label %for.body285, label %for.end294, !dbg !1169
  %198 = load i8**, i8*** %x, align 8, !dbg !1170
  %199 = load i32, i32* %c, align 4, !dbg !1172
  %idxprom286 = sext i32 %199 to i64, !dbg !1170
  %arrayidx287 = getelementptr inbounds i8*, i8** %198, i64 %idxprom286, !dbg !1170
  %200 = load i8*, i8** %arrayidx287, align 8, !dbg !1170
  %call288 = call i64 @strlen(i8* %200) #12, !dbg !1173
  %conv289 = trunc i64 %call288 to i8, !dbg !1173
  %201 = load i8*, i8** %d, align 8, !dbg !1174
  %202 = load i32, i32* %c, align 4, !dbg !1175
  %idxprom290 = sext i32 %202 to i64, !dbg !1176
  %arrayidx291 = getelementptr inbounds i8, i8* %201, i64 %idxprom290, !dbg !1176
  store i8 %conv289, i8* %arrayidx291, align 1, !dbg !1177
  br label %for.inc292, !dbg !1178
  %203 = load i32, i32* %c, align 4, !dbg !1179
  %inc293 = add nsw i32 %203, 1, !dbg !1179
  store i32 %inc293, i32* %c, align 4, !dbg !1179
  br label %for.cond282, !dbg !1180, !llvm.loop !1181
  br label %if.end312, !dbg !1183
  %204 = load i32, i32* %i, align 4, !dbg !1184
  %cmp296 = icmp eq i32 %204, 1, !dbg !1186
  br i1 %cmp296, label %if.then298, label %if.end311, !dbg !1187
  %205 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1188
  %decimal_point_wc = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %205, i32 0, i32 24, !dbg !1190
  %206 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1191
  %decimal_point = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %206, i32 0, i32 39, !dbg !1192
  %207 = load i8*, i8** %decimal_point, align 8, !dbg !1192
  %208 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1193
  %call299 = call i32 @__locale_mbrtowc_l(i32* %decimal_point_wc, i8* %207, %struct.__uclibc_locale_struct.160* %208) #10, !dbg !1194
  %209 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1195
  %decimal_point_len = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %209, i32 0, i32 26, !dbg !1196
  store i32 %call299, i32* %decimal_point_len, align 8, !dbg !1197
  %210 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1198
  %grouping = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %210, i32 0, i32 41, !dbg !1200
  %211 = load i8*, i8** %grouping, align 8, !dbg !1200
  %212 = load i8, i8* %211, align 1, !dbg !1201
  %tobool300 = icmp ne i8 %212, 0, !dbg !1201
  br i1 %tobool300, label %if.then301, label %if.end310, !dbg !1202
  %213 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1203
  %thousands_sep_wc = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %213, i32 0, i32 25, !dbg !1205
  %214 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1206
  %thousands_sep = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %214, i32 0, i32 40, !dbg !1207
Instructions in stack: Num.543
//Instructions in stack: Num.544
//Instructions in stack: Num.545
//Instructions in stack: Num.546
//Instructions in stack: Num.547
//Instructions in stack: Num.548
//Instructions in stack: Num.549
//Instructions in stack: Num.550
//Instructions in stack: Num.551
//Instructions in stack: Num.552
//Instructions in stack: Num.553
//Instructions in stack: Num.554
//Instructions in stack: Num.555
//Instructions in stack: Num.556
//Instructions in stack: Num.557
//Instructions in stack: Num.558
//Instructions in stack: Num.559
//Instructions in stack: Num.560
//Instructions in stack: Num.561
//Instructions in stack: Num.562
//Instructions in stack: Num.563
//Instructions in stack: Num.564
//Instructions in stack: Num.565
//Instructions in stack: Num.566
//Instructions in stack: Num.567
//Instructions in stack: Num.568
//Instructions in stack: Num.569
//Instructions in stack: Num.570
//Instructions in stack: Num.571
//Instructions in stack: Num.572
//Instructions in stack: Num.573
//Instructions in stack: Num.574
//Instructions in stack: Num.575
//Instructions in stack: Num.576
//Instructions in stack: Num.577
//Instructions in stack: Num.578
//Instructions in stack: Num.579
//Instructions in stack: Num.580
//Instructions in stack: Num.581
//Instructions in stack: Num.582
//Instructions in stack: Num.583
//Instructions in stack: Num.584
//Instructions in stack: Num.585
//Instructions in stack: Num.586
//Instructions in stack: Num.587
//Instructions in stack: Num.588
//Instructions in stack: Num.589
//Instructions in stack: Num.590
//Instructions in stack: Num.591
//Instructions in stack: Num.592
//Instructions in stack: Num.593
//Instructions in stack: Num.594
//Instructions in stack: Num.595
//Instructions in stack: Num.596
//Instructions in stack: Num.597
//Instructions in stack: Num.598
//Instructions in stack: Num.599
//Instructions in stack: Num.600
//Instructions in stack: Num.601
//Instructions in stack: Num.602
//Instructions in stack: Num.603
//Instructions in stack: Num.604
//Instructions in stack: Num.605
//Instructions in stack: Num.606
//Instructions in stack: Num.607
//Instructions in stack: Num.608
//Instructions in stack: Num.609
//Instructions in stack: Num.610
//Instructions in stack: Num.611
//Instructions in stack: Num.612
//Instructions in stack: Num.613
//Instructions in stack: Num.614
//Instructions in stack: Num.615
//Instructions in stack: Num.616
//Instructions in stack: Num.617
//Instructions in stack: Num.618
//Instructions in stack: Num.619
//Instructions in stack: Num.620
//Instructions in stack: Num.621
//Instructions in stack: Num.622
//Instructions in stack: Num.623
//Instructions in stack: Num.624
//Instructions in stack: Num.625
//Instructions in stack: Num.626
//Instructions in stack: Num.627
//Instructions in stack: Num.628
//Instructions in stack: Num.629
//Instructions in stack: Num.630
//Instructions in stack: Num.631
//Instructions in stack: Num.632
//Instructions in stack: Num.633
//Instructions in stack: Num.634
//Instructions in stack: Num.635
//Instructions in stack: Num.636
//Instructions in stack: Num.637
//Instructions in stack: Num.638
//Instructions in stack: Num.639
//Instructions in stack: Num.640
//Instructions in stack: Num.641
//Instructions in stack: Num.642
//Instructions in stack: Num.643
//Instructions in stack: Num.644
//Instructions in stack: Num.645
//Instructions in stack: Num.646
//Instructions in stack: Num.647
//Instructions in stack: Num.648
//Instructions in stack: Num.649
//Instructions in stack: Num.650
//Instructions in stack: Num.651
//Instructions in stack: Num.652
//Instructions in stack: Num.653
//Instructions in stack: Num.654
//Instructions in stack: Num.655
//Instructions in stack: Num.656
//Instructions in stack: Num.657
//Instructions in stack: Num.658
//Instructions in stack: Num.659
//Instructions in stack: Num.660
//Instructions in stack: Num.661
//Instructions in stack: Num.662
//Instructions in stack: Num.663
//Instructions in stack: Num.664
//Instructions in stack: Num.665
//Instructions in stack: Num.666
//Inst  %215 = load i8*, i8** %thousands_sep, align 8, !dbg !1207
  %216 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1208
  %call302 = call i32 @__locale_mbrtowc_l(i32* %thousands_sep_wc, i8* %215, %struct.__uclibc_locale_struct.160* %216) #10, !dbg !1209
  %217 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1210
  %thousands_sep_len = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %217, i32 0, i32 27, !dbg !1211
  store i32 %call302, i32* %thousands_sep_len, align 4, !dbg !1212
  %218 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1213
  %thousands_sep_len303 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %218, i32 0, i32 27, !dbg !1215
  %219 = load i32, i32* %thousands_sep_len303, align 4, !dbg !1215
  %cmp304 = icmp eq i32 %219, 0, !dbg !1216
  br i1 %cmp304, label %if.then306, label %if.end309, !dbg !1217
  %220 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1218
  %thousands_sep307 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %220, i32 0, i32 40, !dbg !1220
  %221 = load i8*, i8** %thousands_sep307, align 8, !dbg !1220
  %222 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1221
  %grouping308 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %222, i32 0, i32 41, !dbg !1222
  store i8* %221, i8** %grouping308, align 8, !dbg !1223
  br label %if.end309, !dbg !1224
  br label %if.end310, !dbg !1225
  br label %if.end311, !dbg !1226
  br label %if.end312
  br label %if.end313, !dbg !1227
  %223 = load i32, i32* %i, align 4, !dbg !1228
  %inc314 = add nsw i32 %223, 1, !dbg !1228
  store i32 %inc314, i32* %i, align 4, !dbg !1228
  %224 = load i8*, i8** %p.addr, align 8, !dbg !1229
  %add.ptr315 = getelementptr inbounds i8, i8* %224, i64 2, !dbg !1229
  store i8* %add.ptr315, i8** %p.addr, align 8, !dbg !1229
  %225 = load i8*, i8** %s, align 8, !dbg !1230
  %add.ptr316 = getelementptr inbounds i8, i8* %225, i64 2, !dbg !1230
  store i8* %add.ptr316, i8** %s, align 8, !dbg !1230
  br label %do.cond, !dbg !1231
  %226 = load i32, i32* %i, align 4, !dbg !1232
  %cmp317 = icmp slt i32 %226, 6, !dbg !1233
  br i1 %cmp317, label %do.body, label %do.end, !dbg !1231, !llvm.loop !1234
  store i32 1, i32* %retval, align 4, !dbg !1236
  br label %return, !dbg !1236
  %227 = load i32, i32* %retval, align 4, !dbg !1237
  ret i32 %227, !dbg !1237
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
ructions in stack: Num.667
//Instructions in stack: Num.668
//Instructions in stack: Num.669
//Instructions in stack: Num.670
//Instructions in stack: Num.671
//Instructions in stack: Num.672
//Instructions in stack: Num.673
//Instructions in stack: Num.674
//Instructions in stack: Num.675
//Instructions in stack: Num.676
//Instructions in stack: Num.677
//Instructions in stack: Num.678
//Instructions in stack: Num.679
//Instructions in stack: Num.680
//Instructions in stack: Num.681
//Instructions in stack: Num.682
//Instructions in stack: Num.683
//Instructions in stack: Num.684
//Instructions in stack: Num.685
//Instructions in stack: Num.686
//Instructions in stack: Num.687
//Instructions in stack: Num.688
//Instructions in stack: Num.689
//Instructions in stack: Num.690
//Instructions in stack: Num.691
//Instructions in stack: Num.692
//Instructions in stack: Num.693
//Instructions in stack: Num.694
//Instructions in stack: Num.695
//Instructions in stack: Num.696
//Instructions in stack: Num.697
//Instructions in stack: Num.698
//Instructions in stack: Num.699
//Instructions in stack: Num.700
//Instructions in stack: Num.701
//Instructions in stack: Num.702
//Instructions in stack: Num.703
//Instructions in stack: Num.704
//Instructions in stack: Num.705
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructi  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  %0 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !657
  %tobool = icmp ne i32 %0, 0, !dbg !657
  br i1 %tobool, label %if.then, label %if.end, !dbg !659
  br label %if.end4, !dbg !660
  %1 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  %inc = add nsw i32 %1, 1, !dbg !661
  store i32 %inc, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  store i64 4096, i64* @__pagesize, align 8, !dbg !662
  br i1 true, label %if.then1, label %if.end2, !dbg !663
  call void @_locale_init() #10, !dbg !664
  br label %if.end2, !dbg !664
  br i1 true, label %if.then3, label %if.end4, !dbg !666
  call void @_stdio_init() #10, !dbg !667
  br label %if.end4, !dbg !667
  ret void, !dbg !669
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** @__global_locale, align 8, !dbg !658
  call void @_locale_init_l(%struct.__uclibc_locale_struct.160* %0) #10, !dbg !659
  ret void, !dbg !660
  %base.addr = alloca %struct.__uclibc_locale_struct.160*, align 8
  store %struct.__uclibc_locale_struct.160* %base, %struct.__uclibc_locale_struct.160** %base.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__uclibc_locale_struct.160** %base.addr, metadata !1973, metadata !DIExpression()), !dbg !1974
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !662
ons in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//  %cur_locale = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %0, i32 0, i32 6, !dbg !663
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale, i64 0, i64 0, !dbg !662
  %call = call i8* @memset(i8* %arraydecay, i32 0, i64 14) #10, !dbg !664
  %1 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !665
  %cur_locale1 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %1, i32 0, i32 6, !dbg !666
  %arrayidx = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale1, i64 0, i64 0, !dbg !665
  store i8 35, i8* %arrayidx, align 8, !dbg !667
  %2 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !668
  %category_item_count = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %2, i32 0, i32 8, !dbg !669
  %arraydecay2 = getelementptr inbounds [6 x i8], [6 x i8]* %category_item_count, i64 0, i64 0, !dbg !668
  %3 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !670
  %lc_common_item_offsets_LEN = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %3, i32 0, i32 29, !dbg !671
  %arraydecay3 = getelementptr inbounds [6 x i8], [6 x i8]* %lc_common_item_offsets_LEN, i64 0, i64 0, !dbg !670
  %call4 = call i8* @memcpy(i8* %arraydecay2, i8* %arraydecay3, i64 6) #10, !dbg !672
  %4 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !673
  %category_item_count5 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %4, i32 0, i32 8, !dbg !674
  %arrayidx6 = getelementptr inbounds [6 x i8], [6 x i8]* %category_item_count5, i64 0, i64 0, !dbg !673
  %5 = load i8, i8* %arrayidx6, align 2, !dbg !675
  %inc = add i8 %5, 1, !dbg !675
  store i8 %inc, i8* %arrayidx6, align 2, !dbg !675
  %6 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !676
  %category_offsets = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %6, i32 0, i32 7, !dbg !677
  %arrayidx7 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets, i64 0, i64 0, !dbg !676
  store i16 2488, i16* %arrayidx7, align 2, !dbg !678
  %7 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !679
  %category_offsets8 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %7, i32 0, i32 7, !dbg !680
  %arrayidx9 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets8, i64 0, i64 1, !dbg !679
  store i16 2576, i16* %arrayidx9, align 2, !dbg !681
  %8 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !682
  %category_offsets10 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %8, i32 0, i32 7, !dbg !683
  %arrayidx11 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets10, i64 0, i64 2, !dbg !682
  store i16 2600, i16* %arrayidx11, align 2, !dbg !684
  %9 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !685
  %category_offsets12 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %9, i32 0, i32 7, !dbg !686
  %arrayidx13 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets12, i64 0, i64 3, !dbg !685
  store i16 2776, i16* %arrayidx13, align 2, !dbg !687
  %10 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !688
  %category_offsets14 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %10, i32 0, i32 7, !dbg !689
  %arrayidx15 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets14, i64 0, i64 5, !dbg !688
  store i16 3176, i16* %arrayidx15, align 2, !dbg !690
  %11 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !691
  %tbl8ctype = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %11, i32 0, i32 0, !dbg !692
  %12 = bitcast [420 x i8]* %tbl8ctype to i8*, !dbg !693
  %13 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !694
  %tbl8ctype16 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %13, i32 0, i32 13, !dbg !695
  store i8* %12, i8** %tbl8ctype16, align 8, !dbg !696
  %14 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !697
  %tbl8uplow = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %14, i32 0, i32 1, !dbg !698
  %15 = bitcast [504 x i8]* %tbl8uplow to i8*, !dbg !699
  %16 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !700
  %tbl8uplow17 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %16, i32 0, i32 15, !dbg !701
  store i8* %15, i8** %tbl8uplow17, align 8, !dbg !702
  %17 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !703
  %tbl8c2wc = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %17, i32 0, i32 2, !dbg !704
  %18 = bitcast [1760 x i16]* %tbl8c2wc to i16*, !dbg !705
  %19 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !706
  %tbl8c2wc18 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %19, i32 0, i32 17, !dbg !707
  store i16* %18, i16** %tbl8c2wc18, align 8, !dbg !708
  %20 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !709
  %tbl8wc2c = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %20, i32 0, i32 3, !dbg !710
  %21 = bitcast [4528 x i8]* %tbl8wc2c to i8*, !dbg !711
  %22 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !712
  %tbl8wc2c19 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %22, i32 0, i32 19, !dbg !713
  store i8* %21, i8** %tbl8wc2c19, align 8, !dbg !714
  %23 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !715
  %tblwctype = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %23, i32 0, i32 4, !dbg !716
  %24 = bitcast [3604 x i8]* %tblwctype to i8*, !dbg !717
  %25 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !718
  %tblwctype20 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %25, i32 0, i32 21, !dbg !719
  store i8* %24, i8** %tblwctype20, align 8, !dbg !720
  %26 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !721
  %tblwuplow = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %26, i32 0, i32 5, !dbg !722
  %27 = bitcast [1680 x i8]* %tblwuplow to i8*, !dbg !723
  %28 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !724
  %tblwuplow21 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %28, i32 0, i32 22, !dbg !725
  store i8* %27, i8** %tblwuplow21, align 8, !dbg !726
  %29 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !727
  %tblwuplow_diff = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %29, i32 0, i32 6, !dbg !728
  %30 = bitcast [196 x i16]* %tblwuplow_diff to i16*, !dbg !729
  %31 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !730
  %tblwuplow_diff22 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %31, i32 0, i32 23, !dbg !731
  store i16* %30, i16** %tblwuplow_diff22, align 8, !dbg !732
  %32 = load i16*, i16** @__C_ctype_b, align 8, !dbg !733
  %33 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !734
  %__ctype_b = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %33, i32 0, i32 0, !dbg !735
  store i16* %32, i16** %__ctype_b, align 8, !dbg !736
  %34 = load i16*, i16** @__C_ctype_tolower, align 8, !dbg !737
  %35 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !738
  %__ctype_tolower = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %35, i32 0, i32 1, !dbg !739
  store i16* %34, i16** %__ctype_tolower, align 8, !dbg !740
  %36 = load i16*, i16** @__C_ctype_toupper, align 8, !dbg !741
  %37 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !742
  %__ctype_toupper = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %37, i32 0, i32 2, !dbg !743
  store i16* %36, i16** %__ctype_toupper, align 8, !dbg !744
  %38 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !745
  %code2flag = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %38, i32 0, i32 20, !dbg !746
  store i16* getelementptr inbounds ([16 x i16], [16 x i16]* @__code2flag, i64 0, i64 0), i16** %code2flag, align 8, !dbg !747
  %39 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !748
  %call23 = call i32 @_locale_set_l(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), %struct.__uclibc_locale_struct.160* %39) #11, !dbg !749
  ret void, !dbg !750
  %retval = alloca i32, align 4
  %p.addr = alloca i8*, align 8
  %base.addr = alloca %struct.__uclibc_locale_struct.160*, align 8
  %x = alloca i8**, align 8
  %s = alloca i8*, align 8
  %stp = alloca i64*, align 8
  %r = alloca i8*, align 8
  %io = alloca i16*, align 8
  %ii = alloca i16*, align 8
  %d = alloca i8*, align 8
  %row = alloca i32, align 4
  %crow = alloca i32, align 4
  %len = alloca i32, align 4
  %c = alloca i32, align 4
  %i = alloca i32, align 4
  %newcol = alloca %struct.__collate_t.159, align 8
  %c8b = alloca %struct.__codeset_8_bit_t.161*, align 8
  %u = alloca i32, align 4
  %m = alloca i16, align 2
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !1060, metadata !DIExpression()), !dbg !1061
  store %struct.__uclibc_locale_struct.160* %base, %struct.__uclibc_locale_struct.160** %base.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__uclibc_locale_struct.160** %base.addr, metadata !1062, metadata !DIExpression()), !dbg !1063
  call void @llvm.dbg.declare(metadata i8*** %x, metadata !1064, metadata !DIExpression()), !dbg !1065
  call void @llvm.dbg.declare(metadata i8** %s, metadata !1066, metadata !DIExpression()), !dbg !1067
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !668
  %cur_locale = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %0, i32 0, i32 6, !dbg !669
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale, i64 0, i64 0, !dbg !668
Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 1, !dbg !670
  store i8* %add.ptr, i8** %s, align 8, !dbg !667
  call void @llvm.dbg.declare(metadata i64** %stp, metadata !1071, metadata !DIExpression()), !dbg !1074
  call void @llvm.dbg.declare(metadata i8** %r, metadata !1075, metadata !DIExpression()), !dbg !1076
  call void @llvm.dbg.declare(metadata i16** %io, metadata !1077, metadata !DIExpression()), !dbg !1078
  call void @llvm.dbg.declare(metadata i16** %ii, metadata !1079, metadata !DIExpression()), !dbg !1080
  call void @llvm.dbg.declare(metadata i8** %d, metadata !1081, metadata !DIExpression()), !dbg !1082
  call void @llvm.dbg.declare(metadata i32* %row, metadata !1083, metadata !DIExpression()), !dbg !1084
  call void @llvm.dbg.declare(metadata i32* %crow, metadata !1085, metadata !DIExpression()), !dbg !1086
  call void @llvm.dbg.declare(metadata i32* %len, metadata !1087, metadata !DIExpression()), !dbg !1088
  call void @llvm.dbg.declare(metadata i32* %c, metadata !1089, metadata !DIExpression()), !dbg !1090
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1091, metadata !DIExpression()), !dbg !1092
  store i32 0, i32* %i, align 4, !dbg !692
  call void @llvm.dbg.declare(metadata %struct.__collate_t.159* %newcol, metadata !1093, metadata !DIExpression()), !dbg !1094
  %1 = load i8*, i8** %p.addr, align 8, !dbg !695
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i32 1, !dbg !695
  store i8* %incdec.ptr, i8** %p.addr, align 8, !dbg !695
  %index2weight = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %newcol, i32 0, i32 23, !dbg !696
  store i16* null, i16** %index2weight, align 8, !dbg !697
  %2 = load i8*, i8** %p.addr, align 8, !dbg !698
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 8, !dbg !698
  %3 = load i8, i8* %arrayidx, align 1, !dbg !698
  %conv = zext i8 %3 to i32, !dbg !698
  %4 = load i8*, i8** %s, align 8, !dbg !700
  %arrayidx1 = getelementptr inbounds i8, i8* %4, i64 8, !dbg !700
  %5 = load i8, i8* %arrayidx1, align 1, !dbg !700
  %conv2 = zext i8 %5 to i32, !dbg !700
  %cmp = icmp ne i32 %conv, %conv2, !dbg !701
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !702
  %6 = load i8*, i8** %p.addr, align 8, !dbg !703
  %arrayidx4 = getelementptr inbounds i8, i8* %6, i64 9, !dbg !703
  %7 = load i8, i8* %arrayidx4, align 1, !dbg !703
  %conv5 = zext i8 %7 to i32, !dbg !703
  %8 = load i8*, i8** %s, align 8, !dbg !704
  %arrayidx6 = getelementptr inbounds i8, i8* %8, i64 9, !dbg !704
  %9 = load i8, i8* %arrayidx6, align 1, !dbg !704
  %conv7 = zext i8 %9 to i32, !dbg !704
  %cmp8 = icmp ne i32 %conv5, %conv7, !dbg !705
  br i1 %cmp8, label %if.then, label %if.end22, !dbg !706
  %10 = load i8*, i8** %p.addr, align 8, !dbg !707
  %11 = load i8, i8* %10, align 1, !dbg !709
  %conv10 = zext i8 %11 to i32, !dbg !709
  %and = and i32 %conv10, 127, !dbg !710
  %shl = shl i32 %and, 7, !dbg !711
  %12 = load i8*, i8** %p.addr, align 8, !dbg !712
  %arrayidx11 = getelementptr inbounds i8, i8* %12, i64 1, !dbg !712
  %13 = load i8, i8* %arrayidx11, align 1, !dbg !712
  %conv12 = zext i8 %13 to i32, !dbg !712
  %and13 = and i32 %conv12, 127, !dbg !713
  %add = add nsw i32 %shl, %and13, !dbg !714
  store i32 %add, i32* %row, align 4, !dbg !715
  %14 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !716
  %locales = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %14, i32 0, i32 31, !dbg !718
  %15 = load i32, i32* %row, align 4, !dbg !719
  %mul = mul nsw i32 9, %15, !dbg !720
  %add14 = add nsw i32 %mul, 3, !dbg !721
  %add15 = add nsw i32 %add14, 4, !dbg !722
  %idxprom = sext i32 %add15 to i64, !dbg !716
  %arrayidx16 = getelementptr inbounds [2826 x i8], [2826 x i8]* %locales, i64 0, i64 %idxprom, !dbg !716
  %16 = load i8, i8* %arrayidx16, align 1, !dbg !716
  %conv17 = zext i8 %16 to i32, !dbg !716
  %call = call i32 @init_cur_collate(i32 %conv17, %struct.__collate_t.159* %newcol) #10, !dbg !723
  %tobool = icmp ne i32 %call, 0, !dbg !723
  br i1 %tobool, label %if.end, label %if.then18, !dbg !724
  store i32 0, i32* %retval, align 4, !dbg !725
  br label %return, !dbg !725
  %17 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !727
  %collate = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %17, i32 0, i32 118, !dbg !728
  %index2weight19 = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %collate, i32 0, i32 23, !dbg !729
  %18 = load i16*, i16** %index2weight19, align 8, !dbg !729
  %19 = bitcast i16* %18 to i8*, !dbg !727
  call void @free(i8* %19) #11, !dbg !730
  %20 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !731
  %collate20 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %20, i32 0, i32 118, !dbg !732
  %21 = bitcast %struct.__collate_t.159* %collate20 to i8*, !dbg !733
  %22 = bitcast %struct.__collate_t.159* %newcol to i8*, !dbg !734
  %call21 = call i8* @memcpy(i8* %21, i8* %22, i64 112) #11, !dbg !735
  br label %if.end22, !dbg !736
  br label %do.body, !dbg !737
  %23 = load i8*, i8** %p.addr, align 8, !dbg !738
  %24 = load i8, i8* %23, align 1, !dbg !741
  %conv23 = zext i8 %24 to i32, !dbg !741
  %25 = load i8*, i8** %s, align 8, !dbg !742
  %26 = load i8, i8* %25, align 1, !dbg !743
  %conv24 = zext i8 %26 to i32, !dbg !743
  %cmp25 = icmp ne i32 %conv23, %conv24, !dbg !744
  br i1 %cmp25, label %if.then34, label %lor.lhs.false27, !dbg !745
  %27 = load i8*, i8** %p.addr, align 8, !dbg !746
  %arrayidx28 = getelementptr inbounds i8, i8* %27, i64 1, !dbg !746
  %28 = load i8, i8* %arrayidx28, align 1, !dbg !746
  %conv29 = zext i8 %28 to i32, !dbg !746
  %29 = load i8*, i8** %s, align 8, !dbg !747
  %arrayidx30 = getelementptr inbounds i8, i8* %29, i64 1, !dbg !747
  %30 = load i8, i8* %arrayidx30, align 1, !dbg !747
  %conv31 = zext i8 %30 to i32, !dbg !747
  %cmp32 = icmp ne i32 %conv29, %conv31, !dbg !748
  br i1 %cmp32, label %if.then34, label %if.end313, !dbg !749
  %31 = load i8*, i8** %p.addr, align 8, !dbg !750
  %32 = load i8, i8* %31, align 1, !dbg !752
  %conv35 = zext i8 %32 to i32, !dbg !752
  %and36 = and i32 %conv35, 127, !dbg !753
  %shl37 = shl i32 %and36, 7, !dbg !754
  %33 = load i8*, i8** %p.addr, align 8, !dbg !755
  %arrayidx38 = getelementptr inbounds i8, i8* %33, i64 1, !dbg !755
  %34 = load i8, i8* %arrayidx38, align 1, !dbg !755
  %conv39 = zext i8 %34 to i32, !dbg !755
  %and40 = and i32 %conv39, 127, !dbg !756
  %add41 = add nsw i32 %shl37, %and40, !dbg !757
  store i32 %add41, i32* %row, align 4, !dbg !758
  %35 = load i8*, i8** %p.addr, align 8, !dbg !759
  %36 = load i8, i8* %35, align 1, !dbg !760
  %37 = load i8*, i8** %s, align 8, !dbg !761
  store i8 %36, i8* %37, align 1, !dbg !762
  %38 = load i8*, i8** %p.addr, align 8, !dbg !763
  %arrayidx42 = getelementptr inbounds i8, i8* %38, i64 1, !dbg !763
  %39 = load i8, i8* %arrayidx42, align 1, !dbg !763
  %40 = load i8*, i8** %s, align 8, !dbg !764
  %arrayidx43 = getelementptr inbounds i8, i8* %40, i64 1, !dbg !764
  store i8 %39, i8* %arrayidx43, align 1, !dbg !765
  %41 = load i32, i32* %i, align 4, !dbg !766
  %cmp44 = icmp ne i32 %41, 4, !dbg !768
  br i1 %cmp44, label %land.lhs.true, label %if.end92, !dbg !769
  %42 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !770
  %lc_common_item_offsets_LEN = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %42, i32 0, i32 29, !dbg !771
  %43 = load i32, i32* %i, align 4, !dbg !772
  %idxprom46 = sext i32 %43 to i64, !dbg !770
 in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack:  %arrayidx47 = getelementptr inbounds [6 x i8], [6 x i8]* %lc_common_item_offsets_LEN, i64 0, i64 %idxprom46, !dbg !770
  %44 = load i8, i8* %arrayidx47, align 1, !dbg !770
  %conv48 = zext i8 %44 to i32, !dbg !770
  store i32 %conv48, i32* %len, align 4, !dbg !773
  %cmp49 = icmp ne i32 %conv48, 0, !dbg !774
  br i1 %cmp49, label %if.then51, label %if.end92, !dbg !775
  %45 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !776
  %locales52 = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %45, i32 0, i32 31, !dbg !778
  %46 = load i32, i32* %row, align 4, !dbg !779
  %mul53 = mul nsw i32 9, %46, !dbg !780
  %add54 = add nsw i32 %mul53, 3, !dbg !781
  %47 = load i32, i32* %i, align 4, !dbg !782
  %add55 = add nsw i32 %add54, %47, !dbg !783
  %idxprom56 = sext i32 %add55 to i64, !dbg !776
  %arrayidx57 = getelementptr inbounds [2826 x i8], [2826 x i8]* %locales52, i64 0, i64 %idxprom56, !dbg !776
  %48 = load i8, i8* %arrayidx57, align 1, !dbg !776
  %conv58 = zext i8 %48 to i32, !dbg !776
  %49 = load i32, i32* %len, align 4, !dbg !784
  %mul59 = mul nsw i32 %conv58, %49, !dbg !785
  store i32 %mul59, i32* %crow, align 4, !dbg !786
  %50 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !787
  %51 = bitcast %struct.__uclibc_locale_struct.160* %50 to i8*, !dbg !788
  %52 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !789
  %category_offsets = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %52, i32 0, i32 7, !dbg !790
  %53 = load i32, i32* %i, align 4, !dbg !791
  %idxprom60 = sext i32 %53 to i64, !dbg !789
  %arrayidx61 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets, i64 0, i64 %idxprom60, !dbg !789
  %54 = load i16, i16* %arrayidx61, align 2, !dbg !789
  %conv62 = zext i16 %54 to i32, !dbg !789
  %idx.ext = sext i32 %conv62 to i64, !dbg !792
  %add.ptr63 = getelementptr inbounds i8, i8* %51, i64 %idx.ext, !dbg !792
  %55 = bitcast i8* %add.ptr63 to i8**, !dbg !793
  store i8** %55, i8*** %x, align 8, !dbg !794
  %56 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !795
  %lc_common_tbl_offsets = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %56, i32 0, i32 30, !dbg !796
  %arraydecay64 = getelementptr inbounds [24 x i64], [24 x i64]* %lc_common_tbl_offsets, i64 0, i64 0, !dbg !795
  %57 = load i32, i32* %i, align 4, !dbg !797
  %mul65 = mul nsw i32 4, %57, !dbg !798
  %idx.ext66 = sext i32 %mul65 to i64, !dbg !799
  %add.ptr67 = getelementptr inbounds i64, i64* %arraydecay64, i64 %idx.ext66, !dbg !799
  store i64* %add.ptr67, i64** %stp, align 8, !dbg !800
  %58 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !801
  %59 = bitcast %struct.__locale_mmap_t.162* %58 to i8*, !dbg !802
  %60 = load i64*, i64** %stp, align 8, !dbg !803
  %61 = load i64, i64* %60, align 8, !dbg !804
  %add.ptr68 = getelementptr inbounds i8, i8* %59, i64 %61, !dbg !805
  store i8* %add.ptr68, i8** %r, align 8, !dbg !806
  %62 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !807
  %63 = bitcast %struct.__locale_mmap_t.162* %62 to i8*, !dbg !808
  %64 = load i64*, i64** %stp, align 8, !dbg !809
  %incdec.ptr69 = getelementptr inbounds i64, i64* %64, i32 1, !dbg !809
  store i64* %incdec.ptr69, i64** %stp, align 8, !dbg !809
  %65 = load i64, i64* %incdec.ptr69, align 8, !dbg !810
  %add.ptr70 = getelementptr inbounds i8, i8* %63, i64 %65, !dbg !811
  %66 = bitcast i8* %add.ptr70 to i16*, !dbg !812
  store i16* %66, i16** %io, align 8, !dbg !813
  %67 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !814
  %68 = bitcast %struct.__locale_mmap_t.162* %67 to i8*, !dbg !815
  %69 = load i64*, i64** %stp, align 8, !dbg !816
  %incdec.ptr71 = getelementptr inbounds i64, i64* %69, i32 1, !dbg !816
  store i64* %incdec.ptr71, i64** %stp, align 8, !dbg !816
  %70 = load i64, i64* %incdec.ptr71, align 8, !dbg !817
  %add.ptr72 = getelementptr inbounds i8, i8* %68, i64 %70, !dbg !818
  %71 = bitcast i8* %add.ptr72 to i16*, !dbg !819
  store i16* %71, i16** %ii, align 8, !dbg !820
  %72 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !821
  %73 = bitcast %struct.__locale_mmap_t.162* %72 to i8*, !dbg !822
  %74 = load i64*, i64** %stp, align 8, !dbg !823
  %incdec.ptr73 = getelementptr inbounds i64, i64* %74, i32 1, !dbg !823
  store i64* %incdec.ptr73, i64** %stp, align 8, !dbg !823
  %75 = load i64, i64* %incdec.ptr73, align 8, !dbg !824
  %add.ptr74 = getelementptr inbounds i8, i8* %73, i64 %75, !dbg !825
  store i8* %add.ptr74, i8** %d, align 8, !dbg !826
  store i32 0, i32* %c, align 4, !dbg !827
  br label %for.cond, !dbg !829
  %76 = load i32, i32* %c, align 4, !dbg !830
  %77 = load i32, i32* %len, align 4, !dbg !832
  %cmp75 = icmp slt i32 %76, %77, !dbg !833
  br i1 %cmp75, label %for.body, label %for.end, !dbg !834
  %78 = load i8*, i8** %d, align 8, !dbg !835
  %79 = load i16*, i16** %ii, align 8, !dbg !837
  %80 = load i8*, i8** %r, align 8, !dbg !838
  %81 = load i32, i32* %crow, align 4, !dbg !839
  %82 = load i32, i32* %c, align 4, !dbg !840
  %add77 = add nsw i32 %81, %82, !dbg !841
  %idxprom78 = sext i32 %add77 to i64, !dbg !838
  %arrayidx79 = getelementptr inbounds i8, i8* %80, i64 %idxprom78, !dbg !838
  %83 = load i8, i8* %arrayidx79, align 1, !dbg !838
  %conv80 = zext i8 %83 to i32, !dbg !838
  %84 = load i16*, i16** %io, align 8, !dbg !842
  %85 = load i32, i32* %c, align 4, !dbg !843
  %idxprom81 = sext i32 %85 to i64, !dbg !842
  %arrayidx82 = getelementptr inbounds i16, i16* %84, i64 %idxprom81, !dbg !842
  %86 = load i16, i16* %arrayidx82, align 2, !dbg !842
  %conv83 = zext i16 %86 to i32, !dbg !842
  %add84 = add nsw i32 %conv80, %conv83, !dbg !844
  %idxprom85 = sext i32 %add84 to i64, !dbg !837
  %arrayidx86 = getelementptr inbounds i16, i16* %79, i64 %idxprom85, !dbg !837
  %87 = load i16, i16* %arrayidx86, align 2, !dbg !837
  %conv87 = zext i16 %87 to i32, !dbg !837
  %idx.ext88 = sext i32 %conv87 to i64, !dbg !845
  %add.ptr89 = getelementptr inbounds i8, i8* %78, i64 %idx.ext88, !dbg !845
  %88 = load i8**, i8*** %x, align 8, !dbg !846
  %89 = load i32, i32* %c, align 4, !dbg !847
  %idx.ext90 = sext i32 %89 to i64, !dbg !848
  %add.ptr91 = getelementptr inbounds i8*, i8** %88, i64 %idx.ext90, !dbg !848
  store i8* %add.ptr89, i8** %add.ptr91, align 8, !dbg !849
  br label %for.inc, !dbg !850
  %90 = load i32, i32* %c, align 4, !dbg !851
  %inc = add nsw i32 %90, 1, !dbg !851
  store i32 %inc, i32* %c, align 4, !dbg !851
  br label %for.cond, !dbg !852, !llvm.loop !853
  br label %if.end92, !dbg !855
  %91 = load i32, i32* %i, align 4, !dbg !856
  %cmp93 = icmp eq i32 %91, 0, !dbg !858
  br i1 %cmp93, label %if.then95, label %if.else295, !dbg !859
  %92 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !860
  %locales96 = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %92, i32 0, i32 31, !dbg !862
  %93 = load i32, i32* %row, align 4, !dbg !863
  %mul97 = mul nsw i32 9, %93, !dbg !864
  %add98 = add nsw i32 %mul97, 2, !dbg !865
  %idxprom99 = sext i32 %add98 to i64, !dbg !860
  %arrayidx100 = getelementptr inbounds [2826 x i8], [2826 x i8]* %locales96, i64 0, i64 %idxprom99, !dbg !860
  %94 = load i8, i8* %arrayidx100, align 1, !dbg !860
 Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.190
//Instructions in stack: Num.191
//Instructions in stack: Num.192
//Instructions in stack: Num.193
//Instructions in stack: Num.194
//Instructions in stack: Num.195
//Instructions in stack: Num.196
//Instructions in stack: Num.197
//Instructions in stack: Num.198
//Instructions in stack: Num.199
//Instructions in stack: Num.200
//Instructions in stack: Num.201
//Instructions in stack: Num.202
//Instructions in stack: Num.203
//Instructions in stack: Num.204
//Instructions in stack: Num.205
//Instructions in stack: Num.206
//Instructions in stack: Num.207
//Instructions in stack: Num.208
//Instructions in stack: Num.209
//Instructions in stack: Num.210
//Instructions in stack: Num.211
//Instructions in stack: Num.212
//Instructions in stack: Num.213
//Instructions in stack: Num.214
//Instructions in stack: Num.215
//Instructions in stack: Num.216
//Instructions in stack: Num.217
//Instructions in stack: Num.218
//Instructions in stack: Num.219
//Instructions in stack: Num.220
//Instructions in stack: Num.221
//Instructions in stack: Num.222
//Instructions in stack: Num.223
//Instructions in stack: Num.224
//Instructions in stack: Num.225
//Instructions in stack: Num.226
//Instructions in stack: Num.227
//Instructions in stack: Num.228
//Instructions in stack: Num.229
//Instructions in stack: Num.230
//Instructions in stack: Num.231
//Instructions in stack: Num.232
//Instructions in stack: Num.233
//Instructions in stack: Num.234
//Instructions in stack: Num.235
//Instructions in stack: Num.236
//Instructions in stack: Num.237
//Instructions in stack: Num.238
//Instructions in stack: Num.239
//Instructions in stack: Num.240
//Instructions in stack: Num.241
//Instructions in stack: Num.242
//Instructions in stack: Num.243
//Instructions in stack: Num.244
//Instructions in stack: Num.245
//Instructions in stack: Num.246
//Instructions in stack: Num.247
//Instructions in stack: Num.248
//Instructions in stack: Num.249
//Instructions in stack: Num.250
//Instructions in stack: Num.251
//Instructions in stack: Num.252
//Instructions in stack: Num.253
//Instructions in stack: Num.254
//Instructions in stack: Num.255
//Instructions in stack: Num.256
//Instructions in stack: Num.257
//Instructions in stack: Num.258
//Instructions in stack: Num.259
//Instructions in stack: Num.260
//Instructions in stack: Num.261
//Instructions in stack: Num.262
//Instructions in stack: Num.263
//Instructions in stack: Num.264
//Instructions in stack: Num.265
//Instructions in stack: Num.266
//Instructions in stack: Num.267
//Instructions in stack: Num.268
//Instructions in stack: Num.269
//Instructions in stack: Num.270
//Instructions in stack: Num.271
//Instructions in stack: Num.272
//Instructions in stack: Num.273
//Instructions in stack: Num.274
//Instructions in stack: Num.275
//Instructions in stack: Num.276
//Instructions in stack: Num.277
//Instructions in stack: Num  %conv101 = zext i8 %94 to i32, !dbg !860
  store i32 %conv101, i32* %c, align 4, !dbg !866
  %95 = load i32, i32* %c, align 4, !dbg !867
  %cmp102 = icmp sle i32 %95, 2, !dbg !869
  br i1 %cmp102, label %if.then104, label %if.else112, !dbg !870
  %96 = load i32, i32* %c, align 4, !dbg !871
  %cmp105 = icmp eq i32 %96, 2, !dbg !874
  br i1 %cmp105, label %if.then107, label %if.else, !dbg !875
  %97 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !876
  %codeset = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %97, i32 0, i32 38, !dbg !878
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @utf8, i64 0, i64 0), i8** %codeset, align 8, !dbg !879
  %98 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !880
  %encoding = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %98, i32 0, i32 9, !dbg !881
  store i8 1, i8* %encoding, align 8, !dbg !882
  %99 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !883
  %mb_cur_max = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %99, i32 0, i32 10, !dbg !884
  store i8 6, i8* %mb_cur_max, align 1, !dbg !885
  br label %if.end111, !dbg !886
  %100 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !887
  %codeset108 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %100, i32 0, i32 38, !dbg !889
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @ascii, i64 0, i64 0), i8** %codeset108, align 8, !dbg !890
  %101 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !891
  %encoding109 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %101, i32 0, i32 9, !dbg !892
  store i8 0, i8* %encoding109, align 8, !dbg !893
  %102 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !894
  %mb_cur_max110 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %102, i32 0, i32 10, !dbg !895
  store i8 1, i8* %mb_cur_max110, align 1, !dbg !896
  br label %if.end111
  br label %if.end280, !dbg !897
  call void @llvm.dbg.declare(metadata %struct.__codeset_8_bit_t.161** %c8b, metadata !1298, metadata !DIExpression()), !dbg !1310
  %103 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !911
  %codeset_list = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %103, i32 0, i32 35, !dbg !911
  %arraydecay113 = getelementptr inbounds [255 x i8], [255 x i8]* %codeset_list, i64 0, i64 0, !dbg !911
  store i8* %arraydecay113, i8** %r, align 8, !dbg !912
  %104 = load i8*, i8** %r, align 8, !dbg !913
  %105 = load i8*, i8** %r, align 8, !dbg !914
  %106 = load i32, i32* %c, align 4, !dbg !915
  %sub = sub nsw i32 %106, 3, !dbg !915
  store i32 %sub, i32* %c, align 4, !dbg !915
  %idxprom114 = sext i32 %sub to i64, !dbg !914
  %arrayidx115 = getelementptr inbounds i8, i8* %105, i64 %idxprom114, !dbg !914
  %107 = load i8, i8* %arrayidx115, align 1, !dbg !914
  %conv116 = zext i8 %107 to i32, !dbg !914
  %idx.ext117 = sext i32 %conv116 to i64, !dbg !916
  %add.ptr118 = getelementptr inbounds i8, i8* %104, i64 %idx.ext117, !dbg !916
  %108 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !917
  %codeset119 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %108, i32 0, i32 38, !dbg !918
  store i8* %add.ptr118, i8** %codeset119, align 8, !dbg !919
  %109 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !920
  %encoding120 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %109, i32 0, i32 9, !dbg !921
  store i8 2, i8* %encoding120, align 8, !dbg !922
  %110 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !923
  %mb_cur_max121 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %110, i32 0, i32 10, !dbg !924
  store i8 1, i8* %mb_cur_max121, align 1, !dbg !925
  %111 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !926
  %codeset_8_bit = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %111, i32 0, i32 12, !dbg !927
  %arraydecay122 = getelementptr inbounds [23 x %struct.__codeset_8_bit_t.161], [23 x %struct.__codeset_8_bit_t.161]* %codeset_8_bit, i64 0, i64 0, !dbg !926
  %112 = load i32, i32* %c, align 4, !dbg !928
  %idx.ext123 = sext i32 %112 to i64, !dbg !929
  %add.ptr124 = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %arraydecay122, i64 %idx.ext123, !dbg !929
  store %struct.__codeset_8_bit_t.161* %add.ptr124, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !930
  %113 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !931
  %idx8ctype = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %113, i32 0, i32 0, !dbg !932
  %arraydecay125 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8ctype, i64 0, i64 0, !dbg !931
  %114 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !933
  %idx8ctype126 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %114, i32 0, i32 12, !dbg !934
  store i8* %arraydecay125, i8** %idx8ctype126, align 8, !dbg !935
  %115 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !936
  %idx8uplow = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %115, i32 0, i32 1, !dbg !937
  %arraydecay127 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8uplow, i64 0, i64 0, !dbg !936
  %116 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !938
  %idx8uplow128 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %116, i32 0, i32 14, !dbg !939
  store i8* %arraydecay127, i8** %idx8uplow128, align 8, !dbg !940
  %117 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !941
  %idx8c2wc = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %117, i32 0, i32 2, !dbg !942
  %arraydecay129 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8c2wc, i64 0, i64 0, !dbg !941
  %118 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !943
  %idx8c2wc130 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %118, i32 0, i32 16, !dbg !944
  store i8* %arraydecay129, i8** %idx8c2wc130, align 8, !dbg !945
  %119 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !946
  %idx8wc2c = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %119, i32 0, i32 3, !dbg !947
  %arraydecay131 = getelementptr inbounds [38 x i8], [38 x i8]* %idx8wc2c, i64 0, i64 0, !dbg !946
  %120 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !948
  %idx8wc2c132 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %120, i32 0, i32 18, !dbg !949
  store i8* %arraydecay131, i8** %idx8wc2c132, align 8, !dbg !950
  %121 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !951
  %__ctype_b_data = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %121, i32 0, i32 3, !dbg !952
  %arraydecay133 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data, i64 0, i64 0, !dbg !951
  %122 = bitcast i16* %arraydecay133 to i8*, !dbg !951
  %123 = load i16*, i16** @__C_ctype_b, align 8, !dbg !953
  %add.ptr134 = getelementptr inbounds i16, i16* %123, i64 -128, !dbg !954
  %124 = bitcast i16* %add.ptr134 to i8*, !dbg !953
  %call135 = call i8* @memcpy(i8* %122, i8* %124, i64 768) #11, !dbg !955
  %125 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !956
  %__ctype_tolower_data = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %125, i32 0, i32 4, !dbg !957
  %arraydecay136 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data, i64 0, i64 0, !dbg !956
  %126 = bitcast i16* %arraydecay136 to i8*, !dbg !956
  %127 = load i16*, i16** @__C_ctype_tolower, align 8, !dbg !958
  %add.ptr137 = getelementptr inbounds i16, i16* %127, i64 -128, !dbg !959
  %128 = bitcast i16* %add.ptr137 to i8*, !dbg !958
  %call138 = call i8* @memcpy(i8* %126, i8* %128, i64 768) #11, !dbg !960
  %129 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !961
  %__ctype_toupper_data = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %129, i32 0, i32 5, !dbg !962
  %arraydecay139 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data, i64 0, i64 0, !dbg !961
  %130 = bitcast i16* %arraydecay139 to i8*, !dbg !961
  %131 = load i16*, i16** @__C_ctype_toupper, align 8, !dbg !963
  %add.ptr140 = getelementptr inbounds i16, i16* %131, i64 -128, !dbg !964
  %132 = bitcast i16* %add.ptr140 to i8*, !dbg !963
  %call141 = call i8* @memcpy(i8* %130, i8* %132, i64 768) #11, !dbg !965
  call void @llvm.dbg.declare(metadata i32* %u, metadata !1366, metadata !DIExpression()), !dbg !1368
  call void @llvm.dbg.declare(metadata i16* %m, metadata !1369, metadata !DIExpression()), !dbg !1370
  store i32 0, i32* %u, align 4, !dbg !971
  br label %for.cond142, !dbg !973
  %133 = load i32, i32* %u, align 4, !dbg !974
  %cmp143 = icmp slt i32 %133, 128, !dbg !976
  br i1 %cmp143, label %for.body145, label %for.end270, !dbg !977
  %134 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !978
  %tbl8ctype = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %134, i32 0, i32 13, !dbg !980
  %135 = load i8*, i8** %tbl8ctype, align 8, !dbg !980
  %136 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !981
  %idx8ctype146 = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %136, i32 0, i32 0, !dbg !982
  %137 = load i32, i32* %u, align 4, !dbg !983
  %shr = ashr i32 %137, 3, !dbg !984
  %idxprom147 = sext i32 %shr to i64, !dbg !981
.278
//Instructions in stack: Num.279
//Instructions in stack: Num.280
//Instructions in stack: Num.281
//Instructions in stack: Num.282
//Instructions in stack: Num.283
//Instructions in stack: Num.284
//Instructions in stack: Num.285
//Instructions in stack: Num.286
//Instructions in stack: Num.287
//Instructions in stack: Num.288
//Instructions in stack: Num.289
//Instructions in stack: Num.290
//Instructions in stack: Num.291
//Instructions in stack: Num.292
//Instructions in stack: Num.293
//Instructions in stack: Num.294
//Instructions in stack: Num.295
//Instructions in stack: Num.296
//Instructions in stack: Num.297
//Instructions in stack: Num.298
//Instructions in stack: Num.299
//Instructions in stack: Num.300
//Instructions in stack: Num.301
//Instructions in stack: Num.302
//Instructions in stack: Num.303
//Instructions in stack: Num.304
//Instructions in stack: Num.305
//Instructions in stack: Num.306
//Instructions in stack: Num.307
//Instructions in stack: Num.308
//Instructions in stack: Num.309
//Instructions in stack: Num.310
//Instructions in stack: Num.311
//Instructions in stack: Num.312
//Instructions in stack: Num.313
//Instructions in stack: Num.314
//Instructions in stack: Num.315
//Instructions in stack: Num.316
//Instructions in stack: Num.317
//Instructions in stack: Num.318
//Instructions in stack: Num.319
//Instructions in stack: Num.320
//Instructions in stack: Num.321
//Instructions in stack: Num.322
//Instructions in stack: Num.323
//Instructions in stack: Num.324
//Instructions in stack: Num.325
//Instructions in stack: Num.326
//Instructions in stack: Num.327
//Instructions in stack: Num.328
//Instructions in stack: Num.329
//Instructions in stack: Num.330
//Instructions in stack: Num.331
//Instructions in stack: Num.332
//Instructions in stack: Num.333
//Instructions in stack: Num.334
//Instructions in stack: Num.335
//Instructions in stack: Num.336
//Instructions in stack: Num.337
//Instructions in stack: Num.338
//Instructions in stack: Num.339
//Instructions in stack: Num.340
//Instructions in stack: Num.341
//Instructions in stack: Num.342
//Instructions in stack: Num.343
//Instructions in stack: Num.344
//Instructions in stack: Num.345
//Instructions in stack: Num.346
//Instructions in stack: Num.347
//Instructions in stack: Num.348
//Instructions in stack: Num.349
//Instructions in stack: Num.350
//Instructions in stack: Num.351
//Instructions in stack: Num.352
//Instructions in stack: Num.353
//Instructions in stack: Num.354
//Instructions in stack: Num.355
//Instructions in stack: Num.356
//Instructions in stack: Num.357
//Instructions in stack: Num.358
//Instructions in stack: Num.359
//Instructions in stack: Num.360
//Instructions in stack: Num.361
//Instructions in stack: Num.362
//Instructions in stack: Num.363
//Instructions in stack: Num.364
//Instructions in stack: Num.365
//Instructions in stack: Num.366
//Instructions in stack: Num.367
//Instructions in stack: Num.368
//Instructions in stack: Num.369
//Instructions in stack: Num.370
//Instructions in stack: Num.371
//Instructions in stack: Num.372
//Instructions in stack: Num.373
//Instructions in stack: Num.374
//Instructions in stack: Num.375
//Instructions in stack: Num.376
//Instructions in stack: Num.377
//Instructions in stack: Num.378
//Instructions in stack: Num.379
//Instructions in stack: Num.380
//Instructions in stack: Num.381
//Instructions in stack: Num.382
//Instructions in stack: Num.383
//Instructions in stack: Num.384
//Instructions in stack: Num.385
//Instructions in stack: Num.386
//Instructions in stack: Num.387
//Instructions in stack: Num.388
//Instructions in stack: Num.389
//Instructions in stack: Num.390
//Instructions in stack: Num.391
//Instructions in stack: Num.392
//Instructions in stack: Num.393
//Instructions in stack: Num.394
//Instructions in stack: Num.395
//Instructions in stack: Num.396
//Instructions in stack: Num.397
//Instructions in stack: Num.398
//Instructions in stack: Num.399
//Instructions in stack: Num.400
//Instructions in stack: Num.401
//Instructions in stack: Num.402  %arrayidx148 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8ctype146, i64 0, i64 %idxprom147, !dbg !981
  %138 = load i8, i8* %arrayidx148, align 1, !dbg !981
  %conv149 = zext i8 %138 to i32, !dbg !985
  %shl150 = shl i32 %conv149, 2, !dbg !986
  %139 = load i32, i32* %u, align 4, !dbg !987
  %and151 = and i32 %139, 7, !dbg !988
  %shr152 = ashr i32 %and151, 1, !dbg !989
  %add153 = add nsw i32 %shl150, %shr152, !dbg !990
  %idxprom154 = sext i32 %add153 to i64, !dbg !978
  %arrayidx155 = getelementptr inbounds i8, i8* %135, i64 %idxprom154, !dbg !978
  %140 = load i8, i8* %arrayidx155, align 1, !dbg !978
  %conv156 = zext i8 %140 to i32, !dbg !978
  store i32 %conv156, i32* %c, align 4, !dbg !991
  %141 = load i32, i32* %u, align 4, !dbg !992
  %and157 = and i32 %141, 1, !dbg !993
  %tobool158 = icmp ne i32 %and157, 0, !dbg !993
  br i1 %tobool158, label %cond.true, label %cond.false, !dbg !994
  %142 = load i32, i32* %c, align 4, !dbg !995
  %shr159 = ashr i32 %142, 4, !dbg !996
  br label %cond.end, !dbg !994
  %143 = load i32, i32* %c, align 4, !dbg !997
  %and160 = and i32 %143, 15, !dbg !998
  br label %cond.end, !dbg !994
  %cond = phi i32 [ %shr159, %cond.true ], [ %and160, %cond.false ], !dbg !994
  store i32 %cond, i32* %c, align 4, !dbg !999
  %144 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1000
  %code2flag = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %144, i32 0, i32 20, !dbg !1001
  %145 = load i16*, i16** %code2flag, align 8, !dbg !1001
  %146 = load i32, i32* %c, align 4, !dbg !1002
  %idxprom161 = sext i32 %146 to i64, !dbg !1000
  %arrayidx162 = getelementptr inbounds i16, i16* %145, i64 %idxprom161, !dbg !1000
  %147 = load i16, i16* %arrayidx162, align 2, !dbg !1000
  store i16 %147, i16* %m, align 2, !dbg !1003
  %148 = load i16, i16* %m, align 2, !dbg !1004
  %149 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1005
  %__ctype_b_data163 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %149, i32 0, i32 3, !dbg !1006
  %150 = load i32, i32* %u, align 4, !dbg !1007
  %add164 = add nsw i32 256, %150, !dbg !1008
  %idxprom165 = sext i32 %add164 to i64, !dbg !1005
  %arrayidx166 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data163, i64 0, i64 %idxprom165, !dbg !1005
  store i16 %148, i16* %arrayidx166, align 2, !dbg !1009
  %151 = load i32, i32* %u, align 4, !dbg !1010
  %add167 = add nsw i32 128, %151, !dbg !1012
  %conv168 = trunc i32 %add167 to i8, !dbg !1013
  %conv169 = sext i8 %conv168 to i32, !dbg !1014
  %cmp170 = icmp ne i32 %conv169, -1, !dbg !1015
  br i1 %cmp170, label %if.then172, label %if.end180, !dbg !1016
  %152 = load i16, i16* %m, align 2, !dbg !1017
  %153 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1019
  %__ctype_b_data173 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %153, i32 0, i32 3, !dbg !1020
  %154 = load i32, i32* %u, align 4, !dbg !1021
  %add174 = add nsw i32 128, %154, !dbg !1022
  %conv175 = trunc i32 %add174 to i8, !dbg !1023
  %conv176 = sext i8 %conv175 to i32, !dbg !1024
  %add177 = add nsw i32 128, %conv176, !dbg !1025
  %idxprom178 = sext i32 %add177 to i64, !dbg !1019
  %arrayidx179 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data173, i64 0, i64 %idxprom178, !dbg !1019
  store i16 %152, i16* %arrayidx179, align 2, !dbg !1026
  br label %if.end180, !dbg !1027
  %155 = load i32, i32* %u, align 4, !dbg !1028
  %add181 = add nsw i32 128, %155, !dbg !1029
  %conv182 = trunc i32 %add181 to i16, !dbg !1030
  %156 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1031
  %__ctype_tolower_data183 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %156, i32 0, i32 4, !dbg !1032
  %157 = load i32, i32* %u, align 4, !dbg !1033
  %add184 = add nsw i32 256, %157, !dbg !1034
  %idxprom185 = sext i32 %add184 to i64, !dbg !1031
  %arrayidx186 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data183, i64 0, i64 %idxprom185, !dbg !1031
  store i16 %conv182, i16* %arrayidx186, align 2, !dbg !1035
  %158 = load i32, i32* %u, align 4, !dbg !1036
  %add187 = add nsw i32 128, %158, !dbg !1037
  %conv188 = trunc i32 %add187 to i16, !dbg !1038
  %159 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1039
  %__ctype_toupper_data189 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %159, i32 0, i32 5, !dbg !1040
  %160 = load i32, i32* %u, align 4, !dbg !1041
  %add190 = add nsw i32 256, %160, !dbg !1042
  %idxprom191 = sext i32 %add190 to i64, !dbg !1039
  %arrayidx192 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data189, i64 0, i64 %idxprom191, !dbg !1039
  store i16 %conv188, i16* %arrayidx192, align 2, !dbg !1043
  %161 = load i16, i16* %m, align 2, !dbg !1044
  %conv193 = zext i16 %161 to i32, !dbg !1044
  %and194 = and i32 %conv193, 768, !dbg !1046
  %tobool195 = icmp ne i32 %and194, 0, !dbg !1046
  br i1 %tobool195, label %if.then196, label %if.end267, !dbg !1047
  %162 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1048
  %tbl8uplow = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %162, i32 0, i32 15, !dbg !1050
  %163 = load i8*, i8** %tbl8uplow, align 8, !dbg !1050
  %164 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !1051
  %idx8uplow197 = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %164, i32 0, i32 1, !dbg !1052
  %165 = load i32, i32* %u, align 4, !dbg !1053
  %shr198 = ashr i32 %165, 3, !dbg !1054
  %idxprom199 = sext i32 %shr198 to i64, !dbg !1051
  %arrayidx200 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8uplow197, i64 0, i64 %idxprom199, !dbg !1051
  %166 = load i8, i8* %arrayidx200, align 1, !dbg !1051
  %conv201 = zext i8 %166 to i32, !dbg !1055
  %shl202 = shl i32 %conv201, 3, !dbg !1056
  %167 = load i32, i32* %u, align 4, !dbg !1057
  %add203 = add nsw i32 128, %167, !dbg !1058
  %and204 = and i32 %add203, 7, !dbg !1059
  %add205 = add nsw i32 %shl202, %and204, !dbg !1060
  %idxprom206 = sext i32 %add205 to i64, !dbg !1048
  %arrayidx207 = getelementptr inbounds i8, i8* %163, i64 %idxprom206, !dbg !1048
  %168 = load i8, i8* %arrayidx207, align 1, !dbg !1048
  %conv208 = zext i8 %168 to i32, !dbg !1048
  store i32 %conv208, i32* %c, align 4, !dbg !1061
  %169 = load i16, i16* %m, align 2, !dbg !1062
  %conv209 = zext i16 %169 to i32, !dbg !1062
  %and210 = and i32 %conv209, 512, !dbg !1064
  %tobool211 = icmp ne i32 %and210, 0, !dbg !1064
  br i1 %tobool211, label %if.then212, label %if.else239, !dbg !1065
  %170 = load i32, i32* %u, align 4, !dbg !1066
  %add213 = add nsw i32 128, %170, !dbg !1068
  %171 = load i32, i32* %c, align 4, !dbg !1069
  %add214 = add nsw i32 %add213, %171, !dbg !1070
  %conv215 = trunc i32 %add214 to i8, !dbg !1071
  %conv216 = zext i8 %conv215 to i16, !dbg !1071
  %172 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1072
  %__ctype_toupper_data217 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %172, i32 0, i32 5, !dbg !1073
  %173 = load i32, i32* %u, align 4, !dbg !1074
  %add218 = add nsw i32 256, %173, !dbg !1075
  %idxprom219 = sext i32 %add218 to i64, !dbg !1072
  %arrayidx220 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data217, i64 0, i64 %idxprom219, !dbg !1072
  store i16 %conv216, i16* %arrayidx220, align 2, !dbg !1076
  %174 = load i32, i32* %u, align 4, !dbg !1077
  %add221 = add nsw i32 128, %174, !dbg !1079

//Instructions in stack: Num.403
//Instructions in stack: Num.404
//Instructions in stack: Num.405
//Instructions in stack: Num.406
//Instructions in stack: Num.407
//Instructions in stack: Num.408
//Instructions in stack: Num.409
//Instructions in stack: Num.410
//Instructions in stack: Num.411
//Instructions in stack: Num.412
//Instructions in stack: Num.413
//Instructions in stack: Num.414
//Instructions in stack: Num.415
//Instructions in stack: Num.416
//Instructions in stack: Num.417
//Instructions in stack: Num.418
//Instructions in stack: Num.419
//Instructions in stack: Num.420
//Instructions in stack: Num.421
//Instructions in stack: Num.422
//Instructions in stack: Num.423
//Instructions in stack: Num.424
//Instructions in stack: Num.425
//Instructions in stack: Num.426
//Instructions in stack: Num.427
//Instructions in stack: Num.428
//Instructions in stack: Num.429
//Instructions in stack: Num.430
//Instructions in stack: Num.431
//Instructions in stack: Num.432
//Instructions in stack: Num.433
//Instructions in stack: Num.434
//Instructions in stack: Num.435
//Instructions in stack: Num.436
//Instructions in stack: Num.437
//Instructions in stack: Num.438
//Instructions in stack: Num.439
//Instructions in stack: Num.440
//Instructions in stack: Num.441
//Instructions in stack: Num.442
//Instructions in stack: Num.443
//Instructions in stack: Num.444
//Instructions in stack: Num.445
//Instructions in stack: Num.446
//Instructions in stack: Num.447
//Instructions in stack: Num.448
//Instructions in stack: Num.449
//Instructions in stack: Num.450
//Instructions in stack: Num.451
//Instructions in stack: Num.452
//Instructions in stack: Num.453
//Instructions in stack: Num.454
//Instructions in stack: Num.455
//Instructions in stack: Num.456
//Instructions in stack: Num.457
//Instructions in stack: Num.458
//Instructions in stack: Num.459
//Instructions in stack: Num.460
//Instructions in stack: Num.461
//Instructions in stack: Num.462
//Instructions in stack: Num.463
//Instructions in stack: Num.464
//Instructions in stack: Num.465
//Instructions in stack: Num.466
//Instructions in stack: Num.467
//Instructions in stack: Num.468
//Instructions in stack: Num.469
//Instructions in stack: Num.470
//Instructions in stack: Num.471
//Instructions in stack: Num.472
//Instructions in stack: Num.473
//Instructions in stack: Num.474
//Instructions in stack: Num.475
//Instructions in stack: Num.476
//Instructions in stack: Num.477
//Instructions in stack: Num.478
//Instructions in stack: Num.479
//Instructions in stack: Num.480
//Instructions in stack: Num.481
//Instructions in stack: Num.482
//Instructions in stack: Num.483
//Instructions in stack: Num.484
//Instructions in stack: Num.485
//Instructions in stack: Num.486
//Instructions in stack: Num.487
//Instructions in stack: Num.488
//Instructions in stack: Num.489
//Instructions in stack: Num.490
//Instructions in stack: Num.491
//Instructions in stack: Num.492
//Instructions in stack: Num.493
//Instructions in stack: Num.494
//Instructions in stack: Num.495
//Instructions in stack: Num.496
//Instructions in stack: Num.497
//Instructions in stack: Num.498
//Instructions in stack: Num.499
//Instructions in stack: Num.500
//Instructions in stack: Num.501
//Instructions in stack: Num.502
//Instructions in stack: Num.503
//Instructions in stack: Num.504
//Instructions in stack: Num.505
//Instructions in stack: Num.506
//Instructions in stack: Num.507
//Instructions in stack: Num.508
//Instructions in stack: Num.509
//Instructions in stack: Num.510
//Instructions in stack: Num.511
//Instructions in stack: Num.512
//Instructions in stack: Num.513
//Instructions in stack: Num.514
//Instructions in stack: Num.515
//Instructions in stack: Num.516
//Instructions in stack: Num.517
//Instructions in stack: Num.518
//Instructions in stack: Num.519
//Instructions in stack: Num.520
//Instructions in stack: Num.521
//Instructions in stack: Num.522
//Instructions in stack: Num.523
//Instructions in stack: Num.524
//Instructions in stack: Num.525
//Instructions in stack: Num.526
//I  %conv222 = trunc i32 %add221 to i8, !dbg !1080
  %conv223 = sext i8 %conv222 to i32, !dbg !1081
  %cmp224 = icmp ne i32 %conv223, -1, !dbg !1082
  br i1 %cmp224, label %if.then226, label %if.end238, !dbg !1083
  %175 = load i32, i32* %u, align 4, !dbg !1084
  %add227 = add nsw i32 128, %175, !dbg !1086
  %176 = load i32, i32* %c, align 4, !dbg !1087
  %add228 = add nsw i32 %add227, %176, !dbg !1088
  %conv229 = trunc i32 %add228 to i8, !dbg !1089
  %conv230 = zext i8 %conv229 to i16, !dbg !1089
  %177 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1090
  %__ctype_toupper_data231 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %177, i32 0, i32 5, !dbg !1091
  %178 = load i32, i32* %u, align 4, !dbg !1092
  %add232 = add nsw i32 128, %178, !dbg !1093
  %conv233 = trunc i32 %add232 to i8, !dbg !1094
  %conv234 = sext i8 %conv233 to i32, !dbg !1095
  %add235 = add nsw i32 128, %conv234, !dbg !1096
  %idxprom236 = sext i32 %add235 to i64, !dbg !1090
  %arrayidx237 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data231, i64 0, i64 %idxprom236, !dbg !1090
  store i16 %conv230, i16* %arrayidx237, align 2, !dbg !1097
  br label %if.end238, !dbg !1098
  br label %if.end266, !dbg !1099
  %179 = load i32, i32* %u, align 4, !dbg !1100
  %add240 = add nsw i32 128, %179, !dbg !1102
  %180 = load i32, i32* %c, align 4, !dbg !1103
  %sub241 = sub nsw i32 %add240, %180, !dbg !1104
  %conv242 = trunc i32 %sub241 to i8, !dbg !1105
  %conv243 = zext i8 %conv242 to i16, !dbg !1105
  %181 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1106
  %__ctype_tolower_data244 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %181, i32 0, i32 4, !dbg !1107
  %182 = load i32, i32* %u, align 4, !dbg !1108
  %add245 = add nsw i32 256, %182, !dbg !1109
  %idxprom246 = sext i32 %add245 to i64, !dbg !1106
  %arrayidx247 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data244, i64 0, i64 %idxprom246, !dbg !1106
  store i16 %conv243, i16* %arrayidx247, align 2, !dbg !1110
  %183 = load i32, i32* %u, align 4, !dbg !1111
  %add248 = add nsw i32 128, %183, !dbg !1113
  %conv249 = trunc i32 %add248 to i8, !dbg !1114
  %conv250 = sext i8 %conv249 to i32, !dbg !1115
  %cmp251 = icmp ne i32 %conv250, -1, !dbg !1116
  br i1 %cmp251, label %if.then253, label %if.end265, !dbg !1117
  %184 = load i32, i32* %u, align 4, !dbg !1118
  %add254 = add nsw i32 128, %184, !dbg !1120
  %185 = load i32, i32* %c, align 4, !dbg !1121
  %sub255 = sub nsw i32 %add254, %185, !dbg !1122
  %conv256 = trunc i32 %sub255 to i8, !dbg !1123
  %conv257 = zext i8 %conv256 to i16, !dbg !1123
  %186 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1124
  %__ctype_tolower_data258 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %186, i32 0, i32 4, !dbg !1125
  %187 = load i32, i32* %u, align 4, !dbg !1126
  %add259 = add nsw i32 128, %187, !dbg !1127
  %conv260 = trunc i32 %add259 to i8, !dbg !1128
  %conv261 = sext i8 %conv260 to i32, !dbg !1129
  %add262 = add nsw i32 128, %conv261, !dbg !1130
  %idxprom263 = sext i32 %add262 to i64, !dbg !1124
  %arrayidx264 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data258, i64 0, i64 %idxprom263, !dbg !1124
  store i16 %conv257, i16* %arrayidx264, align 2, !dbg !1131
  br label %if.end265, !dbg !1132
  br label %if.end266
  br label %if.end267, !dbg !1133
  br label %for.inc268, !dbg !1134
  %188 = load i32, i32* %u, align 4, !dbg !1135
  %inc269 = add nsw i32 %188, 1, !dbg !1135
  store i32 %inc269, i32* %u, align 4, !dbg !1135
  br label %for.cond142, !dbg !1136, !llvm.loop !1137
  %189 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1139
  %__ctype_b_data271 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %189, i32 0, i32 3, !dbg !1140
  %arraydecay272 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data271, i64 0, i64 0, !dbg !1139
  %add.ptr273 = getelementptr inbounds i16, i16* %arraydecay272, i64 128, !dbg !1141
  %190 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1142
  %__ctype_b = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %190, i32 0, i32 0, !dbg !1143
  store i16* %add.ptr273, i16** %__ctype_b, align 8, !dbg !1144
  %191 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1145
  %__ctype_tolower_data274 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %191, i32 0, i32 4, !dbg !1146
  %arraydecay275 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data274, i64 0, i64 0, !dbg !1145
  %add.ptr276 = getelementptr inbounds i16, i16* %arraydecay275, i64 128, !dbg !1147
  %192 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1148
  %__ctype_tolower = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %192, i32 0, i32 1, !dbg !1149
  store i16* %add.ptr276, i16** %__ctype_tolower, align 8, !dbg !1150
  %193 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1151
  %__ctype_toupper_data277 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %193, i32 0, i32 5, !dbg !1152
  %arraydecay278 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data277, i64 0, i64 0, !dbg !1151
  %add.ptr279 = getelementptr inbounds i16, i16* %arraydecay278, i64 128, !dbg !1153
  %194 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1154
  %__ctype_toupper = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %194, i32 0, i32 2, !dbg !1155
  store i16* %add.ptr279, i16** %__ctype_toupper, align 8, !dbg !1156
  br label %if.end280
  %195 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1157
  %outdigit_length = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %195, i32 0, i32 11, !dbg !1158
  %arraydecay281 = getelementptr inbounds [10 x i8], [10 x i8]* %outdigit_length, i64 0, i64 0, !dbg !1157
  store i8* %arraydecay281, i8** %d, align 8, !dbg !1159
  %196 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1160
  %outdigit0_mb = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %196, i32 0, i32 28, !dbg !1161
  store i8** %outdigit0_mb, i8*** %x, align 8, !dbg !1162
  store i32 0, i32* %c, align 4, !dbg !1163
  br label %for.cond282, !dbg !1165
  %197 = load i32, i32* %c, align 4, !dbg !1166
  %cmp283 = icmp slt i32 %197, 10, !dbg !1168
  br i1 %cmp283, label %for.body285, label %for.end294, !dbg !1169
  %198 = load i8**, i8*** %x, align 8, !dbg !1170
  %199 = load i32, i32* %c, align 4, !dbg !1172
  %idxprom286 = sext i32 %199 to i64, !dbg !1170
  %arrayidx287 = getelementptr inbounds i8*, i8** %198, i64 %idxprom286, !dbg !1170
  %200 = load i8*, i8** %arrayidx287, align 8, !dbg !1170
  %call288 = call i64 @strlen(i8* %200) #12, !dbg !1173
  %conv289 = trunc i64 %call288 to i8, !dbg !1173
  %201 = load i8*, i8** %d, align 8, !dbg !1174
  %202 = load i32, i32* %c, align 4, !dbg !1175
  %idxprom290 = sext i32 %202 to i64, !dbg !1176
  %arrayidx291 = getelementptr inbounds i8, i8* %201, i64 %idxprom290, !dbg !1176
  store i8 %conv289, i8* %arrayidx291, align 1, !dbg !1177
  br label %for.inc292, !dbg !1178
  %203 = load i32, i32* %c, align 4, !dbg !1179
  %inc293 = add nsw i32 %203, 1, !dbg !1179
  store i32 %inc293, i32* %c, align 4, !dbg !1179
  br label %for.cond282, !dbg !1180, !llvm.loop !1181
  br label %if.end312, !dbg !1183
  %204 = load i32, i32* %i, align 4, !dbg !1184
  %cmp296 = icmp eq i32 %204, 1, !dbg !1186
  br i1 %cmp296, label %if.then298, label %if.end311, !dbg !1187
  %205 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1188
  %decimal_point_wc = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %205, i32 0, i32 24, !dbg !1190
  %206 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1191
  %decimal_point = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %206, i32 0, i32 39, !dbg !1192
nstructions in stack: Num.527
//Instructions in stack: Num.528
//Instructions in stack: Num.529
//Instructions in stack: Num.530
//Instructions in stack: Num.531
//Instructions in stack: Num.532
//Instructions in stack: Num.533
//Instructions in stack: Num.534
//Instructions in stack: Num.535
//Instructions in stack: Num.536
//Instructions in stack: Num.537
//Instructions in stack: Num.538
//Instructions in stack: Num.539
//Instructions in stack: Num.540
//Instructions in stack: Num.541
//Instructions in stack: Num.542
//Instructions in stack: Num.543
//Instructions in stack: Num.544
//Instructions in stack: Num.545
//Instructions in stack: Num.546
//Instructions in stack: Num.547
//Instructions in stack: Num.548
//Instructions in stack: Num.549
//Instructions in stack: Num.550
//Instructions in stack: Num.551
//Instructions in stack: Num.552
//Instructions in stack: Num.553
//Instructions in stack: Num.554
//Instructions in stack: Num.555
//Instructions in stack: Num.556
//Instructions in stack: Num.557
//Instructions in stack: Num.558
//Instructions in stack: Num.559
//Instructions in stack: Num.560
//Instructions in stack: Num.561
//Instructions in stack: Num.562
//Instructions in stack: Num.563
//Instructions in stack: Num.564
//Instructions in stack: Num.565
//Instructions in stack: Num.566
//Instructions in stack: Num.567
//Instructions in stack: Num.568
//Instructions in stack: Num.569
//Instructions in stack: Num.570
//Instructions in stack: Num.571
//Instructions in stack: Num.572
//Instructions in stack: Num.573
//Instructions in stack: Num.574
//Instructions in stack: Num.575
//Instructions in stack: Num.576
//Instructions in stack: Num.577
//Instructions in stack: Num.578
//Instructions in stack: Num.579
//Instructions in stack: Num.580
//Instructions in stack: Num.581
//Instructions in stack: Num.582
//Instructions in stack: Num.583
//Instructions in stack: Num.584
//Instructions in stack: Num.585
//Instructions in stack: Num.586
//Instructions in stack: Num.587
//Instructions in stack: Num.588
//Instructions in stack: Num.589
//Instructions in stack: Num.590
//Instructions in stack: Num.591
//Instructions in stack: Num.592
//Instructions in stack: Num.593
//Instructions in stack: Num.594
//Instructions in stack: Num.595
//Instructions in stack: Num.596
//Instructions in stack: Num.597
//Instructions in stack: Num.598
//Instructions in stack: Num.599
//Instructions in stack: Num.600
//Instructions in stack: Num.601
//Instructions in stack: Num.602
//Instructions in stack: Num.603
//Instructions in stack: Num.604
//Instructions in stack: Num.605
//Instructions in stack: Num.606
//Instructions in stack: Num.607
//Instructions in stack: Num.608
//Instructions in stack: Num.609
//Instructions in stack: Num.610
//Instructions in stack: Num.611
//Instructions in stack: Num.612
//Instructions in stack: Num.613
//Instructions in stack: Num.614
//Instructions in stack: Num.615
//Instructions in stack: Num.616
//Instructions in stack: Num.617
//Instructions in stack: Num.618
//Instructions in stack: Num.619
//Instructions in stack: Num.620
//Instructions in stack: Num.621
//Instructions in stack: Num.622
//Instructions in stack: Num.623
//Instructions in stack: Num.624
//Instructions in stack: Num.625
//Instructions in stack: Num.626
//Instructions in stack: Num.627
//Instructions in stack: Num.628
//Instructions in stack: Num.629
//Instructions in stack: Num.630
//Instructions in stack: Num.631
//Instructions in stack: Num.632
//Instructions in stack: Num.633
//Instructions in stack: Num.634
//Instructions in stack: Num.635
//Instructions in stack: Num.636
//Instructions in stack: Num.637
//Instructions in stack: Num.638
//Instructions in stack: Num.639
//Instructions in stack: Num.640
//Instructions in stack: Num.641
//Instructions in stack: Num.642
//Instructions in stack: Num.643
//Instructions in stack: Num.644
//Instructions in stack: Num.645
//Instructions in stack: Num.646
//Instructions in stack: Num.647
//Instructions in stack: Num.648
//Instructions in stack: Num.649
//Instructions in stack: Num.650
//Instr  %207 = load i8*, i8** %decimal_point, align 8, !dbg !1192
  %208 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1193
  %call299 = call i32 @__locale_mbrtowc_l(i32* %decimal_point_wc, i8* %207, %struct.__uclibc_locale_struct.160* %208) #10, !dbg !1194
  %209 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1195
  %decimal_point_len = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %209, i32 0, i32 26, !dbg !1196
  store i32 %call299, i32* %decimal_point_len, align 8, !dbg !1197
  %210 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1198
  %grouping = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %210, i32 0, i32 41, !dbg !1200
  %211 = load i8*, i8** %grouping, align 8, !dbg !1200
  %212 = load i8, i8* %211, align 1, !dbg !1201
  %tobool300 = icmp ne i8 %212, 0, !dbg !1201
  br i1 %tobool300, label %if.then301, label %if.end310, !dbg !1202
  %213 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1203
  %thousands_sep_wc = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %213, i32 0, i32 25, !dbg !1205
  %214 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1206
  %thousands_sep = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %214, i32 0, i32 40, !dbg !1207
  %215 = load i8*, i8** %thousands_sep, align 8, !dbg !1207
  %216 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1208
  %call302 = call i32 @__locale_mbrtowc_l(i32* %thousands_sep_wc, i8* %215, %struct.__uclibc_locale_struct.160* %216) #10, !dbg !1209
  %217 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1210
  %thousands_sep_len = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %217, i32 0, i32 27, !dbg !1211
  store i32 %call302, i32* %thousands_sep_len, align 4, !dbg !1212
  %218 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1213
  %thousands_sep_len303 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %218, i32 0, i32 27, !dbg !1215
  %219 = load i32, i32* %thousands_sep_len303, align 4, !dbg !1215
  %cmp304 = icmp eq i32 %219, 0, !dbg !1216
  br i1 %cmp304, label %if.then306, label %if.end309, !dbg !1217
  %220 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1218
  %thousands_sep307 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %220, i32 0, i32 40, !dbg !1220
  %221 = load i8*, i8** %thousands_sep307, align 8, !dbg !1220
  %222 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1221
  %grouping308 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %222, i32 0, i32 41, !dbg !1222
  store i8* %221, i8** %grouping308, align 8, !dbg !1223
  br label %if.end309, !dbg !1224
  br label %if.end310, !dbg !1225
  br label %if.end311, !dbg !1226
  br label %if.end312
  br label %if.end313, !dbg !1227
  %223 = load i32, i32* %i, align 4, !dbg !1228
  %inc314 = add nsw i32 %223, 1, !dbg !1228
  store i32 %inc314, i32* %i, align 4, !dbg !1228
  %224 = load i8*, i8** %p.addr, align 8, !dbg !1229
  %add.ptr315 = getelementptr inbounds i8, i8* %224, i64 2, !dbg !1229
  store i8* %add.ptr315, i8** %p.addr, align 8, !dbg !1229
  %225 = load i8*, i8** %s, align 8, !dbg !1230
  %add.ptr316 = getelementptr inbounds i8, i8* %225, i64 2, !dbg !1230
  store i8* %add.ptr316, i8** %s, align 8, !dbg !1230
  br label %do.cond, !dbg !1231
  %226 = load i32, i32* %i, align 4, !dbg !1232
  %cmp317 = icmp slt i32 %226, 6, !dbg !1233
  br i1 %cmp317, label %do.body, label %do.end, !dbg !1231, !llvm.loop !1234
  store i32 1, i32* %retval, align 4, !dbg !1236
  br label %return, !dbg !1236
  %227 = load i32, i32* %retval, align 4, !dbg !1237
  ret i32 %227, !dbg !1237
  %retval = alloca i32, align 4
  %der_num.addr = alloca i32, align 4
  %cur_collate.addr = alloca %struct.__collate_t.159*, align 8
  %__locale_collate_tbl = alloca i16*, align 8
  %cdh = alloca %struct.coldata_header_t*, align 8
  %cdb = alloca %struct.coldata_base_t*, align 8
  %cdd = alloca %struct.coldata_der_t*, align 8
  %p = alloca i16*, align 8
  %n = alloca i64, align 8
  %i = alloca i16, align 2
  %w = alloca i16, align 2
  store i32 %der_num, i32* %der_num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %der_num.addr, metadata !1642, metadata !DIExpression()), !dbg !1643
  store %struct.__collate_t.159* %cur_collate, %struct.__collate_t.159** %cur_collate.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__collate_t.159** %cur_collate.addr, metadata !1644, metadata !DIExpression()), !dbg !1645
  call void @llvm.dbg.declare(metadata i16** %__locale_collate_tbl, metadata !1646, metadata !DIExpression()), !dbg !1647
  %0 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !667
  %collate_data = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %0, i32 0, i32 28, !dbg !668
  %arraydecay = getelementptr inbounds [91141 x i16], [91141 x i16]* %collate_data, i64 0, i64 0, !dbg !667
  store i16* %arraydecay, i16** %__locale_collate_tbl, align 8, !dbg !666
  call void @llvm.dbg.declare(metadata %struct.coldata_header_t** %cdh, metadata !1650, metadata !DIExpression()), !dbg !1651
  call void @llvm.dbg.declare(metadata %struct.coldata_base_t** %cdb, metadata !1652, metadata !DIExpression()), !dbg !1653
  call void @llvm.dbg.declare(metadata %struct.coldata_der_t** %cdd, metadata !1654, metadata !DIExpression()), !dbg !1655
  call void @llvm.dbg.declare(metadata i16** %p, metadata !1656, metadata !DIExpression()), !dbg !1657
  call void @llvm.dbg.declare(metadata i64* %n, metadata !1658, metadata !DIExpression()), !dbg !1659
  call void @llvm.dbg.declare(metadata i16* %i, metadata !1660, metadata !DIExpression()), !dbg !1661
  call void @llvm.dbg.declare(metadata i16* %w, metadata !1662, metadata !DIExpression()), !dbg !1663
  %1 = load i32, i32* %der_num.addr, align 4, !dbg !683
  %tobool = icmp ne i32 %1, 0, !dbg !683
  br i1 %tobool, label %if.end, label %if.then, !dbg !685
  %2 = load %struct.__collate_t.159*, %struct.__collate_t.159** %cur_collate.addr, align 8, !dbg !686
  %num_weights = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %2, i32 0, i32 0, !dbg !688
  store i16 0, i16* %num_weights, align 8, !dbg !689
  store i32 1, i32* %retval, align 4, !dbg !690
  br label %return, !dbg !690
  %3 = load i32, i32* %der_num.addr, align 4, !dbg !691
  %dec = add nsw i32 %3, -1, !dbg !691
  store i32 %dec, i32* %der_num.addr, align 4, !dbg !691
  %4 = load i16*, i16** %__locale_collate_tbl, align 8, !dbg !692
  %5 = bitcast i16* %4 to %struct.coldata_header_t*, !dbg !693
  store %struct.coldata_header_t* %5, %struct.coldata_header_t** %cdh, align 8, !dbg !694
  %6 = load i16*, i16** %__locale_collate_tbl, align 8, !dbg !695
  %7 = load %struct.coldata_header_t*, %struct.coldata_header_t** %cdh, align 8, !dbg !696
  %num_base = getelementptr inbounds %struct.coldata_header_t, %struct.coldata_header_t* %7, i32 0, i32 0, !dbg !697
  %8 = load i16, i16* %num_base, align 2, !dbg !697
  %conv = zext i16 %8 to i64, !dbg !696
  %mul = mul i64 %conv, 38, !dbg !698
  %add = add i64 16, %mul, !dbg !699
  %9 = load i32, i32* %der_num.addr, align 4, !dbg !700
  %conv1 = sext i32 %9 to i64, !dbg !700
  %mul2 = mul i64 %conv1, 8, !dbg !701
  %add3 = add i64 %add, %mul2, !dbg !702
  %div = udiv i64 %add3, 2, !dbg !703
  %add.ptr = getelementptr inbounds i16, i16* %6, i64 %div, !dbg !704
  %10 = bitcast i16* %add.ptr to %struct.coldata_der_t*, !dbg !705
  store %struct.coldata_der_t* %10, %struct.coldata_der_t** %cdd, align 8, !dbg !706
  %11 = load i16*, i16** %__locale_collate_tbl, align 8, !dbg !707
  %12 = load %struct.coldata_der_t*, %struct.coldata_der_t** %cdd, align 8, !dbg !708
  %base_idx = getelementptr inbounds %struct.coldata_der_t, %struct.coldata_der_t* %12, i32 0, i32 0, !dbg !709
  %13 = load i16, i16* %base_idx, align 2, !dbg !709
  %conv4 = zext i16 %13 to i64, !dbg !708
  %mul5 = mul i64 %conv4, 38, !dbg !710
  %add6 = add i64 16, %mul5, !dbg !711
  %div7 = udiv i64 %add6, 2, !dbg !712
  %add.ptr8 = getelementptr inbounds i16, i16* %11, i64 %div7, !dbg !713
  %14 = bitcast i16* %add.ptr8 to %struct.coldata_base_t*, !dbg !714
  store %struct.coldata_base_t* %14, %struct.coldata_base_t** %cdb, align 8, !dbg !715
  %15 = load %struct.__collate_t.159*, %struct.__collate_t.159** %cur_collate.addr, align 8, !dbg !716
  %16 = bitcast %struct.__collate_t.159* %15 to i8*, !dbg !716
  %17 = load %struct.coldata_base_t*, %struct.coldata_base_t** %cdb, align 8, !dbg !717
  %18 = bitcast %struct.coldata_base_t* %17 to i8*, !dbg !717
uctions in stack: Num.651
//Instructions in stack: Num.652
//Instructions in stack: Num.653
//Instructions in stack: Num.654
//Instructions in stack: Num.655
//Instructions in stack: Num.656
//Instructions in stack: Num.657
//Instructions in stack: Num.658
//Instructions in stack: Num.659
//Instructions in stack: Num.660
//Instructions in stack: Num.661
//Instructions in stack: Num.662
//Instructions in stack: Num.663
//Instructions in stack: Num.664
//Instructions in stack: Num.665
//Instructions in stack: Num.666
//Instructions in stack: Num.667
//Instructions in stack: Num.668
//Instructions in stack: Num.669
//Instructions in stack: Num.670
//Instructions in stack: Num.671
//Instructions in stack: Num.672
//Instructions in stack: Num.673
//Instructions in stack: Num.674
//Instructions in stack: Num.675
//Instructions in stack: Num.676
//Instructions in stack: Num.677
//Instructions in stack: Num.678
//Instructions in stack: Num.679
//Instructions in stack: Num.680
//Instructions in stack: Num.681
//Instructions in stack: Num.682
//Instructions in stack: Num.683
//Instructions in stack: Num.684
//Instructions in stack: Num.685
//Instructions in stack: Num.686
//Instructions in stack: Num.687
//Instructions in stack: Num.688
//Instructions in stack: Num.689
//Instructions in stack: Num.690
//Instructions in stack: Num.691
//Instructions in stack: Num.692
//Instructions in stack: Num.693
//Instructions in stack: Num.694
//Instructions in stack: Num.695
//Instructions in stack: Num.696
//Instructions in stack: Num.697
//Instructions in stack: Num.698
//Instructions in stack: Num.699
//Instructions in stack: Num.700
//Instructions in stack: Num.701
//Instructions in stack: Num.702
//Instructions in stack: Num.703
//Instructions in stack: Num.704
//Instructions in stack: Num.705
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: N  %call = call i8* @memcpy(i8* %16, i8* %18, i64 28) #10, !dbg !718
  %19 = load %struct.coldata_der_t*, %struct.coldata_der_t** %cdd, align 8, !dbg !719
  %undefined_idx = getelementptr inbounds %struct.coldata_der_t, %struct.coldata_der_t* %19, i32 0, i32 1, !dbg !720
  %20 = load i16, i16* %undefined_idx, align 2, !dbg !720
  %21 = load %struct.__collate_t.159*, %struct.__collate_t.159** %cur_collate.addr, align 8, !dbg !721
  %undefined_idx9 = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %21, i32 0, i32 9, !dbg !722
  store i16 %20, i16* %undefined_idx9, align 2, !dbg !723
  %22 = load %struct.__collate_t.159*, %struct.__collate_t.159** %cur_collate.addr, align 8, !dbg !724
  %ti_shift = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %22, i32 0, i32 3, !dbg !725
  %23 = load i16, i16* %ti_shift, align 2, !dbg !725
  %conv10 = zext i16 %23 to i32, !dbg !724
  %int_cast_to_i64 = zext i32 %conv10 to i64, !dbg !726
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i64), !dbg !726
  %shl = shl i32 1, %conv10, !dbg !726, !klee.check.shift !727
  %sub = sub nsw i32 %shl, 1, !dbg !728
  %conv11 = trunc i32 %sub to i16, !dbg !729
  %24 = load %struct.__collate_t.159*, %struct.__collate_t.159** %cur_collate.addr, align 8, !dbg !730
  %ti_mask = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %24, i32 0, i32 15, !dbg !731
  store i16 %conv11, i16* %ti_mask, align 2, !dbg !732
  %25 = load %struct.__collate_t.159*, %struct.__collate_t.159** %cur_collate.addr, align 8, !dbg !733
  %ii_shift = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %25, i32 0, i32 2, !dbg !734
  %26 = load i16, i16* %ii_shift, align 4, !dbg !734
  %conv12 = zext i16 %26 to i32, !dbg !733
  %int_cast_to_i641 = zext i32 %conv12 to i64, !dbg !735
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i641), !dbg !735
  %shl13 = shl i32 1, %conv12, !dbg !735, !klee.check.shift !727
  %sub14 = sub nsw i32 %shl13, 1, !dbg !736
  %conv15 = trunc i32 %sub14 to i16, !dbg !737
  %27 = load %struct.__collate_t.159*, %struct.__collate_t.159** %cur_collate.addr, align 8, !dbg !738
  %ii_mask = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %27, i32 0, i32 14, !dbg !739
  store i16 %conv15, i16* %ii_mask, align 4, !dbg !740
  %28 = load %struct.coldata_header_t*, %struct.coldata_header_t** %cdh, align 8, !dbg !741
  %num_base16 = getelementptr inbounds %struct.coldata_header_t, %struct.coldata_header_t* %28, i32 0, i32 0, !dbg !742
  %29 = load i16, i16* %num_base16, align 2, !dbg !742
  %conv17 = zext i16 %29 to i64, !dbg !741
  %mul18 = mul i64 %conv17, 38, !dbg !743
  %add19 = add i64 16, %mul18, !dbg !744
  %30 = load %struct.coldata_header_t*, %struct.coldata_header_t** %cdh, align 8, !dbg !745
  %num_der = getelementptr inbounds %struct.coldata_header_t, %struct.coldata_header_t* %30, i32 0, i32 1, !dbg !746
  %31 = load i16, i16* %num_der, align 2, !dbg !746
  %conv20 = zext i16 %31 to i64, !dbg !745
  %mul21 = mul i64 %conv20, 8, !dbg !747
  %add22 = add i64 %add19, %mul21, !dbg !748
  %div23 = udiv i64 %add22, 2, !dbg !749
  store i64 %div23, i64* %n, align 8, !dbg !750
  %32 = load i16*, i16** %__locale_collate_tbl, align 8, !dbg !751
  %33 = load i64, i64* %n, align 8, !dbg !752
  %add.ptr24 = getelementptr inbounds i16, i16* %32, i64 %33, !dbg !753
  %34 = load %struct.coldata_base_t*, %struct.coldata_base_t** %cdb, align 8, !dbg !754
  %index2weight_offset = getelementptr inbounds %struct.coldata_base_t, %struct.coldata_base_t* %34, i32 0, i32 14, !dbg !755
  %35 = load i16, i16* %index2weight_offset, align 2, !dbg !755
  %conv25 = zext i16 %35 to i32, !dbg !754
  %idx.ext = sext i32 %conv25 to i64, !dbg !756
  %add.ptr26 = getelementptr inbounds i16, i16* %add.ptr24, i64 %idx.ext, !dbg !756
  %36 = load %struct.__collate_t.159*, %struct.__collate_t.159** %cur_collate.addr, align 8, !dbg !757
  %index2weight_tbl = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %36, i32 0, i32 16, !dbg !758
  store i16* %add.ptr26, i16** %index2weight_tbl, align 8, !dbg !759
  %37 = load %struct.coldata_header_t*, %struct.coldata_header_t** %cdh, align 8, !dbg !760
  %num_index2weight = getelementptr inbounds %struct.coldata_header_t, %struct.coldata_header_t* %37, i32 0, i32 3, !dbg !761
  %38 = load i16, i16* %num_index2weight, align 2, !dbg !761
  %conv27 = zext i16 %38 to i64, !dbg !760
  %39 = load i64, i64* %n, align 8, !dbg !762
  %add28 = add i64 %39, %conv27, !dbg !762
  store i64 %add28, i64* %n, align 8, !dbg !762
  %40 = load i16*, i16** %__locale_collate_tbl, align 8, !dbg !763
  %41 = load i64, i64* %n, align 8, !dbg !764
  %add.ptr29 = getelementptr inbounds i16, i16* %40, i64 %41, !dbg !765
  %42 = load %struct.coldata_base_t*, %struct.coldata_base_t** %cdb, align 8, !dbg !766
  %index2ruleidx_offset = getelementptr inbounds %struct.coldata_base_t, %struct.coldata_base_t* %42, i32 0, i32 15, !dbg !767
  %43 = load i16, i16* %index2ruleidx_offset, align 2, !dbg !767
  %conv30 = zext i16 %43 to i32, !dbg !766
  %idx.ext31 = sext i32 %conv30 to i64, !dbg !768
  %add.ptr32 = getelementptr inbounds i16, i16* %add.ptr29, i64 %idx.ext31, !dbg !768
  %44 = load %struct.__collate_t.159*, %struct.__collate_t.159** %cur_collate.addr, align 8, !dbg !769
  %index2ruleidx_tbl = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %44, i32 0, i32 17, !dbg !770
  store i16* %add.ptr32, i16** %index2ruleidx_tbl, align 8, !dbg !771
  %45 = load %struct.coldata_header_t*, %struct.coldata_header_t** %cdh, align 8, !dbg !772
  %num_index2weight33 = getelementptr inbounds %struct.coldata_header_t, %struct.coldata_header_t* %45, i32 0, i32 3, !dbg !773
  %46 = load i16, i16* %num_index2weight33, align 2, !dbg !773
  %conv34 = zext i16 %46 to i64, !dbg !772
  %47 = load i64, i64* %n, align 8, !dbg !774
  %add35 = add i64 %47, %conv34, !dbg !774
  store i64 %add35, i64* %n, align 8, !dbg !774
  %48 = load i16*, i16** %__locale_collate_tbl, align 8, !dbg !775
  %49 = load i64, i64* %n, align 8, !dbg !776
  %add.ptr36 = getelementptr inbounds i16, i16* %48, i64 %49, !dbg !777
  %50 = load %struct.coldata_der_t*, %struct.coldata_der_t** %cdd, align 8, !dbg !778
  %multistart_offset = getelementptr inbounds %struct.coldata_der_t, %struct.coldata_der_t* %50, i32 0, i32 3, !dbg !779
  %51 = load i16, i16* %multistart_offset, align 2, !dbg !779
  %conv37 = zext i16 %51 to i32, !dbg !778
  %idx.ext38 = sext i32 %conv37 to i64, !dbg !780
  %add.ptr39 = getelementptr inbounds i16, i16* %add.ptr36, i64 %idx.ext38, !dbg !780
  %52 = load %struct.__collate_t.159*, %struct.__collate_t.159** %cur_collate.addr, align 8, !dbg !781
  %multistart_tbl = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %52, i32 0, i32 18, !dbg !782
  store i16* %add.ptr39, i16** %multistart_tbl, align 8, !dbg !783
  %53 = load %struct.coldata_header_t*, %struct.coldata_header_t** %cdh, align 8, !dbg !784
  %num_multistart = getelementptr inbounds %struct.coldata_header_t, %struct.coldata_header_t* %53, i32 0, i32 5, !dbg !785
  %54 = load i16, i16* %num_multistart, align 2, !dbg !785
  %conv40 = zext i16 %54 to i64, !dbg !784
  %55 = load i64, i64* %n, align 8, !dbg !786
  %add41 = add i64 %55, %conv40, !dbg !786
  store i64 %add41, i64* %n, align 8, !dbg !786
  %56 = load i16*, i16** %__locale_collate_tbl, align 8, !dbg !787
  %57 = load i64, i64* %n, align 8, !dbg !788
  %add.ptr42 = getelementptr inbounds i16, i16* %56, i64 %57, !dbg !789
  %58 = load %struct.coldata_der_t*, %struct.coldata_der_t** %cdd, align 8, !dbg !790
  %overrides_offset = getelementptr inbounds %struct.coldata_der_t, %struct.coldata_der_t* %58, i32 0, i32 2, !dbg !791
  %59 = load i16, i16* %overrides_offset, align 2, !dbg !791
  %conv43 = zext i16 %59 to i32, !dbg !790
  %idx.ext44 = sext i32 %conv43 to i64, !dbg !792
  %add.ptr45 = getelementptr inbounds i16, i16* %add.ptr42, i64 %idx.ext44, !dbg !792
  %60 = load %struct.__collate_t.159*, %struct.__collate_t.159** %cur_collate.addr, align 8, !dbg !793
  %overrides_tbl = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %60, i32 0, i32 20, !dbg !794
  store i16* %add.ptr45, i16** %overrides_tbl, align 8, !dbg !795
  %61 = load %struct.coldata_header_t*, %struct.coldata_header_t** %cdh, align 8, !dbg !796
  %num_override = getelementptr inbounds %struct.coldata_header_t, %struct.coldata_header_t* %61, i32 0, i32 6, !dbg !797
  %62 = load i16, i16* %num_override, align 2, !dbg !797
  %conv46 = zext i16 %62 to i64, !dbg !796
  %63 = load i64, i64* %n, align 8, !dbg !798
  %add47 = add i64 %63, %conv46, !dbg !798
  store i64 %add47, i64* %n, align 8, !dbg !798
  %64 = load i16*, i16** %__locale_collate_tbl, align 8, !dbg !799
  %65 = load i64, i64* %n, align 8, !dbg !800
  %add.ptr48 = getelementptr inbounds i16, i16* %64, i64 %65, !dbg !801
  %66 = load %struct.__collate_t.159*, %struct.__collate_t.159** %cur_collate.addr, align 8, !dbg !802
um.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.190
//Instructions in stack: Num.191
//Instructions in stack: Num.192
//Instructions in stack: Num.193
//Instructions in stack: Num.194
//Instructions in stack: Num.195
//Instructions in stack: N  %ruletable = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %66, i32 0, i32 22, !dbg !803
  store i16* %add.ptr48, i16** %ruletable, align 8, !dbg !804
  %67 = load %struct.coldata_header_t*, %struct.coldata_header_t** %cdh, align 8, !dbg !805
  %num_ruletable = getelementptr inbounds %struct.coldata_header_t, %struct.coldata_header_t* %67, i32 0, i32 7, !dbg !806
  %68 = load i16, i16* %num_ruletable, align 2, !dbg !806
  %conv49 = zext i16 %68 to i64, !dbg !805
  %69 = load i64, i64* %n, align 8, !dbg !807
  %add50 = add i64 %69, %conv49, !dbg !807
  store i64 %add50, i64* %n, align 8, !dbg !807
  %70 = load i16*, i16** %__locale_collate_tbl, align 8, !dbg !808
  %71 = load i64, i64* %n, align 8, !dbg !809
  %add.ptr51 = getelementptr inbounds i16, i16* %70, i64 %71, !dbg !810
  %72 = load %struct.__collate_t.159*, %struct.__collate_t.159** %cur_collate.addr, align 8, !dbg !811
  %weightstr = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %72, i32 0, i32 21, !dbg !812
  store i16* %add.ptr51, i16** %weightstr, align 8, !dbg !813
  %73 = load %struct.coldata_header_t*, %struct.coldata_header_t** %cdh, align 8, !dbg !814
  %num_weightstr = getelementptr inbounds %struct.coldata_header_t, %struct.coldata_header_t* %73, i32 0, i32 4, !dbg !815
  %74 = load i16, i16* %num_weightstr, align 2, !dbg !815
  %conv52 = zext i16 %74 to i64, !dbg !814
  %75 = load i64, i64* %n, align 8, !dbg !816
  %add53 = add i64 %75, %conv52, !dbg !816
  store i64 %add53, i64* %n, align 8, !dbg !816
  %76 = load i16*, i16** %__locale_collate_tbl, align 8, !dbg !817
  %77 = load i64, i64* %n, align 8, !dbg !818
  %add.ptr54 = getelementptr inbounds i16, i16* %76, i64 %77, !dbg !819
  %78 = load %struct.coldata_base_t*, %struct.coldata_base_t** %cdb, align 8, !dbg !820
  %wcs2colidt_offset_hi = getelementptr inbounds %struct.coldata_base_t, %struct.coldata_base_t* %78, i32 0, i32 18, !dbg !821
  %79 = load i16, i16* %wcs2colidt_offset_hi, align 2, !dbg !821
  %conv55 = zext i16 %79 to i64, !dbg !822
  %shl56 = shl i64 %conv55, 16, !dbg !823
  %add.ptr57 = getelementptr inbounds i16, i16* %add.ptr54, i64 %shl56, !dbg !824
  %80 = load %struct.coldata_base_t*, %struct.coldata_base_t** %cdb, align 8, !dbg !825
  %wcs2colidt_offset_low = getelementptr inbounds %struct.coldata_base_t, %struct.coldata_base_t* %80, i32 0, i32 17, !dbg !826
  %81 = load i16, i16* %wcs2colidt_offset_low, align 2, !dbg !826
  %conv58 = zext i16 %81 to i32, !dbg !825
  %idx.ext59 = sext i32 %conv58 to i64, !dbg !827
  %add.ptr60 = getelementptr inbounds i16, i16* %add.ptr57, i64 %idx.ext59, !dbg !827
  %82 = load %struct.__collate_t.159*, %struct.__collate_t.159** %cur_collate.addr, align 8, !dbg !828
  %wcs2colidt_tbl = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %82, i32 0, i32 19, !dbg !829
  store i16* %add.ptr60, i16** %wcs2colidt_tbl, align 8, !dbg !830
  %83 = load %struct.coldata_header_t*, %struct.coldata_header_t** %cdh, align 8, !dbg !831
  %MAX_WEIGHTS = getelementptr inbounds %struct.coldata_header_t, %struct.coldata_header_t* %83, i32 0, i32 2, !dbg !832
  %84 = load i16, i16* %MAX_WEIGHTS, align 2, !dbg !832
  %85 = load %struct.__collate_t.159*, %struct.__collate_t.159** %cur_collate.addr, align 8, !dbg !833
  %MAX_WEIGHTS61 = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %85, i32 0, i32 25, !dbg !834
  store i16 %84, i16* %MAX_WEIGHTS61, align 8, !dbg !835
  %86 = load %struct.__collate_t.159*, %struct.__collate_t.159** %cur_collate.addr, align 8, !dbg !836
  %max_col_index = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %86, i32 0, i32 8, !dbg !837
  %87 = load i16, i16* %max_col_index, align 8, !dbg !837
  %conv62 = zext i16 %87 to i32, !dbg !836
  %mul63 = mul nsw i32 2, %conv62, !dbg !838
  %add64 = add nsw i32 %mul63, 2, !dbg !839
  %conv65 = sext i32 %add64 to i64, !dbg !840
  %call66 = call noalias i8* @calloc(i64 %conv65, i64 2) #10, !dbg !841
  %88 = bitcast i8* %call66 to i16*, !dbg !841
  %89 = load %struct.__collate_t.159*, %struct.__collate_t.159** %cur_collate.addr, align 8, !dbg !842
  %index2weight = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %89, i32 0, i32 23, !dbg !843
  store i16* %88, i16** %index2weight, align 8, !dbg !844
  %90 = load %struct.__collate_t.159*, %struct.__collate_t.159** %cur_collate.addr, align 8, !dbg !845
  %index2weight67 = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %90, i32 0, i32 23, !dbg !847
  %91 = load i16*, i16** %index2weight67, align 8, !dbg !847
  %tobool68 = icmp ne i16* %91, null, !dbg !845
  br i1 %tobool68, label %if.end70, label %if.then69, !dbg !848
  store i32 0, i32* %retval, align 4, !dbg !849
  br label %return, !dbg !849
  %92 = load %struct.__collate_t.159*, %struct.__collate_t.159** %cur_collate.addr, align 8, !dbg !851
  %index2weight71 = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %92, i32 0, i32 23, !dbg !852
  %93 = load i16*, i16** %index2weight71, align 8, !dbg !852
  %94 = load %struct.__collate_t.159*, %struct.__collate_t.159** %cur_collate.addr, align 8, !dbg !853
  %max_col_index72 = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %94, i32 0, i32 8, !dbg !854
  %95 = load i16, i16* %max_col_index72, align 8, !dbg !854
  %conv73 = zext i16 %95 to i32, !dbg !853
  %idx.ext74 = sext i32 %conv73 to i64, !dbg !855
  %add.ptr75 = getelementptr inbounds i16, i16* %93, i64 %idx.ext74, !dbg !855
  %add.ptr76 = getelementptr inbounds i16, i16* %add.ptr75, i64 1, !dbg !856
  %96 = load %struct.__collate_t.159*, %struct.__collate_t.159** %cur_collate.addr, align 8, !dbg !857
  %index2ruleidx = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %96, i32 0, i32 24, !dbg !858
  store i16* %add.ptr76, i16** %index2ruleidx, align 8, !dbg !859
  %97 = load %struct.__collate_t.159*, %struct.__collate_t.159** %cur_collate.addr, align 8, !dbg !860
  %index2weight77 = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %97, i32 0, i32 23, !dbg !861
  %98 = load i16*, i16** %index2weight77, align 8, !dbg !861
  %99 = bitcast i16* %98 to i8*, !dbg !860
  %100 = load %struct.__collate_t.159*, %struct.__collate_t.159** %cur_collate.addr, align 8, !dbg !862
  %index2weight_tbl78 = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %100, i32 0, i32 16, !dbg !863
  %101 = load i16*, i16** %index2weight_tbl78, align 8, !dbg !863
  %102 = bitcast i16* %101 to i8*, !dbg !862
  %103 = load %struct.__collate_t.159*, %struct.__collate_t.159** %cur_collate.addr, align 8, !dbg !864
  %num_col_base = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %103, i32 0, i32 7, !dbg !865
  %104 = load i16, i16* %num_col_base, align 2, !dbg !865
  %conv79 = zext i16 %104 to i64, !dbg !864
  %mul80 = mul i64 %conv79, 2, !dbg !866
  %call81 = call i8* @memcpy(i8* %99, i8* %102, i64 %mul80) #10, !dbg !867
  %105 = load %struct.__collate_t.159*, %struct.__collate_t.159** %cur_collate.addr, align 8, !dbg !868
  %index2ruleidx82 = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %105, i32 0, i32 24, !dbg !869
  %106 = load i16*, i16** %index2ruleidx82, align 8, !dbg !869
  %107 = bitcast i16* %106 to i8*, !dbg !868
  %108 = load %struct.__collate_t.159*, %struct.__collate_t.159** %cur_collate.addr, align 8, !dbg !870
  %index2ruleidx_tbl83 = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %108, i32 0, i32 17, !dbg !871
  %109 = load i16*, i16** %index2ruleidx_tbl83, align 8, !dbg !871
  %110 = bitcast i16* %109 to i8*, !dbg !870
  %111 = load %struct.__collate_t.159*, %struct.__collate_t.159** %cur_collate.addr, align 8, !dbg !872
  %num_col_base84 = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %111, i32 0, i32 7, !dbg !873
  %112 = load i16, i16* %num_col_base84, align 2, !dbg !873
  %conv85 = zext i16 %112 to i64, !dbg !872
  %mul86 = mul i64 %conv85, 2, !dbg !874
  %call87 = call i8* @memcpy(i8* %107, i8* %110, i64 %mul86) #10, !dbg !875
  %113 = load %struct.__collate_t.159*, %struct.__collate_t.159** %cur_collate.addr, align 8, !dbg !876
  %overrides_tbl88 = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %113, i32 0, i32 20, !dbg !877
  %114 = load i16*, i16** %overrides_tbl88, align 8, !dbg !877
  store i16* %114, i16** %p, align 8, !dbg !878
  br label %while.cond, !dbg !879
  %115 = load i16*, i16** %p, align 8, !dbg !880
  %116 = load i16, i16* %115, align 2, !dbg !881
  %conv89 = zext i16 %116 to i32, !dbg !881
  %cmp = icmp sgt i32 %conv89, 1, !dbg !882
  br i1 %cmp, label %while.body, label %while.end, !dbg !879
  %117 = load i16*, i16** %p, align 8, !dbg !883
  %incdec.ptr = getelementptr inbounds i16, i16* %117, i32 1, !dbg !883
  store i16* %incdec.ptr, i16** %p, align 8, !dbg !883
  %118 = load i16, i16* %117, align 2, !dbg !885
  %conv91 = zext i16 %118 to i64, !dbg !885
  store i64 %conv91, i64* %n, align 8, !dbg !886
  %119 = load i16*, i16** %p, align 8, !dbg !887
  %incdec.ptr92 = getelementptr inbounds i16, i16* %119, i32 1, !dbg !887
um.196
//Instructions in stack: Num.197
//Instructions in stack: Num.198
//Instructions in stack: Num.199
//Instructions in stack: Num.200
//Instructions in stack: Num.201
//Instructions in stack: Num.202
//Instructions in stack: Num.203
//Instructions in stack: Num.204
//Instructions in stack: Num.205
//Instructions in stack: Num.206
//Instructions in stack: Num.207
//Instructions in stack: Num.208
//Instructions in stack: Num.209
//Instructions in stack: Num.210
//Instructions in stack: Num.211
//Instructions in stack: Num.212
//Instructions in stack: Num.213
//Instructions in stack: Num.214
//Instructions in stack: Num.215
//Instructions in stack: Num.216
//Instructions in stack: Num.217
//Instructions in stack: Num.218
//Instructions in stack: Num.219
//Instructions in stack: Num.220
//Instructions in stack: Num.221
//Instructions in stack: Num.222
//Instructions in stack: Num.223
//Instructions in stack: Num.224
//Instructions in stack: Num.225
//Instructions in stack: Num.226
//Instructions in stack: Num.227
//Instructions in stack: Num.228
//Instructions in stack: Num.229
//Instructions in stack: Num.230
//Instructions in stack: Num.231
//Instructions in stack: Num.232
//Instructions in stack: Num.233
//Instructions in stack: Num.234
//Instructions in stack: Num.235
//Instructions in stack: Num.236
//Instructions in stack: Num.237
//Instructions in stack: Num.238
//Instructions in stack: Num.239
//Instructions in stack: Num.240
//Instructions in stack: Num.241
//Instructions in stack: Num.242
//Instructions in stack: Num.243
//Instructions in stack: Num.244
//Instructions in stack: Num.245
//Instructions in stack: Num.246
//Instructions in stack: Num.247
//Instructions in stack: Num.248
//Instructions in stack: Num.249
//Instructions in stack: Num.250
//Instructions in stack: Num.251
//Instructions in stack: Num.252
//Instructions in stack: Num.253
//Instructions in stack: Num.254
//Instructions in stack: Num.255
//Instructions in stack: Num.256
//Instructions in stack: Num.257
//Instructions in stack: Num.258
//Instructions in stack: Num.259
//Instructions in stack: Num.260
//Instructions in stack: Num.261
//Instructions in stack: Num.262
//Instructions in stack: Num.263
//Instructions in stack: Num.264
//Instructions in stack: Num.265
//Instructions in stack: Num.266
//Instructions in stack: Num.267
//Instructions in stack: Num.268
//Instructions in stack: Num.269
//Instructions in stack: Num.270
//Instructions in stack: Num.271
//Instructions in stack: Num.272
//Instructions in stack: Num.273
//Instructions in stack: Num.274
//Instructions in stack: Num.275
//Instructions in stack: Num.276
//Instructions in stack: Num.277
//Instructions in stack: Num.278
//Instructions in stack: Num.279
//Instructions in stack: Num.280
//Instructions in stack: Num.281
//Instructions in stack: Num.282
//Instructions in stack: Num.283
//Instructions in stack: Num.284
//Instructions in stack: Num.285
//Instructions in stack: Num.286
//Instructions in stack: Num.287
//Instructions in stack: Num.288
//Instructions in stack: Num.289
//Instructions in stack: Num.290
//Instructions in stack: Num.291
//Instructions in stack: Num.292
//Instructions in stack: Num.293
//Instructions in stack: Num.294
//Instructions in stack: Num.295
//Instructions in stack: Num.296
//Instructions in stack: Num.297
//Instructions in stack: Num.298
//Instructions in stack: Num.299
//Instructions in stack: Num.300
//Instructions in stack: Num.301
//Instructions in stack: Num.302
//Instructions in stack: Num.303
//Instructions in stack: Num.304
//Instructions in stack: Num.305
//Instructions in stack: Num.306
//Instructions in stack: Num.307
//Instructions in stack: Num.308
//Instructions in stack: Num.309
//Instructions in stack: Num.310
//Instructions in stack: Num.311
//Instructions in stack: Num.312
//Instructions in stack: Num.313
//Instructions in stack: Num.314
//Instructions in stack: Num.315
//Instructions in stack: Num.316
//Instructions in stack: Num.317
//Instructions in stack: Num.318
//Instructions in stack: Num.319
//Instructions in stack: Num.3  store i16* %incdec.ptr92, i16** %p, align 8, !dbg !887
  %120 = load i16, i16* %119, align 2, !dbg !888
  store i16 %120, i16* %w, align 2, !dbg !889
  br label %do.body, !dbg !890
  %121 = load i16*, i16** %p, align 8, !dbg !891
  %incdec.ptr93 = getelementptr inbounds i16, i16* %121, i32 1, !dbg !891
  store i16* %incdec.ptr93, i16** %p, align 8, !dbg !891
  %122 = load i16, i16* %121, align 2, !dbg !893
  store i16 %122, i16* %i, align 2, !dbg !894
  %123 = load i16, i16* %w, align 2, !dbg !895
  %inc = add i16 %123, 1, !dbg !895
  store i16 %inc, i16* %w, align 2, !dbg !895
  %124 = load %struct.__collate_t.159*, %struct.__collate_t.159** %cur_collate.addr, align 8, !dbg !896
  %index2weight94 = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %124, i32 0, i32 23, !dbg !897
  %125 = load i16*, i16** %index2weight94, align 8, !dbg !897
  %126 = load i16, i16* %i, align 2, !dbg !898
  %conv95 = zext i16 %126 to i32, !dbg !898
  %sub96 = sub nsw i32 %conv95, 1, !dbg !899
  %idxprom = sext i32 %sub96 to i64, !dbg !896
  %arrayidx = getelementptr inbounds i16, i16* %125, i64 %idxprom, !dbg !896
  store i16 %123, i16* %arrayidx, align 2, !dbg !900
  %127 = load i16*, i16** %p, align 8, !dbg !901
  %incdec.ptr97 = getelementptr inbounds i16, i16* %127, i32 1, !dbg !901
  store i16* %incdec.ptr97, i16** %p, align 8, !dbg !901
  %128 = load i16, i16* %127, align 2, !dbg !902
  %129 = load %struct.__collate_t.159*, %struct.__collate_t.159** %cur_collate.addr, align 8, !dbg !903
  %index2ruleidx98 = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %129, i32 0, i32 24, !dbg !904
  %130 = load i16*, i16** %index2ruleidx98, align 8, !dbg !904
  %131 = load i16, i16* %i, align 2, !dbg !905
  %conv99 = zext i16 %131 to i32, !dbg !905
  %sub100 = sub nsw i32 %conv99, 1, !dbg !906
  %idxprom101 = sext i32 %sub100 to i64, !dbg !903
  %arrayidx102 = getelementptr inbounds i16, i16* %130, i64 %idxprom101, !dbg !903
  store i16 %128, i16* %arrayidx102, align 2, !dbg !907
  br label %do.cond, !dbg !908
  %132 = load i64, i64* %n, align 8, !dbg !909
  %dec103 = add i64 %132, -1, !dbg !909
  store i64 %dec103, i64* %n, align 8, !dbg !909
  %tobool104 = icmp ne i64 %dec103, 0, !dbg !908
  br i1 %tobool104, label %do.body, label %do.end, !dbg !908, !llvm.loop !910
  br label %while.cond, !dbg !879, !llvm.loop !912
  br label %while.cond105, !dbg !914
  %133 = load i16*, i16** %p, align 8, !dbg !915
  %incdec.ptr106 = getelementptr inbounds i16, i16* %133, i32 1, !dbg !915
  store i16* %incdec.ptr106, i16** %p, align 8, !dbg !915
  %134 = load i16, i16* %incdec.ptr106, align 2, !dbg !916
  %tobool107 = icmp ne i16 %134, 0, !dbg !914
  br i1 %tobool107, label %while.body108, label %while.end121, !dbg !914
  %135 = load i16*, i16** %p, align 8, !dbg !917
  %136 = load i16, i16* %135, align 2, !dbg !919
  store i16 %136, i16* %i, align 2, !dbg !920
  %137 = load i16*, i16** %p, align 8, !dbg !921
  %incdec.ptr109 = getelementptr inbounds i16, i16* %137, i32 1, !dbg !921
  store i16* %incdec.ptr109, i16** %p, align 8, !dbg !921
  %138 = load i16, i16* %incdec.ptr109, align 2, !dbg !922
  %139 = load %struct.__collate_t.159*, %struct.__collate_t.159** %cur_collate.addr, align 8, !dbg !923
  %index2weight110 = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %139, i32 0, i32 23, !dbg !924
  %140 = load i16*, i16** %index2weight110, align 8, !dbg !924
  %141 = load i16, i16* %i, align 2, !dbg !925
  %conv111 = zext i16 %141 to i32, !dbg !925
  %sub112 = sub nsw i32 %conv111, 1, !dbg !926
  %idxprom113 = sext i32 %sub112 to i64, !dbg !923
  %arrayidx114 = getelementptr inbounds i16, i16* %140, i64 %idxprom113, !dbg !923
  store i16 %138, i16* %arrayidx114, align 2, !dbg !927
  %142 = load i16*, i16** %p, align 8, !dbg !928
  %incdec.ptr115 = getelementptr inbounds i16, i16* %142, i32 1, !dbg !928
  store i16* %incdec.ptr115, i16** %p, align 8, !dbg !928
  %143 = load i16, i16* %incdec.ptr115, align 2, !dbg !929
  %144 = load %struct.__collate_t.159*, %struct.__collate_t.159** %cur_collate.addr, align 8, !dbg !930
  %index2ruleidx116 = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %144, i32 0, i32 24, !dbg !931
  %145 = load i16*, i16** %index2ruleidx116, align 8, !dbg !931
  %146 = load i16, i16* %i, align 2, !dbg !932
  %conv117 = zext i16 %146 to i32, !dbg !932
  %sub118 = sub nsw i32 %conv117, 1, !dbg !933
  %idxprom119 = sext i32 %sub118 to i64, !dbg !930
  %arrayidx120 = getelementptr inbounds i16, i16* %145, i64 %idxprom119, !dbg !930
  store i16 %143, i16* %arrayidx120, align 2, !dbg !934
  br label %while.cond105, !dbg !914, !llvm.loop !935
  store i16 0, i16* %i, align 2, !dbg !937
  br label %for.cond, !dbg !939
  %147 = load i16, i16* %i, align 2, !dbg !940
  %conv122 = zext i16 %147 to i32, !dbg !940
  %148 = load %struct.__collate_t.159*, %struct.__collate_t.159** %cur_collate.addr, align 8, !dbg !942
  %multistart_tbl123 = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %148, i32 0, i32 18, !dbg !943
  %149 = load i16*, i16** %multistart_tbl123, align 8, !dbg !943
  %arrayidx124 = getelementptr inbounds i16, i16* %149, i64 0, !dbg !942
  %150 = load i16, i16* %arrayidx124, align 2, !dbg !942
  %conv125 = zext i16 %150 to i32, !dbg !942
  %cmp126 = icmp slt i32 %conv122, %conv125, !dbg !944
  br i1 %cmp126, label %for.body, label %for.end, !dbg !945
  %151 = load %struct.__collate_t.159*, %struct.__collate_t.159** %cur_collate.addr, align 8, !dbg !946
  %multistart_tbl128 = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %151, i32 0, i32 18, !dbg !948
  %152 = load i16*, i16** %multistart_tbl128, align 8, !dbg !948
  store i16* %152, i16** %p, align 8, !dbg !949
  %153 = load i16*, i16** %p, align 8, !dbg !950
  %154 = load i16, i16* %i, align 2, !dbg !951
  %idxprom129 = zext i16 %154 to i64, !dbg !950
  %arrayidx130 = getelementptr inbounds i16, i16* %153, i64 %idxprom129, !dbg !950
  %155 = load i16, i16* %arrayidx130, align 2, !dbg !950
  %conv131 = zext i16 %155 to i32, !dbg !950
  %156 = load i16*, i16** %p, align 8, !dbg !952
  %idx.ext132 = sext i32 %conv131 to i64, !dbg !952
  %add.ptr133 = getelementptr inbounds i16, i16* %156, i64 %idx.ext132, !dbg !952
  store i16* %add.ptr133, i16** %p, align 8, !dbg !952
  br label %do.body134, !dbg !953
  %157 = load i16*, i16** %p, align 8, !dbg !954
  %incdec.ptr135 = getelementptr inbounds i16, i16* %157, i32 1, !dbg !954
  store i16* %incdec.ptr135, i16** %p, align 8, !dbg !954
  %158 = load i16, i16* %157, align 2, !dbg !956
  %conv136 = zext i16 %158 to i64, !dbg !956
  store i64 %conv136, i64* %n, align 8, !dbg !957
  br label %do.body137, !dbg !958
  %159 = load i16*, i16** %p, align 8, !dbg !959
  %160 = load i16, i16* %159, align 2, !dbg !962
  %tobool138 = icmp ne i16 %160, 0, !dbg !962
  br i1 %tobool138, label %if.end140, label %if.then139, !dbg !963
  br label %FOUND, !dbg !964
  br label %do.body141, !dbg !966
  br label %do.cond142, !dbg !967
  %161 = load i16*, i16** %p, align 8, !dbg !969
  %incdec.ptr143 = getelementptr inbounds i16, i16* %161, i32 1, !dbg !969
  store i16* %incdec.ptr143, i16** %p, align 8, !dbg !969
  %162 = load i16, i16* %161, align 2, !dbg !970
  %tobool144 = icmp ne i16 %162, 0, !dbg !967
  br i1 %tobool144, label %do.body141, label %do.end145, !dbg !967, !llvm.loop !971
20
//Instructions in stack: Num.321
//Instructions in stack: Num.322
//Instructions in stack: Num.323
//Instructions in stack: Num.324
//Instructions in stack: Num.325
//Instructions in stack: Num.326
//Instructions in stack: Num.327
//Instructions in stack: Num.328
//Instructions in stack: Num.329
//Instructions in stack: Num.330
//Instructions in stack: Num.331
//Instructions in stack: Num.332
//Instructions in stack: Num.333
//Instructions in stack: Num.334
//Instructions in stack: Num.335
//Instructions in stack: Num.336
//Instructions in stack: Num.337
//Instructions in stack: Num.338
//Instructions in stack: Num.339
//Instructions in stack: Num.340
//Instructions in stack: Num.341
//Instructions in stack: Num.342
//Instructions in stack: Num.343
//Instructions in stack: Num.344
//Instructions in stack: Num.345
//Instructions in stack: Num.346
//Instructions in stack: Num.347
//Instructions in stack: Num.348
//Instructions in stack: Num.349
//Instructions in stack: Num.350
//Instructions in stack: Num.351
//Instructions in stack: Num.352
//Instructions in stack: Num.353
//Instructions in stack: Num.354
//Instructions in stack: Num.355
//Instructions in stack: Num.356
//Instructions in stack: Num.357
//Instructions in stack: Num.358
//Instructions in stack: Num.359
//Instructions in stack: Num.360
//Instructions in stack: Num.361
//Instructions in stack: Num.362
//Instructions in stack: Num.363
//Instructions in stack: Num.364
//Instructions in stack: Num.365
//Instructions in stack: Num.366
//Instructions in stack: Num.367
//Instructions in stack: Num.368
//Instructions in stack: Num.369
//Instructions in stack: Num.370
//Instructions in stack: Num.371
//Instructions in stack: Num.372
//Instructions in stack: Num.373
//Instructions in stack: Num.374
//Instructions in stack: Num.375
//Instructions in stack: Num.376
//Instructions in stack: Num.377
//Instructions in stack: Num.378
//Instructions in stack: Num.379
//Instructions in stack: Num.380
//Instructions in stack: Num.381
//Instructions in stack: Num.382
//Instructions in stack: Num.383
//Instructions in stack: Num.384
//Instructions in stack: Num.385
//Instructions in stack: Num.386
//Instructions in stack: Num.387
//Instructions in stack: Num.388
//Instructions in stack: Num.389
//Instructions in stack: Num.390
//Instructions in stack: Num.391
//Instructions in stack: Num.392
//Instructions in stack: Num.393
//Instructions in stack: Num.394
//Instructions in stack: Num.395
//Instructions in stack: Num.396
//Instructions in stack: Num.397
//Instructions in stack: Num.398
//Instructions in stack: Num.399
//Instructions in stack: Num.400
//Instructions in stack: Num.401
//Instructions in stack: Num.402
//Instructions in stack: Num.403
//Instructions in stack: Num.404
//Instructions in stack: Num.405
//Instructions in stack: Num.406
//Instructions in stack: Num.407
//Instructions in stack: Num.408
//Instructions in stack: Num.409
//Instructions in stack: Num.410
//Instructions in stack: Num.411
//Instructions in stack: Num.412
//Instructions in stack: Num.413
//Instructions in stack: Num.414
//Instructions in stack: Num.415
//Instructions in stack: Num.416
//Instructions in stack: Num.417
//Instructions in stack: Num.418
//Instructions in stack: Num.419
//Instructions in stack: Num.420
//Instructions in stack: Num.421
//Instructions in stack: Num.422
//Instructions in stack: Num.423
//Instructions in stack: Num.424
//Instructions in stack: Num.425
//Instructions in stack: Num.426
//Instructions in stack: Num.427
//Instructions in stack: Num.428
//Instructions in stack: Num.429
//Instructions in stack: Num.430
//Instructions in stack: Num.431
//Instructions in stack: Num.432
//Instructions in stack: Num.433
//Instructions in stack: Num.434
//Instructions in stack: Num.435
//Instructions in stack: Num.436
//Instructions in stack: Num.437
//Instructions in stack: Num.438
//Instructions in stack: Num.439
//Instructions in stack: Num.440
//Instructions in stack: Num.441
//Instructions in stack: Num.442
//Instructions in stack: Num.443
//Instructions in stack: Num.444
/  br label %do.end147, !dbg !973
  br i1 true, label %do.body137, label %do.end147, !dbg !974, !llvm.loop !975
  br label %do.cond148, !dbg !977
  br i1 true, label %do.body134, label %do.end149, !dbg !977, !llvm.loop !978
  br label %FOUND, !dbg !977
  call void @llvm.dbg.label(metadata !1961), !dbg !1962
  br label %for.inc, !dbg !982
  %163 = load i16, i16* %i, align 2, !dbg !983
  %inc150 = add i16 %163, 1, !dbg !983
  store i16 %inc150, i16* %i, align 2, !dbg !983
  br label %for.cond, !dbg !984, !llvm.loop !985
  store i32 1, i32* %retval, align 4, !dbg !987
  br label %return, !dbg !987
  %164 = load i32, i32* %retval, align 4, !dbg !988
  ret i32 %164, !dbg !988
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
/Instructions in stack: Num.445
//Instructions in stack: Num.446
//Instructions in stack: Num.447
//Instructions in stack: Num.448
//Instructions in stack: Num.449
//Instructions in stack: Num.450
//Instructions in stack: Num.451
//Instructions in stack: Num.452
//Instructions in stack: Num.453
//Instructions in stack: Num.454
//Instructions in stack: Num.455
//Instructions in stack: Num.456
//Instructions in stack: Num.457
//Instructions in stack: Num.458
//Instructions in stack: Num.459
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in st  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  %0 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !657
  %tobool = icmp ne i32 %0, 0, !dbg !657
  br i1 %tobool, label %if.then, label %if.end, !dbg !659
  br label %if.end4, !dbg !660
  %1 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  %inc = add nsw i32 %1, 1, !dbg !661
  store i32 %inc, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  store i64 4096, i64* @__pagesize, align 8, !dbg !662
  br i1 true, label %if.then1, label %if.end2, !dbg !663
  call void @_locale_init() #10, !dbg !664
  br label %if.end2, !dbg !664
  br i1 true, label %if.then3, label %if.end4, !dbg !666
  call void @_stdio_init() #10, !dbg !667
  br label %if.end4, !dbg !667
  ret void, !dbg !669
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** @__global_locale, align 8, !dbg !658
  call void @_locale_init_l(%struct.__uclibc_locale_struct.160* %0) #10, !dbg !659
  ret void, !dbg !660
  %base.addr = alloca %struct.__uclibc_locale_struct.160*, align 8
  store %struct.__uclibc_locale_struct.160* %base, %struct.__uclibc_locale_struct.160** %base.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__uclibc_locale_struct.160** %base.addr, metadata !1973, metadata !DIExpression()), !dbg !1974
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !662
  %cur_locale = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %0, i32 0, i32 6, !dbg !663
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale, i64 0, i64 0, !dbg !662
  %call = call i8* @memset(i8* %arraydecay, i32 0, i64 14) #10, !dbg !664
  %1 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !665
  %cur_locale1 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %1, i32 0, i32 6, !dbg !666
  %arrayidx = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale1, i64 0, i64 0, !dbg !665
  store i8 35, i8* %arrayidx, align 8, !dbg !667
  %2 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !668
  %category_item_count = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %2, i32 0, i32 8, !dbg !669
  %arraydecay2 = getelementptr inbounds [6 x i8], [6 x i8]* %category_item_count, i64 0, i64 0, !dbg !668
  %3 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !670
  %lc_common_item_offsets_LEN = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %3, i32 0, i32 29, !dbg !671
  %arraydecay3 = getelementptr inbounds [6 x i8], [6 x i8]* %lc_common_item_offsets_LEN, i64 0, i64 0, !dbg !670
  %call4 = call i8* @memcpy(i8* %arraydecay2, i8* %arraydecay3, i64 6) #10, !dbg !672
  %4 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !673
  %category_item_count5 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %4, i32 0, i32 8, !dbg !674
  %arrayidx6 = getelementptr inbounds [6 x i8], [6 x i8]* %category_item_count5, i64 0, i64 0, !dbg !673
  %5 = load i8, i8* %arrayidx6, align 2, !dbg !675
  %inc = add i8 %5, 1, !dbg !675
  store i8 %inc, i8* %arrayidx6, align 2, !dbg !675
  %6 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !676
  %category_offsets = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %6, i32 0, i32 7, !dbg !677
  %arrayidx7 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets, i64 0, i64 0, !dbg !676
  store i16 2488, i16* %arrayidx7, align 2, !dbg !678
ack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Nu  %7 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !679
  %category_offsets8 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %7, i32 0, i32 7, !dbg !680
  %arrayidx9 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets8, i64 0, i64 1, !dbg !679
  store i16 2576, i16* %arrayidx9, align 2, !dbg !681
  %8 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !682
  %category_offsets10 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %8, i32 0, i32 7, !dbg !683
  %arrayidx11 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets10, i64 0, i64 2, !dbg !682
  store i16 2600, i16* %arrayidx11, align 2, !dbg !684
  %9 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !685
  %category_offsets12 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %9, i32 0, i32 7, !dbg !686
  %arrayidx13 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets12, i64 0, i64 3, !dbg !685
  store i16 2776, i16* %arrayidx13, align 2, !dbg !687
  %10 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !688
  %category_offsets14 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %10, i32 0, i32 7, !dbg !689
  %arrayidx15 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets14, i64 0, i64 5, !dbg !688
  store i16 3176, i16* %arrayidx15, align 2, !dbg !690
  %11 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !691
  %tbl8ctype = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %11, i32 0, i32 0, !dbg !692
  %12 = bitcast [420 x i8]* %tbl8ctype to i8*, !dbg !693
  %13 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !694
  %tbl8ctype16 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %13, i32 0, i32 13, !dbg !695
  store i8* %12, i8** %tbl8ctype16, align 8, !dbg !696
  %14 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !697
  %tbl8uplow = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %14, i32 0, i32 1, !dbg !698
  %15 = bitcast [504 x i8]* %tbl8uplow to i8*, !dbg !699
  %16 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !700
  %tbl8uplow17 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %16, i32 0, i32 15, !dbg !701
  store i8* %15, i8** %tbl8uplow17, align 8, !dbg !702
  %17 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !703
  %tbl8c2wc = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %17, i32 0, i32 2, !dbg !704
  %18 = bitcast [1760 x i16]* %tbl8c2wc to i16*, !dbg !705
  %19 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !706
  %tbl8c2wc18 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %19, i32 0, i32 17, !dbg !707
  store i16* %18, i16** %tbl8c2wc18, align 8, !dbg !708
  %20 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !709
  %tbl8wc2c = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %20, i32 0, i32 3, !dbg !710
  %21 = bitcast [4528 x i8]* %tbl8wc2c to i8*, !dbg !711
  %22 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !712
  %tbl8wc2c19 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %22, i32 0, i32 19, !dbg !713
  store i8* %21, i8** %tbl8wc2c19, align 8, !dbg !714
  %23 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !715
  %tblwctype = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %23, i32 0, i32 4, !dbg !716
  %24 = bitcast [3604 x i8]* %tblwctype to i8*, !dbg !717
  %25 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !718
  %tblwctype20 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %25, i32 0, i32 21, !dbg !719
  store i8* %24, i8** %tblwctype20, align 8, !dbg !720
  %26 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !721
  %tblwuplow = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %26, i32 0, i32 5, !dbg !722
  %27 = bitcast [1680 x i8]* %tblwuplow to i8*, !dbg !723
  %28 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !724
  %tblwuplow21 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %28, i32 0, i32 22, !dbg !725
  store i8* %27, i8** %tblwuplow21, align 8, !dbg !726
  %29 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !727
  %tblwuplow_diff = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %29, i32 0, i32 6, !dbg !728
  %30 = bitcast [196 x i16]* %tblwuplow_diff to i16*, !dbg !729
  %31 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !730
  %tblwuplow_diff22 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %31, i32 0, i32 23, !dbg !731
  store i16* %30, i16** %tblwuplow_diff22, align 8, !dbg !732
  %32 = load i16*, i16** @__C_ctype_b, align 8, !dbg !733
  %33 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !734
  %__ctype_b = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %33, i32 0, i32 0, !dbg !735
  store i16* %32, i16** %__ctype_b, align 8, !dbg !736
  %34 = load i16*, i16** @__C_ctype_tolower, align 8, !dbg !737
  %35 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !738
  %__ctype_tolower = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %35, i32 0, i32 1, !dbg !739
  store i16* %34, i16** %__ctype_tolower, align 8, !dbg !740
  %36 = load i16*, i16** @__C_ctype_toupper, align 8, !dbg !741
  %37 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !742
  %__ctype_toupper = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %37, i32 0, i32 2, !dbg !743
  store i16* %36, i16** %__ctype_toupper, align 8, !dbg !744
  %38 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !745
  %code2flag = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %38, i32 0, i32 20, !dbg !746
  store i16* getelementptr inbounds ([16 x i16], [16 x i16]* @__code2flag, i64 0, i64 0), i16** %code2flag, align 8, !dbg !747
  %39 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !748
  %call23 = call i32 @_locale_set_l(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), %struct.__uclibc_locale_struct.160* %39) #11, !dbg !749
  ret void, !dbg !750
  %retval = alloca i32, align 4
  %p.addr = alloca i8*, align 8
  %base.addr = alloca %struct.__uclibc_locale_struct.160*, align 8
  %x = alloca i8**, align 8
  %s = alloca i8*, align 8
  %stp = alloca i64*, align 8
  %r = alloca i8*, align 8
  %io = alloca i16*, align 8
  %ii = alloca i16*, align 8
  %d = alloca i8*, align 8
  %row = alloca i32, align 4
  %crow = alloca i32, align 4
  %len = alloca i32, align 4
  %c = alloca i32, align 4
  %i = alloca i32, align 4
  %newcol = alloca %struct.__collate_t.159, align 8
  %c8b = alloca %struct.__codeset_8_bit_t.161*, align 8
  %u = alloca i32, align 4
  %m = alloca i16, align 2
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !1060, metadata !DIExpression()), !dbg !1061
  store %struct.__uclibc_locale_struct.160* %base, %struct.__uclibc_locale_struct.160** %base.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__uclibc_locale_struct.160** %base.addr, metadata !1062, metadata !DIExpression()), !dbg !1063
  call void @llvm.dbg.declare(metadata i8*** %x, metadata !1064, metadata !DIExpression()), !dbg !1065
  call void @llvm.dbg.declare(metadata i8** %s, metadata !1066, metadata !DIExpression()), !dbg !1067
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !668
  %cur_locale = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %0, i32 0, i32 6, !dbg !669
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale, i64 0, i64 0, !dbg !668
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 1, !dbg !670
  store i8* %add.ptr, i8** %s, align 8, !dbg !667
  call void @llvm.dbg.declare(metadata i64** %stp, metadata !1071, metadata !DIExpression()), !dbg !1074
  call void @llvm.dbg.declare(metadata i8** %r, metadata !1075, metadata !DIExpression()), !dbg !1076
  call void @llvm.dbg.declare(metadata i16** %io, metadata !1077, metadata !DIExpression()), !dbg !1078
  call void @llvm.dbg.declare(metadata i16** %ii, metadata !1079, metadata !DIExpression()), !dbg !1080
  call void @llvm.dbg.declare(metadata i8** %d, metadata !1081, metadata !DIExpression()), !dbg !1082
  call void @llvm.dbg.declare(metadata i32* %row, metadata !1083, metadata !DIExpression()), !dbg !1084
  call void @llvm.dbg.declare(metadata i32* %crow, metadata !1085, metadata !DIExpression()), !dbg !1086
  call void @llvm.dbg.declare(metadata i32* %len, metadata !1087, metadata !DIExpression()), !dbg !1088
  call void @llvm.dbg.declare(metadata i32* %c, metadata !1089, metadata !DIExpression()), !dbg !1090
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1091, metadata !DIExpression()), !dbg !1092
  store i32 0, i32* %i, align 4, !dbg !692
  call void @llvm.dbg.declare(metadata %struct.__collate_t.159* %newcol, metadata !1093, metadata !DIExpression()), !dbg !1094
  %1 = load i8*, i8** %p.addr, align 8, !dbg !695
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i32 1, !dbg !695
  store i8* %incdec.ptr, i8** %p.addr, align 8, !dbg !695
  %index2weight = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %newcol, i32 0, i32 23, !dbg !696
  store i16* null, i16** %index2weight, align 8, !dbg !697
  %2 = load i8*, i8** %p.addr, align 8, !dbg !698
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 8, !dbg !698
  %3 = load i8, i8* %arrayidx, align 1, !dbg !698
  %conv = zext i8 %3 to i32, !dbg !698
  %4 = load i8*, i8** %s, align 8, !dbg !700
  %arrayidx1 = getelementptr inbounds i8, i8* %4, i64 8, !dbg !700
m.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
/  %5 = load i8, i8* %arrayidx1, align 1, !dbg !700
  %conv2 = zext i8 %5 to i32, !dbg !700
  %cmp = icmp ne i32 %conv, %conv2, !dbg !701
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !702
  %6 = load i8*, i8** %p.addr, align 8, !dbg !703
  %arrayidx4 = getelementptr inbounds i8, i8* %6, i64 9, !dbg !703
  %7 = load i8, i8* %arrayidx4, align 1, !dbg !703
  %conv5 = zext i8 %7 to i32, !dbg !703
  %8 = load i8*, i8** %s, align 8, !dbg !704
  %arrayidx6 = getelementptr inbounds i8, i8* %8, i64 9, !dbg !704
  %9 = load i8, i8* %arrayidx6, align 1, !dbg !704
  %conv7 = zext i8 %9 to i32, !dbg !704
  %cmp8 = icmp ne i32 %conv5, %conv7, !dbg !705
  br i1 %cmp8, label %if.then, label %if.end22, !dbg !706
  %10 = load i8*, i8** %p.addr, align 8, !dbg !707
  %11 = load i8, i8* %10, align 1, !dbg !709
  %conv10 = zext i8 %11 to i32, !dbg !709
  %and = and i32 %conv10, 127, !dbg !710
  %shl = shl i32 %and, 7, !dbg !711
  %12 = load i8*, i8** %p.addr, align 8, !dbg !712
  %arrayidx11 = getelementptr inbounds i8, i8* %12, i64 1, !dbg !712
  %13 = load i8, i8* %arrayidx11, align 1, !dbg !712
  %conv12 = zext i8 %13 to i32, !dbg !712
  %and13 = and i32 %conv12, 127, !dbg !713
  %add = add nsw i32 %shl, %and13, !dbg !714
  store i32 %add, i32* %row, align 4, !dbg !715
  %14 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !716
  %locales = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %14, i32 0, i32 31, !dbg !718
  %15 = load i32, i32* %row, align 4, !dbg !719
  %mul = mul nsw i32 9, %15, !dbg !720
  %add14 = add nsw i32 %mul, 3, !dbg !721
  %add15 = add nsw i32 %add14, 4, !dbg !722
  %idxprom = sext i32 %add15 to i64, !dbg !716
  %arrayidx16 = getelementptr inbounds [2826 x i8], [2826 x i8]* %locales, i64 0, i64 %idxprom, !dbg !716
  %16 = load i8, i8* %arrayidx16, align 1, !dbg !716
  %conv17 = zext i8 %16 to i32, !dbg !716
  %call = call i32 @init_cur_collate(i32 %conv17, %struct.__collate_t.159* %newcol) #10, !dbg !723
  %tobool = icmp ne i32 %call, 0, !dbg !723
  br i1 %tobool, label %if.end, label %if.then18, !dbg !724
  store i32 0, i32* %retval, align 4, !dbg !725
  br label %return, !dbg !725
  %17 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !727
  %collate = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %17, i32 0, i32 118, !dbg !728
  %index2weight19 = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %collate, i32 0, i32 23, !dbg !729
  %18 = load i16*, i16** %index2weight19, align 8, !dbg !729
  %19 = bitcast i16* %18 to i8*, !dbg !727
  call void @free(i8* %19) #11, !dbg !730
  %20 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !731
  %collate20 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %20, i32 0, i32 118, !dbg !732
  %21 = bitcast %struct.__collate_t.159* %collate20 to i8*, !dbg !733
  %22 = bitcast %struct.__collate_t.159* %newcol to i8*, !dbg !734
  %call21 = call i8* @memcpy(i8* %21, i8* %22, i64 112) #11, !dbg !735
  br label %if.end22, !dbg !736
  br label %do.body, !dbg !737
  %23 = load i8*, i8** %p.addr, align 8, !dbg !738
  %24 = load i8, i8* %23, align 1, !dbg !741
  %conv23 = zext i8 %24 to i32, !dbg !741
  %25 = load i8*, i8** %s, align 8, !dbg !742
  %26 = load i8, i8* %25, align 1, !dbg !743
  %conv24 = zext i8 %26 to i32, !dbg !743
  %cmp25 = icmp ne i32 %conv23, %conv24, !dbg !744
  br i1 %cmp25, label %if.then34, label %lor.lhs.false27, !dbg !745
  %27 = load i8*, i8** %p.addr, align 8, !dbg !746
  %arrayidx28 = getelementptr inbounds i8, i8* %27, i64 1, !dbg !746
  %28 = load i8, i8* %arrayidx28, align 1, !dbg !746
  %conv29 = zext i8 %28 to i32, !dbg !746
  %29 = load i8*, i8** %s, align 8, !dbg !747
  %arrayidx30 = getelementptr inbounds i8, i8* %29, i64 1, !dbg !747
  %30 = load i8, i8* %arrayidx30, align 1, !dbg !747
  %conv31 = zext i8 %30 to i32, !dbg !747
  %cmp32 = icmp ne i32 %conv29, %conv31, !dbg !748
  br i1 %cmp32, label %if.then34, label %if.end313, !dbg !749
  %31 = load i8*, i8** %p.addr, align 8, !dbg !750
  %32 = load i8, i8* %31, align 1, !dbg !752
  %conv35 = zext i8 %32 to i32, !dbg !752
  %and36 = and i32 %conv35, 127, !dbg !753
  %shl37 = shl i32 %and36, 7, !dbg !754
  %33 = load i8*, i8** %p.addr, align 8, !dbg !755
  %arrayidx38 = getelementptr inbounds i8, i8* %33, i64 1, !dbg !755
  %34 = load i8, i8* %arrayidx38, align 1, !dbg !755
  %conv39 = zext i8 %34 to i32, !dbg !755
  %and40 = and i32 %conv39, 127, !dbg !756
  %add41 = add nsw i32 %shl37, %and40, !dbg !757
  store i32 %add41, i32* %row, align 4, !dbg !758
  %35 = load i8*, i8** %p.addr, align 8, !dbg !759
  %36 = load i8, i8* %35, align 1, !dbg !760
  %37 = load i8*, i8** %s, align 8, !dbg !761
  store i8 %36, i8* %37, align 1, !dbg !762
  %38 = load i8*, i8** %p.addr, align 8, !dbg !763
  %arrayidx42 = getelementptr inbounds i8, i8* %38, i64 1, !dbg !763
  %39 = load i8, i8* %arrayidx42, align 1, !dbg !763
  %40 = load i8*, i8** %s, align 8, !dbg !764
  %arrayidx43 = getelementptr inbounds i8, i8* %40, i64 1, !dbg !764
  store i8 %39, i8* %arrayidx43, align 1, !dbg !765
  %41 = load i32, i32* %i, align 4, !dbg !766
  %cmp44 = icmp ne i32 %41, 4, !dbg !768
  br i1 %cmp44, label %land.lhs.true, label %if.end92, !dbg !769
  %42 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !770
  %lc_common_item_offsets_LEN = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %42, i32 0, i32 29, !dbg !771
  %43 = load i32, i32* %i, align 4, !dbg !772
  %idxprom46 = sext i32 %43 to i64, !dbg !770
  %arrayidx47 = getelementptr inbounds [6 x i8], [6 x i8]* %lc_common_item_offsets_LEN, i64 0, i64 %idxprom46, !dbg !770
  %44 = load i8, i8* %arrayidx47, align 1, !dbg !770
  %conv48 = zext i8 %44 to i32, !dbg !770
  store i32 %conv48, i32* %len, align 4, !dbg !773
  %cmp49 = icmp ne i32 %conv48, 0, !dbg !774
  br i1 %cmp49, label %if.then51, label %if.end92, !dbg !775
  %45 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !776
  %locales52 = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %45, i32 0, i32 31, !dbg !778
  %46 = load i32, i32* %row, align 4, !dbg !779
  %mul53 = mul nsw i32 9, %46, !dbg !780
  %add54 = add nsw i32 %mul53, 3, !dbg !781
  %47 = load i32, i32* %i, align 4, !dbg !782
  %add55 = add nsw i32 %add54, %47, !dbg !783
  %idxprom56 = sext i32 %add55 to i64, !dbg !776
  %arrayidx57 = getelementptr inbounds [2826 x i8], [2826 x i8]* %locales52, i64 0, i64 %idxprom56, !dbg !776
  %48 = load i8, i8* %arrayidx57, align 1, !dbg !776
  %conv58 = zext i8 %48 to i32, !dbg !776
  %49 = load i32, i32* %len, align 4, !dbg !784
  %mul59 = mul nsw i32 %conv58, %49, !dbg !785
  store i32 %mul59, i32* %crow, align 4, !dbg !786
  %50 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !787
  %51 = bitcast %struct.__uclibc_locale_struct.160* %50 to i8*, !dbg !788
  %52 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !789
  %category_offsets = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %52, i32 0, i32 7, !dbg !790
/Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in s  %53 = load i32, i32* %i, align 4, !dbg !791
  %idxprom60 = sext i32 %53 to i64, !dbg !789
  %arrayidx61 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets, i64 0, i64 %idxprom60, !dbg !789
  %54 = load i16, i16* %arrayidx61, align 2, !dbg !789
  %conv62 = zext i16 %54 to i32, !dbg !789
  %idx.ext = sext i32 %conv62 to i64, !dbg !792
  %add.ptr63 = getelementptr inbounds i8, i8* %51, i64 %idx.ext, !dbg !792
  %55 = bitcast i8* %add.ptr63 to i8**, !dbg !793
  store i8** %55, i8*** %x, align 8, !dbg !794
  %56 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !795
  %lc_common_tbl_offsets = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %56, i32 0, i32 30, !dbg !796
  %arraydecay64 = getelementptr inbounds [24 x i64], [24 x i64]* %lc_common_tbl_offsets, i64 0, i64 0, !dbg !795
  %57 = load i32, i32* %i, align 4, !dbg !797
  %mul65 = mul nsw i32 4, %57, !dbg !798
  %idx.ext66 = sext i32 %mul65 to i64, !dbg !799
  %add.ptr67 = getelementptr inbounds i64, i64* %arraydecay64, i64 %idx.ext66, !dbg !799
  store i64* %add.ptr67, i64** %stp, align 8, !dbg !800
  %58 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !801
  %59 = bitcast %struct.__locale_mmap_t.162* %58 to i8*, !dbg !802
  %60 = load i64*, i64** %stp, align 8, !dbg !803
  %61 = load i64, i64* %60, align 8, !dbg !804
  %add.ptr68 = getelementptr inbounds i8, i8* %59, i64 %61, !dbg !805
  store i8* %add.ptr68, i8** %r, align 8, !dbg !806
  %62 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !807
  %63 = bitcast %struct.__locale_mmap_t.162* %62 to i8*, !dbg !808
  %64 = load i64*, i64** %stp, align 8, !dbg !809
  %incdec.ptr69 = getelementptr inbounds i64, i64* %64, i32 1, !dbg !809
  store i64* %incdec.ptr69, i64** %stp, align 8, !dbg !809
  %65 = load i64, i64* %incdec.ptr69, align 8, !dbg !810
  %add.ptr70 = getelementptr inbounds i8, i8* %63, i64 %65, !dbg !811
  %66 = bitcast i8* %add.ptr70 to i16*, !dbg !812
  store i16* %66, i16** %io, align 8, !dbg !813
  %67 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !814
  %68 = bitcast %struct.__locale_mmap_t.162* %67 to i8*, !dbg !815
  %69 = load i64*, i64** %stp, align 8, !dbg !816
  %incdec.ptr71 = getelementptr inbounds i64, i64* %69, i32 1, !dbg !816
  store i64* %incdec.ptr71, i64** %stp, align 8, !dbg !816
  %70 = load i64, i64* %incdec.ptr71, align 8, !dbg !817
  %add.ptr72 = getelementptr inbounds i8, i8* %68, i64 %70, !dbg !818
  %71 = bitcast i8* %add.ptr72 to i16*, !dbg !819
  store i16* %71, i16** %ii, align 8, !dbg !820
  %72 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !821
  %73 = bitcast %struct.__locale_mmap_t.162* %72 to i8*, !dbg !822
  %74 = load i64*, i64** %stp, align 8, !dbg !823
  %incdec.ptr73 = getelementptr inbounds i64, i64* %74, i32 1, !dbg !823
  store i64* %incdec.ptr73, i64** %stp, align 8, !dbg !823
  %75 = load i64, i64* %incdec.ptr73, align 8, !dbg !824
  %add.ptr74 = getelementptr inbounds i8, i8* %73, i64 %75, !dbg !825
  store i8* %add.ptr74, i8** %d, align 8, !dbg !826
  store i32 0, i32* %c, align 4, !dbg !827
  br label %for.cond, !dbg !829
  %76 = load i32, i32* %c, align 4, !dbg !830
  %77 = load i32, i32* %len, align 4, !dbg !832
  %cmp75 = icmp slt i32 %76, %77, !dbg !833
  br i1 %cmp75, label %for.body, label %for.end, !dbg !834
  %78 = load i8*, i8** %d, align 8, !dbg !835
  %79 = load i16*, i16** %ii, align 8, !dbg !837
  %80 = load i8*, i8** %r, align 8, !dbg !838
  %81 = load i32, i32* %crow, align 4, !dbg !839
  %82 = load i32, i32* %c, align 4, !dbg !840
  %add77 = add nsw i32 %81, %82, !dbg !841
  %idxprom78 = sext i32 %add77 to i64, !dbg !838
  %arrayidx79 = getelementptr inbounds i8, i8* %80, i64 %idxprom78, !dbg !838
  %83 = load i8, i8* %arrayidx79, align 1, !dbg !838
  %conv80 = zext i8 %83 to i32, !dbg !838
  %84 = load i16*, i16** %io, align 8, !dbg !842
  %85 = load i32, i32* %c, align 4, !dbg !843
  %idxprom81 = sext i32 %85 to i64, !dbg !842
  %arrayidx82 = getelementptr inbounds i16, i16* %84, i64 %idxprom81, !dbg !842
  %86 = load i16, i16* %arrayidx82, align 2, !dbg !842
  %conv83 = zext i16 %86 to i32, !dbg !842
  %add84 = add nsw i32 %conv80, %conv83, !dbg !844
  %idxprom85 = sext i32 %add84 to i64, !dbg !837
  %arrayidx86 = getelementptr inbounds i16, i16* %79, i64 %idxprom85, !dbg !837
  %87 = load i16, i16* %arrayidx86, align 2, !dbg !837
  %conv87 = zext i16 %87 to i32, !dbg !837
  %idx.ext88 = sext i32 %conv87 to i64, !dbg !845
  %add.ptr89 = getelementptr inbounds i8, i8* %78, i64 %idx.ext88, !dbg !845
  %88 = load i8**, i8*** %x, align 8, !dbg !846
  %89 = load i32, i32* %c, align 4, !dbg !847
  %idx.ext90 = sext i32 %89 to i64, !dbg !848
  %add.ptr91 = getelementptr inbounds i8*, i8** %88, i64 %idx.ext90, !dbg !848
  store i8* %add.ptr89, i8** %add.ptr91, align 8, !dbg !849
  br label %for.inc, !dbg !850
  %90 = load i32, i32* %c, align 4, !dbg !851
  %inc = add nsw i32 %90, 1, !dbg !851
  store i32 %inc, i32* %c, align 4, !dbg !851
  br label %for.cond, !dbg !852, !llvm.loop !853
  br label %if.end92, !dbg !855
  %91 = load i32, i32* %i, align 4, !dbg !856
  %cmp93 = icmp eq i32 %91, 0, !dbg !858
  br i1 %cmp93, label %if.then95, label %if.else295, !dbg !859
  %92 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !860
  %locales96 = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %92, i32 0, i32 31, !dbg !862
  %93 = load i32, i32* %row, align 4, !dbg !863
  %mul97 = mul nsw i32 9, %93, !dbg !864
  %add98 = add nsw i32 %mul97, 2, !dbg !865
  %idxprom99 = sext i32 %add98 to i64, !dbg !860
  %arrayidx100 = getelementptr inbounds [2826 x i8], [2826 x i8]* %locales96, i64 0, i64 %idxprom99, !dbg !860
  %94 = load i8, i8* %arrayidx100, align 1, !dbg !860
  %conv101 = zext i8 %94 to i32, !dbg !860
  store i32 %conv101, i32* %c, align 4, !dbg !866
  %95 = load i32, i32* %c, align 4, !dbg !867
  %cmp102 = icmp sle i32 %95, 2, !dbg !869
  br i1 %cmp102, label %if.then104, label %if.else112, !dbg !870
  %96 = load i32, i32* %c, align 4, !dbg !871
  %cmp105 = icmp eq i32 %96, 2, !dbg !874
  br i1 %cmp105, label %if.then107, label %if.else, !dbg !875
  %97 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !876
  %codeset = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %97, i32 0, i32 38, !dbg !878
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @utf8, i64 0, i64 0), i8** %codeset, align 8, !dbg !879
  %98 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !880
  %encoding = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %98, i32 0, i32 9, !dbg !881
  store i8 1, i8* %encoding, align 8, !dbg !882
  %99 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !883
  %mb_cur_max = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %99, i32 0, i32 10, !dbg !884
  store i8 6, i8* %mb_cur_max, align 1, !dbg !885
  br label %if.end111, !dbg !886
  %100 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !887
  %codeset108 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %100, i32 0, i32 38, !dbg !889
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @ascii, i64 0, i64 0), i8** %codeset108, align 8, !dbg !890
  %101 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !891
  %encoding109 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %101, i32 0, i32 9, !dbg !892
  store i8 0, i8* %encoding109, align 8, !dbg !893
tack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.190
//Instructions in stack: Num.191
//Instructions in stack: Num.192
//Instructions in stack: Num.193
//Instructions in stack: Num.194
//Instructions in stack: Num.195
//Instructions in stack: Num.196
//Instructions in stack: Num.197
//Instructions in stack: Num.198
//Instructions in stack: Num.199
//Instructions in stack: Num.200
//Instructions in stack: Num.201
//Instructions in stack: Num.202
//Instructions in stack: Num.203
//Instructions in stack: Num.204
//Instructions in stack: Num.205
//Instructions in stack: Num.206
//Instructions in stack: Num.207
//Instructions in stack: Num.208
//Instructions in stack: Num.209
//Instructions in stack: Num.210
//Instructions in stack: Num.211
//Instructions in stack: Num.212
//Instructions in stack: Num.213
//Instructions in stack: Num.214
//Instructions in stack: Num.215
//Instructions in stack: Num.216
//Instructions in stack: Num.217
//Instructions in stack: Num.218
//Instructions in stack: Num.219
//Instructions in stack: Num.220
//Instructions in stack: Num.221
//Instructions in stack: Num.222
//Instructions in stack: Num.223
//Instructions in stack: Num.224
//Instructions in stack: Num.225
//Instructions in stack: Num.226
//Instructions in stack: Num.227
//Instructions in stack: Num.228
//Instructions in stack: Num.229
//Instructions in stack: Num.230
//Instructions in stack: Num.231
//Instructions in stack: Num.232
//Instructions in stack: Num.233
//Instructions in stack: Num.234
//Instructions in stack: Num.235
//Instructions in stack: Num.236
//Instructions in stack: Num.237
//Instructions in stack: Num.238
//Instructions in stack: Num.239
//Instructions in stack: Num.240
//Instructions in stack: Num.241
//Instructions in stack: Num.242
//Instructions in stack: Num.243
//Instructions in stack: Num.244
//Instructions in stack: Num.245
//Instructions in stack: Num.246
//Instructions in stack: Num.247
//Instructions in stack: Num.248
//Instructions in stack: Num.249
//Instructions in stack: Num.250
//Instructions in stack: Num.251
//Instructions in stack: Num.252
//Instructions in stack: Num.253
//Instructions in stack: Num.254
//Instructions in stack: Num.255
//Instructions in stack: Num.256
//Instructions in stack: Num.257
//Instructions in stack: Num.258
//Instructions in stack: Num.259
//Instructions in stack: Num.260
//Instructions in stack: Num.261
//Instructions in stack: Num.262
//Instructions in stack: Num.263
//Instructions in stack: Num.264
//Instructions in stack: Num.265
//Instructions in stack: Num.266
//Instructions in stack: Num.267
//Instructions in stack: Num.268
//Instructions in stack: Num.269
//Instructions in stack: Num.270
//Instructions in stack: Num.271
//Instructions in stack: Num.272
//Instructions in stack: Num.273
//Instructions in stack: Num.274
//Instructions in stack: Num.275
//Instructions in stack: Num.276
//Instructions in stack: Num.277
//Instructions in stack: Num.278
//Instructions in stack: Num.279
//Instructions in stack: Num.280
//Instructions in stack: Num.281
//Instructions in stack: Num.282
//Instructions in stack: Num.283
//Instructions in stack: Num.284
//Instructions in stack: Num.285
//Instructions in stack: Num.286
//Instructions in stack: Num.287
//Instructions in stack: Num.288
//Instructions in stack: Num.289
//Instructions in stack: Num.290
//Instructions in stack: Num.291
//Instructions in stack: Num.292
//Instructions in stack: Num.293
//Instructions in stack: Num.294
//Instructions in stack: Num.295
//Instructions in stack: Num.296
//Instructions in stack: Num.297
//Instructions in stack: Num.298
//Instructions in stack: Num.299
//Instructions in stack: Num.300
//Instructions in stack: Num.301
//Instructions in stack  %102 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !894
  %mb_cur_max110 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %102, i32 0, i32 10, !dbg !895
  store i8 1, i8* %mb_cur_max110, align 1, !dbg !896
  br label %if.end111
  br label %if.end280, !dbg !897
  call void @llvm.dbg.declare(metadata %struct.__codeset_8_bit_t.161** %c8b, metadata !1298, metadata !DIExpression()), !dbg !1310
  %103 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !911
  %codeset_list = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %103, i32 0, i32 35, !dbg !911
  %arraydecay113 = getelementptr inbounds [255 x i8], [255 x i8]* %codeset_list, i64 0, i64 0, !dbg !911
  store i8* %arraydecay113, i8** %r, align 8, !dbg !912
  %104 = load i8*, i8** %r, align 8, !dbg !913
  %105 = load i8*, i8** %r, align 8, !dbg !914
  %106 = load i32, i32* %c, align 4, !dbg !915
  %sub = sub nsw i32 %106, 3, !dbg !915
  store i32 %sub, i32* %c, align 4, !dbg !915
  %idxprom114 = sext i32 %sub to i64, !dbg !914
  %arrayidx115 = getelementptr inbounds i8, i8* %105, i64 %idxprom114, !dbg !914
  %107 = load i8, i8* %arrayidx115, align 1, !dbg !914
  %conv116 = zext i8 %107 to i32, !dbg !914
  %idx.ext117 = sext i32 %conv116 to i64, !dbg !916
  %add.ptr118 = getelementptr inbounds i8, i8* %104, i64 %idx.ext117, !dbg !916
  %108 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !917
  %codeset119 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %108, i32 0, i32 38, !dbg !918
  store i8* %add.ptr118, i8** %codeset119, align 8, !dbg !919
  %109 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !920
  %encoding120 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %109, i32 0, i32 9, !dbg !921
  store i8 2, i8* %encoding120, align 8, !dbg !922
  %110 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !923
  %mb_cur_max121 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %110, i32 0, i32 10, !dbg !924
  store i8 1, i8* %mb_cur_max121, align 1, !dbg !925
  %111 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !926
  %codeset_8_bit = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %111, i32 0, i32 12, !dbg !927
  %arraydecay122 = getelementptr inbounds [23 x %struct.__codeset_8_bit_t.161], [23 x %struct.__codeset_8_bit_t.161]* %codeset_8_bit, i64 0, i64 0, !dbg !926
  %112 = load i32, i32* %c, align 4, !dbg !928
  %idx.ext123 = sext i32 %112 to i64, !dbg !929
  %add.ptr124 = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %arraydecay122, i64 %idx.ext123, !dbg !929
  store %struct.__codeset_8_bit_t.161* %add.ptr124, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !930
  %113 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !931
  %idx8ctype = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %113, i32 0, i32 0, !dbg !932
  %arraydecay125 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8ctype, i64 0, i64 0, !dbg !931
  %114 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !933
  %idx8ctype126 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %114, i32 0, i32 12, !dbg !934
  store i8* %arraydecay125, i8** %idx8ctype126, align 8, !dbg !935
  %115 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !936
  %idx8uplow = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %115, i32 0, i32 1, !dbg !937
  %arraydecay127 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8uplow, i64 0, i64 0, !dbg !936
  %116 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !938
  %idx8uplow128 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %116, i32 0, i32 14, !dbg !939
  store i8* %arraydecay127, i8** %idx8uplow128, align 8, !dbg !940
  %117 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !941
  %idx8c2wc = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %117, i32 0, i32 2, !dbg !942
  %arraydecay129 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8c2wc, i64 0, i64 0, !dbg !941
  %118 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !943
  %idx8c2wc130 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %118, i32 0, i32 16, !dbg !944
  store i8* %arraydecay129, i8** %idx8c2wc130, align 8, !dbg !945
  %119 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !946
  %idx8wc2c = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %119, i32 0, i32 3, !dbg !947
  %arraydecay131 = getelementptr inbounds [38 x i8], [38 x i8]* %idx8wc2c, i64 0, i64 0, !dbg !946
  %120 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !948
  %idx8wc2c132 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %120, i32 0, i32 18, !dbg !949
  store i8* %arraydecay131, i8** %idx8wc2c132, align 8, !dbg !950
  %121 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !951
  %__ctype_b_data = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %121, i32 0, i32 3, !dbg !952
  %arraydecay133 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data, i64 0, i64 0, !dbg !951
  %122 = bitcast i16* %arraydecay133 to i8*, !dbg !951
  %123 = load i16*, i16** @__C_ctype_b, align 8, !dbg !953
  %add.ptr134 = getelementptr inbounds i16, i16* %123, i64 -128, !dbg !954
  %124 = bitcast i16* %add.ptr134 to i8*, !dbg !953
  %call135 = call i8* @memcpy(i8* %122, i8* %124, i64 768) #11, !dbg !955
  %125 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !956
  %__ctype_tolower_data = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %125, i32 0, i32 4, !dbg !957
  %arraydecay136 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data, i64 0, i64 0, !dbg !956
  %126 = bitcast i16* %arraydecay136 to i8*, !dbg !956
  %127 = load i16*, i16** @__C_ctype_tolower, align 8, !dbg !958
  %add.ptr137 = getelementptr inbounds i16, i16* %127, i64 -128, !dbg !959
  %128 = bitcast i16* %add.ptr137 to i8*, !dbg !958
  %call138 = call i8* @memcpy(i8* %126, i8* %128, i64 768) #11, !dbg !960
  %129 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !961
  %__ctype_toupper_data = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %129, i32 0, i32 5, !dbg !962
  %arraydecay139 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data, i64 0, i64 0, !dbg !961
  %130 = bitcast i16* %arraydecay139 to i8*, !dbg !961
  %131 = load i16*, i16** @__C_ctype_toupper, align 8, !dbg !963
  %add.ptr140 = getelementptr inbounds i16, i16* %131, i64 -128, !dbg !964
  %132 = bitcast i16* %add.ptr140 to i8*, !dbg !963
  %call141 = call i8* @memcpy(i8* %130, i8* %132, i64 768) #11, !dbg !965
  call void @llvm.dbg.declare(metadata i32* %u, metadata !1366, metadata !DIExpression()), !dbg !1368
  call void @llvm.dbg.declare(metadata i16* %m, metadata !1369, metadata !DIExpression()), !dbg !1370
  store i32 0, i32* %u, align 4, !dbg !971
  br label %for.cond142, !dbg !973
  %133 = load i32, i32* %u, align 4, !dbg !974
  %cmp143 = icmp slt i32 %133, 128, !dbg !976
  br i1 %cmp143, label %for.body145, label %for.end270, !dbg !977
  %134 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !978
  %tbl8ctype = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %134, i32 0, i32 13, !dbg !980
  %135 = load i8*, i8** %tbl8ctype, align 8, !dbg !980
  %136 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !981
  %idx8ctype146 = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %136, i32 0, i32 0, !dbg !982
  %137 = load i32, i32* %u, align 4, !dbg !983
  %shr = ashr i32 %137, 3, !dbg !984
  %idxprom147 = sext i32 %shr to i64, !dbg !981
  %arrayidx148 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8ctype146, i64 0, i64 %idxprom147, !dbg !981
  %138 = load i8, i8* %arrayidx148, align 1, !dbg !981
  %conv149 = zext i8 %138 to i32, !dbg !985
  %shl150 = shl i32 %conv149, 2, !dbg !986
  %139 = load i32, i32* %u, align 4, !dbg !987
  %and151 = and i32 %139, 7, !dbg !988
  %shr152 = ashr i32 %and151, 1, !dbg !989
  %add153 = add nsw i32 %shl150, %shr152, !dbg !990
  %idxprom154 = sext i32 %add153 to i64, !dbg !978
  %arrayidx155 = getelementptr inbounds i8, i8* %135, i64 %idxprom154, !dbg !978
  %140 = load i8, i8* %arrayidx155, align 1, !dbg !978
  %conv156 = zext i8 %140 to i32, !dbg !978
  store i32 %conv156, i32* %c, align 4, !dbg !991
  %141 = load i32, i32* %u, align 4, !dbg !992
  %and157 = and i32 %141, 1, !dbg !993
  %tobool158 = icmp ne i32 %and157, 0, !dbg !993
  br i1 %tobool158, label %cond.true, label %cond.false, !dbg !994
  %142 = load i32, i32* %c, align 4, !dbg !995
  %shr159 = ashr i32 %142, 4, !dbg !996
  br label %cond.end, !dbg !994
  %143 = load i32, i32* %c, align 4, !dbg !997
  %and160 = and i32 %143, 15, !dbg !998
  br label %cond.end, !dbg !994
  %cond = phi i32 [ %shr159, %cond.true ], [ %and160, %cond.false ], !dbg !994
: Num.302
//Instructions in stack: Num.303
//Instructions in stack: Num.304
//Instructions in stack: Num.305
//Instructions in stack: Num.306
//Instructions in stack: Num.307
//Instructions in stack: Num.308
//Instructions in stack: Num.309
//Instructions in stack: Num.310
//Instructions in stack: Num.311
//Instructions in stack: Num.312
//Instructions in stack: Num.313
//Instructions in stack: Num.314
//Instructions in stack: Num.315
//Instructions in stack: Num.316
//Instructions in stack: Num.317
//Instructions in stack: Num.318
//Instructions in stack: Num.319
//Instructions in stack: Num.320
//Instructions in stack: Num.321
//Instructions in stack: Num.322
//Instructions in stack: Num.323
//Instructions in stack: Num.324
//Instructions in stack: Num.325
//Instructions in stack: Num.326
//Instructions in stack: Num.327
//Instructions in stack: Num.328
//Instructions in stack: Num.329
//Instructions in stack: Num.330
//Instructions in stack: Num.331
//Instructions in stack: Num.332
//Instructions in stack: Num.333
//Instructions in stack: Num.334
//Instructions in stack: Num.335
//Instructions in stack: Num.336
//Instructions in stack: Num.337
//Instructions in stack: Num.338
//Instructions in stack: Num.339
//Instructions in stack: Num.340
//Instructions in stack: Num.341
//Instructions in stack: Num.342
//Instructions in stack: Num.343
//Instructions in stack: Num.344
//Instructions in stack: Num.345
//Instructions in stack: Num.346
//Instructions in stack: Num.347
//Instructions in stack: Num.348
//Instructions in stack: Num.349
//Instructions in stack: Num.350
//Instructions in stack: Num.351
//Instructions in stack: Num.352
//Instructions in stack: Num.353
//Instructions in stack: Num.354
//Instructions in stack: Num.355
//Instructions in stack: Num.356
//Instructions in stack: Num.357
//Instructions in stack: Num.358
//Instructions in stack: Num.359
//Instructions in stack: Num.360
//Instructions in stack: Num.361
//Instructions in stack: Num.362
//Instructions in stack: Num.363
//Instructions in stack: Num.364
//Instructions in stack: Num.365
//Instructions in stack: Num.366
//Instructions in stack: Num.367
//Instructions in stack: Num.368
//Instructions in stack: Num.369
//Instructions in stack: Num.370
//Instructions in stack: Num.371
//Instructions in stack: Num.372
//Instructions in stack: Num.373
//Instructions in stack: Num.374
//Instructions in stack: Num.375
//Instructions in stack: Num.376
//Instructions in stack: Num.377
//Instructions in stack: Num.378
//Instructions in stack: Num.379
//Instructions in stack: Num.380
//Instructions in stack: Num.381
//Instructions in stack: Num.382
//Instructions in stack: Num.383
//Instructions in stack: Num.384
//Instructions in stack: Num.385
//Instructions in stack: Num.386
//Instructions in stack: Num.387
//Instructions in stack: Num.388
//Instructions in stack: Num.389
//Instructions in stack: Num.390
//Instructions in stack: Num.391
//Instructions in stack: Num.392
//Instructions in stack: Num.393
//Instructions in stack: Num.394
//Instructions in stack: Num.395
//Instructions in stack: Num.396
//Instructions in stack: Num.397
//Instructions in stack: Num.398
//Instructions in stack: Num.399
//Instructions in stack: Num.400
//Instructions in stack: Num.401
//Instructions in stack: Num.402
//Instructions in stack: Num.403
//Instructions in stack: Num.404
//Instructions in stack: Num.405
//Instructions in stack: Num.406
//Instructions in stack: Num.407
//Instructions in stack: Num.408
//Instructions in stack: Num.409
//Instructions in stack: Num.410
//Instructions in stack: Num.411
//Instructions in stack: Num.412
//Instructions in stack: Num.413
//Instructions in stack: Num.414
//Instructions in stack: Num.415
//Instructions in stack: Num.416
//Instructions in stack: Num.417
//Instructions in stack: Num.418
//Instructions in stack: Num.419
//Instructions in stack: Num.420
//Instructions in stack: Num.421
//Instructions in stack: Num.422
//Instructions in stack: Num.423
//Instructions in stack: Num.424
//Instructions in stack: Num.425
//Instructions in stack: Nu  store i32 %cond, i32* %c, align 4, !dbg !999
  %144 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1000
  %code2flag = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %144, i32 0, i32 20, !dbg !1001
  %145 = load i16*, i16** %code2flag, align 8, !dbg !1001
  %146 = load i32, i32* %c, align 4, !dbg !1002
  %idxprom161 = sext i32 %146 to i64, !dbg !1000
  %arrayidx162 = getelementptr inbounds i16, i16* %145, i64 %idxprom161, !dbg !1000
  %147 = load i16, i16* %arrayidx162, align 2, !dbg !1000
  store i16 %147, i16* %m, align 2, !dbg !1003
  %148 = load i16, i16* %m, align 2, !dbg !1004
  %149 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1005
  %__ctype_b_data163 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %149, i32 0, i32 3, !dbg !1006
  %150 = load i32, i32* %u, align 4, !dbg !1007
  %add164 = add nsw i32 256, %150, !dbg !1008
  %idxprom165 = sext i32 %add164 to i64, !dbg !1005
  %arrayidx166 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data163, i64 0, i64 %idxprom165, !dbg !1005
  store i16 %148, i16* %arrayidx166, align 2, !dbg !1009
  %151 = load i32, i32* %u, align 4, !dbg !1010
  %add167 = add nsw i32 128, %151, !dbg !1012
  %conv168 = trunc i32 %add167 to i8, !dbg !1013
  %conv169 = sext i8 %conv168 to i32, !dbg !1014
  %cmp170 = icmp ne i32 %conv169, -1, !dbg !1015
  br i1 %cmp170, label %if.then172, label %if.end180, !dbg !1016
  %152 = load i16, i16* %m, align 2, !dbg !1017
  %153 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1019
  %__ctype_b_data173 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %153, i32 0, i32 3, !dbg !1020
  %154 = load i32, i32* %u, align 4, !dbg !1021
  %add174 = add nsw i32 128, %154, !dbg !1022
  %conv175 = trunc i32 %add174 to i8, !dbg !1023
  %conv176 = sext i8 %conv175 to i32, !dbg !1024
  %add177 = add nsw i32 128, %conv176, !dbg !1025
  %idxprom178 = sext i32 %add177 to i64, !dbg !1019
  %arrayidx179 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data173, i64 0, i64 %idxprom178, !dbg !1019
  store i16 %152, i16* %arrayidx179, align 2, !dbg !1026
  br label %if.end180, !dbg !1027
  %155 = load i32, i32* %u, align 4, !dbg !1028
  %add181 = add nsw i32 128, %155, !dbg !1029
  %conv182 = trunc i32 %add181 to i16, !dbg !1030
  %156 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1031
  %__ctype_tolower_data183 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %156, i32 0, i32 4, !dbg !1032
  %157 = load i32, i32* %u, align 4, !dbg !1033
  %add184 = add nsw i32 256, %157, !dbg !1034
  %idxprom185 = sext i32 %add184 to i64, !dbg !1031
  %arrayidx186 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data183, i64 0, i64 %idxprom185, !dbg !1031
  store i16 %conv182, i16* %arrayidx186, align 2, !dbg !1035
  %158 = load i32, i32* %u, align 4, !dbg !1036
  %add187 = add nsw i32 128, %158, !dbg !1037
  %conv188 = trunc i32 %add187 to i16, !dbg !1038
  %159 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1039
  %__ctype_toupper_data189 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %159, i32 0, i32 5, !dbg !1040
  %160 = load i32, i32* %u, align 4, !dbg !1041
  %add190 = add nsw i32 256, %160, !dbg !1042
  %idxprom191 = sext i32 %add190 to i64, !dbg !1039
  %arrayidx192 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data189, i64 0, i64 %idxprom191, !dbg !1039
  store i16 %conv188, i16* %arrayidx192, align 2, !dbg !1043
  %161 = load i16, i16* %m, align 2, !dbg !1044
  %conv193 = zext i16 %161 to i32, !dbg !1044
  %and194 = and i32 %conv193, 768, !dbg !1046
  %tobool195 = icmp ne i32 %and194, 0, !dbg !1046
  br i1 %tobool195, label %if.then196, label %if.end267, !dbg !1047
  %162 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1048
  %tbl8uplow = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %162, i32 0, i32 15, !dbg !1050
  %163 = load i8*, i8** %tbl8uplow, align 8, !dbg !1050
  %164 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !1051
  %idx8uplow197 = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %164, i32 0, i32 1, !dbg !1052
  %165 = load i32, i32* %u, align 4, !dbg !1053
  %shr198 = ashr i32 %165, 3, !dbg !1054
  %idxprom199 = sext i32 %shr198 to i64, !dbg !1051
  %arrayidx200 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8uplow197, i64 0, i64 %idxprom199, !dbg !1051
  %166 = load i8, i8* %arrayidx200, align 1, !dbg !1051
  %conv201 = zext i8 %166 to i32, !dbg !1055
  %shl202 = shl i32 %conv201, 3, !dbg !1056
  %167 = load i32, i32* %u, align 4, !dbg !1057
  %add203 = add nsw i32 128, %167, !dbg !1058
  %and204 = and i32 %add203, 7, !dbg !1059
  %add205 = add nsw i32 %shl202, %and204, !dbg !1060
  %idxprom206 = sext i32 %add205 to i64, !dbg !1048
  %arrayidx207 = getelementptr inbounds i8, i8* %163, i64 %idxprom206, !dbg !1048
  %168 = load i8, i8* %arrayidx207, align 1, !dbg !1048
  %conv208 = zext i8 %168 to i32, !dbg !1048
  store i32 %conv208, i32* %c, align 4, !dbg !1061
  %169 = load i16, i16* %m, align 2, !dbg !1062
  %conv209 = zext i16 %169 to i32, !dbg !1062
  %and210 = and i32 %conv209, 512, !dbg !1064
  %tobool211 = icmp ne i32 %and210, 0, !dbg !1064
  br i1 %tobool211, label %if.then212, label %if.else239, !dbg !1065
  %170 = load i32, i32* %u, align 4, !dbg !1066
  %add213 = add nsw i32 128, %170, !dbg !1068
  %171 = load i32, i32* %c, align 4, !dbg !1069
  %add214 = add nsw i32 %add213, %171, !dbg !1070
  %conv215 = trunc i32 %add214 to i8, !dbg !1071
  %conv216 = zext i8 %conv215 to i16, !dbg !1071
  %172 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1072
  %__ctype_toupper_data217 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %172, i32 0, i32 5, !dbg !1073
  %173 = load i32, i32* %u, align 4, !dbg !1074
  %add218 = add nsw i32 256, %173, !dbg !1075
  %idxprom219 = sext i32 %add218 to i64, !dbg !1072
  %arrayidx220 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data217, i64 0, i64 %idxprom219, !dbg !1072
  store i16 %conv216, i16* %arrayidx220, align 2, !dbg !1076
  %174 = load i32, i32* %u, align 4, !dbg !1077
  %add221 = add nsw i32 128, %174, !dbg !1079
  %conv222 = trunc i32 %add221 to i8, !dbg !1080
  %conv223 = sext i8 %conv222 to i32, !dbg !1081
  %cmp224 = icmp ne i32 %conv223, -1, !dbg !1082
  br i1 %cmp224, label %if.then226, label %if.end238, !dbg !1083
  %175 = load i32, i32* %u, align 4, !dbg !1084
  %add227 = add nsw i32 128, %175, !dbg !1086
  %176 = load i32, i32* %c, align 4, !dbg !1087
  %add228 = add nsw i32 %add227, %176, !dbg !1088
  %conv229 = trunc i32 %add228 to i8, !dbg !1089
  %conv230 = zext i8 %conv229 to i16, !dbg !1089
  %177 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1090
  %__ctype_toupper_data231 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %177, i32 0, i32 5, !dbg !1091
  %178 = load i32, i32* %u, align 4, !dbg !1092
  %add232 = add nsw i32 128, %178, !dbg !1093
  %conv233 = trunc i32 %add232 to i8, !dbg !1094
  %conv234 = sext i8 %conv233 to i32, !dbg !1095
  %add235 = add nsw i32 128, %conv234, !dbg !1096
  %idxprom236 = sext i32 %add235 to i64, !dbg !1090
  %arrayidx237 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data231, i64 0, i64 %idxprom236, !dbg !1090
  store i16 %conv230, i16* %arrayidx237, align 2, !dbg !1097
  br label %if.end238, !dbg !1098
  br label %if.end266, !dbg !1099
  %179 = load i32, i32* %u, align 4, !dbg !1100
m.426
//Instructions in stack: Num.427
//Instructions in stack: Num.428
//Instructions in stack: Num.429
//Instructions in stack: Num.430
//Instructions in stack: Num.431
//Instructions in stack: Num.432
//Instructions in stack: Num.433
//Instructions in stack: Num.434
//Instructions in stack: Num.435
//Instructions in stack: Num.436
//Instructions in stack: Num.437
//Instructions in stack: Num.438
//Instructions in stack: Num.439
//Instructions in stack: Num.440
//Instructions in stack: Num.441
//Instructions in stack: Num.442
//Instructions in stack: Num.443
//Instructions in stack: Num.444
//Instructions in stack: Num.445
//Instructions in stack: Num.446
//Instructions in stack: Num.447
//Instructions in stack: Num.448
//Instructions in stack: Num.449
//Instructions in stack: Num.450
//Instructions in stack: Num.451
//Instructions in stack: Num.452
//Instructions in stack: Num.453
//Instructions in stack: Num.454
//Instructions in stack: Num.455
//Instructions in stack: Num.456
//Instructions in stack: Num.457
//Instructions in stack: Num.458
//Instructions in stack: Num.459
//Instructions in stack: Num.460
//Instructions in stack: Num.461
//Instructions in stack: Num.462
//Instructions in stack: Num.463
//Instructions in stack: Num.464
//Instructions in stack: Num.465
//Instructions in stack: Num.466
//Instructions in stack: Num.467
//Instructions in stack: Num.468
//Instructions in stack: Num.469
//Instructions in stack: Num.470
//Instructions in stack: Num.471
//Instructions in stack: Num.472
//Instructions in stack: Num.473
//Instructions in stack: Num.474
//Instructions in stack: Num.475
//Instructions in stack: Num.476
//Instructions in stack: Num.477
//Instructions in stack: Num.478
//Instructions in stack: Num.479
//Instructions in stack: Num.480
//Instructions in stack: Num.481
//Instructions in stack: Num.482
//Instructions in stack: Num.483
//Instructions in stack: Num.484
//Instructions in stack: Num.485
//Instructions in stack: Num.486
//Instructions in stack: Num.487
//Instructions in stack: Num.488
//Instructions in stack: Num.489
//Instructions in stack: Num.490
//Instructions in stack: Num.491
//Instructions in stack: Num.492
//Instructions in stack: Num.493
//Instructions in stack: Num.494
//Instructions in stack: Num.495
//Instructions in stack: Num.496
//Instructions in stack: Num.497
//Instructions in stack: Num.498
//Instructions in stack: Num.499
//Instructions in stack: Num.500
//Instructions in stack: Num.501
//Instructions in stack: Num.502
//Instructions in stack: Num.503
//Instructions in stack: Num.504
//Instructions in stack: Num.505
//Instructions in stack: Num.506
//Instructions in stack: Num.507
//Instructions in stack: Num.508
//Instructions in stack: Num.509
//Instructions in stack: Num.510
//Instructions in stack: Num.511
//Instructions in stack: Num.512
//Instructions in stack: Num.513
//Instructions in stack: Num.514
//Instructions in stack: Num.515
//Instructions in stack: Num.516
//Instructions in stack: Num.517
//Instructions in stack: Num.518
//Instructions in stack: Num.519
//Instructions in stack: Num.520
//Instructions in stack: Num.521
//Instructions in stack: Num.522
//Instructions in stack: Num.523
//Instructions in stack: Num.524
//Instructions in stack: Num.525
//Instructions in stack: Num.526
//Instructions in stack: Num.527
//Instructions in stack: Num.528
//Instructions in stack: Num.529
//Instructions in stack: Num.530
//Instructions in stack: Num.531
//Instructions in stack: Num.532
//Instructions in stack: Num.533
//Instructions in stack: Num.534
//Instructions in stack: Num.535
//Instructions in stack: Num.536
//Instructions in stack: Num.537
//Instructions in stack: Num.538
//Instructions in stack: Num.539
//Instructions in stack: Num.540
//Instructions in stack: Num.541
//Instructions in stack: Num.542
//Instructions in stack: Num.543
//Instructions in stack: Num.544
//Instructions in stack: Num.545
//Instructions in stack: Num.546
//Instructions in stack: Num.547
//Instructions in stack: Num.548
//Instructions in stack: Num.549
//Instructions in stack: Num.55  %add240 = add nsw i32 128, %179, !dbg !1102
  %180 = load i32, i32* %c, align 4, !dbg !1103
  %sub241 = sub nsw i32 %add240, %180, !dbg !1104
  %conv242 = trunc i32 %sub241 to i8, !dbg !1105
  %conv243 = zext i8 %conv242 to i16, !dbg !1105
  %181 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1106
  %__ctype_tolower_data244 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %181, i32 0, i32 4, !dbg !1107
  %182 = load i32, i32* %u, align 4, !dbg !1108
  %add245 = add nsw i32 256, %182, !dbg !1109
  %idxprom246 = sext i32 %add245 to i64, !dbg !1106
  %arrayidx247 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data244, i64 0, i64 %idxprom246, !dbg !1106
  store i16 %conv243, i16* %arrayidx247, align 2, !dbg !1110
  %183 = load i32, i32* %u, align 4, !dbg !1111
  %add248 = add nsw i32 128, %183, !dbg !1113
  %conv249 = trunc i32 %add248 to i8, !dbg !1114
  %conv250 = sext i8 %conv249 to i32, !dbg !1115
  %cmp251 = icmp ne i32 %conv250, -1, !dbg !1116
  br i1 %cmp251, label %if.then253, label %if.end265, !dbg !1117
  %184 = load i32, i32* %u, align 4, !dbg !1118
  %add254 = add nsw i32 128, %184, !dbg !1120
  %185 = load i32, i32* %c, align 4, !dbg !1121
  %sub255 = sub nsw i32 %add254, %185, !dbg !1122
  %conv256 = trunc i32 %sub255 to i8, !dbg !1123
  %conv257 = zext i8 %conv256 to i16, !dbg !1123
  %186 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1124
  %__ctype_tolower_data258 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %186, i32 0, i32 4, !dbg !1125
  %187 = load i32, i32* %u, align 4, !dbg !1126
  %add259 = add nsw i32 128, %187, !dbg !1127
  %conv260 = trunc i32 %add259 to i8, !dbg !1128
  %conv261 = sext i8 %conv260 to i32, !dbg !1129
  %add262 = add nsw i32 128, %conv261, !dbg !1130
  %idxprom263 = sext i32 %add262 to i64, !dbg !1124
  %arrayidx264 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data258, i64 0, i64 %idxprom263, !dbg !1124
  store i16 %conv257, i16* %arrayidx264, align 2, !dbg !1131
  br label %if.end265, !dbg !1132
  br label %if.end266
  br label %if.end267, !dbg !1133
  br label %for.inc268, !dbg !1134
  %188 = load i32, i32* %u, align 4, !dbg !1135
  %inc269 = add nsw i32 %188, 1, !dbg !1135
  store i32 %inc269, i32* %u, align 4, !dbg !1135
  br label %for.cond142, !dbg !1136, !llvm.loop !1137
  %189 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1139
  %__ctype_b_data271 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %189, i32 0, i32 3, !dbg !1140
  %arraydecay272 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data271, i64 0, i64 0, !dbg !1139
  %add.ptr273 = getelementptr inbounds i16, i16* %arraydecay272, i64 128, !dbg !1141
  %190 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1142
  %__ctype_b = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %190, i32 0, i32 0, !dbg !1143
  store i16* %add.ptr273, i16** %__ctype_b, align 8, !dbg !1144
  %191 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1145
  %__ctype_tolower_data274 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %191, i32 0, i32 4, !dbg !1146
  %arraydecay275 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data274, i64 0, i64 0, !dbg !1145
  %add.ptr276 = getelementptr inbounds i16, i16* %arraydecay275, i64 128, !dbg !1147
  %192 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1148
  %__ctype_tolower = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %192, i32 0, i32 1, !dbg !1149
  store i16* %add.ptr276, i16** %__ctype_tolower, align 8, !dbg !1150
  %193 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1151
  %__ctype_toupper_data277 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %193, i32 0, i32 5, !dbg !1152
  %arraydecay278 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data277, i64 0, i64 0, !dbg !1151
  %add.ptr279 = getelementptr inbounds i16, i16* %arraydecay278, i64 128, !dbg !1153
  %194 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1154
  %__ctype_toupper = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %194, i32 0, i32 2, !dbg !1155
  store i16* %add.ptr279, i16** %__ctype_toupper, align 8, !dbg !1156
  br label %if.end280
  %195 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1157
  %outdigit_length = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %195, i32 0, i32 11, !dbg !1158
  %arraydecay281 = getelementptr inbounds [10 x i8], [10 x i8]* %outdigit_length, i64 0, i64 0, !dbg !1157
  store i8* %arraydecay281, i8** %d, align 8, !dbg !1159
  %196 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1160
  %outdigit0_mb = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %196, i32 0, i32 28, !dbg !1161
  store i8** %outdigit0_mb, i8*** %x, align 8, !dbg !1162
  store i32 0, i32* %c, align 4, !dbg !1163
  br label %for.cond282, !dbg !1165
  %197 = load i32, i32* %c, align 4, !dbg !1166
  %cmp283 = icmp slt i32 %197, 10, !dbg !1168
  br i1 %cmp283, label %for.body285, label %for.end294, !dbg !1169
  %198 = load i8**, i8*** %x, align 8, !dbg !1170
  %199 = load i32, i32* %c, align 4, !dbg !1172
  %idxprom286 = sext i32 %199 to i64, !dbg !1170
  %arrayidx287 = getelementptr inbounds i8*, i8** %198, i64 %idxprom286, !dbg !1170
  %200 = load i8*, i8** %arrayidx287, align 8, !dbg !1170
  %call288 = call i64 @strlen(i8* %200) #12, !dbg !1173
  %conv289 = trunc i64 %call288 to i8, !dbg !1173
  %201 = load i8*, i8** %d, align 8, !dbg !1174
  %202 = load i32, i32* %c, align 4, !dbg !1175
  %idxprom290 = sext i32 %202 to i64, !dbg !1176
  %arrayidx291 = getelementptr inbounds i8, i8* %201, i64 %idxprom290, !dbg !1176
  store i8 %conv289, i8* %arrayidx291, align 1, !dbg !1177
  br label %for.inc292, !dbg !1178
  %203 = load i32, i32* %c, align 4, !dbg !1179
  %inc293 = add nsw i32 %203, 1, !dbg !1179
  store i32 %inc293, i32* %c, align 4, !dbg !1179
  br label %for.cond282, !dbg !1180, !llvm.loop !1181
  br label %if.end312, !dbg !1183
  %204 = load i32, i32* %i, align 4, !dbg !1184
  %cmp296 = icmp eq i32 %204, 1, !dbg !1186
  br i1 %cmp296, label %if.then298, label %if.end311, !dbg !1187
  %205 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1188
  %decimal_point_wc = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %205, i32 0, i32 24, !dbg !1190
  %206 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1191
  %decimal_point = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %206, i32 0, i32 39, !dbg !1192
  %207 = load i8*, i8** %decimal_point, align 8, !dbg !1192
  %208 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1193
  %call299 = call i32 @__locale_mbrtowc_l(i32* %decimal_point_wc, i8* %207, %struct.__uclibc_locale_struct.160* %208) #10, !dbg !1194
  %209 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1195
  %decimal_point_len = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %209, i32 0, i32 26, !dbg !1196
  store i32 %call299, i32* %decimal_point_len, align 8, !dbg !1197
  %210 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1198
  %grouping = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %210, i32 0, i32 41, !dbg !1200
  %211 = load i8*, i8** %grouping, align 8, !dbg !1200
  %212 = load i8, i8* %211, align 1, !dbg !1201
  %tobool300 = icmp ne i8 %212, 0, !dbg !1201
  br i1 %tobool300, label %if.then301, label %if.end310, !dbg !1202
  %213 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1203
  %thousands_sep_wc = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %213, i32 0, i32 25, !dbg !1205
  %214 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1206
  %thousands_sep = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %214, i32 0, i32 40, !dbg !1207
  %215 = load i8*, i8** %thousands_sep, align 8, !dbg !1207
  %216 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1208
  %call302 = call i32 @__locale_mbrtowc_l(i32* %thousands_sep_wc, i8* %215, %struct.__uclibc_locale_struct.160* %216) #10, !dbg !1209
  %217 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1210
  %thousands_sep_len = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %217, i32 0, i32 27, !dbg !1211
  store i32 %call302, i32* %thousands_sep_len, align 4, !dbg !1212
  %218 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1213
  %thousands_sep_len303 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %218, i32 0, i32 27, !dbg !1215
0
//Instructions in stack: Num.551
//Instructions in stack: Num.552
//Instructions in stack: Num.553
//Instructions in stack: Num.554
//Instructions in stack: Num.555
//Instructions in stack: Num.556
//Instructions in stack: Num.557
//Instructions in stack: Num.558
//Instructions in stack: Num.559
//Instructions in stack: Num.560
//Instructions in stack: Num.561
//Instructions in stack: Num.562
//Instructions in stack: Num.563
//Instructions in stack: Num.564
//Instructions in stack: Num.565
//Instructions in stack: Num.566
//Instructions in stack: Num.567
//Instructions in stack: Num.568
//Instructions in stack: Num.569
//Instructions in stack: Num.570
//Instructions in stack: Num.571
//Instructions in stack: Num.572
//Instructions in stack: Num.573
//Instructions in stack: Num.574
//Instructions in stack: Num.575
//Instructions in stack: Num.576
//Instructions in stack: Num.577
//Instructions in stack: Num.578
//Instructions in stack: Num.579
//Instructions in stack: Num.580
//Instructions in stack: Num.581
//Instructions in stack: Num.582
//Instructions in stack: Num.583
//Instructions in stack: Num.584
//Instructions in stack: Num.585
//Instructions in stack: Num.586
//Instructions in stack: Num.587
//Instructions in stack: Num.588
//Instructions in stack: Num.589
//Instructions in stack: Num.590
//Instructions in stack: Num.591
//Instructions in stack: Num.592
//Instructions in stack: Num.593
//Instructions in stack: Num.594
//Instructions in stack: Num.595
//Instructions in stack: Num.596
//Instructions in stack: Num.597
//Instructions in stack: Num.598
//Instructions in stack: Num.599
//Instructions in stack: Num.600
//Instructions in stack: Num.601
//Instructions in stack: Num.602
//Instructions in stack: Num.603
//Instructions in stack: Num.604
//Instructions in stack: Num.605
//Instructions in stack: Num.606
//Instructions in stack: Num.607
//Instructions in stack: Num.608
//Instructions in stack: Num.609
//Instructions in stack: Num.610
//Instructions in stack: Num.611
//Instructions in stack: Num.612
//Instructions in stack: Num.613
//Instructions in stack: Num.614
//Instructions in stack: Num.615
//Instructions in stack: Num.616
//Instructions in stack: Num.617
//Instructions in stack: Num.618
//Instructions in stack: Num.619
//Instructions in stack: Num.620
//Instructions in stack: Num.621
//Instructions in stack: Num.622
//Instructions in stack: Num.623
//Instructions in stack: Num.624
//Instructions in stack: Num.625
//Instructions in stack: Num.626
//Instructions in stack: Num.627
//Instructions in stack: Num.628
//Instructions in stack: Num.629
//Instructions in stack: Num.630
//Instructions in stack: Num.631
//Instructions in stack: Num.632
//Instructions in stack: Num.633
//Instructions in stack: Num.634
//Instructions in stack: Num.635
//Instructions in stack: Num.636
//Instructions in stack: Num.637
//Instructions in stack: Num.638
//Instructions in stack: Num.639
//Instructions in stack: Num.640
//Instructions in stack: Num.641
//Instructions in stack: Num.642
//Instructions in stack: Num.643
//Instructions in stack: Num.644
//Instructions in stack: Num.645
//Instructions in stack: Num.646
//Instructions in stack: Num.647
//Instructions in stack: Num.648
//Instructions in stack: Num.649
//Instructions in stack: Num.650
//Instructions in stack: Num.651
//Instructions in stack: Num.652
//Instructions in stack: Num.653
//Instructions in stack: Num.654
//Instructions in stack: Num.655
//Instructions in stack: Num.656
//Instructions in stack: Num.657
//Instructions in stack: Num.658
//Instructions in stack: Num.659
//Instructions in stack: Num.660
//Instructions in stack: Num.661
//Instructions in stack: Num.662
//Instructions in stack: Num.663
//Instructions in stack: Num.664
//Instructions in stack: Num.665
//Instructions in stack: Num.666
//Instructions in stack: Num.667
//Instructions in stack: Num.668
//Instructions in stack: Num.669
//Instructions in stack: Num.670
//Instructions in stack: Num.671
//Instructions in stack: Num.672
//Instructions in stack: Num.673
//Instructions in stack: Num.674
//  %219 = load i32, i32* %thousands_sep_len303, align 4, !dbg !1215
  %cmp304 = icmp eq i32 %219, 0, !dbg !1216
  br i1 %cmp304, label %if.then306, label %if.end309, !dbg !1217
  %220 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1218
  %thousands_sep307 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %220, i32 0, i32 40, !dbg !1220
  %221 = load i8*, i8** %thousands_sep307, align 8, !dbg !1220
  %222 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1221
  %grouping308 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %222, i32 0, i32 41, !dbg !1222
  store i8* %221, i8** %grouping308, align 8, !dbg !1223
  br label %if.end309, !dbg !1224
  br label %if.end310, !dbg !1225
  br label %if.end311, !dbg !1226
  br label %if.end312
  br label %if.end313, !dbg !1227
  %223 = load i32, i32* %i, align 4, !dbg !1228
  %inc314 = add nsw i32 %223, 1, !dbg !1228
  store i32 %inc314, i32* %i, align 4, !dbg !1228
  %224 = load i8*, i8** %p.addr, align 8, !dbg !1229
  %add.ptr315 = getelementptr inbounds i8, i8* %224, i64 2, !dbg !1229
  store i8* %add.ptr315, i8** %p.addr, align 8, !dbg !1229
  %225 = load i8*, i8** %s, align 8, !dbg !1230
  %add.ptr316 = getelementptr inbounds i8, i8* %225, i64 2, !dbg !1230
  store i8* %add.ptr316, i8** %s, align 8, !dbg !1230
  br label %do.cond, !dbg !1231
  %226 = load i32, i32* %i, align 4, !dbg !1232
  %cmp317 = icmp slt i32 %226, 6, !dbg !1233
  br i1 %cmp317, label %do.body, label %do.end, !dbg !1231, !llvm.loop !1234
  store i32 1, i32* %retval, align 4, !dbg !1236
  br label %return, !dbg !1236
  %227 = load i32, i32* %retval, align 4, !dbg !1237
  ret i32 %227, !dbg !1237
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
Instructions in stack: Num.675
//Instructions in stack: Num.676
//Instructions in stack: Num.677
//Instructions in stack: Num.678
//Instructions in stack: Num.679
//Instructions in stack: Num.680
//Instructions in stack: Num.681
//Instructions in stack: Num.682
//Instructions in stack: Num.683
//Instructions in stack: Num.684
//Instructions in stack: Num.685
//Instructions in stack: Num.686
//Instructions in stack: Num.687
//Instructions in stack: Num.688
//Instructions in stack: Num.689
//Instructions in stack: Num.690
//Instructions in stack: Num.691
//Instructions in stack: Num.692
//Instructions in stack: Num.693
//Instructions in stack: Num.694
//Instructions in stack: Num.695
//Instructions in stack: Num.696
//Instructions in stack: Num.697
//Instructions in stack: Num.698
//Instructions in stack: Num.699
//Instructions in stack: Num.700
//Instructions in stack: Num.701
//Instructions in stack: Num.702
//Instructions in stack: Num.703
//Instructions in stack: Num.704
//Instructions in stack: Num.705
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions   %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  %0 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !657
  %tobool = icmp ne i32 %0, 0, !dbg !657
  br i1 %tobool, label %if.then, label %if.end, !dbg !659
  br label %if.end4, !dbg !660
  %1 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  %inc = add nsw i32 %1, 1, !dbg !661
  store i32 %inc, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  store i64 4096, i64* @__pagesize, align 8, !dbg !662
  br i1 true, label %if.then1, label %if.end2, !dbg !663
  call void @_locale_init() #10, !dbg !664
  br label %if.end2, !dbg !664
  br i1 true, label %if.then3, label %if.end4, !dbg !666
  call void @_stdio_init() #10, !dbg !667
  br label %if.end4, !dbg !667
  ret void, !dbg !669
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** @__global_locale, align 8, !dbg !658
  call void @_locale_init_l(%struct.__uclibc_locale_struct.160* %0) #10, !dbg !659
  ret void, !dbg !660
  %base.addr = alloca %struct.__uclibc_locale_struct.160*, align 8
  store %struct.__uclibc_locale_struct.160* %base, %struct.__uclibc_locale_struct.160** %base.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__uclibc_locale_struct.160** %base.addr, metadata !1973, metadata !DIExpression()), !dbg !1974
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !662
  %cur_locale = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %0, i32 0, i32 6, !dbg !663
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale, i64 0, i64 0, !dbg !662
  %call = call i8* @memset(i8* %arraydecay, i32 0, i64 14) #10, !dbg !664
  %1 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !665
  %cur_locale1 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %1, i32 0, i32 6, !dbg !666
  %arrayidx = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale1, i64 0, i64 0, !dbg !665
  store i8 35, i8* %arrayidx, align 8, !dbg !667
  %2 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !668
in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructio  %category_item_count = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %2, i32 0, i32 8, !dbg !669
  %arraydecay2 = getelementptr inbounds [6 x i8], [6 x i8]* %category_item_count, i64 0, i64 0, !dbg !668
  %3 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !670
  %lc_common_item_offsets_LEN = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %3, i32 0, i32 29, !dbg !671
  %arraydecay3 = getelementptr inbounds [6 x i8], [6 x i8]* %lc_common_item_offsets_LEN, i64 0, i64 0, !dbg !670
  %call4 = call i8* @memcpy(i8* %arraydecay2, i8* %arraydecay3, i64 6) #10, !dbg !672
  %4 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !673
  %category_item_count5 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %4, i32 0, i32 8, !dbg !674
  %arrayidx6 = getelementptr inbounds [6 x i8], [6 x i8]* %category_item_count5, i64 0, i64 0, !dbg !673
  %5 = load i8, i8* %arrayidx6, align 2, !dbg !675
  %inc = add i8 %5, 1, !dbg !675
  store i8 %inc, i8* %arrayidx6, align 2, !dbg !675
  %6 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !676
  %category_offsets = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %6, i32 0, i32 7, !dbg !677
  %arrayidx7 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets, i64 0, i64 0, !dbg !676
  store i16 2488, i16* %arrayidx7, align 2, !dbg !678
  %7 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !679
  %category_offsets8 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %7, i32 0, i32 7, !dbg !680
  %arrayidx9 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets8, i64 0, i64 1, !dbg !679
  store i16 2576, i16* %arrayidx9, align 2, !dbg !681
  %8 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !682
  %category_offsets10 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %8, i32 0, i32 7, !dbg !683
  %arrayidx11 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets10, i64 0, i64 2, !dbg !682
  store i16 2600, i16* %arrayidx11, align 2, !dbg !684
  %9 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !685
  %category_offsets12 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %9, i32 0, i32 7, !dbg !686
  %arrayidx13 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets12, i64 0, i64 3, !dbg !685
  store i16 2776, i16* %arrayidx13, align 2, !dbg !687
  %10 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !688
  %category_offsets14 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %10, i32 0, i32 7, !dbg !689
  %arrayidx15 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets14, i64 0, i64 5, !dbg !688
  store i16 3176, i16* %arrayidx15, align 2, !dbg !690
  %11 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !691
  %tbl8ctype = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %11, i32 0, i32 0, !dbg !692
  %12 = bitcast [420 x i8]* %tbl8ctype to i8*, !dbg !693
  %13 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !694
  %tbl8ctype16 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %13, i32 0, i32 13, !dbg !695
  store i8* %12, i8** %tbl8ctype16, align 8, !dbg !696
  %14 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !697
  %tbl8uplow = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %14, i32 0, i32 1, !dbg !698
  %15 = bitcast [504 x i8]* %tbl8uplow to i8*, !dbg !699
  %16 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !700
  %tbl8uplow17 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %16, i32 0, i32 15, !dbg !701
  store i8* %15, i8** %tbl8uplow17, align 8, !dbg !702
  %17 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !703
  %tbl8c2wc = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %17, i32 0, i32 2, !dbg !704
  %18 = bitcast [1760 x i16]* %tbl8c2wc to i16*, !dbg !705
  %19 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !706
  %tbl8c2wc18 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %19, i32 0, i32 17, !dbg !707
  store i16* %18, i16** %tbl8c2wc18, align 8, !dbg !708
  %20 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !709
  %tbl8wc2c = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %20, i32 0, i32 3, !dbg !710
  %21 = bitcast [4528 x i8]* %tbl8wc2c to i8*, !dbg !711
  %22 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !712
  %tbl8wc2c19 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %22, i32 0, i32 19, !dbg !713
  store i8* %21, i8** %tbl8wc2c19, align 8, !dbg !714
  %23 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !715
  %tblwctype = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %23, i32 0, i32 4, !dbg !716
  %24 = bitcast [3604 x i8]* %tblwctype to i8*, !dbg !717
  %25 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !718
  %tblwctype20 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %25, i32 0, i32 21, !dbg !719
  store i8* %24, i8** %tblwctype20, align 8, !dbg !720
  %26 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !721
  %tblwuplow = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %26, i32 0, i32 5, !dbg !722
  %27 = bitcast [1680 x i8]* %tblwuplow to i8*, !dbg !723
  %28 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !724
  %tblwuplow21 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %28, i32 0, i32 22, !dbg !725
  store i8* %27, i8** %tblwuplow21, align 8, !dbg !726
  %29 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !727
  %tblwuplow_diff = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %29, i32 0, i32 6, !dbg !728
  %30 = bitcast [196 x i16]* %tblwuplow_diff to i16*, !dbg !729
  %31 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !730
  %tblwuplow_diff22 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %31, i32 0, i32 23, !dbg !731
  store i16* %30, i16** %tblwuplow_diff22, align 8, !dbg !732
  %32 = load i16*, i16** @__C_ctype_b, align 8, !dbg !733
  %33 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !734
  %__ctype_b = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %33, i32 0, i32 0, !dbg !735
  store i16* %32, i16** %__ctype_b, align 8, !dbg !736
  %34 = load i16*, i16** @__C_ctype_tolower, align 8, !dbg !737
  %35 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !738
  %__ctype_tolower = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %35, i32 0, i32 1, !dbg !739
  store i16* %34, i16** %__ctype_tolower, align 8, !dbg !740
  %36 = load i16*, i16** @__C_ctype_toupper, align 8, !dbg !741
  %37 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !742
  %__ctype_toupper = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %37, i32 0, i32 2, !dbg !743
  store i16* %36, i16** %__ctype_toupper, align 8, !dbg !744
  %38 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !745
  %code2flag = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %38, i32 0, i32 20, !dbg !746
  store i16* getelementptr inbounds ([16 x i16], [16 x i16]* @__code2flag, i64 0, i64 0), i16** %code2flag, align 8, !dbg !747
  %39 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !748
  %call23 = call i32 @_locale_set_l(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), %struct.__uclibc_locale_struct.160* %39) #11, !dbg !749
  ret void, !dbg !750
  %retval = alloca i32, align 4
  %p.addr = alloca i8*, align 8
  %base.addr = alloca %struct.__uclibc_locale_struct.160*, align 8
  %x = alloca i8**, align 8
  %s = alloca i8*, align 8
  %stp = alloca i64*, align 8
  %r = alloca i8*, align 8
  %io = alloca i16*, align 8
  %ii = alloca i16*, align 8
  %d = alloca i8*, align 8
  %row = alloca i32, align 4
  %crow = alloca i32, align 4
  %len = alloca i32, align 4
  %c = alloca i32, align 4
  %i = alloca i32, align 4
  %newcol = alloca %struct.__collate_t.159, align 8
  %c8b = alloca %struct.__codeset_8_bit_t.161*, align 8
  %u = alloca i32, align 4
  %m = alloca i16, align 2
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !1060, metadata !DIExpression()), !dbg !1061
  store %struct.__uclibc_locale_struct.160* %base, %struct.__uclibc_locale_struct.160** %base.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__uclibc_locale_struct.160** %base.addr, metadata !1062, metadata !DIExpression()), !dbg !1063
  call void @llvm.dbg.declare(metadata i8*** %x, metadata !1064, metadata !DIExpression()), !dbg !1065
  call void @llvm.dbg.declare(metadata i8** %s, metadata !1066, metadata !DIExpression()), !dbg !1067
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !668
  %cur_locale = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %0, i32 0, i32 6, !dbg !669
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale, i64 0, i64 0, !dbg !668
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 1, !dbg !670
  store i8* %add.ptr, i8** %s, align 8, !dbg !667
  call void @llvm.dbg.declare(metadata i64** %stp, metadata !1071, metadata !DIExpression()), !dbg !1074
  call void @llvm.dbg.declare(metadata i8** %r, metadata !1075, metadata !DIExpression()), !dbg !1076
  call void @llvm.dbg.declare(metadata i16** %io, metadata !1077, metadata !DIExpression()), !dbg !1078
  call void @llvm.dbg.declare(metadata i16** %ii, metadata !1079, metadata !DIExpression()), !dbg !1080
  call void @llvm.dbg.declare(metadata i8** %d, metadata !1081, metadata !DIExpression()), !dbg !1082
  call void @llvm.dbg.declare(metadata i32* %row, metadata !1083, metadata !DIExpression()), !dbg !1084
ns in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in   call void @llvm.dbg.declare(metadata i32* %crow, metadata !1085, metadata !DIExpression()), !dbg !1086
  call void @llvm.dbg.declare(metadata i32* %len, metadata !1087, metadata !DIExpression()), !dbg !1088
  call void @llvm.dbg.declare(metadata i32* %c, metadata !1089, metadata !DIExpression()), !dbg !1090
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1091, metadata !DIExpression()), !dbg !1092
  store i32 0, i32* %i, align 4, !dbg !692
  call void @llvm.dbg.declare(metadata %struct.__collate_t.159* %newcol, metadata !1093, metadata !DIExpression()), !dbg !1094
  %1 = load i8*, i8** %p.addr, align 8, !dbg !695
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i32 1, !dbg !695
  store i8* %incdec.ptr, i8** %p.addr, align 8, !dbg !695
  %index2weight = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %newcol, i32 0, i32 23, !dbg !696
  store i16* null, i16** %index2weight, align 8, !dbg !697
  %2 = load i8*, i8** %p.addr, align 8, !dbg !698
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 8, !dbg !698
  %3 = load i8, i8* %arrayidx, align 1, !dbg !698
  %conv = zext i8 %3 to i32, !dbg !698
  %4 = load i8*, i8** %s, align 8, !dbg !700
  %arrayidx1 = getelementptr inbounds i8, i8* %4, i64 8, !dbg !700
  %5 = load i8, i8* %arrayidx1, align 1, !dbg !700
  %conv2 = zext i8 %5 to i32, !dbg !700
  %cmp = icmp ne i32 %conv, %conv2, !dbg !701
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !702
  %6 = load i8*, i8** %p.addr, align 8, !dbg !703
  %arrayidx4 = getelementptr inbounds i8, i8* %6, i64 9, !dbg !703
  %7 = load i8, i8* %arrayidx4, align 1, !dbg !703
  %conv5 = zext i8 %7 to i32, !dbg !703
  %8 = load i8*, i8** %s, align 8, !dbg !704
  %arrayidx6 = getelementptr inbounds i8, i8* %8, i64 9, !dbg !704
  %9 = load i8, i8* %arrayidx6, align 1, !dbg !704
  %conv7 = zext i8 %9 to i32, !dbg !704
  %cmp8 = icmp ne i32 %conv5, %conv7, !dbg !705
  br i1 %cmp8, label %if.then, label %if.end22, !dbg !706
  %10 = load i8*, i8** %p.addr, align 8, !dbg !707
  %11 = load i8, i8* %10, align 1, !dbg !709
  %conv10 = zext i8 %11 to i32, !dbg !709
  %and = and i32 %conv10, 127, !dbg !710
  %shl = shl i32 %and, 7, !dbg !711
  %12 = load i8*, i8** %p.addr, align 8, !dbg !712
  %arrayidx11 = getelementptr inbounds i8, i8* %12, i64 1, !dbg !712
  %13 = load i8, i8* %arrayidx11, align 1, !dbg !712
  %conv12 = zext i8 %13 to i32, !dbg !712
  %and13 = and i32 %conv12, 127, !dbg !713
  %add = add nsw i32 %shl, %and13, !dbg !714
  store i32 %add, i32* %row, align 4, !dbg !715
  %14 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !716
  %locales = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %14, i32 0, i32 31, !dbg !718
  %15 = load i32, i32* %row, align 4, !dbg !719
  %mul = mul nsw i32 9, %15, !dbg !720
  %add14 = add nsw i32 %mul, 3, !dbg !721
  %add15 = add nsw i32 %add14, 4, !dbg !722
  %idxprom = sext i32 %add15 to i64, !dbg !716
  %arrayidx16 = getelementptr inbounds [2826 x i8], [2826 x i8]* %locales, i64 0, i64 %idxprom, !dbg !716
  %16 = load i8, i8* %arrayidx16, align 1, !dbg !716
  %conv17 = zext i8 %16 to i32, !dbg !716
  %call = call i32 @init_cur_collate(i32 %conv17, %struct.__collate_t.159* %newcol) #10, !dbg !723
  %tobool = icmp ne i32 %call, 0, !dbg !723
  br i1 %tobool, label %if.end, label %if.then18, !dbg !724
  store i32 0, i32* %retval, align 4, !dbg !725
  br label %return, !dbg !725
  %17 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !727
  %collate = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %17, i32 0, i32 118, !dbg !728
  %index2weight19 = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %collate, i32 0, i32 23, !dbg !729
  %18 = load i16*, i16** %index2weight19, align 8, !dbg !729
  %19 = bitcast i16* %18 to i8*, !dbg !727
  call void @free(i8* %19) #11, !dbg !730
  %20 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !731
  %collate20 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %20, i32 0, i32 118, !dbg !732
  %21 = bitcast %struct.__collate_t.159* %collate20 to i8*, !dbg !733
  %22 = bitcast %struct.__collate_t.159* %newcol to i8*, !dbg !734
  %call21 = call i8* @memcpy(i8* %21, i8* %22, i64 112) #11, !dbg !735
  br label %if.end22, !dbg !736
  br label %do.body, !dbg !737
  %23 = load i8*, i8** %p.addr, align 8, !dbg !738
  %24 = load i8, i8* %23, align 1, !dbg !741
  %conv23 = zext i8 %24 to i32, !dbg !741
  %25 = load i8*, i8** %s, align 8, !dbg !742
  %26 = load i8, i8* %25, align 1, !dbg !743
  %conv24 = zext i8 %26 to i32, !dbg !743
  %cmp25 = icmp ne i32 %conv23, %conv24, !dbg !744
  br i1 %cmp25, label %if.then34, label %lor.lhs.false27, !dbg !745
  %27 = load i8*, i8** %p.addr, align 8, !dbg !746
  %arrayidx28 = getelementptr inbounds i8, i8* %27, i64 1, !dbg !746
  %28 = load i8, i8* %arrayidx28, align 1, !dbg !746
  %conv29 = zext i8 %28 to i32, !dbg !746
  %29 = load i8*, i8** %s, align 8, !dbg !747
  %arrayidx30 = getelementptr inbounds i8, i8* %29, i64 1, !dbg !747
  %30 = load i8, i8* %arrayidx30, align 1, !dbg !747
  %conv31 = zext i8 %30 to i32, !dbg !747
  %cmp32 = icmp ne i32 %conv29, %conv31, !dbg !748
  br i1 %cmp32, label %if.then34, label %if.end313, !dbg !749
  %31 = load i8*, i8** %p.addr, align 8, !dbg !750
  %32 = load i8, i8* %31, align 1, !dbg !752
  %conv35 = zext i8 %32 to i32, !dbg !752
  %and36 = and i32 %conv35, 127, !dbg !753
  %shl37 = shl i32 %and36, 7, !dbg !754
  %33 = load i8*, i8** %p.addr, align 8, !dbg !755
  %arrayidx38 = getelementptr inbounds i8, i8* %33, i64 1, !dbg !755
  %34 = load i8, i8* %arrayidx38, align 1, !dbg !755
  %conv39 = zext i8 %34 to i32, !dbg !755
  %and40 = and i32 %conv39, 127, !dbg !756
  %add41 = add nsw i32 %shl37, %and40, !dbg !757
  store i32 %add41, i32* %row, align 4, !dbg !758
  %35 = load i8*, i8** %p.addr, align 8, !dbg !759
  %36 = load i8, i8* %35, align 1, !dbg !760
  %37 = load i8*, i8** %s, align 8, !dbg !761
  store i8 %36, i8* %37, align 1, !dbg !762
  %38 = load i8*, i8** %p.addr, align 8, !dbg !763
  %arrayidx42 = getelementptr inbounds i8, i8* %38, i64 1, !dbg !763
  %39 = load i8, i8* %arrayidx42, align 1, !dbg !763
  %40 = load i8*, i8** %s, align 8, !dbg !764
  %arrayidx43 = getelementptr inbounds i8, i8* %40, i64 1, !dbg !764
  store i8 %39, i8* %arrayidx43, align 1, !dbg !765
  %41 = load i32, i32* %i, align 4, !dbg !766
  %cmp44 = icmp ne i32 %41, 4, !dbg !768
  br i1 %cmp44, label %land.lhs.true, label %if.end92, !dbg !769
  %42 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !770
  %lc_common_item_offsets_LEN = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %42, i32 0, i32 29, !dbg !771
  %43 = load i32, i32* %i, align 4, !dbg !772
  %idxprom46 = sext i32 %43 to i64, !dbg !770
  %arrayidx47 = getelementptr inbounds [6 x i8], [6 x i8]* %lc_common_item_offsets_LEN, i64 0, i64 %idxprom46, !dbg !770
  %44 = load i8, i8* %arrayidx47, align 1, !dbg !770
  %conv48 = zext i8 %44 to i32, !dbg !770
  store i32 %conv48, i32* %len, align 4, !dbg !773
  %cmp49 = icmp ne i32 %conv48, 0, !dbg !774
  br i1 %cmp49, label %if.then51, label %if.end92, !dbg !775
  %45 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !776
  %locales52 = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %45, i32 0, i32 31, !dbg !778
stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in st  %46 = load i32, i32* %row, align 4, !dbg !779
  %mul53 = mul nsw i32 9, %46, !dbg !780
  %add54 = add nsw i32 %mul53, 3, !dbg !781
  %47 = load i32, i32* %i, align 4, !dbg !782
  %add55 = add nsw i32 %add54, %47, !dbg !783
  %idxprom56 = sext i32 %add55 to i64, !dbg !776
  %arrayidx57 = getelementptr inbounds [2826 x i8], [2826 x i8]* %locales52, i64 0, i64 %idxprom56, !dbg !776
  %48 = load i8, i8* %arrayidx57, align 1, !dbg !776
  %conv58 = zext i8 %48 to i32, !dbg !776
  %49 = load i32, i32* %len, align 4, !dbg !784
  %mul59 = mul nsw i32 %conv58, %49, !dbg !785
  store i32 %mul59, i32* %crow, align 4, !dbg !786
  %50 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !787
  %51 = bitcast %struct.__uclibc_locale_struct.160* %50 to i8*, !dbg !788
  %52 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !789
  %category_offsets = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %52, i32 0, i32 7, !dbg !790
  %53 = load i32, i32* %i, align 4, !dbg !791
  %idxprom60 = sext i32 %53 to i64, !dbg !789
  %arrayidx61 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets, i64 0, i64 %idxprom60, !dbg !789
  %54 = load i16, i16* %arrayidx61, align 2, !dbg !789
  %conv62 = zext i16 %54 to i32, !dbg !789
  %idx.ext = sext i32 %conv62 to i64, !dbg !792
  %add.ptr63 = getelementptr inbounds i8, i8* %51, i64 %idx.ext, !dbg !792
  %55 = bitcast i8* %add.ptr63 to i8**, !dbg !793
  store i8** %55, i8*** %x, align 8, !dbg !794
  %56 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !795
  %lc_common_tbl_offsets = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %56, i32 0, i32 30, !dbg !796
  %arraydecay64 = getelementptr inbounds [24 x i64], [24 x i64]* %lc_common_tbl_offsets, i64 0, i64 0, !dbg !795
  %57 = load i32, i32* %i, align 4, !dbg !797
  %mul65 = mul nsw i32 4, %57, !dbg !798
  %idx.ext66 = sext i32 %mul65 to i64, !dbg !799
  %add.ptr67 = getelementptr inbounds i64, i64* %arraydecay64, i64 %idx.ext66, !dbg !799
  store i64* %add.ptr67, i64** %stp, align 8, !dbg !800
  %58 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !801
  %59 = bitcast %struct.__locale_mmap_t.162* %58 to i8*, !dbg !802
  %60 = load i64*, i64** %stp, align 8, !dbg !803
  %61 = load i64, i64* %60, align 8, !dbg !804
  %add.ptr68 = getelementptr inbounds i8, i8* %59, i64 %61, !dbg !805
  store i8* %add.ptr68, i8** %r, align 8, !dbg !806
  %62 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !807
  %63 = bitcast %struct.__locale_mmap_t.162* %62 to i8*, !dbg !808
  %64 = load i64*, i64** %stp, align 8, !dbg !809
  %incdec.ptr69 = getelementptr inbounds i64, i64* %64, i32 1, !dbg !809
  store i64* %incdec.ptr69, i64** %stp, align 8, !dbg !809
  %65 = load i64, i64* %incdec.ptr69, align 8, !dbg !810
  %add.ptr70 = getelementptr inbounds i8, i8* %63, i64 %65, !dbg !811
  %66 = bitcast i8* %add.ptr70 to i16*, !dbg !812
  store i16* %66, i16** %io, align 8, !dbg !813
  %67 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !814
  %68 = bitcast %struct.__locale_mmap_t.162* %67 to i8*, !dbg !815
  %69 = load i64*, i64** %stp, align 8, !dbg !816
  %incdec.ptr71 = getelementptr inbounds i64, i64* %69, i32 1, !dbg !816
  store i64* %incdec.ptr71, i64** %stp, align 8, !dbg !816
  %70 = load i64, i64* %incdec.ptr71, align 8, !dbg !817
  %add.ptr72 = getelementptr inbounds i8, i8* %68, i64 %70, !dbg !818
  %71 = bitcast i8* %add.ptr72 to i16*, !dbg !819
  store i16* %71, i16** %ii, align 8, !dbg !820
  %72 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !821
  %73 = bitcast %struct.__locale_mmap_t.162* %72 to i8*, !dbg !822
  %74 = load i64*, i64** %stp, align 8, !dbg !823
  %incdec.ptr73 = getelementptr inbounds i64, i64* %74, i32 1, !dbg !823
  store i64* %incdec.ptr73, i64** %stp, align 8, !dbg !823
  %75 = load i64, i64* %incdec.ptr73, align 8, !dbg !824
  %add.ptr74 = getelementptr inbounds i8, i8* %73, i64 %75, !dbg !825
  store i8* %add.ptr74, i8** %d, align 8, !dbg !826
  store i32 0, i32* %c, align 4, !dbg !827
  br label %for.cond, !dbg !829
  %76 = load i32, i32* %c, align 4, !dbg !830
  %77 = load i32, i32* %len, align 4, !dbg !832
  %cmp75 = icmp slt i32 %76, %77, !dbg !833
  br i1 %cmp75, label %for.body, label %for.end, !dbg !834
  %78 = load i8*, i8** %d, align 8, !dbg !835
  %79 = load i16*, i16** %ii, align 8, !dbg !837
  %80 = load i8*, i8** %r, align 8, !dbg !838
  %81 = load i32, i32* %crow, align 4, !dbg !839
  %82 = load i32, i32* %c, align 4, !dbg !840
  %add77 = add nsw i32 %81, %82, !dbg !841
  %idxprom78 = sext i32 %add77 to i64, !dbg !838
  %arrayidx79 = getelementptr inbounds i8, i8* %80, i64 %idxprom78, !dbg !838
  %83 = load i8, i8* %arrayidx79, align 1, !dbg !838
  %conv80 = zext i8 %83 to i32, !dbg !838
  %84 = load i16*, i16** %io, align 8, !dbg !842
  %85 = load i32, i32* %c, align 4, !dbg !843
  %idxprom81 = sext i32 %85 to i64, !dbg !842
  %arrayidx82 = getelementptr inbounds i16, i16* %84, i64 %idxprom81, !dbg !842
  %86 = load i16, i16* %arrayidx82, align 2, !dbg !842
  %conv83 = zext i16 %86 to i32, !dbg !842
  %add84 = add nsw i32 %conv80, %conv83, !dbg !844
  %idxprom85 = sext i32 %add84 to i64, !dbg !837
  %arrayidx86 = getelementptr inbounds i16, i16* %79, i64 %idxprom85, !dbg !837
  %87 = load i16, i16* %arrayidx86, align 2, !dbg !837
  %conv87 = zext i16 %87 to i32, !dbg !837
  %idx.ext88 = sext i32 %conv87 to i64, !dbg !845
  %add.ptr89 = getelementptr inbounds i8, i8* %78, i64 %idx.ext88, !dbg !845
  %88 = load i8**, i8*** %x, align 8, !dbg !846
  %89 = load i32, i32* %c, align 4, !dbg !847
  %idx.ext90 = sext i32 %89 to i64, !dbg !848
  %add.ptr91 = getelementptr inbounds i8*, i8** %88, i64 %idx.ext90, !dbg !848
  store i8* %add.ptr89, i8** %add.ptr91, align 8, !dbg !849
  br label %for.inc, !dbg !850
  %90 = load i32, i32* %c, align 4, !dbg !851
  %inc = add nsw i32 %90, 1, !dbg !851
  store i32 %inc, i32* %c, align 4, !dbg !851
  br label %for.cond, !dbg !852, !llvm.loop !853
  br label %if.end92, !dbg !855
  %91 = load i32, i32* %i, align 4, !dbg !856
  %cmp93 = icmp eq i32 %91, 0, !dbg !858
  br i1 %cmp93, label %if.then95, label %if.else295, !dbg !859
  %92 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !860
  %locales96 = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %92, i32 0, i32 31, !dbg !862
  %93 = load i32, i32* %row, align 4, !dbg !863
  %mul97 = mul nsw i32 9, %93, !dbg !864
  %add98 = add nsw i32 %mul97, 2, !dbg !865
  %idxprom99 = sext i32 %add98 to i64, !dbg !860
  %arrayidx100 = getelementptr inbounds [2826 x i8], [2826 x i8]* %locales96, i64 0, i64 %idxprom99, !dbg !860
  %94 = load i8, i8* %arrayidx100, align 1, !dbg !860
  %conv101 = zext i8 %94 to i32, !dbg !860
  store i32 %conv101, i32* %c, align 4, !dbg !866
  %95 = load i32, i32* %c, align 4, !dbg !867
  %cmp102 = icmp sle i32 %95, 2, !dbg !869
  br i1 %cmp102, label %if.then104, label %if.else112, !dbg !870
  %96 = load i32, i32* %c, align 4, !dbg !871
  %cmp105 = icmp eq i32 %96, 2, !dbg !874
  br i1 %cmp105, label %if.then107, label %if.else, !dbg !875
ack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.190
//Instructions in stack: Num.191
//Instructions in stack: Num.192
//Instructions in stack: Num.193
//Instructions in stack: Num.194
//Instructions in stack: Num.195
//Instructions in stack: Num.196
//Instructions in stack: Num.197
//Instructions in stack: Num.198
//Instructions in stack: Num.199
//Instructions in stack: Num.200
//Instructions in stack: Num.201
//Instructions in stack: Num.202
//Instructions in stack: Num.203
//Instructions in stack: Num.204
//Instructions in stack: Num.205
//Instructions in stack: Num.206
//Instructions in stack: Num.207
//Instructions in stack: Num.208
//Instructions in stack: Num.209
//Instructions in stack: Num.210
//Instructions in stack: Num.211
//Instructions in stack: Num.212
//Instructions in stack: Num.213
//Instructions in stack: Num.214
//Instructions in stack: Num.215
//Instructions in stack: Num.216
//Instructions in stack: Num.217
//Instructions in stack: Num.218
//Instructions in stack: Num.219
//Instructions in stack: Num.220
//Instructions in stack: Num.221
//Instructions in stack: Num.222
//Instructions in stack: Num.223
//Instructions in stack: Num.224
//Instructions in stack: Num.225
//Instructions in stack: Num.226
//Instructions in stack: Num.227
//Instructions in stack: Num.228
//Instructions in stack: Num.229
//Instructions in stack: Num.230
//Instructions in stack: Num.231
//Instructions in stack: Num.232
//Instructions in stack: Num.233
//Instructions in stack: Num.234
//Instructions in stack: Num.235
//Instructions in stack: Num.236
//Instructions in stack: Num.237
//Instructions in stack: Num.238
//Instructions in stack: Num.239
//Instructions in stack: Num.240
//Instructions in stack: Num.241
//Instructions in stack: Num.242
//Instructions in stack: Num.243
//Instructions in stack: Num.244
//Instructions in stack: Num.245
//Instructions in stack: Num.246
//Instructions in stack: Num.247
//Instructions in stack: Num.248
//Instructions in stack: Num.249
//Instructions in stack: Num.250
//Instructions in stack: Num.251
//Instructions in stack: Num.252
//Instructions in stack: Num.253
//Instructions in stack: Num.254
//Instructions in stack: Num.255
//Instructions in stack: Num.256
//Instructions in stack: Num.257
//Instructions in stack: Num.258
//Instructions in stack: Num.259
//Instructions in stack: Num.260
//Instructions in stack: Num.261
//Instructions in stack: Num.262
//Instructions in stack: Num.263
//Instructions in stack: Num.264
//Instructions in stack: Num.265
//Instructions in stack: Num.266
//Instructions in stack: Num.267
//Instructions in stack: Num.268
//Instructions in stack: Num.269
//Instructions in stack: Num.270
//Instructions in stack: Num.271
//Instructions in stack: Num.272
//Instructions in stack: Num.273
//Instructions in stack: Num.274
//Instructions in stack: Num.275
//Instructions in stack: Num.276
//Instructions in stack: Num.277
//Instructions in stack: Num.278
//Instructions in stack: Num.279
//Instructions in stack: Num.280
//Instructions in stack: Num.281
//Instructions in stack: Num.282
//Instructions in stack: Num.283
//Instructions in stack: Num.284
//Instructions in stack: Num.285
//Instructions in stack:  %97 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !876
  %codeset = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %97, i32 0, i32 38, !dbg !878
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @utf8, i64 0, i64 0), i8** %codeset, align 8, !dbg !879
  %98 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !880
  %encoding = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %98, i32 0, i32 9, !dbg !881
  store i8 1, i8* %encoding, align 8, !dbg !882
  %99 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !883
  %mb_cur_max = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %99, i32 0, i32 10, !dbg !884
  store i8 6, i8* %mb_cur_max, align 1, !dbg !885
  br label %if.end111, !dbg !886
  %100 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !887
  %codeset108 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %100, i32 0, i32 38, !dbg !889
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @ascii, i64 0, i64 0), i8** %codeset108, align 8, !dbg !890
  %101 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !891
  %encoding109 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %101, i32 0, i32 9, !dbg !892
  store i8 0, i8* %encoding109, align 8, !dbg !893
  %102 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !894
  %mb_cur_max110 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %102, i32 0, i32 10, !dbg !895
  store i8 1, i8* %mb_cur_max110, align 1, !dbg !896
  br label %if.end111
  br label %if.end280, !dbg !897
  call void @llvm.dbg.declare(metadata %struct.__codeset_8_bit_t.161** %c8b, metadata !1298, metadata !DIExpression()), !dbg !1310
  %103 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !911
  %codeset_list = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %103, i32 0, i32 35, !dbg !911
  %arraydecay113 = getelementptr inbounds [255 x i8], [255 x i8]* %codeset_list, i64 0, i64 0, !dbg !911
  store i8* %arraydecay113, i8** %r, align 8, !dbg !912
  %104 = load i8*, i8** %r, align 8, !dbg !913
  %105 = load i8*, i8** %r, align 8, !dbg !914
  %106 = load i32, i32* %c, align 4, !dbg !915
  %sub = sub nsw i32 %106, 3, !dbg !915
  store i32 %sub, i32* %c, align 4, !dbg !915
  %idxprom114 = sext i32 %sub to i64, !dbg !914
  %arrayidx115 = getelementptr inbounds i8, i8* %105, i64 %idxprom114, !dbg !914
  %107 = load i8, i8* %arrayidx115, align 1, !dbg !914
  %conv116 = zext i8 %107 to i32, !dbg !914
  %idx.ext117 = sext i32 %conv116 to i64, !dbg !916
  %add.ptr118 = getelementptr inbounds i8, i8* %104, i64 %idx.ext117, !dbg !916
  %108 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !917
  %codeset119 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %108, i32 0, i32 38, !dbg !918
  store i8* %add.ptr118, i8** %codeset119, align 8, !dbg !919
  %109 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !920
  %encoding120 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %109, i32 0, i32 9, !dbg !921
  store i8 2, i8* %encoding120, align 8, !dbg !922
  %110 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !923
  %mb_cur_max121 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %110, i32 0, i32 10, !dbg !924
  store i8 1, i8* %mb_cur_max121, align 1, !dbg !925
  %111 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !926
  %codeset_8_bit = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %111, i32 0, i32 12, !dbg !927
  %arraydecay122 = getelementptr inbounds [23 x %struct.__codeset_8_bit_t.161], [23 x %struct.__codeset_8_bit_t.161]* %codeset_8_bit, i64 0, i64 0, !dbg !926
  %112 = load i32, i32* %c, align 4, !dbg !928
  %idx.ext123 = sext i32 %112 to i64, !dbg !929
  %add.ptr124 = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %arraydecay122, i64 %idx.ext123, !dbg !929
  store %struct.__codeset_8_bit_t.161* %add.ptr124, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !930
  %113 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !931
  %idx8ctype = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %113, i32 0, i32 0, !dbg !932
  %arraydecay125 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8ctype, i64 0, i64 0, !dbg !931
  %114 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !933
  %idx8ctype126 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %114, i32 0, i32 12, !dbg !934
  store i8* %arraydecay125, i8** %idx8ctype126, align 8, !dbg !935
  %115 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !936
  %idx8uplow = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %115, i32 0, i32 1, !dbg !937
  %arraydecay127 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8uplow, i64 0, i64 0, !dbg !936
  %116 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !938
  %idx8uplow128 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %116, i32 0, i32 14, !dbg !939
  store i8* %arraydecay127, i8** %idx8uplow128, align 8, !dbg !940
  %117 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !941
  %idx8c2wc = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %117, i32 0, i32 2, !dbg !942
  %arraydecay129 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8c2wc, i64 0, i64 0, !dbg !941
  %118 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !943
  %idx8c2wc130 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %118, i32 0, i32 16, !dbg !944
  store i8* %arraydecay129, i8** %idx8c2wc130, align 8, !dbg !945
  %119 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !946
  %idx8wc2c = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %119, i32 0, i32 3, !dbg !947
  %arraydecay131 = getelementptr inbounds [38 x i8], [38 x i8]* %idx8wc2c, i64 0, i64 0, !dbg !946
  %120 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !948
  %idx8wc2c132 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %120, i32 0, i32 18, !dbg !949
  store i8* %arraydecay131, i8** %idx8wc2c132, align 8, !dbg !950
  %121 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !951
  %__ctype_b_data = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %121, i32 0, i32 3, !dbg !952
  %arraydecay133 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data, i64 0, i64 0, !dbg !951
  %122 = bitcast i16* %arraydecay133 to i8*, !dbg !951
  %123 = load i16*, i16** @__C_ctype_b, align 8, !dbg !953
  %add.ptr134 = getelementptr inbounds i16, i16* %123, i64 -128, !dbg !954
  %124 = bitcast i16* %add.ptr134 to i8*, !dbg !953
  %call135 = call i8* @memcpy(i8* %122, i8* %124, i64 768) #11, !dbg !955
  %125 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !956
  %__ctype_tolower_data = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %125, i32 0, i32 4, !dbg !957
  %arraydecay136 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data, i64 0, i64 0, !dbg !956
  %126 = bitcast i16* %arraydecay136 to i8*, !dbg !956
  %127 = load i16*, i16** @__C_ctype_tolower, align 8, !dbg !958
  %add.ptr137 = getelementptr inbounds i16, i16* %127, i64 -128, !dbg !959
  %128 = bitcast i16* %add.ptr137 to i8*, !dbg !958
  %call138 = call i8* @memcpy(i8* %126, i8* %128, i64 768) #11, !dbg !960
  %129 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !961
  %__ctype_toupper_data = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %129, i32 0, i32 5, !dbg !962
  %arraydecay139 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data, i64 0, i64 0, !dbg !961
  %130 = bitcast i16* %arraydecay139 to i8*, !dbg !961
  %131 = load i16*, i16** @__C_ctype_toupper, align 8, !dbg !963
  %add.ptr140 = getelementptr inbounds i16, i16* %131, i64 -128, !dbg !964
  %132 = bitcast i16* %add.ptr140 to i8*, !dbg !963
  %call141 = call i8* @memcpy(i8* %130, i8* %132, i64 768) #11, !dbg !965
  call void @llvm.dbg.declare(metadata i32* %u, metadata !1366, metadata !DIExpression()), !dbg !1368
  call void @llvm.dbg.declare(metadata i16* %m, metadata !1369, metadata !DIExpression()), !dbg !1370
  store i32 0, i32* %u, align 4, !dbg !971
  br label %for.cond142, !dbg !973
  %133 = load i32, i32* %u, align 4, !dbg !974
  %cmp143 = icmp slt i32 %133, 128, !dbg !976
  br i1 %cmp143, label %for.body145, label %for.end270, !dbg !977
  %134 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !978
  %tbl8ctype = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %134, i32 0, i32 13, !dbg !980
  %135 = load i8*, i8** %tbl8ctype, align 8, !dbg !980
  %136 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !981
  %idx8ctype146 = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %136, i32 0, i32 0, !dbg !982
  %137 = load i32, i32* %u, align 4, !dbg !983
  %shr = ashr i32 %137, 3, !dbg !984
  %idxprom147 = sext i32 %shr to i64, !dbg !981
  %arrayidx148 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8ctype146, i64 0, i64 %idxprom147, !dbg !981
  %138 = load i8, i8* %arrayidx148, align 1, !dbg !981
  %conv149 = zext i8 %138 to i32, !dbg !985
  %shl150 = shl i32 %conv149, 2, !dbg !986
  %139 = load i32, i32* %u, align 4, !dbg !987
  %and151 = and i32 %139, 7, !dbg !988
  %shr152 = ashr i32 %and151, 1, !dbg !989
  %add153 = add nsw i32 %shl150, %shr152, !dbg !990
 Num.286
//Instructions in stack: Num.287
//Instructions in stack: Num.288
//Instructions in stack: Num.289
//Instructions in stack: Num.290
//Instructions in stack: Num.291
//Instructions in stack: Num.292
//Instructions in stack: Num.293
//Instructions in stack: Num.294
//Instructions in stack: Num.295
//Instructions in stack: Num.296
//Instructions in stack: Num.297
//Instructions in stack: Num.298
//Instructions in stack: Num.299
//Instructions in stack: Num.300
//Instructions in stack: Num.301
//Instructions in stack: Num.302
//Instructions in stack: Num.303
//Instructions in stack: Num.304
//Instructions in stack: Num.305
//Instructions in stack: Num.306
//Instructions in stack: Num.307
//Instructions in stack: Num.308
//Instructions in stack: Num.309
//Instructions in stack: Num.310
//Instructions in stack: Num.311
//Instructions in stack: Num.312
//Instructions in stack: Num.313
//Instructions in stack: Num.314
//Instructions in stack: Num.315
//Instructions in stack: Num.316
//Instructions in stack: Num.317
//Instructions in stack: Num.318
//Instructions in stack: Num.319
//Instructions in stack: Num.320
//Instructions in stack: Num.321
//Instructions in stack: Num.322
//Instructions in stack: Num.323
//Instructions in stack: Num.324
//Instructions in stack: Num.325
//Instructions in stack: Num.326
//Instructions in stack: Num.327
//Instructions in stack: Num.328
//Instructions in stack: Num.329
//Instructions in stack: Num.330
//Instructions in stack: Num.331
//Instructions in stack: Num.332
//Instructions in stack: Num.333
//Instructions in stack: Num.334
//Instructions in stack: Num.335
//Instructions in stack: Num.336
//Instructions in stack: Num.337
//Instructions in stack: Num.338
//Instructions in stack: Num.339
//Instructions in stack: Num.340
//Instructions in stack: Num.341
//Instructions in stack: Num.342
//Instructions in stack: Num.343
//Instructions in stack: Num.344
//Instructions in stack: Num.345
//Instructions in stack: Num.346
//Instructions in stack: Num.347
//Instructions in stack: Num.348
//Instructions in stack: Num.349
//Instructions in stack: Num.350
//Instructions in stack: Num.351
//Instructions in stack: Num.352
//Instructions in stack: Num.353
//Instructions in stack: Num.354
//Instructions in stack: Num.355
//Instructions in stack: Num.356
//Instructions in stack: Num.357
//Instructions in stack: Num.358
//Instructions in stack: Num.359
//Instructions in stack: Num.360
//Instructions in stack: Num.361
//Instructions in stack: Num.362
//Instructions in stack: Num.363
//Instructions in stack: Num.364
//Instructions in stack: Num.365
//Instructions in stack: Num.366
//Instructions in stack: Num.367
//Instructions in stack: Num.368
//Instructions in stack: Num.369
//Instructions in stack: Num.370
//Instructions in stack: Num.371
//Instructions in stack: Num.372
//Instructions in stack: Num.373
//Instructions in stack: Num.374
//Instructions in stack: Num.375
//Instructions in stack: Num.376
//Instructions in stack: Num.377
//Instructions in stack: Num.378
//Instructions in stack: Num.379
//Instructions in stack: Num.380
//Instructions in stack: Num.381
//Instructions in stack: Num.382
//Instructions in stack: Num.383
//Instructions in stack: Num.384
//Instructions in stack: Num.385
//Instructions in stack: Num.386
//Instructions in stack: Num.387
//Instructions in stack: Num.388
//Instructions in stack: Num.389
//Instructions in stack: Num.390
//Instructions in stack: Num.391
//Instructions in stack: Num.392
//Instructions in stack: Num.393
//Instructions in stack: Num.394
//Instructions in stack: Num.395
//Instructions in stack: Num.396
//Instructions in stack: Num.397
//Instructions in stack: Num.398
//Instructions in stack: Num.399
//Instructions in stack: Num.400
//Instructions in stack: Num.401
//Instructions in stack: Num.402
//Instructions in stack: Num.403
//Instructions in stack: Num.404
//Instructions in stack: Num.405
//Instructions in stack: Num.406
//Instructions in stack: Num.407
//Instructions in stack: Num.408
//Instructions in stack: Num.409
//Instructions in stack: Num  %idxprom154 = sext i32 %add153 to i64, !dbg !978
  %arrayidx155 = getelementptr inbounds i8, i8* %135, i64 %idxprom154, !dbg !978
  %140 = load i8, i8* %arrayidx155, align 1, !dbg !978
  %conv156 = zext i8 %140 to i32, !dbg !978
  store i32 %conv156, i32* %c, align 4, !dbg !991
  %141 = load i32, i32* %u, align 4, !dbg !992
  %and157 = and i32 %141, 1, !dbg !993
  %tobool158 = icmp ne i32 %and157, 0, !dbg !993
  br i1 %tobool158, label %cond.true, label %cond.false, !dbg !994
  %142 = load i32, i32* %c, align 4, !dbg !995
  %shr159 = ashr i32 %142, 4, !dbg !996
  br label %cond.end, !dbg !994
  %143 = load i32, i32* %c, align 4, !dbg !997
  %and160 = and i32 %143, 15, !dbg !998
  br label %cond.end, !dbg !994
  %cond = phi i32 [ %shr159, %cond.true ], [ %and160, %cond.false ], !dbg !994
  store i32 %cond, i32* %c, align 4, !dbg !999
  %144 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1000
  %code2flag = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %144, i32 0, i32 20, !dbg !1001
  %145 = load i16*, i16** %code2flag, align 8, !dbg !1001
  %146 = load i32, i32* %c, align 4, !dbg !1002
  %idxprom161 = sext i32 %146 to i64, !dbg !1000
  %arrayidx162 = getelementptr inbounds i16, i16* %145, i64 %idxprom161, !dbg !1000
  %147 = load i16, i16* %arrayidx162, align 2, !dbg !1000
  store i16 %147, i16* %m, align 2, !dbg !1003
  %148 = load i16, i16* %m, align 2, !dbg !1004
  %149 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1005
  %__ctype_b_data163 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %149, i32 0, i32 3, !dbg !1006
  %150 = load i32, i32* %u, align 4, !dbg !1007
  %add164 = add nsw i32 256, %150, !dbg !1008
  %idxprom165 = sext i32 %add164 to i64, !dbg !1005
  %arrayidx166 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data163, i64 0, i64 %idxprom165, !dbg !1005
  store i16 %148, i16* %arrayidx166, align 2, !dbg !1009
  %151 = load i32, i32* %u, align 4, !dbg !1010
  %add167 = add nsw i32 128, %151, !dbg !1012
  %conv168 = trunc i32 %add167 to i8, !dbg !1013
  %conv169 = sext i8 %conv168 to i32, !dbg !1014
  %cmp170 = icmp ne i32 %conv169, -1, !dbg !1015
  br i1 %cmp170, label %if.then172, label %if.end180, !dbg !1016
  %152 = load i16, i16* %m, align 2, !dbg !1017
  %153 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1019
  %__ctype_b_data173 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %153, i32 0, i32 3, !dbg !1020
  %154 = load i32, i32* %u, align 4, !dbg !1021
  %add174 = add nsw i32 128, %154, !dbg !1022
  %conv175 = trunc i32 %add174 to i8, !dbg !1023
  %conv176 = sext i8 %conv175 to i32, !dbg !1024
  %add177 = add nsw i32 128, %conv176, !dbg !1025
  %idxprom178 = sext i32 %add177 to i64, !dbg !1019
  %arrayidx179 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data173, i64 0, i64 %idxprom178, !dbg !1019
  store i16 %152, i16* %arrayidx179, align 2, !dbg !1026
  br label %if.end180, !dbg !1027
  %155 = load i32, i32* %u, align 4, !dbg !1028
  %add181 = add nsw i32 128, %155, !dbg !1029
  %conv182 = trunc i32 %add181 to i16, !dbg !1030
  %156 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1031
  %__ctype_tolower_data183 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %156, i32 0, i32 4, !dbg !1032
  %157 = load i32, i32* %u, align 4, !dbg !1033
  %add184 = add nsw i32 256, %157, !dbg !1034
  %idxprom185 = sext i32 %add184 to i64, !dbg !1031
  %arrayidx186 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data183, i64 0, i64 %idxprom185, !dbg !1031
  store i16 %conv182, i16* %arrayidx186, align 2, !dbg !1035
  %158 = load i32, i32* %u, align 4, !dbg !1036
  %add187 = add nsw i32 128, %158, !dbg !1037
  %conv188 = trunc i32 %add187 to i16, !dbg !1038
  %159 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1039
  %__ctype_toupper_data189 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %159, i32 0, i32 5, !dbg !1040
  %160 = load i32, i32* %u, align 4, !dbg !1041
  %add190 = add nsw i32 256, %160, !dbg !1042
  %idxprom191 = sext i32 %add190 to i64, !dbg !1039
  %arrayidx192 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data189, i64 0, i64 %idxprom191, !dbg !1039
  store i16 %conv188, i16* %arrayidx192, align 2, !dbg !1043
  %161 = load i16, i16* %m, align 2, !dbg !1044
  %conv193 = zext i16 %161 to i32, !dbg !1044
  %and194 = and i32 %conv193, 768, !dbg !1046
  %tobool195 = icmp ne i32 %and194, 0, !dbg !1046
  br i1 %tobool195, label %if.then196, label %if.end267, !dbg !1047
  %162 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1048
  %tbl8uplow = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %162, i32 0, i32 15, !dbg !1050
  %163 = load i8*, i8** %tbl8uplow, align 8, !dbg !1050
  %164 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !1051
  %idx8uplow197 = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %164, i32 0, i32 1, !dbg !1052
  %165 = load i32, i32* %u, align 4, !dbg !1053
  %shr198 = ashr i32 %165, 3, !dbg !1054
  %idxprom199 = sext i32 %shr198 to i64, !dbg !1051
  %arrayidx200 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8uplow197, i64 0, i64 %idxprom199, !dbg !1051
  %166 = load i8, i8* %arrayidx200, align 1, !dbg !1051
  %conv201 = zext i8 %166 to i32, !dbg !1055
  %shl202 = shl i32 %conv201, 3, !dbg !1056
  %167 = load i32, i32* %u, align 4, !dbg !1057
  %add203 = add nsw i32 128, %167, !dbg !1058
  %and204 = and i32 %add203, 7, !dbg !1059
  %add205 = add nsw i32 %shl202, %and204, !dbg !1060
  %idxprom206 = sext i32 %add205 to i64, !dbg !1048
  %arrayidx207 = getelementptr inbounds i8, i8* %163, i64 %idxprom206, !dbg !1048
  %168 = load i8, i8* %arrayidx207, align 1, !dbg !1048
  %conv208 = zext i8 %168 to i32, !dbg !1048
  store i32 %conv208, i32* %c, align 4, !dbg !1061
  %169 = load i16, i16* %m, align 2, !dbg !1062
  %conv209 = zext i16 %169 to i32, !dbg !1062
  %and210 = and i32 %conv209, 512, !dbg !1064
  %tobool211 = icmp ne i32 %and210, 0, !dbg !1064
  br i1 %tobool211, label %if.then212, label %if.else239, !dbg !1065
  %170 = load i32, i32* %u, align 4, !dbg !1066
  %add213 = add nsw i32 128, %170, !dbg !1068
  %171 = load i32, i32* %c, align 4, !dbg !1069
  %add214 = add nsw i32 %add213, %171, !dbg !1070
  %conv215 = trunc i32 %add214 to i8, !dbg !1071
  %conv216 = zext i8 %conv215 to i16, !dbg !1071
  %172 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1072
  %__ctype_toupper_data217 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %172, i32 0, i32 5, !dbg !1073
  %173 = load i32, i32* %u, align 4, !dbg !1074
  %add218 = add nsw i32 256, %173, !dbg !1075
  %idxprom219 = sext i32 %add218 to i64, !dbg !1072
  %arrayidx220 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data217, i64 0, i64 %idxprom219, !dbg !1072
  store i16 %conv216, i16* %arrayidx220, align 2, !dbg !1076
  %174 = load i32, i32* %u, align 4, !dbg !1077
  %add221 = add nsw i32 128, %174, !dbg !1079
  %conv222 = trunc i32 %add221 to i8, !dbg !1080
  %conv223 = sext i8 %conv222 to i32, !dbg !1081
  %cmp224 = icmp ne i32 %conv223, -1, !dbg !1082
  br i1 %cmp224, label %if.then226, label %if.end238, !dbg !1083
  %175 = load i32, i32* %u, align 4, !dbg !1084
  %add227 = add nsw i32 128, %175, !dbg !1086
  %176 = load i32, i32* %c, align 4, !dbg !1087
.410
//Instructions in stack: Num.411
//Instructions in stack: Num.412
//Instructions in stack: Num.413
//Instructions in stack: Num.414
//Instructions in stack: Num.415
//Instructions in stack: Num.416
//Instructions in stack: Num.417
//Instructions in stack: Num.418
//Instructions in stack: Num.419
//Instructions in stack: Num.420
//Instructions in stack: Num.421
//Instructions in stack: Num.422
//Instructions in stack: Num.423
//Instructions in stack: Num.424
//Instructions in stack: Num.425
//Instructions in stack: Num.426
//Instructions in stack: Num.427
//Instructions in stack: Num.428
//Instructions in stack: Num.429
//Instructions in stack: Num.430
//Instructions in stack: Num.431
//Instructions in stack: Num.432
//Instructions in stack: Num.433
//Instructions in stack: Num.434
//Instructions in stack: Num.435
//Instructions in stack: Num.436
//Instructions in stack: Num.437
//Instructions in stack: Num.438
//Instructions in stack: Num.439
//Instructions in stack: Num.440
//Instructions in stack: Num.441
//Instructions in stack: Num.442
//Instructions in stack: Num.443
//Instructions in stack: Num.444
//Instructions in stack: Num.445
//Instructions in stack: Num.446
//Instructions in stack: Num.447
//Instructions in stack: Num.448
//Instructions in stack: Num.449
//Instructions in stack: Num.450
//Instructions in stack: Num.451
//Instructions in stack: Num.452
//Instructions in stack: Num.453
//Instructions in stack: Num.454
//Instructions in stack: Num.455
//Instructions in stack: Num.456
//Instructions in stack: Num.457
//Instructions in stack: Num.458
//Instructions in stack: Num.459
//Instructions in stack: Num.460
//Instructions in stack: Num.461
//Instructions in stack: Num.462
//Instructions in stack: Num.463
//Instructions in stack: Num.464
//Instructions in stack: Num.465
//Instructions in stack: Num.466
//Instructions in stack: Num.467
//Instructions in stack: Num.468
//Instructions in stack: Num.469
//Instructions in stack: Num.470
//Instructions in stack: Num.471
//Instructions in stack: Num.472
//Instructions in stack: Num.473
//Instructions in stack: Num.474
//Instructions in stack: Num.475
//Instructions in stack: Num.476
//Instructions in stack: Num.477
//Instructions in stack: Num.478
//Instructions in stack: Num.479
//Instructions in stack: Num.480
//Instructions in stack: Num.481
//Instructions in stack: Num.482
//Instructions in stack: Num.483
//Instructions in stack: Num.484
//Instructions in stack: Num.485
//Instructions in stack: Num.486
//Instructions in stack: Num.487
//Instructions in stack: Num.488
//Instructions in stack: Num.489
//Instructions in stack: Num.490
//Instructions in stack: Num.491
//Instructions in stack: Num.492
//Instructions in stack: Num.493
//Instructions in stack: Num.494
//Instructions in stack: Num.495
//Instructions in stack: Num.496
//Instructions in stack: Num.497
//Instructions in stack: Num.498
//Instructions in stack: Num.499
//Instructions in stack: Num.500
//Instructions in stack: Num.501
//Instructions in stack: Num.502
//Instructions in stack: Num.503
//Instructions in stack: Num.504
//Instructions in stack: Num.505
//Instructions in stack: Num.506
//Instructions in stack: Num.507
//Instructions in stack: Num.508
//Instructions in stack: Num.509
//Instructions in stack: Num.510
//Instructions in stack: Num.511
//Instructions in stack: Num.512
//Instructions in stack: Num.513
//Instructions in stack: Num.514
//Instructions in stack: Num.515
//Instructions in stack: Num.516
//Instructions in stack: Num.517
//Instructions in stack: Num.518
//Instructions in stack: Num.519
//Instructions in stack: Num.520
//Instructions in stack: Num.521
//Instructions in stack: Num.522
//Instructions in stack: Num.523
//Instructions in stack: Num.524
//Instructions in stack: Num.525
//Instructions in stack: Num.526
//Instructions in stack: Num.527
//Instructions in stack: Num.528
//Instructions in stack: Num.529
//Instructions in stack: Num.530
//Instructions in stack: Num.531
//Instructions in stack: Num.532
//Instructions in stack: Num.533
//Instructions in stack: Num.534  %add228 = add nsw i32 %add227, %176, !dbg !1088
  %conv229 = trunc i32 %add228 to i8, !dbg !1089
  %conv230 = zext i8 %conv229 to i16, !dbg !1089
  %177 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1090
  %__ctype_toupper_data231 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %177, i32 0, i32 5, !dbg !1091
  %178 = load i32, i32* %u, align 4, !dbg !1092
  %add232 = add nsw i32 128, %178, !dbg !1093
  %conv233 = trunc i32 %add232 to i8, !dbg !1094
  %conv234 = sext i8 %conv233 to i32, !dbg !1095
  %add235 = add nsw i32 128, %conv234, !dbg !1096
  %idxprom236 = sext i32 %add235 to i64, !dbg !1090
  %arrayidx237 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data231, i64 0, i64 %idxprom236, !dbg !1090
  store i16 %conv230, i16* %arrayidx237, align 2, !dbg !1097
  br label %if.end238, !dbg !1098
  br label %if.end266, !dbg !1099
  %179 = load i32, i32* %u, align 4, !dbg !1100
  %add240 = add nsw i32 128, %179, !dbg !1102
  %180 = load i32, i32* %c, align 4, !dbg !1103
  %sub241 = sub nsw i32 %add240, %180, !dbg !1104
  %conv242 = trunc i32 %sub241 to i8, !dbg !1105
  %conv243 = zext i8 %conv242 to i16, !dbg !1105
  %181 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1106
  %__ctype_tolower_data244 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %181, i32 0, i32 4, !dbg !1107
  %182 = load i32, i32* %u, align 4, !dbg !1108
  %add245 = add nsw i32 256, %182, !dbg !1109
  %idxprom246 = sext i32 %add245 to i64, !dbg !1106
  %arrayidx247 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data244, i64 0, i64 %idxprom246, !dbg !1106
  store i16 %conv243, i16* %arrayidx247, align 2, !dbg !1110
  %183 = load i32, i32* %u, align 4, !dbg !1111
  %add248 = add nsw i32 128, %183, !dbg !1113
  %conv249 = trunc i32 %add248 to i8, !dbg !1114
  %conv250 = sext i8 %conv249 to i32, !dbg !1115
  %cmp251 = icmp ne i32 %conv250, -1, !dbg !1116
  br i1 %cmp251, label %if.then253, label %if.end265, !dbg !1117
  %184 = load i32, i32* %u, align 4, !dbg !1118
  %add254 = add nsw i32 128, %184, !dbg !1120
  %185 = load i32, i32* %c, align 4, !dbg !1121
  %sub255 = sub nsw i32 %add254, %185, !dbg !1122
  %conv256 = trunc i32 %sub255 to i8, !dbg !1123
  %conv257 = zext i8 %conv256 to i16, !dbg !1123
  %186 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1124
  %__ctype_tolower_data258 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %186, i32 0, i32 4, !dbg !1125
  %187 = load i32, i32* %u, align 4, !dbg !1126
  %add259 = add nsw i32 128, %187, !dbg !1127
  %conv260 = trunc i32 %add259 to i8, !dbg !1128
  %conv261 = sext i8 %conv260 to i32, !dbg !1129
  %add262 = add nsw i32 128, %conv261, !dbg !1130
  %idxprom263 = sext i32 %add262 to i64, !dbg !1124
  %arrayidx264 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data258, i64 0, i64 %idxprom263, !dbg !1124
  store i16 %conv257, i16* %arrayidx264, align 2, !dbg !1131
  br label %if.end265, !dbg !1132
  br label %if.end266
  br label %if.end267, !dbg !1133
  br label %for.inc268, !dbg !1134
  %188 = load i32, i32* %u, align 4, !dbg !1135
  %inc269 = add nsw i32 %188, 1, !dbg !1135
  store i32 %inc269, i32* %u, align 4, !dbg !1135
  br label %for.cond142, !dbg !1136, !llvm.loop !1137
  %189 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1139
  %__ctype_b_data271 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %189, i32 0, i32 3, !dbg !1140
  %arraydecay272 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data271, i64 0, i64 0, !dbg !1139
  %add.ptr273 = getelementptr inbounds i16, i16* %arraydecay272, i64 128, !dbg !1141
  %190 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1142
  %__ctype_b = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %190, i32 0, i32 0, !dbg !1143
  store i16* %add.ptr273, i16** %__ctype_b, align 8, !dbg !1144
  %191 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1145
  %__ctype_tolower_data274 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %191, i32 0, i32 4, !dbg !1146
  %arraydecay275 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data274, i64 0, i64 0, !dbg !1145
  %add.ptr276 = getelementptr inbounds i16, i16* %arraydecay275, i64 128, !dbg !1147
  %192 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1148
  %__ctype_tolower = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %192, i32 0, i32 1, !dbg !1149
  store i16* %add.ptr276, i16** %__ctype_tolower, align 8, !dbg !1150
  %193 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1151
  %__ctype_toupper_data277 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %193, i32 0, i32 5, !dbg !1152
  %arraydecay278 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data277, i64 0, i64 0, !dbg !1151
  %add.ptr279 = getelementptr inbounds i16, i16* %arraydecay278, i64 128, !dbg !1153
  %194 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1154
  %__ctype_toupper = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %194, i32 0, i32 2, !dbg !1155
  store i16* %add.ptr279, i16** %__ctype_toupper, align 8, !dbg !1156
  br label %if.end280
  %195 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1157
  %outdigit_length = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %195, i32 0, i32 11, !dbg !1158
  %arraydecay281 = getelementptr inbounds [10 x i8], [10 x i8]* %outdigit_length, i64 0, i64 0, !dbg !1157
  store i8* %arraydecay281, i8** %d, align 8, !dbg !1159
  %196 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1160
  %outdigit0_mb = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %196, i32 0, i32 28, !dbg !1161
  store i8** %outdigit0_mb, i8*** %x, align 8, !dbg !1162
  store i32 0, i32* %c, align 4, !dbg !1163
  br label %for.cond282, !dbg !1165
  %197 = load i32, i32* %c, align 4, !dbg !1166
  %cmp283 = icmp slt i32 %197, 10, !dbg !1168
  br i1 %cmp283, label %for.body285, label %for.end294, !dbg !1169
  %198 = load i8**, i8*** %x, align 8, !dbg !1170
  %199 = load i32, i32* %c, align 4, !dbg !1172
  %idxprom286 = sext i32 %199 to i64, !dbg !1170
  %arrayidx287 = getelementptr inbounds i8*, i8** %198, i64 %idxprom286, !dbg !1170
  %200 = load i8*, i8** %arrayidx287, align 8, !dbg !1170
  %call288 = call i64 @strlen(i8* %200) #12, !dbg !1173
  %conv289 = trunc i64 %call288 to i8, !dbg !1173
  %201 = load i8*, i8** %d, align 8, !dbg !1174
  %202 = load i32, i32* %c, align 4, !dbg !1175
  %idxprom290 = sext i32 %202 to i64, !dbg !1176
  %arrayidx291 = getelementptr inbounds i8, i8* %201, i64 %idxprom290, !dbg !1176
  store i8 %conv289, i8* %arrayidx291, align 1, !dbg !1177
  br label %for.inc292, !dbg !1178
  %203 = load i32, i32* %c, align 4, !dbg !1179
  %inc293 = add nsw i32 %203, 1, !dbg !1179
  store i32 %inc293, i32* %c, align 4, !dbg !1179
  br label %for.cond282, !dbg !1180, !llvm.loop !1181
  br label %if.end312, !dbg !1183
  %204 = load i32, i32* %i, align 4, !dbg !1184
  %cmp296 = icmp eq i32 %204, 1, !dbg !1186
  br i1 %cmp296, label %if.then298, label %if.end311, !dbg !1187
  %205 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1188
  %decimal_point_wc = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %205, i32 0, i32 24, !dbg !1190
  %206 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1191
  %decimal_point = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %206, i32 0, i32 39, !dbg !1192
  %207 = load i8*, i8** %decimal_point, align 8, !dbg !1192
  %208 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1193
  %call299 = call i32 @__locale_mbrtowc_l(i32* %decimal_point_wc, i8* %207, %struct.__uclibc_locale_struct.160* %208) #10, !dbg !1194
  %209 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1195
  %decimal_point_len = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %209, i32 0, i32 26, !dbg !1196
  store i32 %call299, i32* %decimal_point_len, align 8, !dbg !1197
  %210 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1198
  %grouping = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %210, i32 0, i32 41, !dbg !1200

//Instructions in stack: Num.535
//Instructions in stack: Num.536
//Instructions in stack: Num.537
//Instructions in stack: Num.538
//Instructions in stack: Num.539
//Instructions in stack: Num.540
//Instructions in stack: Num.541
//Instructions in stack: Num.542
//Instructions in stack: Num.543
//Instructions in stack: Num.544
//Instructions in stack: Num.545
//Instructions in stack: Num.546
//Instructions in stack: Num.547
//Instructions in stack: Num.548
//Instructions in stack: Num.549
//Instructions in stack: Num.550
//Instructions in stack: Num.551
//Instructions in stack: Num.552
//Instructions in stack: Num.553
//Instructions in stack: Num.554
//Instructions in stack: Num.555
//Instructions in stack: Num.556
//Instructions in stack: Num.557
//Instructions in stack: Num.558
//Instructions in stack: Num.559
//Instructions in stack: Num.560
//Instructions in stack: Num.561
//Instructions in stack: Num.562
//Instructions in stack: Num.563
//Instructions in stack: Num.564
//Instructions in stack: Num.565
//Instructions in stack: Num.566
//Instructions in stack: Num.567
//Instructions in stack: Num.568
//Instructions in stack: Num.569
//Instructions in stack: Num.570
//Instructions in stack: Num.571
//Instructions in stack: Num.572
//Instructions in stack: Num.573
//Instructions in stack: Num.574
//Instructions in stack: Num.575
//Instructions in stack: Num.576
//Instructions in stack: Num.577
//Instructions in stack: Num.578
//Instructions in stack: Num.579
//Instructions in stack: Num.580
//Instructions in stack: Num.581
//Instructions in stack: Num.582
//Instructions in stack: Num.583
//Instructions in stack: Num.584
//Instructions in stack: Num.585
//Instructions in stack: Num.586
//Instructions in stack: Num.587
//Instructions in stack: Num.588
//Instructions in stack: Num.589
//Instructions in stack: Num.590
//Instructions in stack: Num.591
//Instructions in stack: Num.592
//Instructions in stack: Num.593
//Instructions in stack: Num.594
//Instructions in stack: Num.595
//Instructions in stack: Num.596
//Instructions in stack: Num.597
//Instructions in stack: Num.598
//Instructions in stack: Num.599
//Instructions in stack: Num.600
//Instructions in stack: Num.601
//Instructions in stack: Num.602
//Instructions in stack: Num.603
//Instructions in stack: Num.604
//Instructions in stack: Num.605
//Instructions in stack: Num.606
//Instructions in stack: Num.607
//Instructions in stack: Num.608
//Instructions in stack: Num.609
//Instructions in stack: Num.610
//Instructions in stack: Num.611
//Instructions in stack: Num.612
//Instructions in stack: Num.613
//Instructions in stack: Num.614
//Instructions in stack: Num.615
//Instructions in stack: Num.616
//Instructions in stack: Num.617
//Instructions in stack: Num.618
//Instructions in stack: Num.619
//Instructions in stack: Num.620
//Instructions in stack: Num.621
//Instructions in stack: Num.622
//Instructions in stack: Num.623
//Instructions in stack: Num.624
//Instructions in stack: Num.625
//Instructions in stack: Num.626
//Instructions in stack: Num.627
//Instructions in stack: Num.628
//Instructions in stack: Num.629
//Instructions in stack: Num.630
//Instructions in stack: Num.631
//Instructions in stack: Num.632
//Instructions in stack: Num.633
//Instructions in stack: Num.634
//Instructions in stack: Num.635
//Instructions in stack: Num.636
//Instructions in stack: Num.637
//Instructions in stack: Num.638
//Instructions in stack: Num.639
//Instructions in stack: Num.640
//Instructions in stack: Num.641
//Instructions in stack: Num.642
//Instructions in stack: Num.643
//Instructions in stack: Num.644
//Instructions in stack: Num.645
//Instructions in stack: Num.646
//Instructions in stack: Num.647
//Instructions in stack: Num.648
//Instructions in stack: Num.649
//Instructions in stack: Num.650
//Instructions in stack: Num.651
//Instructions in stack: Num.652
//Instructions in stack: Num.653
//Instructions in stack: Num.654
//Instructions in stack: Num.655
//Instructions in stack: Num.656
//Instructions in stack: Num.657
//Instructions in stack: Num.658
//I  %211 = load i8*, i8** %grouping, align 8, !dbg !1200
  %212 = load i8, i8* %211, align 1, !dbg !1201
  %tobool300 = icmp ne i8 %212, 0, !dbg !1201
  br i1 %tobool300, label %if.then301, label %if.end310, !dbg !1202
  %213 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1203
  %thousands_sep_wc = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %213, i32 0, i32 25, !dbg !1205
  %214 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1206
  %thousands_sep = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %214, i32 0, i32 40, !dbg !1207
  %215 = load i8*, i8** %thousands_sep, align 8, !dbg !1207
  %216 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1208
  %call302 = call i32 @__locale_mbrtowc_l(i32* %thousands_sep_wc, i8* %215, %struct.__uclibc_locale_struct.160* %216) #10, !dbg !1209
  %217 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1210
  %thousands_sep_len = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %217, i32 0, i32 27, !dbg !1211
  store i32 %call302, i32* %thousands_sep_len, align 4, !dbg !1212
  %218 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1213
  %thousands_sep_len303 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %218, i32 0, i32 27, !dbg !1215
  %219 = load i32, i32* %thousands_sep_len303, align 4, !dbg !1215
  %cmp304 = icmp eq i32 %219, 0, !dbg !1216
  br i1 %cmp304, label %if.then306, label %if.end309, !dbg !1217
  %220 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1218
  %thousands_sep307 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %220, i32 0, i32 40, !dbg !1220
  %221 = load i8*, i8** %thousands_sep307, align 8, !dbg !1220
  %222 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1221
  %grouping308 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %222, i32 0, i32 41, !dbg !1222
  store i8* %221, i8** %grouping308, align 8, !dbg !1223
  br label %if.end309, !dbg !1224
  br label %if.end310, !dbg !1225
  br label %if.end311, !dbg !1226
  br label %if.end312
  br label %if.end313, !dbg !1227
  %223 = load i32, i32* %i, align 4, !dbg !1228
  %inc314 = add nsw i32 %223, 1, !dbg !1228
  store i32 %inc314, i32* %i, align 4, !dbg !1228
  %224 = load i8*, i8** %p.addr, align 8, !dbg !1229
  %add.ptr315 = getelementptr inbounds i8, i8* %224, i64 2, !dbg !1229
  store i8* %add.ptr315, i8** %p.addr, align 8, !dbg !1229
  %225 = load i8*, i8** %s, align 8, !dbg !1230
  %add.ptr316 = getelementptr inbounds i8, i8* %225, i64 2, !dbg !1230
  store i8* %add.ptr316, i8** %s, align 8, !dbg !1230
  br label %do.cond, !dbg !1231
  %226 = load i32, i32* %i, align 4, !dbg !1232
  %cmp317 = icmp slt i32 %226, 6, !dbg !1233
  br i1 %cmp317, label %do.body, label %do.end, !dbg !1231, !llvm.loop !1234
  store i32 1, i32* %retval, align 4, !dbg !1236
  br label %return, !dbg !1236
  %227 = load i32, i32* %retval, align 4, !dbg !1237
  ret i32 %227, !dbg !1237
  %s1.addr = alloca i8*, align 8
  %s2.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %r1 = alloca i8*, align 8
  %r2 = alloca i8*, align 8
  store i8* %s1, i8** %s1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !2130, metadata !DIExpression()), !dbg !2131
  store i8* %s2, i8** %s2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !2132, metadata !DIExpression()), !dbg !2133
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !2134, metadata !DIExpression()), !dbg !2135
  call void @llvm.dbg.declare(metadata i8** %r1, metadata !2136, metadata !DIExpression()), !dbg !2137
  %0 = load i8*, i8** %s1.addr, align 8, !dbg !672
  store i8* %0, i8** %r1, align 8, !dbg !671
  call void @llvm.dbg.declare(metadata i8** %r2, metadata !2139, metadata !DIExpression()), !dbg !2140
  %1 = load i8*, i8** %s2.addr, align 8, !dbg !675
  store i8* %1, i8** %r2, align 8, !dbg !674
  br label %while.cond, !dbg !676
  %2 = load i64, i64* %n.addr, align 8, !dbg !677
  %tobool = icmp ne i64 %2, 0, !dbg !676
  br i1 %tobool, label %while.body, label %while.end, !dbg !676
  %3 = load i8*, i8** %r2, align 8, !dbg !678
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !678
  store i8* %incdec.ptr, i8** %r2, align 8, !dbg !678
  %4 = load i8, i8* %3, align 1, !dbg !680
  %5 = load i8*, i8** %r1, align 8, !dbg !681
  %incdec.ptr1 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !681
  store i8* %incdec.ptr1, i8** %r1, align 8, !dbg !681
  store i8 %4, i8* %5, align 1, !dbg !682
  %6 = load i64, i64* %n.addr, align 8, !dbg !683
  %dec = add i64 %6, -1, !dbg !683
  store i64 %dec, i64* %n.addr, align 8, !dbg !683
  br label %while.cond, !dbg !676, !llvm.loop !684
  %7 = load i8*, i8** %s1.addr, align 8, !dbg !686
  ret i8* %7, !dbg !687
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
nstructions in stack: Num.659
//Instructions in stack: Num.660
//Instructions in stack: Num.661
//Instructions in stack: Num.662
//Instructions in stack: Num.663
//Instructions in stack: Num.664
//Instructions in stack: Num.665
//Instructions in stack: Num.666
//Instructions in stack: Num.667
//Instructions in stack: Num.668
//Instructions in stack: Num.669
//Instructions in stack: Num.670
//Instructions in stack: Num.671
//Instructions in stack: Num.672
//Instructions in stack: Num.673
//Instructions in stack: Num.674
//Instructions in stack: Num.675
//Instructions in stack: Num.676
//Instructions in stack: Num.677
//Instructions in stack: Num.678
//Instructions in stack: Num.679
//Instructions in stack: Num.680
//Instructions in stack: Num.681
//Instructions in stack: Num.682
//Instructions in stack: Num.683
//Instructions in stack: Num.684
//Instructions in stack: Num.685
//Instructions in stack: Num.686
//Instructions in stack: Num.687
//Instructions in stack: Num.688
//Instructions in stack: Num.689
//Instructions in stack: Num.690
//Instructions in stack: Num.691
//Instructions in stack: Num.692
//Instructions in stack: Num.693
//Instructions in stack: Num.694
//Instructions in stack: Num.695
//Instructions in stack: Num.696
//Instructions in stack: Num.697
//Instructions in stack: Num.698
//Instructions in stack: Num.699
//Instructions in stack: Num.700
//Instructions in stack: Num.701
//Instructions in stack: Num.702
//Instructions in stack: Num.703
//Instructions in stack: Num.704
//Instructions in stack: Num.705
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instruct  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
ions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Ins  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  %0 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !657
  %tobool = icmp ne i32 %0, 0, !dbg !657
  br i1 %tobool, label %if.then, label %if.end, !dbg !659
  br label %if.end4, !dbg !660
  %1 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  %inc = add nsw i32 %1, 1, !dbg !661
  store i32 %inc, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  store i64 4096, i64* @__pagesize, align 8, !dbg !662
  br i1 true, label %if.then1, label %if.end2, !dbg !663
  call void @_locale_init() #10, !dbg !664
  br label %if.end2, !dbg !664
  br i1 true, label %if.then3, label %if.end4, !dbg !666
  call void @_stdio_init() #10, !dbg !667
  br label %if.end4, !dbg !667
  ret void, !dbg !669
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** @__global_locale, align 8, !dbg !658
  call void @_locale_init_l(%struct.__uclibc_locale_struct.160* %0) #10, !dbg !659
  ret void, !dbg !660
  %base.addr = alloca %struct.__uclibc_locale_struct.160*, align 8
  store %struct.__uclibc_locale_struct.160* %base, %struct.__uclibc_locale_struct.160** %base.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__uclibc_locale_struct.160** %base.addr, metadata !1973, metadata !DIExpression()), !dbg !1974
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !662
  %cur_locale = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %0, i32 0, i32 6, !dbg !663
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale, i64 0, i64 0, !dbg !662
  %call = call i8* @memset(i8* %arraydecay, i32 0, i64 14) #10, !dbg !664
  %1 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !665
  %cur_locale1 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %1, i32 0, i32 6, !dbg !666
  %arrayidx = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale1, i64 0, i64 0, !dbg !665
  store i8 35, i8* %arrayidx, align 8, !dbg !667
  %2 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !668
  %category_item_count = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %2, i32 0, i32 8, !dbg !669
  %arraydecay2 = getelementptr inbounds [6 x i8], [6 x i8]* %category_item_count, i64 0, i64 0, !dbg !668
  %3 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !670
  %lc_common_item_offsets_LEN = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %3, i32 0, i32 29, !dbg !671
  %arraydecay3 = getelementptr inbounds [6 x i8], [6 x i8]* %lc_common_item_offsets_LEN, i64 0, i64 0, !dbg !670
  %call4 = call i8* @memcpy(i8* %arraydecay2, i8* %arraydecay3, i64 6) #10, !dbg !672
  %4 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !673
  %category_item_count5 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %4, i32 0, i32 8, !dbg !674
  %arrayidx6 = getelementptr inbounds [6 x i8], [6 x i8]* %category_item_count5, i64 0, i64 0, !dbg !673
  %5 = load i8, i8* %arrayidx6, align 2, !dbg !675
  %inc = add i8 %5, 1, !dbg !675
  store i8 %inc, i8* %arrayidx6, align 2, !dbg !675
  %6 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !676
  %category_offsets = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %6, i32 0, i32 7, !dbg !677
  %arrayidx7 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets, i64 0, i64 0, !dbg !676
  store i16 2488, i16* %arrayidx7, align 2, !dbg !678
  %7 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !679
  %category_offsets8 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %7, i32 0, i32 7, !dbg !680
  %arrayidx9 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets8, i64 0, i64 1, !dbg !679
  store i16 2576, i16* %arrayidx9, align 2, !dbg !681
  %8 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !682
  %category_offsets10 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %8, i32 0, i32 7, !dbg !683
  %arrayidx11 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets10, i64 0, i64 2, !dbg !682
  store i16 2600, i16* %arrayidx11, align 2, !dbg !684
  %9 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !685
  %category_offsets12 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %9, i32 0, i32 7, !dbg !686
  %arrayidx13 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets12, i64 0, i64 3, !dbg !685
  store i16 2776, i16* %arrayidx13, align 2, !dbg !687
  %10 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !688
  %category_offsets14 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %10, i32 0, i32 7, !dbg !689
  %arrayidx15 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets14, i64 0, i64 5, !dbg !688
  store i16 3176, i16* %arrayidx15, align 2, !dbg !690
  %11 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !691
  %tbl8ctype = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %11, i32 0, i32 0, !dbg !692
  %12 = bitcast [420 x i8]* %tbl8ctype to i8*, !dbg !693
  %13 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !694
  %tbl8ctype16 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %13, i32 0, i32 13, !dbg !695
  store i8* %12, i8** %tbl8ctype16, align 8, !dbg !696
  %14 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !697
  %tbl8uplow = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %14, i32 0, i32 1, !dbg !698
  %15 = bitcast [504 x i8]* %tbl8uplow to i8*, !dbg !699
  %16 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !700
  %tbl8uplow17 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %16, i32 0, i32 15, !dbg !701
  store i8* %15, i8** %tbl8uplow17, align 8, !dbg !702
  %17 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !703
  %tbl8c2wc = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %17, i32 0, i32 2, !dbg !704
  %18 = bitcast [1760 x i16]* %tbl8c2wc to i16*, !dbg !705
  %19 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !706
  %tbl8c2wc18 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %19, i32 0, i32 17, !dbg !707
  store i16* %18, i16** %tbl8c2wc18, align 8, !dbg !708
  %20 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !709
  %tbl8wc2c = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %20, i32 0, i32 3, !dbg !710
  %21 = bitcast [4528 x i8]* %tbl8wc2c to i8*, !dbg !711
  %22 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !712
  %tbl8wc2c19 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %22, i32 0, i32 19, !dbg !713
  store i8* %21, i8** %tbl8wc2c19, align 8, !dbg !714
  %23 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !715
  %tblwctype = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %23, i32 0, i32 4, !dbg !716
  %24 = bitcast [3604 x i8]* %tblwctype to i8*, !dbg !717
  %25 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !718
  %tblwctype20 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %25, i32 0, i32 21, !dbg !719
  store i8* %24, i8** %tblwctype20, align 8, !dbg !720
  %26 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !721
  %tblwuplow = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %26, i32 0, i32 5, !dbg !722
  %27 = bitcast [1680 x i8]* %tblwuplow to i8*, !dbg !723
  %28 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !724
  %tblwuplow21 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %28, i32 0, i32 22, !dbg !725
  store i8* %27, i8** %tblwuplow21, align 8, !dbg !726
  %29 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !727
  %tblwuplow_diff = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %29, i32 0, i32 6, !dbg !728
  %30 = bitcast [196 x i16]* %tblwuplow_diff to i16*, !dbg !729
  %31 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !730
  %tblwuplow_diff22 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %31, i32 0, i32 23, !dbg !731
  store i16* %30, i16** %tblwuplow_diff22, align 8, !dbg !732
  %32 = load i16*, i16** @__C_ctype_b, align 8, !dbg !733
  %33 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !734
  %__ctype_b = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %33, i32 0, i32 0, !dbg !735
tructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instr  store i16* %32, i16** %__ctype_b, align 8, !dbg !736
  %34 = load i16*, i16** @__C_ctype_tolower, align 8, !dbg !737
  %35 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !738
  %__ctype_tolower = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %35, i32 0, i32 1, !dbg !739
  store i16* %34, i16** %__ctype_tolower, align 8, !dbg !740
  %36 = load i16*, i16** @__C_ctype_toupper, align 8, !dbg !741
  %37 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !742
  %__ctype_toupper = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %37, i32 0, i32 2, !dbg !743
  store i16* %36, i16** %__ctype_toupper, align 8, !dbg !744
  %38 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !745
  %code2flag = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %38, i32 0, i32 20, !dbg !746
  store i16* getelementptr inbounds ([16 x i16], [16 x i16]* @__code2flag, i64 0, i64 0), i16** %code2flag, align 8, !dbg !747
  %39 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !748
  %call23 = call i32 @_locale_set_l(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), %struct.__uclibc_locale_struct.160* %39) #11, !dbg !749
  ret void, !dbg !750
  %retval = alloca i32, align 4
  %p.addr = alloca i8*, align 8
  %base.addr = alloca %struct.__uclibc_locale_struct.160*, align 8
  %x = alloca i8**, align 8
  %s = alloca i8*, align 8
  %stp = alloca i64*, align 8
  %r = alloca i8*, align 8
  %io = alloca i16*, align 8
  %ii = alloca i16*, align 8
  %d = alloca i8*, align 8
  %row = alloca i32, align 4
  %crow = alloca i32, align 4
  %len = alloca i32, align 4
  %c = alloca i32, align 4
  %i = alloca i32, align 4
  %newcol = alloca %struct.__collate_t.159, align 8
  %c8b = alloca %struct.__codeset_8_bit_t.161*, align 8
  %u = alloca i32, align 4
  %m = alloca i16, align 2
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !1060, metadata !DIExpression()), !dbg !1061
  store %struct.__uclibc_locale_struct.160* %base, %struct.__uclibc_locale_struct.160** %base.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__uclibc_locale_struct.160** %base.addr, metadata !1062, metadata !DIExpression()), !dbg !1063
  call void @llvm.dbg.declare(metadata i8*** %x, metadata !1064, metadata !DIExpression()), !dbg !1065
  call void @llvm.dbg.declare(metadata i8** %s, metadata !1066, metadata !DIExpression()), !dbg !1067
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !668
  %cur_locale = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %0, i32 0, i32 6, !dbg !669
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale, i64 0, i64 0, !dbg !668
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 1, !dbg !670
  store i8* %add.ptr, i8** %s, align 8, !dbg !667
  call void @llvm.dbg.declare(metadata i64** %stp, metadata !1071, metadata !DIExpression()), !dbg !1074
  call void @llvm.dbg.declare(metadata i8** %r, metadata !1075, metadata !DIExpression()), !dbg !1076
  call void @llvm.dbg.declare(metadata i16** %io, metadata !1077, metadata !DIExpression()), !dbg !1078
  call void @llvm.dbg.declare(metadata i16** %ii, metadata !1079, metadata !DIExpression()), !dbg !1080
  call void @llvm.dbg.declare(metadata i8** %d, metadata !1081, metadata !DIExpression()), !dbg !1082
  call void @llvm.dbg.declare(metadata i32* %row, metadata !1083, metadata !DIExpression()), !dbg !1084
  call void @llvm.dbg.declare(metadata i32* %crow, metadata !1085, metadata !DIExpression()), !dbg !1086
  call void @llvm.dbg.declare(metadata i32* %len, metadata !1087, metadata !DIExpression()), !dbg !1088
  call void @llvm.dbg.declare(metadata i32* %c, metadata !1089, metadata !DIExpression()), !dbg !1090
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1091, metadata !DIExpression()), !dbg !1092
  store i32 0, i32* %i, align 4, !dbg !692
  call void @llvm.dbg.declare(metadata %struct.__collate_t.159* %newcol, metadata !1093, metadata !DIExpression()), !dbg !1094
  %1 = load i8*, i8** %p.addr, align 8, !dbg !695
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i32 1, !dbg !695
  store i8* %incdec.ptr, i8** %p.addr, align 8, !dbg !695
  %index2weight = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %newcol, i32 0, i32 23, !dbg !696
  store i16* null, i16** %index2weight, align 8, !dbg !697
  %2 = load i8*, i8** %p.addr, align 8, !dbg !698
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 8, !dbg !698
  %3 = load i8, i8* %arrayidx, align 1, !dbg !698
  %conv = zext i8 %3 to i32, !dbg !698
  %4 = load i8*, i8** %s, align 8, !dbg !700
  %arrayidx1 = getelementptr inbounds i8, i8* %4, i64 8, !dbg !700
  %5 = load i8, i8* %arrayidx1, align 1, !dbg !700
  %conv2 = zext i8 %5 to i32, !dbg !700
  %cmp = icmp ne i32 %conv, %conv2, !dbg !701
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !702
  %6 = load i8*, i8** %p.addr, align 8, !dbg !703
  %arrayidx4 = getelementptr inbounds i8, i8* %6, i64 9, !dbg !703
  %7 = load i8, i8* %arrayidx4, align 1, !dbg !703
  %conv5 = zext i8 %7 to i32, !dbg !703
  %8 = load i8*, i8** %s, align 8, !dbg !704
  %arrayidx6 = getelementptr inbounds i8, i8* %8, i64 9, !dbg !704
  %9 = load i8, i8* %arrayidx6, align 1, !dbg !704
  %conv7 = zext i8 %9 to i32, !dbg !704
  %cmp8 = icmp ne i32 %conv5, %conv7, !dbg !705
  br i1 %cmp8, label %if.then, label %if.end22, !dbg !706
  %10 = load i8*, i8** %p.addr, align 8, !dbg !707
  %11 = load i8, i8* %10, align 1, !dbg !709
  %conv10 = zext i8 %11 to i32, !dbg !709
  %and = and i32 %conv10, 127, !dbg !710
  %shl = shl i32 %and, 7, !dbg !711
  %12 = load i8*, i8** %p.addr, align 8, !dbg !712
  %arrayidx11 = getelementptr inbounds i8, i8* %12, i64 1, !dbg !712
  %13 = load i8, i8* %arrayidx11, align 1, !dbg !712
  %conv12 = zext i8 %13 to i32, !dbg !712
  %and13 = and i32 %conv12, 127, !dbg !713
  %add = add nsw i32 %shl, %and13, !dbg !714
  store i32 %add, i32* %row, align 4, !dbg !715
  %14 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !716
  %locales = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %14, i32 0, i32 31, !dbg !718
  %15 = load i32, i32* %row, align 4, !dbg !719
  %mul = mul nsw i32 9, %15, !dbg !720
  %add14 = add nsw i32 %mul, 3, !dbg !721
  %add15 = add nsw i32 %add14, 4, !dbg !722
  %idxprom = sext i32 %add15 to i64, !dbg !716
  %arrayidx16 = getelementptr inbounds [2826 x i8], [2826 x i8]* %locales, i64 0, i64 %idxprom, !dbg !716
  %16 = load i8, i8* %arrayidx16, align 1, !dbg !716
  %conv17 = zext i8 %16 to i32, !dbg !716
  %call = call i32 @init_cur_collate(i32 %conv17, %struct.__collate_t.159* %newcol) #10, !dbg !723
  %tobool = icmp ne i32 %call, 0, !dbg !723
  br i1 %tobool, label %if.end, label %if.then18, !dbg !724
  store i32 0, i32* %retval, align 4, !dbg !725
  br label %return, !dbg !725
  %17 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !727
  %collate = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %17, i32 0, i32 118, !dbg !728
  %index2weight19 = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %collate, i32 0, i32 23, !dbg !729
  %18 = load i16*, i16** %index2weight19, align 8, !dbg !729
  %19 = bitcast i16* %18 to i8*, !dbg !727
  call void @free(i8* %19) #11, !dbg !730
  %20 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !731
  %collate20 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %20, i32 0, i32 118, !dbg !732
  %21 = bitcast %struct.__collate_t.159* %collate20 to i8*, !dbg !733
  %22 = bitcast %struct.__collate_t.159* %newcol to i8*, !dbg !734
  %call21 = call i8* @memcpy(i8* %21, i8* %22, i64 112) #11, !dbg !735
  br label %if.end22, !dbg !736
  br label %do.body, !dbg !737
  %23 = load i8*, i8** %p.addr, align 8, !dbg !738
  %24 = load i8, i8* %23, align 1, !dbg !741
  %conv23 = zext i8 %24 to i32, !dbg !741
  %25 = load i8*, i8** %s, align 8, !dbg !742
  %26 = load i8, i8* %25, align 1, !dbg !743
  %conv24 = zext i8 %26 to i32, !dbg !743
uctions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
  %cmp25 = icmp ne i32 %conv23, %conv24, !dbg !744
  br i1 %cmp25, label %if.then34, label %lor.lhs.false27, !dbg !745
  %27 = load i8*, i8** %p.addr, align 8, !dbg !746
  %arrayidx28 = getelementptr inbounds i8, i8* %27, i64 1, !dbg !746
  %28 = load i8, i8* %arrayidx28, align 1, !dbg !746
  %conv29 = zext i8 %28 to i32, !dbg !746
  %29 = load i8*, i8** %s, align 8, !dbg !747
  %arrayidx30 = getelementptr inbounds i8, i8* %29, i64 1, !dbg !747
  %30 = load i8, i8* %arrayidx30, align 1, !dbg !747
  %conv31 = zext i8 %30 to i32, !dbg !747
  %cmp32 = icmp ne i32 %conv29, %conv31, !dbg !748
  br i1 %cmp32, label %if.then34, label %if.end313, !dbg !749
  %31 = load i8*, i8** %p.addr, align 8, !dbg !750
  %32 = load i8, i8* %31, align 1, !dbg !752
  %conv35 = zext i8 %32 to i32, !dbg !752
  %and36 = and i32 %conv35, 127, !dbg !753
  %shl37 = shl i32 %and36, 7, !dbg !754
  %33 = load i8*, i8** %p.addr, align 8, !dbg !755
  %arrayidx38 = getelementptr inbounds i8, i8* %33, i64 1, !dbg !755
  %34 = load i8, i8* %arrayidx38, align 1, !dbg !755
  %conv39 = zext i8 %34 to i32, !dbg !755
  %and40 = and i32 %conv39, 127, !dbg !756
  %add41 = add nsw i32 %shl37, %and40, !dbg !757
  store i32 %add41, i32* %row, align 4, !dbg !758
  %35 = load i8*, i8** %p.addr, align 8, !dbg !759
  %36 = load i8, i8* %35, align 1, !dbg !760
  %37 = load i8*, i8** %s, align 8, !dbg !761
  store i8 %36, i8* %37, align 1, !dbg !762
  %38 = load i8*, i8** %p.addr, align 8, !dbg !763
  %arrayidx42 = getelementptr inbounds i8, i8* %38, i64 1, !dbg !763
  %39 = load i8, i8* %arrayidx42, align 1, !dbg !763
  %40 = load i8*, i8** %s, align 8, !dbg !764
  %arrayidx43 = getelementptr inbounds i8, i8* %40, i64 1, !dbg !764
  store i8 %39, i8* %arrayidx43, align 1, !dbg !765
  %41 = load i32, i32* %i, align 4, !dbg !766
  %cmp44 = icmp ne i32 %41, 4, !dbg !768
  br i1 %cmp44, label %land.lhs.true, label %if.end92, !dbg !769
  %42 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !770
  %lc_common_item_offsets_LEN = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %42, i32 0, i32 29, !dbg !771
  %43 = load i32, i32* %i, align 4, !dbg !772
  %idxprom46 = sext i32 %43 to i64, !dbg !770
  %arrayidx47 = getelementptr inbounds [6 x i8], [6 x i8]* %lc_common_item_offsets_LEN, i64 0, i64 %idxprom46, !dbg !770
  %44 = load i8, i8* %arrayidx47, align 1, !dbg !770
  %conv48 = zext i8 %44 to i32, !dbg !770
  store i32 %conv48, i32* %len, align 4, !dbg !773
  %cmp49 = icmp ne i32 %conv48, 0, !dbg !774
  br i1 %cmp49, label %if.then51, label %if.end92, !dbg !775
  %45 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !776
  %locales52 = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %45, i32 0, i32 31, !dbg !778
  %46 = load i32, i32* %row, align 4, !dbg !779
  %mul53 = mul nsw i32 9, %46, !dbg !780
  %add54 = add nsw i32 %mul53, 3, !dbg !781
  %47 = load i32, i32* %i, align 4, !dbg !782
  %add55 = add nsw i32 %add54, %47, !dbg !783
  %idxprom56 = sext i32 %add55 to i64, !dbg !776
  %arrayidx57 = getelementptr inbounds [2826 x i8], [2826 x i8]* %locales52, i64 0, i64 %idxprom56, !dbg !776
  %48 = load i8, i8* %arrayidx57, align 1, !dbg !776
  %conv58 = zext i8 %48 to i32, !dbg !776
  %49 = load i32, i32* %len, align 4, !dbg !784
  %mul59 = mul nsw i32 %conv58, %49, !dbg !785
  store i32 %mul59, i32* %crow, align 4, !dbg !786
  %50 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !787
  %51 = bitcast %struct.__uclibc_locale_struct.160* %50 to i8*, !dbg !788
  %52 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !789
  %category_offsets = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %52, i32 0, i32 7, !dbg !790
  %53 = load i32, i32* %i, align 4, !dbg !791
  %idxprom60 = sext i32 %53 to i64, !dbg !789
  %arrayidx61 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets, i64 0, i64 %idxprom60, !dbg !789
  %54 = load i16, i16* %arrayidx61, align 2, !dbg !789
  %conv62 = zext i16 %54 to i32, !dbg !789
  %idx.ext = sext i32 %conv62 to i64, !dbg !792
  %add.ptr63 = getelementptr inbounds i8, i8* %51, i64 %idx.ext, !dbg !792
  %55 = bitcast i8* %add.ptr63 to i8**, !dbg !793
  store i8** %55, i8*** %x, align 8, !dbg !794
  %56 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !795
  %lc_common_tbl_offsets = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %56, i32 0, i32 30, !dbg !796
  %arraydecay64 = getelementptr inbounds [24 x i64], [24 x i64]* %lc_common_tbl_offsets, i64 0, i64 0, !dbg !795
  %57 = load i32, i32* %i, align 4, !dbg !797
  %mul65 = mul nsw i32 4, %57, !dbg !798
  %idx.ext66 = sext i32 %mul65 to i64, !dbg !799
  %add.ptr67 = getelementptr inbounds i64, i64* %arraydecay64, i64 %idx.ext66, !dbg !799
  store i64* %add.ptr67, i64** %stp, align 8, !dbg !800
  %58 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !801
  %59 = bitcast %struct.__locale_mmap_t.162* %58 to i8*, !dbg !802
  %60 = load i64*, i64** %stp, align 8, !dbg !803
  %61 = load i64, i64* %60, align 8, !dbg !804
  %add.ptr68 = getelementptr inbounds i8, i8* %59, i64 %61, !dbg !805
  store i8* %add.ptr68, i8** %r, align 8, !dbg !806
  %62 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !807
  %63 = bitcast %struct.__locale_mmap_t.162* %62 to i8*, !dbg !808
  %64 = load i64*, i64** %stp, align 8, !dbg !809
  %incdec.ptr69 = getelementptr inbounds i64, i64* %64, i32 1, !dbg !809
  store i64* %incdec.ptr69, i64** %stp, align 8, !dbg !809
  %65 = load i64, i64* %incdec.ptr69, align 8, !dbg !810
  %add.ptr70 = getelementptr inbounds i8, i8* %63, i64 %65, !dbg !811
  %66 = bitcast i8* %add.ptr70 to i16*, !dbg !812
  store i16* %66, i16** %io, align 8, !dbg !813
  %67 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !814
  %68 = bitcast %struct.__locale_mmap_t.162* %67 to i8*, !dbg !815
  %69 = load i64*, i64** %stp, align 8, !dbg !816
  %incdec.ptr71 = getelementptr inbounds i64, i64* %69, i32 1, !dbg !816
  store i64* %incdec.ptr71, i64** %stp, align 8, !dbg !816
  %70 = load i64, i64* %incdec.ptr71, align 8, !dbg !817
  %add.ptr72 = getelementptr inbounds i8, i8* %68, i64 %70, !dbg !818
  %71 = bitcast i8* %add.ptr72 to i16*, !dbg !819
  store i16* %71, i16** %ii, align 8, !dbg !820
  %72 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !821
  %73 = bitcast %struct.__locale_mmap_t.162* %72 to i8*, !dbg !822
  %74 = load i64*, i64** %stp, align 8, !dbg !823
  %incdec.ptr73 = getelementptr inbounds i64, i64* %74, i32 1, !dbg !823
  store i64* %incdec.ptr73, i64** %stp, align 8, !dbg !823
  %75 = load i64, i64* %incdec.ptr73, align 8, !dbg !824
  %add.ptr74 = getelementptr inbounds i8, i8* %73, i64 %75, !dbg !825
  store i8* %add.ptr74, i8** %d, align 8, !dbg !826
  store i32 0, i32* %c, align 4, !dbg !827
  br label %for.cond, !dbg !829
  %76 = load i32, i32* %c, align 4, !dbg !830
  %77 = load i32, i32* %len, align 4, !dbg !832
  %cmp75 = icmp slt i32 %76, %77, !dbg !833
  br i1 %cmp75, label %for.body, label %for.end, !dbg !834
  %78 = load i8*, i8** %d, align 8, !dbg !835
  %79 = load i16*, i16** %ii, align 8, !dbg !837
  %80 = load i8*, i8** %r, align 8, !dbg !838
  %81 = load i32, i32* %crow, align 4, !dbg !839
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.190
//Instructions in stack: Num.191
//Instructions in stack: Num.192
//Instructions in stack: Num.193
//Instructions in stack: Num.194
//Instructions in stack: Num.195
//Instructions in stack: Num.196
//Instructions in stack: Num.197
//Instructions in stack: Num.198
//Instructions in stack: Num.199
//Instructions in stack: Num.200
//Instructions in stack: Num.201
//Instructions in stack: Num.202
//Instructions in stack: Num.203
//Instructions in stack: Num.204
//Instructions in stack: Num.205
//Instructions in stack: Num.206
//Instructions in stack: Num.207
//Instructions in stack: Num.208
//Instructions in stack: Num.209
//Instructions in stack: Num.210
//Instructions in stack: Num.211
//Instructions in stack: Num.212
//Instructions in stack: Num.213
//Instructions in stack: Num.214
//Instructions in stack: Num.215
//Instructions in stack: Num.216
//Instructions in stack: Num.217
//Instructions in stack: Num.218
//Instructions in stack: Num.219
//Instructions in stack: Num.220
//Instructions in stack: Num.221
//Instructions in stack: Num.222
//Instructions in stack: Num.223
//Instructions in stack: Num.224
//Instructions in stack: Num.225
//Instructions in stack: Num.226
//Instructions in stack: Num.227
//Instructions in stack: Num.228
//Instructions in stack: Num.229
//Instructions in stack: Num.230
//Instructions in stack: Num.231
//Instructions in stack: Num.232
//Instructions in stack: Num.233
//Instructions in stack: Num.234
//Instructions in stack: Num.235
//Instructions in stack: Num.236
//In  %82 = load i32, i32* %c, align 4, !dbg !840
  %add77 = add nsw i32 %81, %82, !dbg !841
  %idxprom78 = sext i32 %add77 to i64, !dbg !838
  %arrayidx79 = getelementptr inbounds i8, i8* %80, i64 %idxprom78, !dbg !838
  %83 = load i8, i8* %arrayidx79, align 1, !dbg !838
  %conv80 = zext i8 %83 to i32, !dbg !838
  %84 = load i16*, i16** %io, align 8, !dbg !842
  %85 = load i32, i32* %c, align 4, !dbg !843
  %idxprom81 = sext i32 %85 to i64, !dbg !842
  %arrayidx82 = getelementptr inbounds i16, i16* %84, i64 %idxprom81, !dbg !842
  %86 = load i16, i16* %arrayidx82, align 2, !dbg !842
  %conv83 = zext i16 %86 to i32, !dbg !842
  %add84 = add nsw i32 %conv80, %conv83, !dbg !844
  %idxprom85 = sext i32 %add84 to i64, !dbg !837
  %arrayidx86 = getelementptr inbounds i16, i16* %79, i64 %idxprom85, !dbg !837
  %87 = load i16, i16* %arrayidx86, align 2, !dbg !837
  %conv87 = zext i16 %87 to i32, !dbg !837
  %idx.ext88 = sext i32 %conv87 to i64, !dbg !845
  %add.ptr89 = getelementptr inbounds i8, i8* %78, i64 %idx.ext88, !dbg !845
  %88 = load i8**, i8*** %x, align 8, !dbg !846
  %89 = load i32, i32* %c, align 4, !dbg !847
  %idx.ext90 = sext i32 %89 to i64, !dbg !848
  %add.ptr91 = getelementptr inbounds i8*, i8** %88, i64 %idx.ext90, !dbg !848
  store i8* %add.ptr89, i8** %add.ptr91, align 8, !dbg !849
  br label %for.inc, !dbg !850
  %90 = load i32, i32* %c, align 4, !dbg !851
  %inc = add nsw i32 %90, 1, !dbg !851
  store i32 %inc, i32* %c, align 4, !dbg !851
  br label %for.cond, !dbg !852, !llvm.loop !853
  br label %if.end92, !dbg !855
  %91 = load i32, i32* %i, align 4, !dbg !856
  %cmp93 = icmp eq i32 %91, 0, !dbg !858
  br i1 %cmp93, label %if.then95, label %if.else295, !dbg !859
  %92 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !860
  %locales96 = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %92, i32 0, i32 31, !dbg !862
  %93 = load i32, i32* %row, align 4, !dbg !863
  %mul97 = mul nsw i32 9, %93, !dbg !864
  %add98 = add nsw i32 %mul97, 2, !dbg !865
  %idxprom99 = sext i32 %add98 to i64, !dbg !860
  %arrayidx100 = getelementptr inbounds [2826 x i8], [2826 x i8]* %locales96, i64 0, i64 %idxprom99, !dbg !860
  %94 = load i8, i8* %arrayidx100, align 1, !dbg !860
  %conv101 = zext i8 %94 to i32, !dbg !860
  store i32 %conv101, i32* %c, align 4, !dbg !866
  %95 = load i32, i32* %c, align 4, !dbg !867
  %cmp102 = icmp sle i32 %95, 2, !dbg !869
  br i1 %cmp102, label %if.then104, label %if.else112, !dbg !870
  %96 = load i32, i32* %c, align 4, !dbg !871
  %cmp105 = icmp eq i32 %96, 2, !dbg !874
  br i1 %cmp105, label %if.then107, label %if.else, !dbg !875
  %97 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !876
  %codeset = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %97, i32 0, i32 38, !dbg !878
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @utf8, i64 0, i64 0), i8** %codeset, align 8, !dbg !879
  %98 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !880
  %encoding = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %98, i32 0, i32 9, !dbg !881
  store i8 1, i8* %encoding, align 8, !dbg !882
  %99 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !883
  %mb_cur_max = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %99, i32 0, i32 10, !dbg !884
  store i8 6, i8* %mb_cur_max, align 1, !dbg !885
  br label %if.end111, !dbg !886
  %100 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !887
  %codeset108 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %100, i32 0, i32 38, !dbg !889
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @ascii, i64 0, i64 0), i8** %codeset108, align 8, !dbg !890
  %101 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !891
  %encoding109 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %101, i32 0, i32 9, !dbg !892
  store i8 0, i8* %encoding109, align 8, !dbg !893
  %102 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !894
  %mb_cur_max110 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %102, i32 0, i32 10, !dbg !895
  store i8 1, i8* %mb_cur_max110, align 1, !dbg !896
  br label %if.end111
  br label %if.end280, !dbg !897
  call void @llvm.dbg.declare(metadata %struct.__codeset_8_bit_t.161** %c8b, metadata !1298, metadata !DIExpression()), !dbg !1310
  %103 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !911
  %codeset_list = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %103, i32 0, i32 35, !dbg !911
  %arraydecay113 = getelementptr inbounds [255 x i8], [255 x i8]* %codeset_list, i64 0, i64 0, !dbg !911
  store i8* %arraydecay113, i8** %r, align 8, !dbg !912
  %104 = load i8*, i8** %r, align 8, !dbg !913
  %105 = load i8*, i8** %r, align 8, !dbg !914
  %106 = load i32, i32* %c, align 4, !dbg !915
  %sub = sub nsw i32 %106, 3, !dbg !915
  store i32 %sub, i32* %c, align 4, !dbg !915
  %idxprom114 = sext i32 %sub to i64, !dbg !914
  %arrayidx115 = getelementptr inbounds i8, i8* %105, i64 %idxprom114, !dbg !914
  %107 = load i8, i8* %arrayidx115, align 1, !dbg !914
  %conv116 = zext i8 %107 to i32, !dbg !914
  %idx.ext117 = sext i32 %conv116 to i64, !dbg !916
  %add.ptr118 = getelementptr inbounds i8, i8* %104, i64 %idx.ext117, !dbg !916
  %108 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !917
  %codeset119 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %108, i32 0, i32 38, !dbg !918
  store i8* %add.ptr118, i8** %codeset119, align 8, !dbg !919
  %109 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !920
  %encoding120 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %109, i32 0, i32 9, !dbg !921
  store i8 2, i8* %encoding120, align 8, !dbg !922
  %110 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !923
  %mb_cur_max121 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %110, i32 0, i32 10, !dbg !924
  store i8 1, i8* %mb_cur_max121, align 1, !dbg !925
  %111 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !926
  %codeset_8_bit = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %111, i32 0, i32 12, !dbg !927
  %arraydecay122 = getelementptr inbounds [23 x %struct.__codeset_8_bit_t.161], [23 x %struct.__codeset_8_bit_t.161]* %codeset_8_bit, i64 0, i64 0, !dbg !926
  %112 = load i32, i32* %c, align 4, !dbg !928
  %idx.ext123 = sext i32 %112 to i64, !dbg !929
  %add.ptr124 = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %arraydecay122, i64 %idx.ext123, !dbg !929
  store %struct.__codeset_8_bit_t.161* %add.ptr124, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !930
  %113 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !931
  %idx8ctype = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %113, i32 0, i32 0, !dbg !932
  %arraydecay125 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8ctype, i64 0, i64 0, !dbg !931
  %114 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !933
  %idx8ctype126 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %114, i32 0, i32 12, !dbg !934
  store i8* %arraydecay125, i8** %idx8ctype126, align 8, !dbg !935
  %115 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !936
  %idx8uplow = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %115, i32 0, i32 1, !dbg !937
  %arraydecay127 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8uplow, i64 0, i64 0, !dbg !936
  %116 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !938
  %idx8uplow128 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %116, i32 0, i32 14, !dbg !939
  store i8* %arraydecay127, i8** %idx8uplow128, align 8, !dbg !940
  %117 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !941
  %idx8c2wc = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %117, i32 0, i32 2, !dbg !942
  %arraydecay129 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8c2wc, i64 0, i64 0, !dbg !941
  %118 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !943
  %idx8c2wc130 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %118, i32 0, i32 16, !dbg !944
  store i8* %arraydecay129, i8** %idx8c2wc130, align 8, !dbg !945
  %119 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !946
  %idx8wc2c = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %119, i32 0, i32 3, !dbg !947
  %arraydecay131 = getelementptr inbounds [38 x i8], [38 x i8]* %idx8wc2c, i64 0, i64 0, !dbg !946
  %120 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !948
structions in stack: Num.237
//Instructions in stack: Num.238
//Instructions in stack: Num.239
//Instructions in stack: Num.240
//Instructions in stack: Num.241
//Instructions in stack: Num.242
//Instructions in stack: Num.243
//Instructions in stack: Num.244
//Instructions in stack: Num.245
//Instructions in stack: Num.246
//Instructions in stack: Num.247
//Instructions in stack: Num.248
//Instructions in stack: Num.249
//Instructions in stack: Num.250
//Instructions in stack: Num.251
//Instructions in stack: Num.252
//Instructions in stack: Num.253
//Instructions in stack: Num.254
//Instructions in stack: Num.255
//Instructions in stack: Num.256
//Instructions in stack: Num.257
//Instructions in stack: Num.258
//Instructions in stack: Num.259
//Instructions in stack: Num.260
//Instructions in stack: Num.261
//Instructions in stack: Num.262
//Instructions in stack: Num.263
//Instructions in stack: Num.264
//Instructions in stack: Num.265
//Instructions in stack: Num.266
//Instructions in stack: Num.267
//Instructions in stack: Num.268
//Instructions in stack: Num.269
//Instructions in stack: Num.270
//Instructions in stack: Num.271
//Instructions in stack: Num.272
//Instructions in stack: Num.273
//Instructions in stack: Num.274
//Instructions in stack: Num.275
//Instructions in stack: Num.276
//Instructions in stack: Num.277
//Instructions in stack: Num.278
//Instructions in stack: Num.279
//Instructions in stack: Num.280
//Instructions in stack: Num.281
//Instructions in stack: Num.282
//Instructions in stack: Num.283
//Instructions in stack: Num.284
//Instructions in stack: Num.285
//Instructions in stack: Num.286
//Instructions in stack: Num.287
//Instructions in stack: Num.288
//Instructions in stack: Num.289
//Instructions in stack: Num.290
//Instructions in stack: Num.291
//Instructions in stack: Num.292
//Instructions in stack: Num.293
//Instructions in stack: Num.294
//Instructions in stack: Num.295
//Instructions in stack: Num.296
//Instructions in stack: Num.297
//Instructions in stack: Num.298
//Instructions in stack: Num.299
//Instructions in stack: Num.300
//Instructions in stack: Num.301
//Instructions in stack: Num.302
//Instructions in stack: Num.303
//Instructions in stack: Num.304
//Instructions in stack: Num.305
//Instructions in stack: Num.306
//Instructions in stack: Num.307
//Instructions in stack: Num.308
//Instructions in stack: Num.309
//Instructions in stack: Num.310
//Instructions in stack: Num.311
//Instructions in stack: Num.312
//Instructions in stack: Num.313
//Instructions in stack: Num.314
//Instructions in stack: Num.315
//Instructions in stack: Num.316
//Instructions in stack: Num.317
//Instructions in stack: Num.318
//Instructions in stack: Num.319
//Instructions in stack: Num.320
//Instructions in stack: Num.321
//Instructions in stack: Num.322
//Instructions in stack: Num.323
//Instructions in stack: Num.324
//Instructions in stack: Num.325
//Instructions in stack: Num.326
//Instructions in stack: Num.327
//Instructions in stack: Num.328
//Instructions in stack: Num.329
//Instructions in stack: Num.330
//Instructions in stack: Num.331
//Instructions in stack: Num.332
//Instructions in stack: Num.333
//Instructions in stack: Num.334
//Instructions in stack: Num.335
//Instructions in stack: Num.336
//Instructions in stack: Num.337
//Instructions in stack: Num.338
//Instructions in stack: Num.339
//Instructions in stack: Num.340
//Instructions in stack: Num.341
//Instructions in stack: Num.342
//Instructions in stack: Num.343
//Instructions in stack: Num.344
//Instructions in stack: Num.345
//Instructions in stack: Num.346
//Instructions in stack: Num.347
//Instructions in stack: Num.348
//Instructions in stack: Num.349
//Instructions in stack: Num.350
//Instructions in stack: Num.351
//Instructions in stack: Num.352
//Instructions in stack: Num.353
//Instructions in stack: Num.354
//Instructions in stack: Num.355
//Instructions in stack: Num.356
//Instructions in stack: Num.357
//Instructions in stack: Num.358
//Instructions in stack: Num.359
//Instructions in stack: Num.360
//Instru  %idx8wc2c132 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %120, i32 0, i32 18, !dbg !949
  store i8* %arraydecay131, i8** %idx8wc2c132, align 8, !dbg !950
  %121 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !951
  %__ctype_b_data = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %121, i32 0, i32 3, !dbg !952
  %arraydecay133 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data, i64 0, i64 0, !dbg !951
  %122 = bitcast i16* %arraydecay133 to i8*, !dbg !951
  %123 = load i16*, i16** @__C_ctype_b, align 8, !dbg !953
  %add.ptr134 = getelementptr inbounds i16, i16* %123, i64 -128, !dbg !954
  %124 = bitcast i16* %add.ptr134 to i8*, !dbg !953
  %call135 = call i8* @memcpy(i8* %122, i8* %124, i64 768) #11, !dbg !955
  %125 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !956
  %__ctype_tolower_data = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %125, i32 0, i32 4, !dbg !957
  %arraydecay136 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data, i64 0, i64 0, !dbg !956
  %126 = bitcast i16* %arraydecay136 to i8*, !dbg !956
  %127 = load i16*, i16** @__C_ctype_tolower, align 8, !dbg !958
  %add.ptr137 = getelementptr inbounds i16, i16* %127, i64 -128, !dbg !959
  %128 = bitcast i16* %add.ptr137 to i8*, !dbg !958
  %call138 = call i8* @memcpy(i8* %126, i8* %128, i64 768) #11, !dbg !960
  %129 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !961
  %__ctype_toupper_data = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %129, i32 0, i32 5, !dbg !962
  %arraydecay139 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data, i64 0, i64 0, !dbg !961
  %130 = bitcast i16* %arraydecay139 to i8*, !dbg !961
  %131 = load i16*, i16** @__C_ctype_toupper, align 8, !dbg !963
  %add.ptr140 = getelementptr inbounds i16, i16* %131, i64 -128, !dbg !964
  %132 = bitcast i16* %add.ptr140 to i8*, !dbg !963
  %call141 = call i8* @memcpy(i8* %130, i8* %132, i64 768) #11, !dbg !965
  call void @llvm.dbg.declare(metadata i32* %u, metadata !1366, metadata !DIExpression()), !dbg !1368
  call void @llvm.dbg.declare(metadata i16* %m, metadata !1369, metadata !DIExpression()), !dbg !1370
  store i32 0, i32* %u, align 4, !dbg !971
  br label %for.cond142, !dbg !973
  %133 = load i32, i32* %u, align 4, !dbg !974
  %cmp143 = icmp slt i32 %133, 128, !dbg !976
  br i1 %cmp143, label %for.body145, label %for.end270, !dbg !977
  %134 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !978
  %tbl8ctype = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %134, i32 0, i32 13, !dbg !980
  %135 = load i8*, i8** %tbl8ctype, align 8, !dbg !980
  %136 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !981
  %idx8ctype146 = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %136, i32 0, i32 0, !dbg !982
  %137 = load i32, i32* %u, align 4, !dbg !983
  %shr = ashr i32 %137, 3, !dbg !984
  %idxprom147 = sext i32 %shr to i64, !dbg !981
  %arrayidx148 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8ctype146, i64 0, i64 %idxprom147, !dbg !981
  %138 = load i8, i8* %arrayidx148, align 1, !dbg !981
  %conv149 = zext i8 %138 to i32, !dbg !985
  %shl150 = shl i32 %conv149, 2, !dbg !986
  %139 = load i32, i32* %u, align 4, !dbg !987
  %and151 = and i32 %139, 7, !dbg !988
  %shr152 = ashr i32 %and151, 1, !dbg !989
  %add153 = add nsw i32 %shl150, %shr152, !dbg !990
  %idxprom154 = sext i32 %add153 to i64, !dbg !978
  %arrayidx155 = getelementptr inbounds i8, i8* %135, i64 %idxprom154, !dbg !978
  %140 = load i8, i8* %arrayidx155, align 1, !dbg !978
  %conv156 = zext i8 %140 to i32, !dbg !978
  store i32 %conv156, i32* %c, align 4, !dbg !991
  %141 = load i32, i32* %u, align 4, !dbg !992
  %and157 = and i32 %141, 1, !dbg !993
  %tobool158 = icmp ne i32 %and157, 0, !dbg !993
  br i1 %tobool158, label %cond.true, label %cond.false, !dbg !994
  %142 = load i32, i32* %c, align 4, !dbg !995
  %shr159 = ashr i32 %142, 4, !dbg !996
  br label %cond.end, !dbg !994
  %143 = load i32, i32* %c, align 4, !dbg !997
  %and160 = and i32 %143, 15, !dbg !998
  br label %cond.end, !dbg !994
  %cond = phi i32 [ %shr159, %cond.true ], [ %and160, %cond.false ], !dbg !994
  store i32 %cond, i32* %c, align 4, !dbg !999
  %144 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1000
  %code2flag = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %144, i32 0, i32 20, !dbg !1001
  %145 = load i16*, i16** %code2flag, align 8, !dbg !1001
  %146 = load i32, i32* %c, align 4, !dbg !1002
  %idxprom161 = sext i32 %146 to i64, !dbg !1000
  %arrayidx162 = getelementptr inbounds i16, i16* %145, i64 %idxprom161, !dbg !1000
  %147 = load i16, i16* %arrayidx162, align 2, !dbg !1000
  store i16 %147, i16* %m, align 2, !dbg !1003
  %148 = load i16, i16* %m, align 2, !dbg !1004
  %149 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1005
  %__ctype_b_data163 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %149, i32 0, i32 3, !dbg !1006
  %150 = load i32, i32* %u, align 4, !dbg !1007
  %add164 = add nsw i32 256, %150, !dbg !1008
  %idxprom165 = sext i32 %add164 to i64, !dbg !1005
  %arrayidx166 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data163, i64 0, i64 %idxprom165, !dbg !1005
  store i16 %148, i16* %arrayidx166, align 2, !dbg !1009
  %151 = load i32, i32* %u, align 4, !dbg !1010
  %add167 = add nsw i32 128, %151, !dbg !1012
  %conv168 = trunc i32 %add167 to i8, !dbg !1013
  %conv169 = sext i8 %conv168 to i32, !dbg !1014
  %cmp170 = icmp ne i32 %conv169, -1, !dbg !1015
  br i1 %cmp170, label %if.then172, label %if.end180, !dbg !1016
  %152 = load i16, i16* %m, align 2, !dbg !1017
  %153 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1019
  %__ctype_b_data173 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %153, i32 0, i32 3, !dbg !1020
  %154 = load i32, i32* %u, align 4, !dbg !1021
  %add174 = add nsw i32 128, %154, !dbg !1022
  %conv175 = trunc i32 %add174 to i8, !dbg !1023
  %conv176 = sext i8 %conv175 to i32, !dbg !1024
  %add177 = add nsw i32 128, %conv176, !dbg !1025
  %idxprom178 = sext i32 %add177 to i64, !dbg !1019
  %arrayidx179 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data173, i64 0, i64 %idxprom178, !dbg !1019
  store i16 %152, i16* %arrayidx179, align 2, !dbg !1026
  br label %if.end180, !dbg !1027
  %155 = load i32, i32* %u, align 4, !dbg !1028
  %add181 = add nsw i32 128, %155, !dbg !1029
  %conv182 = trunc i32 %add181 to i16, !dbg !1030
  %156 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1031
  %__ctype_tolower_data183 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %156, i32 0, i32 4, !dbg !1032
  %157 = load i32, i32* %u, align 4, !dbg !1033
  %add184 = add nsw i32 256, %157, !dbg !1034
  %idxprom185 = sext i32 %add184 to i64, !dbg !1031
  %arrayidx186 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data183, i64 0, i64 %idxprom185, !dbg !1031
  store i16 %conv182, i16* %arrayidx186, align 2, !dbg !1035
  %158 = load i32, i32* %u, align 4, !dbg !1036
  %add187 = add nsw i32 128, %158, !dbg !1037
  %conv188 = trunc i32 %add187 to i16, !dbg !1038
  %159 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1039
  %__ctype_toupper_data189 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %159, i32 0, i32 5, !dbg !1040
  %160 = load i32, i32* %u, align 4, !dbg !1041
  %add190 = add nsw i32 256, %160, !dbg !1042
  %idxprom191 = sext i32 %add190 to i64, !dbg !1039
  %arrayidx192 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data189, i64 0, i64 %idxprom191, !dbg !1039
  store i16 %conv188, i16* %arrayidx192, align 2, !dbg !1043
  %161 = load i16, i16* %m, align 2, !dbg !1044
  %conv193 = zext i16 %161 to i32, !dbg !1044
  %and194 = and i32 %conv193, 768, !dbg !1046
  %tobool195 = icmp ne i32 %and194, 0, !dbg !1046
ctions in stack: Num.361
//Instructions in stack: Num.362
//Instructions in stack: Num.363
//Instructions in stack: Num.364
//Instructions in stack: Num.365
//Instructions in stack: Num.366
//Instructions in stack: Num.367
//Instructions in stack: Num.368
//Instructions in stack: Num.369
//Instructions in stack: Num.370
//Instructions in stack: Num.371
//Instructions in stack: Num.372
//Instructions in stack: Num.373
//Instructions in stack: Num.374
//Instructions in stack: Num.375
//Instructions in stack: Num.376
//Instructions in stack: Num.377
//Instructions in stack: Num.378
//Instructions in stack: Num.379
//Instructions in stack: Num.380
//Instructions in stack: Num.381
//Instructions in stack: Num.382
//Instructions in stack: Num.383
//Instructions in stack: Num.384
//Instructions in stack: Num.385
//Instructions in stack: Num.386
//Instructions in stack: Num.387
//Instructions in stack: Num.388
//Instructions in stack: Num.389
//Instructions in stack: Num.390
//Instructions in stack: Num.391
//Instructions in stack: Num.392
//Instructions in stack: Num.393
//Instructions in stack: Num.394
//Instructions in stack: Num.395
//Instructions in stack: Num.396
//Instructions in stack: Num.397
//Instructions in stack: Num.398
//Instructions in stack: Num.399
//Instructions in stack: Num.400
//Instructions in stack: Num.401
//Instructions in stack: Num.402
//Instructions in stack: Num.403
//Instructions in stack: Num.404
//Instructions in stack: Num.405
//Instructions in stack: Num.406
//Instructions in stack: Num.407
//Instructions in stack: Num.408
//Instructions in stack: Num.409
//Instructions in stack: Num.410
//Instructions in stack: Num.411
//Instructions in stack: Num.412
//Instructions in stack: Num.413
//Instructions in stack: Num.414
//Instructions in stack: Num.415
//Instructions in stack: Num.416
//Instructions in stack: Num.417
//Instructions in stack: Num.418
//Instructions in stack: Num.419
//Instructions in stack: Num.420
//Instructions in stack: Num.421
//Instructions in stack: Num.422
//Instructions in stack: Num.423
//Instructions in stack: Num.424
//Instructions in stack: Num.425
//Instructions in stack: Num.426
//Instructions in stack: Num.427
//Instructions in stack: Num.428
//Instructions in stack: Num.429
//Instructions in stack: Num.430
//Instructions in stack: Num.431
//Instructions in stack: Num.432
//Instructions in stack: Num.433
//Instructions in stack: Num.434
//Instructions in stack: Num.435
//Instructions in stack: Num.436
//Instructions in stack: Num.437
//Instructions in stack: Num.438
//Instructions in stack: Num.439
//Instructions in stack: Num.440
//Instructions in stack: Num.441
//Instructions in stack: Num.442
//Instructions in stack: Num.443
//Instructions in stack: Num.444
//Instructions in stack: Num.445
//Instructions in stack: Num.446
//Instructions in stack: Num.447
//Instructions in stack: Num.448
//Instructions in stack: Num.449
//Instructions in stack: Num.450
//Instructions in stack: Num.451
//Instructions in stack: Num.452
//Instructions in stack: Num.453
//Instructions in stack: Num.454
//Instructions in stack: Num.455
//Instructions in stack: Num.456
//Instructions in stack: Num.457
//Instructions in stack: Num.458
//Instructions in stack: Num.459
//Instructions in stack: Num.460
//Instructions in stack: Num.461
//Instructions in stack: Num.462
//Instructions in stack: Num.463
//Instructions in stack: Num.464
//Instructions in stack: Num.465
//Instructions in stack: Num.466
//Instructions in stack: Num.467
//Instructions in stack: Num.468
//Instructions in stack: Num.469
//Instructions in stack: Num.470
//Instructions in stack: Num.471
//Instructions in stack: Num.472
//Instructions in stack: Num.473
//Instructions in stack: Num.474
//Instructions in stack: Num.475
//Instructions in stack: Num.476
//Instructions in stack: Num.477
//Instructions in stack: Num.478
//Instructions in stack: Num.479
//Instructions in stack: Num.480
//Instructions in stack: Num.481
//Instructions in stack: Num.482
//Instructions in stack: Num.483
//Instructions in stack: Num.484
//Instructio  br i1 %tobool195, label %if.then196, label %if.end267, !dbg !1047
  %162 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1048
  %tbl8uplow = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %162, i32 0, i32 15, !dbg !1050
  %163 = load i8*, i8** %tbl8uplow, align 8, !dbg !1050
  %164 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !1051
  %idx8uplow197 = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %164, i32 0, i32 1, !dbg !1052
  %165 = load i32, i32* %u, align 4, !dbg !1053
  %shr198 = ashr i32 %165, 3, !dbg !1054
  %idxprom199 = sext i32 %shr198 to i64, !dbg !1051
  %arrayidx200 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8uplow197, i64 0, i64 %idxprom199, !dbg !1051
  %166 = load i8, i8* %arrayidx200, align 1, !dbg !1051
  %conv201 = zext i8 %166 to i32, !dbg !1055
  %shl202 = shl i32 %conv201, 3, !dbg !1056
  %167 = load i32, i32* %u, align 4, !dbg !1057
  %add203 = add nsw i32 128, %167, !dbg !1058
  %and204 = and i32 %add203, 7, !dbg !1059
  %add205 = add nsw i32 %shl202, %and204, !dbg !1060
  %idxprom206 = sext i32 %add205 to i64, !dbg !1048
  %arrayidx207 = getelementptr inbounds i8, i8* %163, i64 %idxprom206, !dbg !1048
  %168 = load i8, i8* %arrayidx207, align 1, !dbg !1048
  %conv208 = zext i8 %168 to i32, !dbg !1048
  store i32 %conv208, i32* %c, align 4, !dbg !1061
  %169 = load i16, i16* %m, align 2, !dbg !1062
  %conv209 = zext i16 %169 to i32, !dbg !1062
  %and210 = and i32 %conv209, 512, !dbg !1064
  %tobool211 = icmp ne i32 %and210, 0, !dbg !1064
  br i1 %tobool211, label %if.then212, label %if.else239, !dbg !1065
  %170 = load i32, i32* %u, align 4, !dbg !1066
  %add213 = add nsw i32 128, %170, !dbg !1068
  %171 = load i32, i32* %c, align 4, !dbg !1069
  %add214 = add nsw i32 %add213, %171, !dbg !1070
  %conv215 = trunc i32 %add214 to i8, !dbg !1071
  %conv216 = zext i8 %conv215 to i16, !dbg !1071
  %172 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1072
  %__ctype_toupper_data217 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %172, i32 0, i32 5, !dbg !1073
  %173 = load i32, i32* %u, align 4, !dbg !1074
  %add218 = add nsw i32 256, %173, !dbg !1075
  %idxprom219 = sext i32 %add218 to i64, !dbg !1072
  %arrayidx220 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data217, i64 0, i64 %idxprom219, !dbg !1072
  store i16 %conv216, i16* %arrayidx220, align 2, !dbg !1076
  %174 = load i32, i32* %u, align 4, !dbg !1077
  %add221 = add nsw i32 128, %174, !dbg !1079
  %conv222 = trunc i32 %add221 to i8, !dbg !1080
  %conv223 = sext i8 %conv222 to i32, !dbg !1081
  %cmp224 = icmp ne i32 %conv223, -1, !dbg !1082
  br i1 %cmp224, label %if.then226, label %if.end238, !dbg !1083
  %175 = load i32, i32* %u, align 4, !dbg !1084
  %add227 = add nsw i32 128, %175, !dbg !1086
  %176 = load i32, i32* %c, align 4, !dbg !1087
  %add228 = add nsw i32 %add227, %176, !dbg !1088
  %conv229 = trunc i32 %add228 to i8, !dbg !1089
  %conv230 = zext i8 %conv229 to i16, !dbg !1089
  %177 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1090
  %__ctype_toupper_data231 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %177, i32 0, i32 5, !dbg !1091
  %178 = load i32, i32* %u, align 4, !dbg !1092
  %add232 = add nsw i32 128, %178, !dbg !1093
  %conv233 = trunc i32 %add232 to i8, !dbg !1094
  %conv234 = sext i8 %conv233 to i32, !dbg !1095
  %add235 = add nsw i32 128, %conv234, !dbg !1096
  %idxprom236 = sext i32 %add235 to i64, !dbg !1090
  %arrayidx237 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data231, i64 0, i64 %idxprom236, !dbg !1090
  store i16 %conv230, i16* %arrayidx237, align 2, !dbg !1097
  br label %if.end238, !dbg !1098
  br label %if.end266, !dbg !1099
  %179 = load i32, i32* %u, align 4, !dbg !1100
  %add240 = add nsw i32 128, %179, !dbg !1102
  %180 = load i32, i32* %c, align 4, !dbg !1103
  %sub241 = sub nsw i32 %add240, %180, !dbg !1104
  %conv242 = trunc i32 %sub241 to i8, !dbg !1105
  %conv243 = zext i8 %conv242 to i16, !dbg !1105
  %181 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1106
  %__ctype_tolower_data244 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %181, i32 0, i32 4, !dbg !1107
  %182 = load i32, i32* %u, align 4, !dbg !1108
  %add245 = add nsw i32 256, %182, !dbg !1109
  %idxprom246 = sext i32 %add245 to i64, !dbg !1106
  %arrayidx247 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data244, i64 0, i64 %idxprom246, !dbg !1106
  store i16 %conv243, i16* %arrayidx247, align 2, !dbg !1110
  %183 = load i32, i32* %u, align 4, !dbg !1111
  %add248 = add nsw i32 128, %183, !dbg !1113
  %conv249 = trunc i32 %add248 to i8, !dbg !1114
  %conv250 = sext i8 %conv249 to i32, !dbg !1115
  %cmp251 = icmp ne i32 %conv250, -1, !dbg !1116
  br i1 %cmp251, label %if.then253, label %if.end265, !dbg !1117
  %184 = load i32, i32* %u, align 4, !dbg !1118
  %add254 = add nsw i32 128, %184, !dbg !1120
  %185 = load i32, i32* %c, align 4, !dbg !1121
  %sub255 = sub nsw i32 %add254, %185, !dbg !1122
  %conv256 = trunc i32 %sub255 to i8, !dbg !1123
  %conv257 = zext i8 %conv256 to i16, !dbg !1123
  %186 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1124
  %__ctype_tolower_data258 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %186, i32 0, i32 4, !dbg !1125
  %187 = load i32, i32* %u, align 4, !dbg !1126
  %add259 = add nsw i32 128, %187, !dbg !1127
  %conv260 = trunc i32 %add259 to i8, !dbg !1128
  %conv261 = sext i8 %conv260 to i32, !dbg !1129
  %add262 = add nsw i32 128, %conv261, !dbg !1130
  %idxprom263 = sext i32 %add262 to i64, !dbg !1124
  %arrayidx264 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data258, i64 0, i64 %idxprom263, !dbg !1124
  store i16 %conv257, i16* %arrayidx264, align 2, !dbg !1131
  br label %if.end265, !dbg !1132
  br label %if.end266
  br label %if.end267, !dbg !1133
  br label %for.inc268, !dbg !1134
  %188 = load i32, i32* %u, align 4, !dbg !1135
  %inc269 = add nsw i32 %188, 1, !dbg !1135
  store i32 %inc269, i32* %u, align 4, !dbg !1135
  br label %for.cond142, !dbg !1136, !llvm.loop !1137
  %189 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1139
  %__ctype_b_data271 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %189, i32 0, i32 3, !dbg !1140
  %arraydecay272 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data271, i64 0, i64 0, !dbg !1139
  %add.ptr273 = getelementptr inbounds i16, i16* %arraydecay272, i64 128, !dbg !1141
  %190 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1142
  %__ctype_b = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %190, i32 0, i32 0, !dbg !1143
  store i16* %add.ptr273, i16** %__ctype_b, align 8, !dbg !1144
  %191 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1145
  %__ctype_tolower_data274 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %191, i32 0, i32 4, !dbg !1146
  %arraydecay275 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data274, i64 0, i64 0, !dbg !1145
  %add.ptr276 = getelementptr inbounds i16, i16* %arraydecay275, i64 128, !dbg !1147
  %192 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1148
  %__ctype_tolower = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %192, i32 0, i32 1, !dbg !1149
  store i16* %add.ptr276, i16** %__ctype_tolower, align 8, !dbg !1150
  %193 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1151
  %__ctype_toupper_data277 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %193, i32 0, i32 5, !dbg !1152
  %arraydecay278 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data277, i64 0, i64 0, !dbg !1151
ns in stack: Num.485
//Instructions in stack: Num.486
//Instructions in stack: Num.487
//Instructions in stack: Num.488
//Instructions in stack: Num.489
//Instructions in stack: Num.490
//Instructions in stack: Num.491
//Instructions in stack: Num.492
//Instructions in stack: Num.493
//Instructions in stack: Num.494
//Instructions in stack: Num.495
//Instructions in stack: Num.496
//Instructions in stack: Num.497
//Instructions in stack: Num.498
//Instructions in stack: Num.499
//Instructions in stack: Num.500
//Instructions in stack: Num.501
//Instructions in stack: Num.502
//Instructions in stack: Num.503
//Instructions in stack: Num.504
//Instructions in stack: Num.505
//Instructions in stack: Num.506
//Instructions in stack: Num.507
//Instructions in stack: Num.508
//Instructions in stack: Num.509
//Instructions in stack: Num.510
//Instructions in stack: Num.511
//Instructions in stack: Num.512
//Instructions in stack: Num.513
//Instructions in stack: Num.514
//Instructions in stack: Num.515
//Instructions in stack: Num.516
//Instructions in stack: Num.517
//Instructions in stack: Num.518
//Instructions in stack: Num.519
//Instructions in stack: Num.520
//Instructions in stack: Num.521
//Instructions in stack: Num.522
//Instructions in stack: Num.523
//Instructions in stack: Num.524
//Instructions in stack: Num.525
//Instructions in stack: Num.526
//Instructions in stack: Num.527
//Instructions in stack: Num.528
//Instructions in stack: Num.529
//Instructions in stack: Num.530
//Instructions in stack: Num.531
//Instructions in stack: Num.532
//Instructions in stack: Num.533
//Instructions in stack: Num.534
//Instructions in stack: Num.535
//Instructions in stack: Num.536
//Instructions in stack: Num.537
//Instructions in stack: Num.538
//Instructions in stack: Num.539
//Instructions in stack: Num.540
//Instructions in stack: Num.541
//Instructions in stack: Num.542
//Instructions in stack: Num.543
//Instructions in stack: Num.544
//Instructions in stack: Num.545
//Instructions in stack: Num.546
//Instructions in stack: Num.547
//Instructions in stack: Num.548
//Instructions in stack: Num.549
//Instructions in stack: Num.550
//Instructions in stack: Num.551
//Instructions in stack: Num.552
//Instructions in stack: Num.553
//Instructions in stack: Num.554
//Instructions in stack: Num.555
//Instructions in stack: Num.556
//Instructions in stack: Num.557
//Instructions in stack: Num.558
//Instructions in stack: Num.559
//Instructions in stack: Num.560
//Instructions in stack: Num.561
//Instructions in stack: Num.562
//Instructions in stack: Num.563
//Instructions in stack: Num.564
//Instructions in stack: Num.565
//Instructions in stack: Num.566
//Instructions in stack: Num.567
//Instructions in stack: Num.568
//Instructions in stack: Num.569
//Instructions in stack: Num.570
//Instructions in stack: Num.571
//Instructions in stack: Num.572
//Instructions in stack: Num.573
//Instructions in stack: Num.574
//Instructions in stack: Num.575
//Instructions in stack: Num.576
//Instructions in stack: Num.577
//Instructions in stack: Num.578
//Instructions in stack: Num.579
//Instructions in stack: Num.580
//Instructions in stack: Num.581
//Instructions in stack: Num.582
//Instructions in stack: Num.583
//Instructions in stack: Num.584
//Instructions in stack: Num.585
//Instructions in stack: Num.586
//Instructions in stack: Num.587
//Instructions in stack: Num.588
//Instructions in stack: Num.589
//Instructions in stack: Num.590
//Instructions in stack: Num.591
//Instructions in stack: Num.592
//Instructions in stack: Num.593
//Instructions in stack: Num.594
//Instructions in stack: Num.595
//Instructions in stack: Num.596
//Instructions in stack: Num.597
//Instructions in stack: Num.598
//Instructions in stack: Num.599
//Instructions in stack: Num.600
//Instructions in stack: Num.601
//Instructions in stack: Num.602
//Instructions in stack: Num.603
//Instructions in stack: Num.604
//Instructions in stack: Num.605
//Instructions in stack: Num.606
//Instructions in stack: Num.607
//Instructions in stack: Num.608
//Instructions i  %add.ptr279 = getelementptr inbounds i16, i16* %arraydecay278, i64 128, !dbg !1153
  %194 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1154
  %__ctype_toupper = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %194, i32 0, i32 2, !dbg !1155
  store i16* %add.ptr279, i16** %__ctype_toupper, align 8, !dbg !1156
  br label %if.end280
  %195 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1157
  %outdigit_length = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %195, i32 0, i32 11, !dbg !1158
  %arraydecay281 = getelementptr inbounds [10 x i8], [10 x i8]* %outdigit_length, i64 0, i64 0, !dbg !1157
  store i8* %arraydecay281, i8** %d, align 8, !dbg !1159
  %196 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1160
  %outdigit0_mb = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %196, i32 0, i32 28, !dbg !1161
  store i8** %outdigit0_mb, i8*** %x, align 8, !dbg !1162
  store i32 0, i32* %c, align 4, !dbg !1163
  br label %for.cond282, !dbg !1165
  %197 = load i32, i32* %c, align 4, !dbg !1166
  %cmp283 = icmp slt i32 %197, 10, !dbg !1168
  br i1 %cmp283, label %for.body285, label %for.end294, !dbg !1169
  %198 = load i8**, i8*** %x, align 8, !dbg !1170
  %199 = load i32, i32* %c, align 4, !dbg !1172
  %idxprom286 = sext i32 %199 to i64, !dbg !1170
  %arrayidx287 = getelementptr inbounds i8*, i8** %198, i64 %idxprom286, !dbg !1170
  %200 = load i8*, i8** %arrayidx287, align 8, !dbg !1170
  %call288 = call i64 @strlen(i8* %200) #12, !dbg !1173
  %conv289 = trunc i64 %call288 to i8, !dbg !1173
  %201 = load i8*, i8** %d, align 8, !dbg !1174
  %202 = load i32, i32* %c, align 4, !dbg !1175
  %idxprom290 = sext i32 %202 to i64, !dbg !1176
  %arrayidx291 = getelementptr inbounds i8, i8* %201, i64 %idxprom290, !dbg !1176
  store i8 %conv289, i8* %arrayidx291, align 1, !dbg !1177
  br label %for.inc292, !dbg !1178
  %203 = load i32, i32* %c, align 4, !dbg !1179
  %inc293 = add nsw i32 %203, 1, !dbg !1179
  store i32 %inc293, i32* %c, align 4, !dbg !1179
  br label %for.cond282, !dbg !1180, !llvm.loop !1181
  br label %if.end312, !dbg !1183
  %204 = load i32, i32* %i, align 4, !dbg !1184
  %cmp296 = icmp eq i32 %204, 1, !dbg !1186
  br i1 %cmp296, label %if.then298, label %if.end311, !dbg !1187
  %205 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1188
  %decimal_point_wc = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %205, i32 0, i32 24, !dbg !1190
  %206 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1191
  %decimal_point = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %206, i32 0, i32 39, !dbg !1192
  %207 = load i8*, i8** %decimal_point, align 8, !dbg !1192
  %208 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1193
  %call299 = call i32 @__locale_mbrtowc_l(i32* %decimal_point_wc, i8* %207, %struct.__uclibc_locale_struct.160* %208) #10, !dbg !1194
  %209 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1195
  %decimal_point_len = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %209, i32 0, i32 26, !dbg !1196
  store i32 %call299, i32* %decimal_point_len, align 8, !dbg !1197
  %210 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1198
  %grouping = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %210, i32 0, i32 41, !dbg !1200
  %211 = load i8*, i8** %grouping, align 8, !dbg !1200
  %212 = load i8, i8* %211, align 1, !dbg !1201
  %tobool300 = icmp ne i8 %212, 0, !dbg !1201
  br i1 %tobool300, label %if.then301, label %if.end310, !dbg !1202
  %213 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1203
  %thousands_sep_wc = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %213, i32 0, i32 25, !dbg !1205
  %214 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1206
  %thousands_sep = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %214, i32 0, i32 40, !dbg !1207
  %215 = load i8*, i8** %thousands_sep, align 8, !dbg !1207
  %216 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1208
  %call302 = call i32 @__locale_mbrtowc_l(i32* %thousands_sep_wc, i8* %215, %struct.__uclibc_locale_struct.160* %216) #10, !dbg !1209
  %217 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1210
  %thousands_sep_len = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %217, i32 0, i32 27, !dbg !1211
  store i32 %call302, i32* %thousands_sep_len, align 4, !dbg !1212
  %218 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1213
  %thousands_sep_len303 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %218, i32 0, i32 27, !dbg !1215
  %219 = load i32, i32* %thousands_sep_len303, align 4, !dbg !1215
  %cmp304 = icmp eq i32 %219, 0, !dbg !1216
  br i1 %cmp304, label %if.then306, label %if.end309, !dbg !1217
  %220 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1218
  %thousands_sep307 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %220, i32 0, i32 40, !dbg !1220
  %221 = load i8*, i8** %thousands_sep307, align 8, !dbg !1220
  %222 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1221
  %grouping308 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %222, i32 0, i32 41, !dbg !1222
  store i8* %221, i8** %grouping308, align 8, !dbg !1223
  br label %if.end309, !dbg !1224
  br label %if.end310, !dbg !1225
  br label %if.end311, !dbg !1226
  br label %if.end312
  br label %if.end313, !dbg !1227
  %223 = load i32, i32* %i, align 4, !dbg !1228
  %inc314 = add nsw i32 %223, 1, !dbg !1228
  store i32 %inc314, i32* %i, align 4, !dbg !1228
  %224 = load i8*, i8** %p.addr, align 8, !dbg !1229
  %add.ptr315 = getelementptr inbounds i8, i8* %224, i64 2, !dbg !1229
  store i8* %add.ptr315, i8** %p.addr, align 8, !dbg !1229
  %225 = load i8*, i8** %s, align 8, !dbg !1230
  %add.ptr316 = getelementptr inbounds i8, i8* %225, i64 2, !dbg !1230
  store i8* %add.ptr316, i8** %s, align 8, !dbg !1230
  br label %do.cond, !dbg !1231
  %226 = load i32, i32* %i, align 4, !dbg !1232
  %cmp317 = icmp slt i32 %226, 6, !dbg !1233
  br i1 %cmp317, label %do.body, label %do.end, !dbg !1231, !llvm.loop !1234
  store i32 1, i32* %retval, align 4, !dbg !1236
  br label %return, !dbg !1236
  %227 = load i32, i32* %retval, align 4, !dbg !1237
  ret i32 %227, !dbg !1237
  %s.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !2692, metadata !DIExpression()), !dbg !2693
  call void @llvm.dbg.declare(metadata i8** %p, metadata !2694, metadata !DIExpression()), !dbg !2695
  %0 = load i8*, i8** %s.addr, align 8, !dbg !664
  store i8* %0, i8** %p, align 8, !dbg !666
  br label %for.cond, !dbg !667
  %1 = load i8*, i8** %p, align 8, !dbg !668
  %2 = load i8, i8* %1, align 1, !dbg !670
  %tobool = icmp ne i8 %2, 0, !dbg !671
  br i1 %tobool, label %for.body, label %for.end, !dbg !671
  br label %for.inc, !dbg !671
  %3 = load i8*, i8** %p, align 8, !dbg !672
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !672
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !672
  br label %for.cond, !dbg !673, !llvm.loop !674
  %4 = load i8*, i8** %p, align 8, !dbg !676
  %5 = load i8*, i8** %s.addr, align 8, !dbg !677
  %sub.ptr.lhs.cast = ptrtoint i8* %4 to i64, !dbg !678
  %sub.ptr.rhs.cast = ptrtoint i8* %5 to i64, !dbg !678
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !678
  ret i64 %sub.ptr.sub, !dbg !679
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
n stack: Num.609
//Instructions in stack: Num.610
//Instructions in stack: Num.611
//Instructions in stack: Num.612
//Instructions in stack: Num.613
//Instructions in stack: Num.614
//Instructions in stack: Num.615
//Instructions in stack: Num.616
//Instructions in stack: Num.617
//Instructions in stack: Num.618
//Instructions in stack: Num.619
//Instructions in stack: Num.620
//Instructions in stack: Num.621
//Instructions in stack: Num.622
//Instructions in stack: Num.623
//Instructions in stack: Num.624
//Instructions in stack: Num.625
//Instructions in stack: Num.626
//Instructions in stack: Num.627
//Instructions in stack: Num.628
//Instructions in stack: Num.629
//Instructions in stack: Num.630
//Instructions in stack: Num.631
//Instructions in stack: Num.632
//Instructions in stack: Num.633
//Instructions in stack: Num.634
//Instructions in stack: Num.635
//Instructions in stack: Num.636
//Instructions in stack: Num.637
//Instructions in stack: Num.638
//Instructions in stack: Num.639
//Instructions in stack: Num.640
//Instructions in stack: Num.641
//Instructions in stack: Num.642
//Instructions in stack: Num.643
//Instructions in stack: Num.644
//Instructions in stack: Num.645
//Instructions in stack: Num.646
//Instructions in stack: Num.647
//Instructions in stack: Num.648
//Instructions in stack: Num.649
//Instructions in stack: Num.650
//Instructions in stack: Num.651
//Instructions in stack: Num.652
//Instructions in stack: Num.653
//Instructions in stack: Num.654
//Instructions in stack: Num.655
//Instructions in stack: Num.656
//Instructions in stack: Num.657
//Instructions in stack: Num.658
//Instructions in stack: Num.659
//Instructions in stack: Num.660
//Instructions in stack: Num.661
//Instructions in stack: Num.662
//Instructions in stack: Num.663
//Instructions in stack: Num.664
//Instructions in stack: Num.665
//Instructions in stack: Num.666
//Instructions in stack: Num.667
//Instructions in stack: Num.668
//Instructions in stack: Num.669
//Instructions in stack: Num.670
//Instructions in stack: Num.671
//Instructions in stack: Num.672
//Instructions in stack: Num.673
//Instructions in stack: Num.674
//Instructions in stack: Num.675
//Instructions in stack: Num.676
//Instructions in stack: Num.677
//Instructions in stack: Num.678
//Instructions in stack: Num.679
//Instructions in stack: Num.680
//Instructions in stack: Num.681
//Instructions in stack: Num.682
//Instructions in stack: Num.683
//Instructions in stack: Num.684
//Instructions in stack: Num.685
//Instructions in stack: Num.686
//Instructions in stack: Num.687
//Instructions in stack: Num.688
//Instructions in stack: Num.689
//Instructions in stack: Num.690
//Instructions in stack: Num.691
//Instructions in stack: Num.692
//Instructions in stack: Num.693
//Instructions in stack: Num.694
//Instructions in stack: Num.695
//Instructions in stack: Num.696
//Instructions in stack: Num.697
//Instructions in stack: Num.698
//Instructions in stack: Num.699
//Instructions in stack: Num.700
//Instructions in stack: Num.701
//Instructions in stack: Num.702
//Instructions in stack: Num.703
//Instructions in stack: Num.704
//Instructions in stack: Num.705
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766

//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Inst  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  %0 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !657
  %tobool = icmp ne i32 %0, 0, !dbg !657
  br i1 %tobool, label %if.then, label %if.end, !dbg !659
  br label %if.end4, !dbg !660
  %1 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  %inc = add nsw i32 %1, 1, !dbg !661
  store i32 %inc, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  store i64 4096, i64* @__pagesize, align 8, !dbg !662
  br i1 true, label %if.then1, label %if.end2, !dbg !663
  call void @_locale_init() #10, !dbg !664
  br label %if.end2, !dbg !664
  br i1 true, label %if.then3, label %if.end4, !dbg !666
  call void @_stdio_init() #10, !dbg !667
  br label %if.end4, !dbg !667
  ret void, !dbg !669
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** @__global_locale, align 8, !dbg !658
  call void @_locale_init_l(%struct.__uclibc_locale_struct.160* %0) #10, !dbg !659
  ret void, !dbg !660
  %base.addr = alloca %struct.__uclibc_locale_struct.160*, align 8
  store %struct.__uclibc_locale_struct.160* %base, %struct.__uclibc_locale_struct.160** %base.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__uclibc_locale_struct.160** %base.addr, metadata !1973, metadata !DIExpression()), !dbg !1974
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !662
  %cur_locale = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %0, i32 0, i32 6, !dbg !663
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale, i64 0, i64 0, !dbg !662
  %call = call i8* @memset(i8* %arraydecay, i32 0, i64 14) #10, !dbg !664
  %1 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !665
  %cur_locale1 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %1, i32 0, i32 6, !dbg !666
  %arrayidx = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale1, i64 0, i64 0, !dbg !665
  store i8 35, i8* %arrayidx, align 8, !dbg !667
  %2 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !668
  %category_item_count = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %2, i32 0, i32 8, !dbg !669
  %arraydecay2 = getelementptr inbounds [6 x i8], [6 x i8]* %category_item_count, i64 0, i64 0, !dbg !668
  %3 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !670
  %lc_common_item_offsets_LEN = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %3, i32 0, i32 29, !dbg !671
  %arraydecay3 = getelementptr inbounds [6 x i8], [6 x i8]* %lc_common_item_offsets_LEN, i64 0, i64 0, !dbg !670
  %call4 = call i8* @memcpy(i8* %arraydecay2, i8* %arraydecay3, i64 6) #10, !dbg !672
  %4 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !673
  %category_item_count5 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %4, i32 0, i32 8, !dbg !674
  %arrayidx6 = getelementptr inbounds [6 x i8], [6 x i8]* %category_item_count5, i64 0, i64 0, !dbg !673
  %5 = load i8, i8* %arrayidx6, align 2, !dbg !675
  %inc = add i8 %5, 1, !dbg !675
  store i8 %inc, i8* %arrayidx6, align 2, !dbg !675
  %6 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !676
  %category_offsets = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %6, i32 0, i32 7, !dbg !677
  %arrayidx7 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets, i64 0, i64 0, !dbg !676
  store i16 2488, i16* %arrayidx7, align 2, !dbg !678
  %7 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !679
  %category_offsets8 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %7, i32 0, i32 7, !dbg !680
  %arrayidx9 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets8, i64 0, i64 1, !dbg !679
  store i16 2576, i16* %arrayidx9, align 2, !dbg !681
  %8 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !682
  %category_offsets10 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %8, i32 0, i32 7, !dbg !683
  %arrayidx11 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets10, i64 0, i64 2, !dbg !682
  store i16 2600, i16* %arrayidx11, align 2, !dbg !684
  %9 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !685
  %category_offsets12 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %9, i32 0, i32 7, !dbg !686
  %arrayidx13 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets12, i64 0, i64 3, !dbg !685
  store i16 2776, i16* %arrayidx13, align 2, !dbg !687
  %10 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !688
  %category_offsets14 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %10, i32 0, i32 7, !dbg !689
  %arrayidx15 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets14, i64 0, i64 5, !dbg !688
  store i16 3176, i16* %arrayidx15, align 2, !dbg !690
  %11 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !691
  %tbl8ctype = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %11, i32 0, i32 0, !dbg !692
  %12 = bitcast [420 x i8]* %tbl8ctype to i8*, !dbg !693
  %13 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !694
  %tbl8ctype16 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %13, i32 0, i32 13, !dbg !695
  store i8* %12, i8** %tbl8ctype16, align 8, !dbg !696
ructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//  %14 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !697
  %tbl8uplow = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %14, i32 0, i32 1, !dbg !698
  %15 = bitcast [504 x i8]* %tbl8uplow to i8*, !dbg !699
  %16 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !700
  %tbl8uplow17 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %16, i32 0, i32 15, !dbg !701
  store i8* %15, i8** %tbl8uplow17, align 8, !dbg !702
  %17 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !703
  %tbl8c2wc = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %17, i32 0, i32 2, !dbg !704
  %18 = bitcast [1760 x i16]* %tbl8c2wc to i16*, !dbg !705
  %19 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !706
  %tbl8c2wc18 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %19, i32 0, i32 17, !dbg !707
  store i16* %18, i16** %tbl8c2wc18, align 8, !dbg !708
  %20 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !709
  %tbl8wc2c = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %20, i32 0, i32 3, !dbg !710
  %21 = bitcast [4528 x i8]* %tbl8wc2c to i8*, !dbg !711
  %22 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !712
  %tbl8wc2c19 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %22, i32 0, i32 19, !dbg !713
  store i8* %21, i8** %tbl8wc2c19, align 8, !dbg !714
  %23 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !715
  %tblwctype = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %23, i32 0, i32 4, !dbg !716
  %24 = bitcast [3604 x i8]* %tblwctype to i8*, !dbg !717
  %25 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !718
  %tblwctype20 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %25, i32 0, i32 21, !dbg !719
  store i8* %24, i8** %tblwctype20, align 8, !dbg !720
  %26 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !721
  %tblwuplow = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %26, i32 0, i32 5, !dbg !722
  %27 = bitcast [1680 x i8]* %tblwuplow to i8*, !dbg !723
  %28 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !724
  %tblwuplow21 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %28, i32 0, i32 22, !dbg !725
  store i8* %27, i8** %tblwuplow21, align 8, !dbg !726
  %29 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !727
  %tblwuplow_diff = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %29, i32 0, i32 6, !dbg !728
  %30 = bitcast [196 x i16]* %tblwuplow_diff to i16*, !dbg !729
  %31 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !730
  %tblwuplow_diff22 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %31, i32 0, i32 23, !dbg !731
  store i16* %30, i16** %tblwuplow_diff22, align 8, !dbg !732
  %32 = load i16*, i16** @__C_ctype_b, align 8, !dbg !733
  %33 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !734
  %__ctype_b = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %33, i32 0, i32 0, !dbg !735
  store i16* %32, i16** %__ctype_b, align 8, !dbg !736
  %34 = load i16*, i16** @__C_ctype_tolower, align 8, !dbg !737
  %35 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !738
  %__ctype_tolower = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %35, i32 0, i32 1, !dbg !739
  store i16* %34, i16** %__ctype_tolower, align 8, !dbg !740
  %36 = load i16*, i16** @__C_ctype_toupper, align 8, !dbg !741
  %37 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !742
  %__ctype_toupper = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %37, i32 0, i32 2, !dbg !743
  store i16* %36, i16** %__ctype_toupper, align 8, !dbg !744
  %38 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !745
  %code2flag = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %38, i32 0, i32 20, !dbg !746
  store i16* getelementptr inbounds ([16 x i16], [16 x i16]* @__code2flag, i64 0, i64 0), i16** %code2flag, align 8, !dbg !747
  %39 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !748
  %call23 = call i32 @_locale_set_l(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), %struct.__uclibc_locale_struct.160* %39) #11, !dbg !749
  ret void, !dbg !750
  %retval = alloca i32, align 4
  %p.addr = alloca i8*, align 8
  %base.addr = alloca %struct.__uclibc_locale_struct.160*, align 8
  %x = alloca i8**, align 8
  %s = alloca i8*, align 8
  %stp = alloca i64*, align 8
  %r = alloca i8*, align 8
  %io = alloca i16*, align 8
  %ii = alloca i16*, align 8
  %d = alloca i8*, align 8
  %row = alloca i32, align 4
  %crow = alloca i32, align 4
  %len = alloca i32, align 4
  %c = alloca i32, align 4
  %i = alloca i32, align 4
  %newcol = alloca %struct.__collate_t.159, align 8
  %c8b = alloca %struct.__codeset_8_bit_t.161*, align 8
  %u = alloca i32, align 4
  %m = alloca i16, align 2
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !1060, metadata !DIExpression()), !dbg !1061
  store %struct.__uclibc_locale_struct.160* %base, %struct.__uclibc_locale_struct.160** %base.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__uclibc_locale_struct.160** %base.addr, metadata !1062, metadata !DIExpression()), !dbg !1063
  call void @llvm.dbg.declare(metadata i8*** %x, metadata !1064, metadata !DIExpression()), !dbg !1065
  call void @llvm.dbg.declare(metadata i8** %s, metadata !1066, metadata !DIExpression()), !dbg !1067
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !668
  %cur_locale = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %0, i32 0, i32 6, !dbg !669
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale, i64 0, i64 0, !dbg !668
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 1, !dbg !670
  store i8* %add.ptr, i8** %s, align 8, !dbg !667
  call void @llvm.dbg.declare(metadata i64** %stp, metadata !1071, metadata !DIExpression()), !dbg !1074
  call void @llvm.dbg.declare(metadata i8** %r, metadata !1075, metadata !DIExpression()), !dbg !1076
  call void @llvm.dbg.declare(metadata i16** %io, metadata !1077, metadata !DIExpression()), !dbg !1078
  call void @llvm.dbg.declare(metadata i16** %ii, metadata !1079, metadata !DIExpression()), !dbg !1080
  call void @llvm.dbg.declare(metadata i8** %d, metadata !1081, metadata !DIExpression()), !dbg !1082
  call void @llvm.dbg.declare(metadata i32* %row, metadata !1083, metadata !DIExpression()), !dbg !1084
  call void @llvm.dbg.declare(metadata i32* %crow, metadata !1085, metadata !DIExpression()), !dbg !1086
  call void @llvm.dbg.declare(metadata i32* %len, metadata !1087, metadata !DIExpression()), !dbg !1088
  call void @llvm.dbg.declare(metadata i32* %c, metadata !1089, metadata !DIExpression()), !dbg !1090
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1091, metadata !DIExpression()), !dbg !1092
  store i32 0, i32* %i, align 4, !dbg !692
  call void @llvm.dbg.declare(metadata %struct.__collate_t.159* %newcol, metadata !1093, metadata !DIExpression()), !dbg !1094
  %1 = load i8*, i8** %p.addr, align 8, !dbg !695
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i32 1, !dbg !695
  store i8* %incdec.ptr, i8** %p.addr, align 8, !dbg !695
  %index2weight = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %newcol, i32 0, i32 23, !dbg !696
  store i16* null, i16** %index2weight, align 8, !dbg !697
  %2 = load i8*, i8** %p.addr, align 8, !dbg !698
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 8, !dbg !698
  %3 = load i8, i8* %arrayidx, align 1, !dbg !698
  %conv = zext i8 %3 to i32, !dbg !698
  %4 = load i8*, i8** %s, align 8, !dbg !700
  %arrayidx1 = getelementptr inbounds i8, i8* %4, i64 8, !dbg !700
  %5 = load i8, i8* %arrayidx1, align 1, !dbg !700
  %conv2 = zext i8 %5 to i32, !dbg !700
  %cmp = icmp ne i32 %conv, %conv2, !dbg !701
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !702
  %6 = load i8*, i8** %p.addr, align 8, !dbg !703
  %arrayidx4 = getelementptr inbounds i8, i8* %6, i64 9, !dbg !703
  %7 = load i8, i8* %arrayidx4, align 1, !dbg !703
  %conv5 = zext i8 %7 to i32, !dbg !703
  %8 = load i8*, i8** %s, align 8, !dbg !704
  %arrayidx6 = getelementptr inbounds i8, i8* %8, i64 9, !dbg !704
  %9 = load i8, i8* %arrayidx6, align 1, !dbg !704
  %conv7 = zext i8 %9 to i32, !dbg !704
  %cmp8 = icmp ne i32 %conv5, %conv7, !dbg !705
  br i1 %cmp8, label %if.then, label %if.end22, !dbg !706
  %10 = load i8*, i8** %p.addr, align 8, !dbg !707
  %11 = load i8, i8* %10, align 1, !dbg !709
  %conv10 = zext i8 %11 to i32, !dbg !709
  %and = and i32 %conv10, 127, !dbg !710
  %shl = shl i32 %and, 7, !dbg !711
  %12 = load i8*, i8** %p.addr, align 8, !dbg !712
  %arrayidx11 = getelementptr inbounds i8, i8* %12, i64 1, !dbg !712
Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instru  %13 = load i8, i8* %arrayidx11, align 1, !dbg !712
  %conv12 = zext i8 %13 to i32, !dbg !712
  %and13 = and i32 %conv12, 127, !dbg !713
  %add = add nsw i32 %shl, %and13, !dbg !714
  store i32 %add, i32* %row, align 4, !dbg !715
  %14 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !716
  %locales = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %14, i32 0, i32 31, !dbg !718
  %15 = load i32, i32* %row, align 4, !dbg !719
  %mul = mul nsw i32 9, %15, !dbg !720
  %add14 = add nsw i32 %mul, 3, !dbg !721
  %add15 = add nsw i32 %add14, 4, !dbg !722
  %idxprom = sext i32 %add15 to i64, !dbg !716
  %arrayidx16 = getelementptr inbounds [2826 x i8], [2826 x i8]* %locales, i64 0, i64 %idxprom, !dbg !716
  %16 = load i8, i8* %arrayidx16, align 1, !dbg !716
  %conv17 = zext i8 %16 to i32, !dbg !716
  %call = call i32 @init_cur_collate(i32 %conv17, %struct.__collate_t.159* %newcol) #10, !dbg !723
  %tobool = icmp ne i32 %call, 0, !dbg !723
  br i1 %tobool, label %if.end, label %if.then18, !dbg !724
  store i32 0, i32* %retval, align 4, !dbg !725
  br label %return, !dbg !725
  %17 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !727
  %collate = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %17, i32 0, i32 118, !dbg !728
  %index2weight19 = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %collate, i32 0, i32 23, !dbg !729
  %18 = load i16*, i16** %index2weight19, align 8, !dbg !729
  %19 = bitcast i16* %18 to i8*, !dbg !727
  call void @free(i8* %19) #11, !dbg !730
  %20 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !731
  %collate20 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %20, i32 0, i32 118, !dbg !732
  %21 = bitcast %struct.__collate_t.159* %collate20 to i8*, !dbg !733
  %22 = bitcast %struct.__collate_t.159* %newcol to i8*, !dbg !734
  %call21 = call i8* @memcpy(i8* %21, i8* %22, i64 112) #11, !dbg !735
  br label %if.end22, !dbg !736
  br label %do.body, !dbg !737
  %23 = load i8*, i8** %p.addr, align 8, !dbg !738
  %24 = load i8, i8* %23, align 1, !dbg !741
  %conv23 = zext i8 %24 to i32, !dbg !741
  %25 = load i8*, i8** %s, align 8, !dbg !742
  %26 = load i8, i8* %25, align 1, !dbg !743
  %conv24 = zext i8 %26 to i32, !dbg !743
  %cmp25 = icmp ne i32 %conv23, %conv24, !dbg !744
  br i1 %cmp25, label %if.then34, label %lor.lhs.false27, !dbg !745
  %27 = load i8*, i8** %p.addr, align 8, !dbg !746
  %arrayidx28 = getelementptr inbounds i8, i8* %27, i64 1, !dbg !746
  %28 = load i8, i8* %arrayidx28, align 1, !dbg !746
  %conv29 = zext i8 %28 to i32, !dbg !746
  %29 = load i8*, i8** %s, align 8, !dbg !747
  %arrayidx30 = getelementptr inbounds i8, i8* %29, i64 1, !dbg !747
  %30 = load i8, i8* %arrayidx30, align 1, !dbg !747
  %conv31 = zext i8 %30 to i32, !dbg !747
  %cmp32 = icmp ne i32 %conv29, %conv31, !dbg !748
  br i1 %cmp32, label %if.then34, label %if.end313, !dbg !749
  %31 = load i8*, i8** %p.addr, align 8, !dbg !750
  %32 = load i8, i8* %31, align 1, !dbg !752
  %conv35 = zext i8 %32 to i32, !dbg !752
  %and36 = and i32 %conv35, 127, !dbg !753
  %shl37 = shl i32 %and36, 7, !dbg !754
  %33 = load i8*, i8** %p.addr, align 8, !dbg !755
  %arrayidx38 = getelementptr inbounds i8, i8* %33, i64 1, !dbg !755
  %34 = load i8, i8* %arrayidx38, align 1, !dbg !755
  %conv39 = zext i8 %34 to i32, !dbg !755
  %and40 = and i32 %conv39, 127, !dbg !756
  %add41 = add nsw i32 %shl37, %and40, !dbg !757
  store i32 %add41, i32* %row, align 4, !dbg !758
  %35 = load i8*, i8** %p.addr, align 8, !dbg !759
  %36 = load i8, i8* %35, align 1, !dbg !760
  %37 = load i8*, i8** %s, align 8, !dbg !761
  store i8 %36, i8* %37, align 1, !dbg !762
  %38 = load i8*, i8** %p.addr, align 8, !dbg !763
  %arrayidx42 = getelementptr inbounds i8, i8* %38, i64 1, !dbg !763
  %39 = load i8, i8* %arrayidx42, align 1, !dbg !763
  %40 = load i8*, i8** %s, align 8, !dbg !764
  %arrayidx43 = getelementptr inbounds i8, i8* %40, i64 1, !dbg !764
  store i8 %39, i8* %arrayidx43, align 1, !dbg !765
  %41 = load i32, i32* %i, align 4, !dbg !766
  %cmp44 = icmp ne i32 %41, 4, !dbg !768
  br i1 %cmp44, label %land.lhs.true, label %if.end92, !dbg !769
  %42 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !770
  %lc_common_item_offsets_LEN = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %42, i32 0, i32 29, !dbg !771
  %43 = load i32, i32* %i, align 4, !dbg !772
  %idxprom46 = sext i32 %43 to i64, !dbg !770
  %arrayidx47 = getelementptr inbounds [6 x i8], [6 x i8]* %lc_common_item_offsets_LEN, i64 0, i64 %idxprom46, !dbg !770
  %44 = load i8, i8* %arrayidx47, align 1, !dbg !770
  %conv48 = zext i8 %44 to i32, !dbg !770
  store i32 %conv48, i32* %len, align 4, !dbg !773
  %cmp49 = icmp ne i32 %conv48, 0, !dbg !774
  br i1 %cmp49, label %if.then51, label %if.end92, !dbg !775
  %45 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !776
  %locales52 = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %45, i32 0, i32 31, !dbg !778
  %46 = load i32, i32* %row, align 4, !dbg !779
  %mul53 = mul nsw i32 9, %46, !dbg !780
  %add54 = add nsw i32 %mul53, 3, !dbg !781
  %47 = load i32, i32* %i, align 4, !dbg !782
  %add55 = add nsw i32 %add54, %47, !dbg !783
  %idxprom56 = sext i32 %add55 to i64, !dbg !776
  %arrayidx57 = getelementptr inbounds [2826 x i8], [2826 x i8]* %locales52, i64 0, i64 %idxprom56, !dbg !776
  %48 = load i8, i8* %arrayidx57, align 1, !dbg !776
  %conv58 = zext i8 %48 to i32, !dbg !776
  %49 = load i32, i32* %len, align 4, !dbg !784
  %mul59 = mul nsw i32 %conv58, %49, !dbg !785
  store i32 %mul59, i32* %crow, align 4, !dbg !786
  %50 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !787
  %51 = bitcast %struct.__uclibc_locale_struct.160* %50 to i8*, !dbg !788
  %52 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !789
  %category_offsets = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %52, i32 0, i32 7, !dbg !790
  %53 = load i32, i32* %i, align 4, !dbg !791
  %idxprom60 = sext i32 %53 to i64, !dbg !789
  %arrayidx61 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets, i64 0, i64 %idxprom60, !dbg !789
  %54 = load i16, i16* %arrayidx61, align 2, !dbg !789
  %conv62 = zext i16 %54 to i32, !dbg !789
  %idx.ext = sext i32 %conv62 to i64, !dbg !792
  %add.ptr63 = getelementptr inbounds i8, i8* %51, i64 %idx.ext, !dbg !792
  %55 = bitcast i8* %add.ptr63 to i8**, !dbg !793
  store i8** %55, i8*** %x, align 8, !dbg !794
  %56 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !795
  %lc_common_tbl_offsets = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %56, i32 0, i32 30, !dbg !796
  %arraydecay64 = getelementptr inbounds [24 x i64], [24 x i64]* %lc_common_tbl_offsets, i64 0, i64 0, !dbg !795
  %57 = load i32, i32* %i, align 4, !dbg !797
  %mul65 = mul nsw i32 4, %57, !dbg !798
  %idx.ext66 = sext i32 %mul65 to i64, !dbg !799
  %add.ptr67 = getelementptr inbounds i64, i64* %arraydecay64, i64 %idx.ext66, !dbg !799
  store i64* %add.ptr67, i64** %stp, align 8, !dbg !800
  %58 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !801
  %59 = bitcast %struct.__locale_mmap_t.162* %58 to i8*, !dbg !802
  %60 = load i64*, i64** %stp, align 8, !dbg !803
  %61 = load i64, i64* %60, align 8, !dbg !804
ctions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.190
//Instructions in stack: Num.191
//Instructions in stack: Num.192
//Instructions in stack: Num.193
//Instructions in stack: Num.194
//Instructions in stack: Num.195
//Instructions in stack: Num.196
//Instructions in stack: Num.197
//Instructions in stack: Num.198
//Ins  %add.ptr68 = getelementptr inbounds i8, i8* %59, i64 %61, !dbg !805
  store i8* %add.ptr68, i8** %r, align 8, !dbg !806
  %62 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !807
  %63 = bitcast %struct.__locale_mmap_t.162* %62 to i8*, !dbg !808
  %64 = load i64*, i64** %stp, align 8, !dbg !809
  %incdec.ptr69 = getelementptr inbounds i64, i64* %64, i32 1, !dbg !809
  store i64* %incdec.ptr69, i64** %stp, align 8, !dbg !809
  %65 = load i64, i64* %incdec.ptr69, align 8, !dbg !810
  %add.ptr70 = getelementptr inbounds i8, i8* %63, i64 %65, !dbg !811
  %66 = bitcast i8* %add.ptr70 to i16*, !dbg !812
  store i16* %66, i16** %io, align 8, !dbg !813
  %67 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !814
  %68 = bitcast %struct.__locale_mmap_t.162* %67 to i8*, !dbg !815
  %69 = load i64*, i64** %stp, align 8, !dbg !816
  %incdec.ptr71 = getelementptr inbounds i64, i64* %69, i32 1, !dbg !816
  store i64* %incdec.ptr71, i64** %stp, align 8, !dbg !816
  %70 = load i64, i64* %incdec.ptr71, align 8, !dbg !817
  %add.ptr72 = getelementptr inbounds i8, i8* %68, i64 %70, !dbg !818
  %71 = bitcast i8* %add.ptr72 to i16*, !dbg !819
  store i16* %71, i16** %ii, align 8, !dbg !820
  %72 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !821
  %73 = bitcast %struct.__locale_mmap_t.162* %72 to i8*, !dbg !822
  %74 = load i64*, i64** %stp, align 8, !dbg !823
  %incdec.ptr73 = getelementptr inbounds i64, i64* %74, i32 1, !dbg !823
  store i64* %incdec.ptr73, i64** %stp, align 8, !dbg !823
  %75 = load i64, i64* %incdec.ptr73, align 8, !dbg !824
  %add.ptr74 = getelementptr inbounds i8, i8* %73, i64 %75, !dbg !825
  store i8* %add.ptr74, i8** %d, align 8, !dbg !826
  store i32 0, i32* %c, align 4, !dbg !827
  br label %for.cond, !dbg !829
  %76 = load i32, i32* %c, align 4, !dbg !830
  %77 = load i32, i32* %len, align 4, !dbg !832
  %cmp75 = icmp slt i32 %76, %77, !dbg !833
  br i1 %cmp75, label %for.body, label %for.end, !dbg !834
  %78 = load i8*, i8** %d, align 8, !dbg !835
  %79 = load i16*, i16** %ii, align 8, !dbg !837
  %80 = load i8*, i8** %r, align 8, !dbg !838
  %81 = load i32, i32* %crow, align 4, !dbg !839
  %82 = load i32, i32* %c, align 4, !dbg !840
  %add77 = add nsw i32 %81, %82, !dbg !841
  %idxprom78 = sext i32 %add77 to i64, !dbg !838
  %arrayidx79 = getelementptr inbounds i8, i8* %80, i64 %idxprom78, !dbg !838
  %83 = load i8, i8* %arrayidx79, align 1, !dbg !838
  %conv80 = zext i8 %83 to i32, !dbg !838
  %84 = load i16*, i16** %io, align 8, !dbg !842
  %85 = load i32, i32* %c, align 4, !dbg !843
  %idxprom81 = sext i32 %85 to i64, !dbg !842
  %arrayidx82 = getelementptr inbounds i16, i16* %84, i64 %idxprom81, !dbg !842
  %86 = load i16, i16* %arrayidx82, align 2, !dbg !842
  %conv83 = zext i16 %86 to i32, !dbg !842
  %add84 = add nsw i32 %conv80, %conv83, !dbg !844
  %idxprom85 = sext i32 %add84 to i64, !dbg !837
  %arrayidx86 = getelementptr inbounds i16, i16* %79, i64 %idxprom85, !dbg !837
  %87 = load i16, i16* %arrayidx86, align 2, !dbg !837
  %conv87 = zext i16 %87 to i32, !dbg !837
  %idx.ext88 = sext i32 %conv87 to i64, !dbg !845
  %add.ptr89 = getelementptr inbounds i8, i8* %78, i64 %idx.ext88, !dbg !845
  %88 = load i8**, i8*** %x, align 8, !dbg !846
  %89 = load i32, i32* %c, align 4, !dbg !847
  %idx.ext90 = sext i32 %89 to i64, !dbg !848
  %add.ptr91 = getelementptr inbounds i8*, i8** %88, i64 %idx.ext90, !dbg !848
  store i8* %add.ptr89, i8** %add.ptr91, align 8, !dbg !849
  br label %for.inc, !dbg !850
  %90 = load i32, i32* %c, align 4, !dbg !851
  %inc = add nsw i32 %90, 1, !dbg !851
  store i32 %inc, i32* %c, align 4, !dbg !851
  br label %for.cond, !dbg !852, !llvm.loop !853
  br label %if.end92, !dbg !855
  %91 = load i32, i32* %i, align 4, !dbg !856
  %cmp93 = icmp eq i32 %91, 0, !dbg !858
  br i1 %cmp93, label %if.then95, label %if.else295, !dbg !859
  %92 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !860
  %locales96 = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %92, i32 0, i32 31, !dbg !862
  %93 = load i32, i32* %row, align 4, !dbg !863
  %mul97 = mul nsw i32 9, %93, !dbg !864
  %add98 = add nsw i32 %mul97, 2, !dbg !865
  %idxprom99 = sext i32 %add98 to i64, !dbg !860
  %arrayidx100 = getelementptr inbounds [2826 x i8], [2826 x i8]* %locales96, i64 0, i64 %idxprom99, !dbg !860
  %94 = load i8, i8* %arrayidx100, align 1, !dbg !860
  %conv101 = zext i8 %94 to i32, !dbg !860
  store i32 %conv101, i32* %c, align 4, !dbg !866
  %95 = load i32, i32* %c, align 4, !dbg !867
  %cmp102 = icmp sle i32 %95, 2, !dbg !869
  br i1 %cmp102, label %if.then104, label %if.else112, !dbg !870
  %96 = load i32, i32* %c, align 4, !dbg !871
  %cmp105 = icmp eq i32 %96, 2, !dbg !874
  br i1 %cmp105, label %if.then107, label %if.else, !dbg !875
  %97 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !876
  %codeset = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %97, i32 0, i32 38, !dbg !878
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @utf8, i64 0, i64 0), i8** %codeset, align 8, !dbg !879
  %98 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !880
  %encoding = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %98, i32 0, i32 9, !dbg !881
  store i8 1, i8* %encoding, align 8, !dbg !882
  %99 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !883
  %mb_cur_max = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %99, i32 0, i32 10, !dbg !884
  store i8 6, i8* %mb_cur_max, align 1, !dbg !885
  br label %if.end111, !dbg !886
  %100 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !887
  %codeset108 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %100, i32 0, i32 38, !dbg !889
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @ascii, i64 0, i64 0), i8** %codeset108, align 8, !dbg !890
  %101 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !891
  %encoding109 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %101, i32 0, i32 9, !dbg !892
  store i8 0, i8* %encoding109, align 8, !dbg !893
  %102 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !894
  %mb_cur_max110 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %102, i32 0, i32 10, !dbg !895
  store i8 1, i8* %mb_cur_max110, align 1, !dbg !896
  br label %if.end111
  br label %if.end280, !dbg !897
  call void @llvm.dbg.declare(metadata %struct.__codeset_8_bit_t.161** %c8b, metadata !1298, metadata !DIExpression()), !dbg !1310
  %103 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !911
  %codeset_list = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %103, i32 0, i32 35, !dbg !911
  %arraydecay113 = getelementptr inbounds [255 x i8], [255 x i8]* %codeset_list, i64 0, i64 0, !dbg !911
  store i8* %arraydecay113, i8** %r, align 8, !dbg !912
  %104 = load i8*, i8** %r, align 8, !dbg !913
  %105 = load i8*, i8** %r, align 8, !dbg !914
  %106 = load i32, i32* %c, align 4, !dbg !915
  %sub = sub nsw i32 %106, 3, !dbg !915
  store i32 %sub, i32* %c, align 4, !dbg !915
  %idxprom114 = sext i32 %sub to i64, !dbg !914
  %arrayidx115 = getelementptr inbounds i8, i8* %105, i64 %idxprom114, !dbg !914
  %107 = load i8, i8* %arrayidx115, align 1, !dbg !914
  %conv116 = zext i8 %107 to i32, !dbg !914
  %idx.ext117 = sext i32 %conv116 to i64, !dbg !916
  %add.ptr118 = getelementptr inbounds i8, i8* %104, i64 %idx.ext117, !dbg !916
tructions in stack: Num.199
//Instructions in stack: Num.200
//Instructions in stack: Num.201
//Instructions in stack: Num.202
//Instructions in stack: Num.203
//Instructions in stack: Num.204
//Instructions in stack: Num.205
//Instructions in stack: Num.206
//Instructions in stack: Num.207
//Instructions in stack: Num.208
//Instructions in stack: Num.209
//Instructions in stack: Num.210
//Instructions in stack: Num.211
//Instructions in stack: Num.212
//Instructions in stack: Num.213
//Instructions in stack: Num.214
//Instructions in stack: Num.215
//Instructions in stack: Num.216
//Instructions in stack: Num.217
//Instructions in stack: Num.218
//Instructions in stack: Num.219
//Instructions in stack: Num.220
//Instructions in stack: Num.221
//Instructions in stack: Num.222
//Instructions in stack: Num.223
//Instructions in stack: Num.224
//Instructions in stack: Num.225
//Instructions in stack: Num.226
//Instructions in stack: Num.227
//Instructions in stack: Num.228
//Instructions in stack: Num.229
//Instructions in stack: Num.230
//Instructions in stack: Num.231
//Instructions in stack: Num.232
//Instructions in stack: Num.233
//Instructions in stack: Num.234
//Instructions in stack: Num.235
//Instructions in stack: Num.236
//Instructions in stack: Num.237
//Instructions in stack: Num.238
//Instructions in stack: Num.239
//Instructions in stack: Num.240
//Instructions in stack: Num.241
//Instructions in stack: Num.242
//Instructions in stack: Num.243
//Instructions in stack: Num.244
//Instructions in stack: Num.245
//Instructions in stack: Num.246
//Instructions in stack: Num.247
//Instructions in stack: Num.248
//Instructions in stack: Num.249
//Instructions in stack: Num.250
//Instructions in stack: Num.251
//Instructions in stack: Num.252
//Instructions in stack: Num.253
//Instructions in stack: Num.254
//Instructions in stack: Num.255
//Instructions in stack: Num.256
//Instructions in stack: Num.257
//Instructions in stack: Num.258
//Instructions in stack: Num.259
//Instructions in stack: Num.260
//Instructions in stack: Num.261
//Instructions in stack: Num.262
//Instructions in stack: Num.263
//Instructions in stack: Num.264
//Instructions in stack: Num.265
//Instructions in stack: Num.266
//Instructions in stack: Num.267
//Instructions in stack: Num.268
//Instructions in stack: Num.269
//Instructions in stack: Num.270
//Instructions in stack: Num.271
//Instructions in stack: Num.272
//Instructions in stack: Num.273
//Instructions in stack: Num.274
//Instructions in stack: Num.275
//Instructions in stack: Num.276
//Instructions in stack: Num.277
//Instructions in stack: Num.278
//Instructions in stack: Num.279
//Instructions in stack: Num.280
//Instructions in stack: Num.281
//Instructions in stack: Num.282
//Instructions in stack: Num.283
//Instructions in stack: Num.284
//Instructions in stack: Num.285
//Instructions in stack: Num.286
//Instructions in stack: Num.287
//Instructions in stack: Num.288
//Instructions in stack: Num.289
//Instructions in stack: Num.290
//Instructions in stack: Num.291
//Instructions in stack: Num.292
//Instructions in stack: Num.293
//Instructions in stack: Num.294
//Instructions in stack: Num.295
//Instructions in stack: Num.296
//Instructions in stack: Num.297
//Instructions in stack: Num.298
//Instructions in stack: Num.299
//Instructions in stack: Num.300
//Instructions in stack: Num.301
//Instructions in stack: Num.302
//Instructions in stack: Num.303
//Instructions in stack: Num.304
//Instructions in stack: Num.305
//Instructions in stack: Num.306
//Instructions in stack: Num.307
//Instructions in stack: Num.308
//Instructions in stack: Num.309
//Instructions in stack: Num.310
//Instructions in stack: Num.311
//Instructions in stack: Num.312
//Instructions in stack: Num.313
//Instructions in stack: Num.314
//Instructions in stack: Num.315
//Instructions in stack: Num.316
//Instructions in stack: Num.317
//Instructions in stack: Num.318
//Instructions in stack: Num.319
//Instructions in stack: Num.320
//Instructions in stack: Num.321
//Instructions in stack: Num.322
//Instruc  %108 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !917
  %codeset119 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %108, i32 0, i32 38, !dbg !918
  store i8* %add.ptr118, i8** %codeset119, align 8, !dbg !919
  %109 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !920
  %encoding120 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %109, i32 0, i32 9, !dbg !921
  store i8 2, i8* %encoding120, align 8, !dbg !922
  %110 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !923
  %mb_cur_max121 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %110, i32 0, i32 10, !dbg !924
  store i8 1, i8* %mb_cur_max121, align 1, !dbg !925
  %111 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !926
  %codeset_8_bit = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %111, i32 0, i32 12, !dbg !927
  %arraydecay122 = getelementptr inbounds [23 x %struct.__codeset_8_bit_t.161], [23 x %struct.__codeset_8_bit_t.161]* %codeset_8_bit, i64 0, i64 0, !dbg !926
  %112 = load i32, i32* %c, align 4, !dbg !928
  %idx.ext123 = sext i32 %112 to i64, !dbg !929
  %add.ptr124 = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %arraydecay122, i64 %idx.ext123, !dbg !929
  store %struct.__codeset_8_bit_t.161* %add.ptr124, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !930
  %113 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !931
  %idx8ctype = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %113, i32 0, i32 0, !dbg !932
  %arraydecay125 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8ctype, i64 0, i64 0, !dbg !931
  %114 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !933
  %idx8ctype126 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %114, i32 0, i32 12, !dbg !934
  store i8* %arraydecay125, i8** %idx8ctype126, align 8, !dbg !935
  %115 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !936
  %idx8uplow = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %115, i32 0, i32 1, !dbg !937
  %arraydecay127 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8uplow, i64 0, i64 0, !dbg !936
  %116 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !938
  %idx8uplow128 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %116, i32 0, i32 14, !dbg !939
  store i8* %arraydecay127, i8** %idx8uplow128, align 8, !dbg !940
  %117 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !941
  %idx8c2wc = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %117, i32 0, i32 2, !dbg !942
  %arraydecay129 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8c2wc, i64 0, i64 0, !dbg !941
  %118 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !943
  %idx8c2wc130 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %118, i32 0, i32 16, !dbg !944
  store i8* %arraydecay129, i8** %idx8c2wc130, align 8, !dbg !945
  %119 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !946
  %idx8wc2c = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %119, i32 0, i32 3, !dbg !947
  %arraydecay131 = getelementptr inbounds [38 x i8], [38 x i8]* %idx8wc2c, i64 0, i64 0, !dbg !946
  %120 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !948
  %idx8wc2c132 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %120, i32 0, i32 18, !dbg !949
  store i8* %arraydecay131, i8** %idx8wc2c132, align 8, !dbg !950
  %121 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !951
  %__ctype_b_data = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %121, i32 0, i32 3, !dbg !952
  %arraydecay133 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data, i64 0, i64 0, !dbg !951
  %122 = bitcast i16* %arraydecay133 to i8*, !dbg !951
  %123 = load i16*, i16** @__C_ctype_b, align 8, !dbg !953
  %add.ptr134 = getelementptr inbounds i16, i16* %123, i64 -128, !dbg !954
  %124 = bitcast i16* %add.ptr134 to i8*, !dbg !953
  %call135 = call i8* @memcpy(i8* %122, i8* %124, i64 768) #11, !dbg !955
  %125 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !956
  %__ctype_tolower_data = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %125, i32 0, i32 4, !dbg !957
  %arraydecay136 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data, i64 0, i64 0, !dbg !956
  %126 = bitcast i16* %arraydecay136 to i8*, !dbg !956
  %127 = load i16*, i16** @__C_ctype_tolower, align 8, !dbg !958
  %add.ptr137 = getelementptr inbounds i16, i16* %127, i64 -128, !dbg !959
  %128 = bitcast i16* %add.ptr137 to i8*, !dbg !958
  %call138 = call i8* @memcpy(i8* %126, i8* %128, i64 768) #11, !dbg !960
  %129 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !961
  %__ctype_toupper_data = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %129, i32 0, i32 5, !dbg !962
  %arraydecay139 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data, i64 0, i64 0, !dbg !961
  %130 = bitcast i16* %arraydecay139 to i8*, !dbg !961
  %131 = load i16*, i16** @__C_ctype_toupper, align 8, !dbg !963
  %add.ptr140 = getelementptr inbounds i16, i16* %131, i64 -128, !dbg !964
  %132 = bitcast i16* %add.ptr140 to i8*, !dbg !963
  %call141 = call i8* @memcpy(i8* %130, i8* %132, i64 768) #11, !dbg !965
  call void @llvm.dbg.declare(metadata i32* %u, metadata !1366, metadata !DIExpression()), !dbg !1368
  call void @llvm.dbg.declare(metadata i16* %m, metadata !1369, metadata !DIExpression()), !dbg !1370
  store i32 0, i32* %u, align 4, !dbg !971
  br label %for.cond142, !dbg !973
  %133 = load i32, i32* %u, align 4, !dbg !974
  %cmp143 = icmp slt i32 %133, 128, !dbg !976
  br i1 %cmp143, label %for.body145, label %for.end270, !dbg !977
  %134 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !978
  %tbl8ctype = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %134, i32 0, i32 13, !dbg !980
  %135 = load i8*, i8** %tbl8ctype, align 8, !dbg !980
  %136 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !981
  %idx8ctype146 = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %136, i32 0, i32 0, !dbg !982
  %137 = load i32, i32* %u, align 4, !dbg !983
  %shr = ashr i32 %137, 3, !dbg !984
  %idxprom147 = sext i32 %shr to i64, !dbg !981
  %arrayidx148 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8ctype146, i64 0, i64 %idxprom147, !dbg !981
  %138 = load i8, i8* %arrayidx148, align 1, !dbg !981
  %conv149 = zext i8 %138 to i32, !dbg !985
  %shl150 = shl i32 %conv149, 2, !dbg !986
  %139 = load i32, i32* %u, align 4, !dbg !987
  %and151 = and i32 %139, 7, !dbg !988
  %shr152 = ashr i32 %and151, 1, !dbg !989
  %add153 = add nsw i32 %shl150, %shr152, !dbg !990
  %idxprom154 = sext i32 %add153 to i64, !dbg !978
  %arrayidx155 = getelementptr inbounds i8, i8* %135, i64 %idxprom154, !dbg !978
  %140 = load i8, i8* %arrayidx155, align 1, !dbg !978
  %conv156 = zext i8 %140 to i32, !dbg !978
  store i32 %conv156, i32* %c, align 4, !dbg !991
  %141 = load i32, i32* %u, align 4, !dbg !992
  %and157 = and i32 %141, 1, !dbg !993
  %tobool158 = icmp ne i32 %and157, 0, !dbg !993
  br i1 %tobool158, label %cond.true, label %cond.false, !dbg !994
  %142 = load i32, i32* %c, align 4, !dbg !995
  %shr159 = ashr i32 %142, 4, !dbg !996
  br label %cond.end, !dbg !994
  %143 = load i32, i32* %c, align 4, !dbg !997
  %and160 = and i32 %143, 15, !dbg !998
  br label %cond.end, !dbg !994
  %cond = phi i32 [ %shr159, %cond.true ], [ %and160, %cond.false ], !dbg !994
  store i32 %cond, i32* %c, align 4, !dbg !999
  %144 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1000
  %code2flag = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %144, i32 0, i32 20, !dbg !1001
  %145 = load i16*, i16** %code2flag, align 8, !dbg !1001
  %146 = load i32, i32* %c, align 4, !dbg !1002
  %idxprom161 = sext i32 %146 to i64, !dbg !1000
  %arrayidx162 = getelementptr inbounds i16, i16* %145, i64 %idxprom161, !dbg !1000
  %147 = load i16, i16* %arrayidx162, align 2, !dbg !1000
  store i16 %147, i16* %m, align 2, !dbg !1003
  %148 = load i16, i16* %m, align 2, !dbg !1004
  %149 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1005
  %__ctype_b_data163 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %149, i32 0, i32 3, !dbg !1006
  %150 = load i32, i32* %u, align 4, !dbg !1007
  %add164 = add nsw i32 256, %150, !dbg !1008
  %idxprom165 = sext i32 %add164 to i64, !dbg !1005
  %arrayidx166 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data163, i64 0, i64 %idxprom165, !dbg !1005
  store i16 %148, i16* %arrayidx166, align 2, !dbg !1009
  %151 = load i32, i32* %u, align 4, !dbg !1010
  %add167 = add nsw i32 128, %151, !dbg !1012
  %conv168 = trunc i32 %add167 to i8, !dbg !1013
  %conv169 = sext i8 %conv168 to i32, !dbg !1014
tions in stack: Num.323
//Instructions in stack: Num.324
//Instructions in stack: Num.325
//Instructions in stack: Num.326
//Instructions in stack: Num.327
//Instructions in stack: Num.328
//Instructions in stack: Num.329
//Instructions in stack: Num.330
//Instructions in stack: Num.331
//Instructions in stack: Num.332
//Instructions in stack: Num.333
//Instructions in stack: Num.334
//Instructions in stack: Num.335
//Instructions in stack: Num.336
//Instructions in stack: Num.337
//Instructions in stack: Num.338
//Instructions in stack: Num.339
//Instructions in stack: Num.340
//Instructions in stack: Num.341
//Instructions in stack: Num.342
//Instructions in stack: Num.343
//Instructions in stack: Num.344
//Instructions in stack: Num.345
//Instructions in stack: Num.346
//Instructions in stack: Num.347
//Instructions in stack: Num.348
//Instructions in stack: Num.349
//Instructions in stack: Num.350
//Instructions in stack: Num.351
//Instructions in stack: Num.352
//Instructions in stack: Num.353
//Instructions in stack: Num.354
//Instructions in stack: Num.355
//Instructions in stack: Num.356
//Instructions in stack: Num.357
//Instructions in stack: Num.358
//Instructions in stack: Num.359
//Instructions in stack: Num.360
//Instructions in stack: Num.361
//Instructions in stack: Num.362
//Instructions in stack: Num.363
//Instructions in stack: Num.364
//Instructions in stack: Num.365
//Instructions in stack: Num.366
//Instructions in stack: Num.367
//Instructions in stack: Num.368
//Instructions in stack: Num.369
//Instructions in stack: Num.370
//Instructions in stack: Num.371
//Instructions in stack: Num.372
//Instructions in stack: Num.373
//Instructions in stack: Num.374
//Instructions in stack: Num.375
//Instructions in stack: Num.376
//Instructions in stack: Num.377
//Instructions in stack: Num.378
//Instructions in stack: Num.379
//Instructions in stack: Num.380
//Instructions in stack: Num.381
//Instructions in stack: Num.382
//Instructions in stack: Num.383
//Instructions in stack: Num.384
//Instructions in stack: Num.385
//Instructions in stack: Num.386
//Instructions in stack: Num.387
//Instructions in stack: Num.388
//Instructions in stack: Num.389
//Instructions in stack: Num.390
//Instructions in stack: Num.391
//Instructions in stack: Num.392
//Instructions in stack: Num.393
//Instructions in stack: Num.394
//Instructions in stack: Num.395
//Instructions in stack: Num.396
//Instructions in stack: Num.397
//Instructions in stack: Num.398
//Instructions in stack: Num.399
//Instructions in stack: Num.400
//Instructions in stack: Num.401
//Instructions in stack: Num.402
//Instructions in stack: Num.403
//Instructions in stack: Num.404
//Instructions in stack: Num.405
//Instructions in stack: Num.406
//Instructions in stack: Num.407
//Instructions in stack: Num.408
//Instructions in stack: Num.409
//Instructions in stack: Num.410
//Instructions in stack: Num.411
//Instructions in stack: Num.412
//Instructions in stack: Num.413
//Instructions in stack: Num.414
//Instructions in stack: Num.415
//Instructions in stack: Num.416
//Instructions in stack: Num.417
//Instructions in stack: Num.418
//Instructions in stack: Num.419
//Instructions in stack: Num.420
//Instructions in stack: Num.421
//Instructions in stack: Num.422
//Instructions in stack: Num.423
//Instructions in stack: Num.424
//Instructions in stack: Num.425
//Instructions in stack: Num.426
//Instructions in stack: Num.427
//Instructions in stack: Num.428
//Instructions in stack: Num.429
//Instructions in stack: Num.430
//Instructions in stack: Num.431
//Instructions in stack: Num.432
//Instructions in stack: Num.433
//Instructions in stack: Num.434
//Instructions in stack: Num.435
//Instructions in stack: Num.436
//Instructions in stack: Num.437
//Instructions in stack: Num.438
//Instructions in stack: Num.439
//Instructions in stack: Num.440
//Instructions in stack: Num.441
//Instructions in stack: Num.442
//Instructions in stack: Num.443
//Instructions in stack: Num.444
//Instructions in stack: Num.445
//Instructions in stack: Num.446
//Instruction  %cmp170 = icmp ne i32 %conv169, -1, !dbg !1015
  br i1 %cmp170, label %if.then172, label %if.end180, !dbg !1016
  %152 = load i16, i16* %m, align 2, !dbg !1017
  %153 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1019
  %__ctype_b_data173 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %153, i32 0, i32 3, !dbg !1020
  %154 = load i32, i32* %u, align 4, !dbg !1021
  %add174 = add nsw i32 128, %154, !dbg !1022
  %conv175 = trunc i32 %add174 to i8, !dbg !1023
  %conv176 = sext i8 %conv175 to i32, !dbg !1024
  %add177 = add nsw i32 128, %conv176, !dbg !1025
  %idxprom178 = sext i32 %add177 to i64, !dbg !1019
  %arrayidx179 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data173, i64 0, i64 %idxprom178, !dbg !1019
  store i16 %152, i16* %arrayidx179, align 2, !dbg !1026
  br label %if.end180, !dbg !1027
  %155 = load i32, i32* %u, align 4, !dbg !1028
  %add181 = add nsw i32 128, %155, !dbg !1029
  %conv182 = trunc i32 %add181 to i16, !dbg !1030
  %156 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1031
  %__ctype_tolower_data183 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %156, i32 0, i32 4, !dbg !1032
  %157 = load i32, i32* %u, align 4, !dbg !1033
  %add184 = add nsw i32 256, %157, !dbg !1034
  %idxprom185 = sext i32 %add184 to i64, !dbg !1031
  %arrayidx186 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data183, i64 0, i64 %idxprom185, !dbg !1031
  store i16 %conv182, i16* %arrayidx186, align 2, !dbg !1035
  %158 = load i32, i32* %u, align 4, !dbg !1036
  %add187 = add nsw i32 128, %158, !dbg !1037
  %conv188 = trunc i32 %add187 to i16, !dbg !1038
  %159 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1039
  %__ctype_toupper_data189 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %159, i32 0, i32 5, !dbg !1040
  %160 = load i32, i32* %u, align 4, !dbg !1041
  %add190 = add nsw i32 256, %160, !dbg !1042
  %idxprom191 = sext i32 %add190 to i64, !dbg !1039
  %arrayidx192 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data189, i64 0, i64 %idxprom191, !dbg !1039
  store i16 %conv188, i16* %arrayidx192, align 2, !dbg !1043
  %161 = load i16, i16* %m, align 2, !dbg !1044
  %conv193 = zext i16 %161 to i32, !dbg !1044
  %and194 = and i32 %conv193, 768, !dbg !1046
  %tobool195 = icmp ne i32 %and194, 0, !dbg !1046
  br i1 %tobool195, label %if.then196, label %if.end267, !dbg !1047
  %162 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1048
  %tbl8uplow = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %162, i32 0, i32 15, !dbg !1050
  %163 = load i8*, i8** %tbl8uplow, align 8, !dbg !1050
  %164 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !1051
  %idx8uplow197 = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %164, i32 0, i32 1, !dbg !1052
  %165 = load i32, i32* %u, align 4, !dbg !1053
  %shr198 = ashr i32 %165, 3, !dbg !1054
  %idxprom199 = sext i32 %shr198 to i64, !dbg !1051
  %arrayidx200 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8uplow197, i64 0, i64 %idxprom199, !dbg !1051
  %166 = load i8, i8* %arrayidx200, align 1, !dbg !1051
  %conv201 = zext i8 %166 to i32, !dbg !1055
  %shl202 = shl i32 %conv201, 3, !dbg !1056
  %167 = load i32, i32* %u, align 4, !dbg !1057
  %add203 = add nsw i32 128, %167, !dbg !1058
  %and204 = and i32 %add203, 7, !dbg !1059
  %add205 = add nsw i32 %shl202, %and204, !dbg !1060
  %idxprom206 = sext i32 %add205 to i64, !dbg !1048
  %arrayidx207 = getelementptr inbounds i8, i8* %163, i64 %idxprom206, !dbg !1048
  %168 = load i8, i8* %arrayidx207, align 1, !dbg !1048
  %conv208 = zext i8 %168 to i32, !dbg !1048
  store i32 %conv208, i32* %c, align 4, !dbg !1061
  %169 = load i16, i16* %m, align 2, !dbg !1062
  %conv209 = zext i16 %169 to i32, !dbg !1062
  %and210 = and i32 %conv209, 512, !dbg !1064
  %tobool211 = icmp ne i32 %and210, 0, !dbg !1064
  br i1 %tobool211, label %if.then212, label %if.else239, !dbg !1065
  %170 = load i32, i32* %u, align 4, !dbg !1066
  %add213 = add nsw i32 128, %170, !dbg !1068
  %171 = load i32, i32* %c, align 4, !dbg !1069
  %add214 = add nsw i32 %add213, %171, !dbg !1070
  %conv215 = trunc i32 %add214 to i8, !dbg !1071
  %conv216 = zext i8 %conv215 to i16, !dbg !1071
  %172 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1072
  %__ctype_toupper_data217 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %172, i32 0, i32 5, !dbg !1073
  %173 = load i32, i32* %u, align 4, !dbg !1074
  %add218 = add nsw i32 256, %173, !dbg !1075
  %idxprom219 = sext i32 %add218 to i64, !dbg !1072
  %arrayidx220 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data217, i64 0, i64 %idxprom219, !dbg !1072
  store i16 %conv216, i16* %arrayidx220, align 2, !dbg !1076
  %174 = load i32, i32* %u, align 4, !dbg !1077
  %add221 = add nsw i32 128, %174, !dbg !1079
  %conv222 = trunc i32 %add221 to i8, !dbg !1080
  %conv223 = sext i8 %conv222 to i32, !dbg !1081
  %cmp224 = icmp ne i32 %conv223, -1, !dbg !1082
  br i1 %cmp224, label %if.then226, label %if.end238, !dbg !1083
  %175 = load i32, i32* %u, align 4, !dbg !1084
  %add227 = add nsw i32 128, %175, !dbg !1086
  %176 = load i32, i32* %c, align 4, !dbg !1087
  %add228 = add nsw i32 %add227, %176, !dbg !1088
  %conv229 = trunc i32 %add228 to i8, !dbg !1089
  %conv230 = zext i8 %conv229 to i16, !dbg !1089
  %177 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1090
  %__ctype_toupper_data231 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %177, i32 0, i32 5, !dbg !1091
  %178 = load i32, i32* %u, align 4, !dbg !1092
  %add232 = add nsw i32 128, %178, !dbg !1093
  %conv233 = trunc i32 %add232 to i8, !dbg !1094
  %conv234 = sext i8 %conv233 to i32, !dbg !1095
  %add235 = add nsw i32 128, %conv234, !dbg !1096
  %idxprom236 = sext i32 %add235 to i64, !dbg !1090
  %arrayidx237 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data231, i64 0, i64 %idxprom236, !dbg !1090
  store i16 %conv230, i16* %arrayidx237, align 2, !dbg !1097
  br label %if.end238, !dbg !1098
  br label %if.end266, !dbg !1099
  %179 = load i32, i32* %u, align 4, !dbg !1100
  %add240 = add nsw i32 128, %179, !dbg !1102
  %180 = load i32, i32* %c, align 4, !dbg !1103
  %sub241 = sub nsw i32 %add240, %180, !dbg !1104
  %conv242 = trunc i32 %sub241 to i8, !dbg !1105
  %conv243 = zext i8 %conv242 to i16, !dbg !1105
  %181 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1106
  %__ctype_tolower_data244 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %181, i32 0, i32 4, !dbg !1107
  %182 = load i32, i32* %u, align 4, !dbg !1108
  %add245 = add nsw i32 256, %182, !dbg !1109
  %idxprom246 = sext i32 %add245 to i64, !dbg !1106
  %arrayidx247 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data244, i64 0, i64 %idxprom246, !dbg !1106
  store i16 %conv243, i16* %arrayidx247, align 2, !dbg !1110
  %183 = load i32, i32* %u, align 4, !dbg !1111
  %add248 = add nsw i32 128, %183, !dbg !1113
  %conv249 = trunc i32 %add248 to i8, !dbg !1114
  %conv250 = sext i8 %conv249 to i32, !dbg !1115
  %cmp251 = icmp ne i32 %conv250, -1, !dbg !1116
  br i1 %cmp251, label %if.then253, label %if.end265, !dbg !1117
  %184 = load i32, i32* %u, align 4, !dbg !1118
  %add254 = add nsw i32 128, %184, !dbg !1120
  %185 = load i32, i32* %c, align 4, !dbg !1121
s in stack: Num.447
//Instructions in stack: Num.448
//Instructions in stack: Num.449
//Instructions in stack: Num.450
//Instructions in stack: Num.451
//Instructions in stack: Num.452
//Instructions in stack: Num.453
//Instructions in stack: Num.454
//Instructions in stack: Num.455
//Instructions in stack: Num.456
//Instructions in stack: Num.457
//Instructions in stack: Num.458
//Instructions in stack: Num.459
//Instructions in stack: Num.460
//Instructions in stack: Num.461
//Instructions in stack: Num.462
//Instructions in stack: Num.463
//Instructions in stack: Num.464
//Instructions in stack: Num.465
//Instructions in stack: Num.466
//Instructions in stack: Num.467
//Instructions in stack: Num.468
//Instructions in stack: Num.469
//Instructions in stack: Num.470
//Instructions in stack: Num.471
//Instructions in stack: Num.472
//Instructions in stack: Num.473
//Instructions in stack: Num.474
//Instructions in stack: Num.475
//Instructions in stack: Num.476
//Instructions in stack: Num.477
//Instructions in stack: Num.478
//Instructions in stack: Num.479
//Instructions in stack: Num.480
//Instructions in stack: Num.481
//Instructions in stack: Num.482
//Instructions in stack: Num.483
//Instructions in stack: Num.484
//Instructions in stack: Num.485
//Instructions in stack: Num.486
//Instructions in stack: Num.487
//Instructions in stack: Num.488
//Instructions in stack: Num.489
//Instructions in stack: Num.490
//Instructions in stack: Num.491
//Instructions in stack: Num.492
//Instructions in stack: Num.493
//Instructions in stack: Num.494
//Instructions in stack: Num.495
//Instructions in stack: Num.496
//Instructions in stack: Num.497
//Instructions in stack: Num.498
//Instructions in stack: Num.499
//Instructions in stack: Num.500
//Instructions in stack: Num.501
//Instructions in stack: Num.502
//Instructions in stack: Num.503
//Instructions in stack: Num.504
//Instructions in stack: Num.505
//Instructions in stack: Num.506
//Instructions in stack: Num.507
//Instructions in stack: Num.508
//Instructions in stack: Num.509
//Instructions in stack: Num.510
//Instructions in stack: Num.511
//Instructions in stack: Num.512
//Instructions in stack: Num.513
//Instructions in stack: Num.514
//Instructions in stack: Num.515
//Instructions in stack: Num.516
//Instructions in stack: Num.517
//Instructions in stack: Num.518
//Instructions in stack: Num.519
//Instructions in stack: Num.520
//Instructions in stack: Num.521
//Instructions in stack: Num.522
//Instructions in stack: Num.523
//Instructions in stack: Num.524
//Instructions in stack: Num.525
//Instructions in stack: Num.526
//Instructions in stack: Num.527
//Instructions in stack: Num.528
//Instructions in stack: Num.529
//Instructions in stack: Num.530
//Instructions in stack: Num.531
//Instructions in stack: Num.532
//Instructions in stack: Num.533
//Instructions in stack: Num.534
//Instructions in stack: Num.535
//Instructions in stack: Num.536
//Instructions in stack: Num.537
//Instructions in stack: Num.538
//Instructions in stack: Num.539
//Instructions in stack: Num.540
//Instructions in stack: Num.541
//Instructions in stack: Num.542
//Instructions in stack: Num.543
//Instructions in stack: Num.544
//Instructions in stack: Num.545
//Instructions in stack: Num.546
//Instructions in stack: Num.547
//Instructions in stack: Num.548
//Instructions in stack: Num.549
//Instructions in stack: Num.550
//Instructions in stack: Num.551
//Instructions in stack: Num.552
//Instructions in stack: Num.553
//Instructions in stack: Num.554
//Instructions in stack: Num.555
//Instructions in stack: Num.556
//Instructions in stack: Num.557
//Instructions in stack: Num.558
//Instructions in stack: Num.559
//Instructions in stack: Num.560
//Instructions in stack: Num.561
//Instructions in stack: Num.562
//Instructions in stack: Num.563
//Instructions in stack: Num.564
//Instructions in stack: Num.565
//Instructions in stack: Num.566
//Instructions in stack: Num.567
//Instructions in stack: Num.568
//Instructions in stack: Num.569
//Instructions in stack: Num.570
//Instructions in  %sub255 = sub nsw i32 %add254, %185, !dbg !1122
  %conv256 = trunc i32 %sub255 to i8, !dbg !1123
  %conv257 = zext i8 %conv256 to i16, !dbg !1123
  %186 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1124
  %__ctype_tolower_data258 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %186, i32 0, i32 4, !dbg !1125
  %187 = load i32, i32* %u, align 4, !dbg !1126
  %add259 = add nsw i32 128, %187, !dbg !1127
  %conv260 = trunc i32 %add259 to i8, !dbg !1128
  %conv261 = sext i8 %conv260 to i32, !dbg !1129
  %add262 = add nsw i32 128, %conv261, !dbg !1130
  %idxprom263 = sext i32 %add262 to i64, !dbg !1124
  %arrayidx264 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data258, i64 0, i64 %idxprom263, !dbg !1124
  store i16 %conv257, i16* %arrayidx264, align 2, !dbg !1131
  br label %if.end265, !dbg !1132
  br label %if.end266
  br label %if.end267, !dbg !1133
  br label %for.inc268, !dbg !1134
  %188 = load i32, i32* %u, align 4, !dbg !1135
  %inc269 = add nsw i32 %188, 1, !dbg !1135
  store i32 %inc269, i32* %u, align 4, !dbg !1135
  br label %for.cond142, !dbg !1136, !llvm.loop !1137
  %189 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1139
  %__ctype_b_data271 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %189, i32 0, i32 3, !dbg !1140
  %arraydecay272 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data271, i64 0, i64 0, !dbg !1139
  %add.ptr273 = getelementptr inbounds i16, i16* %arraydecay272, i64 128, !dbg !1141
  %190 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1142
  %__ctype_b = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %190, i32 0, i32 0, !dbg !1143
  store i16* %add.ptr273, i16** %__ctype_b, align 8, !dbg !1144
  %191 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1145
  %__ctype_tolower_data274 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %191, i32 0, i32 4, !dbg !1146
  %arraydecay275 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data274, i64 0, i64 0, !dbg !1145
  %add.ptr276 = getelementptr inbounds i16, i16* %arraydecay275, i64 128, !dbg !1147
  %192 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1148
  %__ctype_tolower = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %192, i32 0, i32 1, !dbg !1149
  store i16* %add.ptr276, i16** %__ctype_tolower, align 8, !dbg !1150
  %193 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1151
  %__ctype_toupper_data277 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %193, i32 0, i32 5, !dbg !1152
  %arraydecay278 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data277, i64 0, i64 0, !dbg !1151
  %add.ptr279 = getelementptr inbounds i16, i16* %arraydecay278, i64 128, !dbg !1153
  %194 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1154
  %__ctype_toupper = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %194, i32 0, i32 2, !dbg !1155
  store i16* %add.ptr279, i16** %__ctype_toupper, align 8, !dbg !1156
  br label %if.end280
  %195 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1157
  %outdigit_length = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %195, i32 0, i32 11, !dbg !1158
  %arraydecay281 = getelementptr inbounds [10 x i8], [10 x i8]* %outdigit_length, i64 0, i64 0, !dbg !1157
  store i8* %arraydecay281, i8** %d, align 8, !dbg !1159
  %196 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1160
  %outdigit0_mb = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %196, i32 0, i32 28, !dbg !1161
  store i8** %outdigit0_mb, i8*** %x, align 8, !dbg !1162
  store i32 0, i32* %c, align 4, !dbg !1163
  br label %for.cond282, !dbg !1165
  %197 = load i32, i32* %c, align 4, !dbg !1166
  %cmp283 = icmp slt i32 %197, 10, !dbg !1168
  br i1 %cmp283, label %for.body285, label %for.end294, !dbg !1169
  %198 = load i8**, i8*** %x, align 8, !dbg !1170
  %199 = load i32, i32* %c, align 4, !dbg !1172
  %idxprom286 = sext i32 %199 to i64, !dbg !1170
  %arrayidx287 = getelementptr inbounds i8*, i8** %198, i64 %idxprom286, !dbg !1170
  %200 = load i8*, i8** %arrayidx287, align 8, !dbg !1170
  %call288 = call i64 @strlen(i8* %200) #12, !dbg !1173
  %conv289 = trunc i64 %call288 to i8, !dbg !1173
  %201 = load i8*, i8** %d, align 8, !dbg !1174
  %202 = load i32, i32* %c, align 4, !dbg !1175
  %idxprom290 = sext i32 %202 to i64, !dbg !1176
  %arrayidx291 = getelementptr inbounds i8, i8* %201, i64 %idxprom290, !dbg !1176
  store i8 %conv289, i8* %arrayidx291, align 1, !dbg !1177
  br label %for.inc292, !dbg !1178
  %203 = load i32, i32* %c, align 4, !dbg !1179
  %inc293 = add nsw i32 %203, 1, !dbg !1179
  store i32 %inc293, i32* %c, align 4, !dbg !1179
  br label %for.cond282, !dbg !1180, !llvm.loop !1181
  br label %if.end312, !dbg !1183
  %204 = load i32, i32* %i, align 4, !dbg !1184
  %cmp296 = icmp eq i32 %204, 1, !dbg !1186
  br i1 %cmp296, label %if.then298, label %if.end311, !dbg !1187
  %205 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1188
  %decimal_point_wc = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %205, i32 0, i32 24, !dbg !1190
  %206 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1191
  %decimal_point = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %206, i32 0, i32 39, !dbg !1192
  %207 = load i8*, i8** %decimal_point, align 8, !dbg !1192
  %208 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1193
  %call299 = call i32 @__locale_mbrtowc_l(i32* %decimal_point_wc, i8* %207, %struct.__uclibc_locale_struct.160* %208) #10, !dbg !1194
  %209 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1195
  %decimal_point_len = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %209, i32 0, i32 26, !dbg !1196
  store i32 %call299, i32* %decimal_point_len, align 8, !dbg !1197
  %210 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1198
  %grouping = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %210, i32 0, i32 41, !dbg !1200
  %211 = load i8*, i8** %grouping, align 8, !dbg !1200
  %212 = load i8, i8* %211, align 1, !dbg !1201
  %tobool300 = icmp ne i8 %212, 0, !dbg !1201
  br i1 %tobool300, label %if.then301, label %if.end310, !dbg !1202
  %213 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1203
  %thousands_sep_wc = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %213, i32 0, i32 25, !dbg !1205
  %214 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1206
  %thousands_sep = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %214, i32 0, i32 40, !dbg !1207
  %215 = load i8*, i8** %thousands_sep, align 8, !dbg !1207
  %216 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1208
  %call302 = call i32 @__locale_mbrtowc_l(i32* %thousands_sep_wc, i8* %215, %struct.__uclibc_locale_struct.160* %216) #10, !dbg !1209
  %217 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1210
  %thousands_sep_len = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %217, i32 0, i32 27, !dbg !1211
  store i32 %call302, i32* %thousands_sep_len, align 4, !dbg !1212
  %218 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1213
  %thousands_sep_len303 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %218, i32 0, i32 27, !dbg !1215
  %219 = load i32, i32* %thousands_sep_len303, align 4, !dbg !1215
  %cmp304 = icmp eq i32 %219, 0, !dbg !1216
  br i1 %cmp304, label %if.then306, label %if.end309, !dbg !1217
  %220 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1218
  %thousands_sep307 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %220, i32 0, i32 40, !dbg !1220
  %221 = load i8*, i8** %thousands_sep307, align 8, !dbg !1220
  %222 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1221
  %grouping308 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %222, i32 0, i32 41, !dbg !1222
  store i8* %221, i8** %grouping308, align 8, !dbg !1223
  br label %if.end309, !dbg !1224
  br label %if.end310, !dbg !1225
  br label %if.end311, !dbg !1226
  br label %if.end312
  br label %if.end313, !dbg !1227
  %223 = load i32, i32* %i, align 4, !dbg !1228
  %inc314 = add nsw i32 %223, 1, !dbg !1228
  store i32 %inc314, i32* %i, align 4, !dbg !1228
  %224 = load i8*, i8** %p.addr, align 8, !dbg !1229
  %add.ptr315 = getelementptr inbounds i8, i8* %224, i64 2, !dbg !1229
  store i8* %add.ptr315, i8** %p.addr, align 8, !dbg !1229
 stack: Num.571
//Instructions in stack: Num.572
//Instructions in stack: Num.573
//Instructions in stack: Num.574
//Instructions in stack: Num.575
//Instructions in stack: Num.576
//Instructions in stack: Num.577
//Instructions in stack: Num.578
//Instructions in stack: Num.579
//Instructions in stack: Num.580
//Instructions in stack: Num.581
//Instructions in stack: Num.582
//Instructions in stack: Num.583
//Instructions in stack: Num.584
//Instructions in stack: Num.585
//Instructions in stack: Num.586
//Instructions in stack: Num.587
//Instructions in stack: Num.588
//Instructions in stack: Num.589
//Instructions in stack: Num.590
//Instructions in stack: Num.591
//Instructions in stack: Num.592
//Instructions in stack: Num.593
//Instructions in stack: Num.594
//Instructions in stack: Num.595
//Instructions in stack: Num.596
//Instructions in stack: Num.597
//Instructions in stack: Num.598
//Instructions in stack: Num.599
//Instructions in stack: Num.600
//Instructions in stack: Num.601
//Instructions in stack: Num.602
//Instructions in stack: Num.603
//Instructions in stack: Num.604
//Instructions in stack: Num.605
//Instructions in stack: Num.606
//Instructions in stack: Num.607
//Instructions in stack: Num.608
//Instructions in stack: Num.609
//Instructions in stack: Num.610
//Instructions in stack: Num.611
//Instructions in stack: Num.612
//Instructions in stack: Num.613
//Instructions in stack: Num.614
//Instructions in stack: Num.615
//Instructions in stack: Num.616
//Instructions in stack: Num.617
//Instructions in stack: Num.618
//Instructions in stack: Num.619
//Instructions in stack: Num.620
//Instructions in stack: Num.621
//Instructions in stack: Num.622
//Instructions in stack: Num.623
//Instructions in stack: Num.624
//Instructions in stack: Num.625
//Instructions in stack: Num.626
//Instructions in stack: Num.627
//Instructions in stack: Num.628
//Instructions in stack: Num.629
//Instructions in stack: Num.630
//Instructions in stack: Num.631
//Instructions in stack: Num.632
//Instructions in stack: Num.633
//Instructions in stack: Num.634
//Instructions in stack: Num.635
//Instructions in stack: Num.636
//Instructions in stack: Num.637
//Instructions in stack: Num.638
//Instructions in stack: Num.639
//Instructions in stack: Num.640
//Instructions in stack: Num.641
//Instructions in stack: Num.642
//Instructions in stack: Num.643
//Instructions in stack: Num.644
//Instructions in stack: Num.645
//Instructions in stack: Num.646
//Instructions in stack: Num.647
//Instructions in stack: Num.648
//Instructions in stack: Num.649
//Instructions in stack: Num.650
//Instructions in stack: Num.651
//Instructions in stack: Num.652
//Instructions in stack: Num.653
//Instructions in stack: Num.654
//Instructions in stack: Num.655
//Instructions in stack: Num.656
//Instructions in stack: Num.657
//Instructions in stack: Num.658
//Instructions in stack: Num.659
//Instructions in stack: Num.660
//Instructions in stack: Num.661
//Instructions in stack: Num.662
//Instructions in stack: Num.663
//Instructions in stack: Num.664
//Instructions in stack: Num.665
//Instructions in stack: Num.666
//Instructions in stack: Num.667
//Instructions in stack: Num.668
//Instructions in stack: Num.669
//Instructions in stack: Num.670
//Instructions in stack: Num.671
//Instructions in stack: Num.672
//Instructions in stack: Num.673
//Instructions in stack: Num.674
//Instructions in stack: Num.675
//Instructions in stack: Num.676
//Instructions in stack: Num.677
//Instructions in stack: Num.678
//Instructions in stack: Num.679
//Instructions in stack: Num.680
//Instructions in stack: Num.681
//Instructions in stack: Num.682
//Instructions in stack: Num.683
//Instructions in stack: Num.684
//Instructions in stack: Num.685
//Instructions in stack: Num.686
//Instructions in stack: Num.687
//Instructions in stack: Num.688
//Instructions in stack: Num.689
//Instructions in stack: Num.690
//Instructions in stack: Num.691
//Instructions in stack: Num.692
//Instructions in stack: Num.693
//Instructions in stack: Num.694
//Instructions in sta  %225 = load i8*, i8** %s, align 8, !dbg !1230
  %add.ptr316 = getelementptr inbounds i8, i8* %225, i64 2, !dbg !1230
  store i8* %add.ptr316, i8** %s, align 8, !dbg !1230
  br label %do.cond, !dbg !1231
  %226 = load i32, i32* %i, align 4, !dbg !1232
  %cmp317 = icmp slt i32 %226, 6, !dbg !1233
  br i1 %cmp317, label %do.body, label %do.end, !dbg !1231, !llvm.loop !1234
  store i32 1, i32* %retval, align 4, !dbg !1236
  br label %return, !dbg !1236
  %227 = load i32, i32* %retval, align 4, !dbg !1237
  ret i32 %227, !dbg !1237
  %s.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !2692, metadata !DIExpression()), !dbg !2693
  call void @llvm.dbg.declare(metadata i8** %p, metadata !2694, metadata !DIExpression()), !dbg !2695
  %0 = load i8*, i8** %s.addr, align 8, !dbg !664
  store i8* %0, i8** %p, align 8, !dbg !666
  br label %for.cond, !dbg !667
  %1 = load i8*, i8** %p, align 8, !dbg !668
  %2 = load i8, i8* %1, align 1, !dbg !670
  %tobool = icmp ne i8 %2, 0, !dbg !671
  br i1 %tobool, label %for.body, label %for.end, !dbg !671
  br label %for.inc, !dbg !671
  %3 = load i8*, i8** %p, align 8, !dbg !672
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !672
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !672
  br label %for.cond, !dbg !673, !llvm.loop !674
  %4 = load i8*, i8** %p, align 8, !dbg !676
  %5 = load i8*, i8** %s.addr, align 8, !dbg !677
  %sub.ptr.lhs.cast = ptrtoint i8* %4 to i64, !dbg !678
  %sub.ptr.rhs.cast = ptrtoint i8* %5 to i64, !dbg !678
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !678
  ret i64 %sub.ptr.sub, !dbg !679
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
ck: Num.695
//Instructions in stack: Num.696
//Instructions in stack: Num.697
//Instructions in stack: Num.698
//Instructions in stack: Num.699
//Instructions in stack: Num.700
//Instructions in stack: Num.701
//Instructions in stack: Num.702
//Instructions in stack: Num.703
//Instructions in stack: Num.704
//Instructions in stack: Num.705
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  %0 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !657
  %tobool = icmp ne i32 %0, 0, !dbg !657
  br i1 %tobool, label %if.then, label %if.end, !dbg !659
  br label %if.end4, !dbg !660
  %1 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  %inc = add nsw i32 %1, 1, !dbg !661
  store i32 %inc, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  store i64 4096, i64* @__pagesize, align 8, !dbg !662
  br i1 true, label %if.then1, label %if.end2, !dbg !663
  call void @_locale_init() #10, !dbg !664
  br label %if.end2, !dbg !664
  br i1 true, label %if.then3, label %if.end4, !dbg !666
  call void @_stdio_init() #10, !dbg !667
  br label %if.end4, !dbg !667
  ret void, !dbg !669
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** @__global_locale, align 8, !dbg !658
  call void @_locale_init_l(%struct.__uclibc_locale_struct.160* %0) #10, !dbg !659
  ret void, !dbg !660
  %base.addr = alloca %struct.__uclibc_locale_struct.160*, align 8
  store %struct.__uclibc_locale_struct.160* %base, %struct.__uclibc_locale_struct.160** %base.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__uclibc_locale_struct.160** %base.addr, metadata !1973, metadata !DIExpression()), !dbg !1974
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !662
  %cur_locale = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %0, i32 0, i32 6, !dbg !663
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale, i64 0, i64 0, !dbg !662
  %call = call i8* @memset(i8* %arraydecay, i32 0, i64 14) #10, !dbg !664
  %1 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !665
  %cur_locale1 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %1, i32 0, i32 6, !dbg !666
  %arrayidx = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale1, i64 0, i64 0, !dbg !665
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.  store i8 35, i8* %arrayidx, align 8, !dbg !667
  %2 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !668
  %category_item_count = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %2, i32 0, i32 8, !dbg !669
  %arraydecay2 = getelementptr inbounds [6 x i8], [6 x i8]* %category_item_count, i64 0, i64 0, !dbg !668
  %3 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !670
  %lc_common_item_offsets_LEN = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %3, i32 0, i32 29, !dbg !671
  %arraydecay3 = getelementptr inbounds [6 x i8], [6 x i8]* %lc_common_item_offsets_LEN, i64 0, i64 0, !dbg !670
  %call4 = call i8* @memcpy(i8* %arraydecay2, i8* %arraydecay3, i64 6) #10, !dbg !672
  %4 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !673
  %category_item_count5 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %4, i32 0, i32 8, !dbg !674
  %arrayidx6 = getelementptr inbounds [6 x i8], [6 x i8]* %category_item_count5, i64 0, i64 0, !dbg !673
  %5 = load i8, i8* %arrayidx6, align 2, !dbg !675
  %inc = add i8 %5, 1, !dbg !675
  store i8 %inc, i8* %arrayidx6, align 2, !dbg !675
  %6 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !676
  %category_offsets = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %6, i32 0, i32 7, !dbg !677
  %arrayidx7 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets, i64 0, i64 0, !dbg !676
  store i16 2488, i16* %arrayidx7, align 2, !dbg !678
  %7 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !679
  %category_offsets8 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %7, i32 0, i32 7, !dbg !680
  %arrayidx9 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets8, i64 0, i64 1, !dbg !679
  store i16 2576, i16* %arrayidx9, align 2, !dbg !681
  %8 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !682
  %category_offsets10 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %8, i32 0, i32 7, !dbg !683
  %arrayidx11 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets10, i64 0, i64 2, !dbg !682
  store i16 2600, i16* %arrayidx11, align 2, !dbg !684
  %9 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !685
  %category_offsets12 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %9, i32 0, i32 7, !dbg !686
  %arrayidx13 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets12, i64 0, i64 3, !dbg !685
  store i16 2776, i16* %arrayidx13, align 2, !dbg !687
  %10 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !688
  %category_offsets14 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %10, i32 0, i32 7, !dbg !689
  %arrayidx15 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets14, i64 0, i64 5, !dbg !688
  store i16 3176, i16* %arrayidx15, align 2, !dbg !690
  %11 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !691
  %tbl8ctype = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %11, i32 0, i32 0, !dbg !692
  %12 = bitcast [420 x i8]* %tbl8ctype to i8*, !dbg !693
  %13 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !694
  %tbl8ctype16 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %13, i32 0, i32 13, !dbg !695
  store i8* %12, i8** %tbl8ctype16, align 8, !dbg !696
  %14 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !697
  %tbl8uplow = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %14, i32 0, i32 1, !dbg !698
  %15 = bitcast [504 x i8]* %tbl8uplow to i8*, !dbg !699
  %16 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !700
  %tbl8uplow17 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %16, i32 0, i32 15, !dbg !701
  store i8* %15, i8** %tbl8uplow17, align 8, !dbg !702
  %17 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !703
  %tbl8c2wc = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %17, i32 0, i32 2, !dbg !704
  %18 = bitcast [1760 x i16]* %tbl8c2wc to i16*, !dbg !705
  %19 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !706
  %tbl8c2wc18 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %19, i32 0, i32 17, !dbg !707
  store i16* %18, i16** %tbl8c2wc18, align 8, !dbg !708
  %20 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !709
  %tbl8wc2c = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %20, i32 0, i32 3, !dbg !710
  %21 = bitcast [4528 x i8]* %tbl8wc2c to i8*, !dbg !711
  %22 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !712
  %tbl8wc2c19 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %22, i32 0, i32 19, !dbg !713
  store i8* %21, i8** %tbl8wc2c19, align 8, !dbg !714
  %23 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !715
  %tblwctype = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %23, i32 0, i32 4, !dbg !716
  %24 = bitcast [3604 x i8]* %tblwctype to i8*, !dbg !717
  %25 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !718
  %tblwctype20 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %25, i32 0, i32 21, !dbg !719
  store i8* %24, i8** %tblwctype20, align 8, !dbg !720
  %26 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !721
  %tblwuplow = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %26, i32 0, i32 5, !dbg !722
  %27 = bitcast [1680 x i8]* %tblwuplow to i8*, !dbg !723
  %28 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !724
  %tblwuplow21 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %28, i32 0, i32 22, !dbg !725
  store i8* %27, i8** %tblwuplow21, align 8, !dbg !726
  %29 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !727
  %tblwuplow_diff = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %29, i32 0, i32 6, !dbg !728
  %30 = bitcast [196 x i16]* %tblwuplow_diff to i16*, !dbg !729
  %31 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !730
  %tblwuplow_diff22 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %31, i32 0, i32 23, !dbg !731
  store i16* %30, i16** %tblwuplow_diff22, align 8, !dbg !732
  %32 = load i16*, i16** @__C_ctype_b, align 8, !dbg !733
  %33 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !734
  %__ctype_b = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %33, i32 0, i32 0, !dbg !735
  store i16* %32, i16** %__ctype_b, align 8, !dbg !736
  %34 = load i16*, i16** @__C_ctype_tolower, align 8, !dbg !737
  %35 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !738
  %__ctype_tolower = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %35, i32 0, i32 1, !dbg !739
  store i16* %34, i16** %__ctype_tolower, align 8, !dbg !740
  %36 = load i16*, i16** @__C_ctype_toupper, align 8, !dbg !741
  %37 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !742
  %__ctype_toupper = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %37, i32 0, i32 2, !dbg !743
  store i16* %36, i16** %__ctype_toupper, align 8, !dbg !744
  %38 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !745
  %code2flag = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %38, i32 0, i32 20, !dbg !746
  store i16* getelementptr inbounds ([16 x i16], [16 x i16]* @__code2flag, i64 0, i64 0), i16** %code2flag, align 8, !dbg !747
  %39 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !748
  %call23 = call i32 @_locale_set_l(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), %struct.__uclibc_locale_struct.160* %39) #11, !dbg !749
  ret void, !dbg !750
  %retval = alloca i32, align 4
  %p.addr = alloca i8*, align 8
  %base.addr = alloca %struct.__uclibc_locale_struct.160*, align 8
  %x = alloca i8**, align 8
  %s = alloca i8*, align 8
  %stp = alloca i64*, align 8
  %r = alloca i8*, align 8
  %io = alloca i16*, align 8
  %ii = alloca i16*, align 8
  %d = alloca i8*, align 8
  %row = alloca i32, align 4
  %crow = alloca i32, align 4
  %len = alloca i32, align 4
  %c = alloca i32, align 4
  %i = alloca i32, align 4
  %newcol = alloca %struct.__collate_t.159, align 8
  %c8b = alloca %struct.__codeset_8_bit_t.161*, align 8
  %u = alloca i32, align 4
  %m = alloca i16, align 2
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !1060, metadata !DIExpression()), !dbg !1061
  store %struct.__uclibc_locale_struct.160* %base, %struct.__uclibc_locale_struct.160** %base.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__uclibc_locale_struct.160** %base.addr, metadata !1062, metadata !DIExpression()), !dbg !1063
  call void @llvm.dbg.declare(metadata i8*** %x, metadata !1064, metadata !DIExpression()), !dbg !1065
  call void @llvm.dbg.declare(metadata i8** %s, metadata !1066, metadata !DIExpression()), !dbg !1067
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !668
  %cur_locale = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %0, i32 0, i32 6, !dbg !669
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale, i64 0, i64 0, !dbg !668
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 1, !dbg !670
  store i8* %add.ptr, i8** %s, align 8, !dbg !667
  call void @llvm.dbg.declare(metadata i64** %stp, metadata !1071, metadata !DIExpression()), !dbg !1074
  call void @llvm.dbg.declare(metadata i8** %r, metadata !1075, metadata !DIExpression()), !dbg !1076
  call void @llvm.dbg.declare(metadata i16** %io, metadata !1077, metadata !DIExpression()), !dbg !1078
  call void @llvm.dbg.declare(metadata i16** %ii, metadata !1079, metadata !DIExpression()), !dbg !1080
  call void @llvm.dbg.declare(metadata i8** %d, metadata !1081, metadata !DIExpression()), !dbg !1082
10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//I  call void @llvm.dbg.declare(metadata i32* %row, metadata !1083, metadata !DIExpression()), !dbg !1084
  call void @llvm.dbg.declare(metadata i32* %crow, metadata !1085, metadata !DIExpression()), !dbg !1086
  call void @llvm.dbg.declare(metadata i32* %len, metadata !1087, metadata !DIExpression()), !dbg !1088
  call void @llvm.dbg.declare(metadata i32* %c, metadata !1089, metadata !DIExpression()), !dbg !1090
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1091, metadata !DIExpression()), !dbg !1092
  store i32 0, i32* %i, align 4, !dbg !692
  call void @llvm.dbg.declare(metadata %struct.__collate_t.159* %newcol, metadata !1093, metadata !DIExpression()), !dbg !1094
  %1 = load i8*, i8** %p.addr, align 8, !dbg !695
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i32 1, !dbg !695
  store i8* %incdec.ptr, i8** %p.addr, align 8, !dbg !695
  %index2weight = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %newcol, i32 0, i32 23, !dbg !696
  store i16* null, i16** %index2weight, align 8, !dbg !697
  %2 = load i8*, i8** %p.addr, align 8, !dbg !698
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 8, !dbg !698
  %3 = load i8, i8* %arrayidx, align 1, !dbg !698
  %conv = zext i8 %3 to i32, !dbg !698
  %4 = load i8*, i8** %s, align 8, !dbg !700
  %arrayidx1 = getelementptr inbounds i8, i8* %4, i64 8, !dbg !700
  %5 = load i8, i8* %arrayidx1, align 1, !dbg !700
  %conv2 = zext i8 %5 to i32, !dbg !700
  %cmp = icmp ne i32 %conv, %conv2, !dbg !701
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !702
  %6 = load i8*, i8** %p.addr, align 8, !dbg !703
  %arrayidx4 = getelementptr inbounds i8, i8* %6, i64 9, !dbg !703
  %7 = load i8, i8* %arrayidx4, align 1, !dbg !703
  %conv5 = zext i8 %7 to i32, !dbg !703
  %8 = load i8*, i8** %s, align 8, !dbg !704
  %arrayidx6 = getelementptr inbounds i8, i8* %8, i64 9, !dbg !704
  %9 = load i8, i8* %arrayidx6, align 1, !dbg !704
  %conv7 = zext i8 %9 to i32, !dbg !704
  %cmp8 = icmp ne i32 %conv5, %conv7, !dbg !705
  br i1 %cmp8, label %if.then, label %if.end22, !dbg !706
  %10 = load i8*, i8** %p.addr, align 8, !dbg !707
  %11 = load i8, i8* %10, align 1, !dbg !709
  %conv10 = zext i8 %11 to i32, !dbg !709
  %and = and i32 %conv10, 127, !dbg !710
  %shl = shl i32 %and, 7, !dbg !711
  %12 = load i8*, i8** %p.addr, align 8, !dbg !712
  %arrayidx11 = getelementptr inbounds i8, i8* %12, i64 1, !dbg !712
  %13 = load i8, i8* %arrayidx11, align 1, !dbg !712
  %conv12 = zext i8 %13 to i32, !dbg !712
  %and13 = and i32 %conv12, 127, !dbg !713
  %add = add nsw i32 %shl, %and13, !dbg !714
  store i32 %add, i32* %row, align 4, !dbg !715
  %14 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !716
  %locales = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %14, i32 0, i32 31, !dbg !718
  %15 = load i32, i32* %row, align 4, !dbg !719
  %mul = mul nsw i32 9, %15, !dbg !720
  %add14 = add nsw i32 %mul, 3, !dbg !721
  %add15 = add nsw i32 %add14, 4, !dbg !722
  %idxprom = sext i32 %add15 to i64, !dbg !716
  %arrayidx16 = getelementptr inbounds [2826 x i8], [2826 x i8]* %locales, i64 0, i64 %idxprom, !dbg !716
  %16 = load i8, i8* %arrayidx16, align 1, !dbg !716
  %conv17 = zext i8 %16 to i32, !dbg !716
  %call = call i32 @init_cur_collate(i32 %conv17, %struct.__collate_t.159* %newcol) #10, !dbg !723
  %tobool = icmp ne i32 %call, 0, !dbg !723
  br i1 %tobool, label %if.end, label %if.then18, !dbg !724
  store i32 0, i32* %retval, align 4, !dbg !725
  br label %return, !dbg !725
  %17 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !727
  %collate = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %17, i32 0, i32 118, !dbg !728
  %index2weight19 = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %collate, i32 0, i32 23, !dbg !729
  %18 = load i16*, i16** %index2weight19, align 8, !dbg !729
  %19 = bitcast i16* %18 to i8*, !dbg !727
  call void @free(i8* %19) #11, !dbg !730
  %20 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !731
  %collate20 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %20, i32 0, i32 118, !dbg !732
  %21 = bitcast %struct.__collate_t.159* %collate20 to i8*, !dbg !733
  %22 = bitcast %struct.__collate_t.159* %newcol to i8*, !dbg !734
  %call21 = call i8* @memcpy(i8* %21, i8* %22, i64 112) #11, !dbg !735
  br label %if.end22, !dbg !736
  br label %do.body, !dbg !737
  %23 = load i8*, i8** %p.addr, align 8, !dbg !738
  %24 = load i8, i8* %23, align 1, !dbg !741
  %conv23 = zext i8 %24 to i32, !dbg !741
  %25 = load i8*, i8** %s, align 8, !dbg !742
  %26 = load i8, i8* %25, align 1, !dbg !743
  %conv24 = zext i8 %26 to i32, !dbg !743
  %cmp25 = icmp ne i32 %conv23, %conv24, !dbg !744
  br i1 %cmp25, label %if.then34, label %lor.lhs.false27, !dbg !745
  %27 = load i8*, i8** %p.addr, align 8, !dbg !746
  %arrayidx28 = getelementptr inbounds i8, i8* %27, i64 1, !dbg !746
  %28 = load i8, i8* %arrayidx28, align 1, !dbg !746
  %conv29 = zext i8 %28 to i32, !dbg !746
  %29 = load i8*, i8** %s, align 8, !dbg !747
  %arrayidx30 = getelementptr inbounds i8, i8* %29, i64 1, !dbg !747
  %30 = load i8, i8* %arrayidx30, align 1, !dbg !747
  %conv31 = zext i8 %30 to i32, !dbg !747
  %cmp32 = icmp ne i32 %conv29, %conv31, !dbg !748
  br i1 %cmp32, label %if.then34, label %if.end313, !dbg !749
  %31 = load i8*, i8** %p.addr, align 8, !dbg !750
  %32 = load i8, i8* %31, align 1, !dbg !752
  %conv35 = zext i8 %32 to i32, !dbg !752
  %and36 = and i32 %conv35, 127, !dbg !753
  %shl37 = shl i32 %and36, 7, !dbg !754
  %33 = load i8*, i8** %p.addr, align 8, !dbg !755
  %arrayidx38 = getelementptr inbounds i8, i8* %33, i64 1, !dbg !755
  %34 = load i8, i8* %arrayidx38, align 1, !dbg !755
  %conv39 = zext i8 %34 to i32, !dbg !755
  %and40 = and i32 %conv39, 127, !dbg !756
  %add41 = add nsw i32 %shl37, %and40, !dbg !757
  store i32 %add41, i32* %row, align 4, !dbg !758
  %35 = load i8*, i8** %p.addr, align 8, !dbg !759
  %36 = load i8, i8* %35, align 1, !dbg !760
  %37 = load i8*, i8** %s, align 8, !dbg !761
  store i8 %36, i8* %37, align 1, !dbg !762
  %38 = load i8*, i8** %p.addr, align 8, !dbg !763
  %arrayidx42 = getelementptr inbounds i8, i8* %38, i64 1, !dbg !763
  %39 = load i8, i8* %arrayidx42, align 1, !dbg !763
  %40 = load i8*, i8** %s, align 8, !dbg !764
  %arrayidx43 = getelementptr inbounds i8, i8* %40, i64 1, !dbg !764
  store i8 %39, i8* %arrayidx43, align 1, !dbg !765
  %41 = load i32, i32* %i, align 4, !dbg !766
  %cmp44 = icmp ne i32 %41, 4, !dbg !768
  br i1 %cmp44, label %land.lhs.true, label %if.end92, !dbg !769
  %42 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !770
  %lc_common_item_offsets_LEN = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %42, i32 0, i32 29, !dbg !771
  %43 = load i32, i32* %i, align 4, !dbg !772
  %idxprom46 = sext i32 %43 to i64, !dbg !770
  %arrayidx47 = getelementptr inbounds [6 x i8], [6 x i8]* %lc_common_item_offsets_LEN, i64 0, i64 %idxprom46, !dbg !770
  %44 = load i8, i8* %arrayidx47, align 1, !dbg !770
  %conv48 = zext i8 %44 to i32, !dbg !770
  store i32 %conv48, i32* %len, align 4, !dbg !773
  %cmp49 = icmp ne i32 %conv48, 0, !dbg !774
  br i1 %cmp49, label %if.then51, label %if.end92, !dbg !775
  %45 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !776
nstructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Inst  %locales52 = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %45, i32 0, i32 31, !dbg !778
  %46 = load i32, i32* %row, align 4, !dbg !779
  %mul53 = mul nsw i32 9, %46, !dbg !780
  %add54 = add nsw i32 %mul53, 3, !dbg !781
  %47 = load i32, i32* %i, align 4, !dbg !782
  %add55 = add nsw i32 %add54, %47, !dbg !783
  %idxprom56 = sext i32 %add55 to i64, !dbg !776
  %arrayidx57 = getelementptr inbounds [2826 x i8], [2826 x i8]* %locales52, i64 0, i64 %idxprom56, !dbg !776
  %48 = load i8, i8* %arrayidx57, align 1, !dbg !776
  %conv58 = zext i8 %48 to i32, !dbg !776
  %49 = load i32, i32* %len, align 4, !dbg !784
  %mul59 = mul nsw i32 %conv58, %49, !dbg !785
  store i32 %mul59, i32* %crow, align 4, !dbg !786
  %50 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !787
  %51 = bitcast %struct.__uclibc_locale_struct.160* %50 to i8*, !dbg !788
  %52 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !789
  %category_offsets = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %52, i32 0, i32 7, !dbg !790
  %53 = load i32, i32* %i, align 4, !dbg !791
  %idxprom60 = sext i32 %53 to i64, !dbg !789
  %arrayidx61 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets, i64 0, i64 %idxprom60, !dbg !789
  %54 = load i16, i16* %arrayidx61, align 2, !dbg !789
  %conv62 = zext i16 %54 to i32, !dbg !789
  %idx.ext = sext i32 %conv62 to i64, !dbg !792
  %add.ptr63 = getelementptr inbounds i8, i8* %51, i64 %idx.ext, !dbg !792
  %55 = bitcast i8* %add.ptr63 to i8**, !dbg !793
  store i8** %55, i8*** %x, align 8, !dbg !794
  %56 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !795
  %lc_common_tbl_offsets = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %56, i32 0, i32 30, !dbg !796
  %arraydecay64 = getelementptr inbounds [24 x i64], [24 x i64]* %lc_common_tbl_offsets, i64 0, i64 0, !dbg !795
  %57 = load i32, i32* %i, align 4, !dbg !797
  %mul65 = mul nsw i32 4, %57, !dbg !798
  %idx.ext66 = sext i32 %mul65 to i64, !dbg !799
  %add.ptr67 = getelementptr inbounds i64, i64* %arraydecay64, i64 %idx.ext66, !dbg !799
  store i64* %add.ptr67, i64** %stp, align 8, !dbg !800
  %58 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !801
  %59 = bitcast %struct.__locale_mmap_t.162* %58 to i8*, !dbg !802
  %60 = load i64*, i64** %stp, align 8, !dbg !803
  %61 = load i64, i64* %60, align 8, !dbg !804
  %add.ptr68 = getelementptr inbounds i8, i8* %59, i64 %61, !dbg !805
  store i8* %add.ptr68, i8** %r, align 8, !dbg !806
  %62 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !807
  %63 = bitcast %struct.__locale_mmap_t.162* %62 to i8*, !dbg !808
  %64 = load i64*, i64** %stp, align 8, !dbg !809
  %incdec.ptr69 = getelementptr inbounds i64, i64* %64, i32 1, !dbg !809
  store i64* %incdec.ptr69, i64** %stp, align 8, !dbg !809
  %65 = load i64, i64* %incdec.ptr69, align 8, !dbg !810
  %add.ptr70 = getelementptr inbounds i8, i8* %63, i64 %65, !dbg !811
  %66 = bitcast i8* %add.ptr70 to i16*, !dbg !812
  store i16* %66, i16** %io, align 8, !dbg !813
  %67 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !814
  %68 = bitcast %struct.__locale_mmap_t.162* %67 to i8*, !dbg !815
  %69 = load i64*, i64** %stp, align 8, !dbg !816
  %incdec.ptr71 = getelementptr inbounds i64, i64* %69, i32 1, !dbg !816
  store i64* %incdec.ptr71, i64** %stp, align 8, !dbg !816
  %70 = load i64, i64* %incdec.ptr71, align 8, !dbg !817
  %add.ptr72 = getelementptr inbounds i8, i8* %68, i64 %70, !dbg !818
  %71 = bitcast i8* %add.ptr72 to i16*, !dbg !819
  store i16* %71, i16** %ii, align 8, !dbg !820
  %72 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !821
  %73 = bitcast %struct.__locale_mmap_t.162* %72 to i8*, !dbg !822
  %74 = load i64*, i64** %stp, align 8, !dbg !823
  %incdec.ptr73 = getelementptr inbounds i64, i64* %74, i32 1, !dbg !823
  store i64* %incdec.ptr73, i64** %stp, align 8, !dbg !823
  %75 = load i64, i64* %incdec.ptr73, align 8, !dbg !824
  %add.ptr74 = getelementptr inbounds i8, i8* %73, i64 %75, !dbg !825
  store i8* %add.ptr74, i8** %d, align 8, !dbg !826
  store i32 0, i32* %c, align 4, !dbg !827
  br label %for.cond, !dbg !829
  %76 = load i32, i32* %c, align 4, !dbg !830
  %77 = load i32, i32* %len, align 4, !dbg !832
  %cmp75 = icmp slt i32 %76, %77, !dbg !833
  br i1 %cmp75, label %for.body, label %for.end, !dbg !834
  %78 = load i8*, i8** %d, align 8, !dbg !835
  %79 = load i16*, i16** %ii, align 8, !dbg !837
  %80 = load i8*, i8** %r, align 8, !dbg !838
  %81 = load i32, i32* %crow, align 4, !dbg !839
  %82 = load i32, i32* %c, align 4, !dbg !840
  %add77 = add nsw i32 %81, %82, !dbg !841
  %idxprom78 = sext i32 %add77 to i64, !dbg !838
  %arrayidx79 = getelementptr inbounds i8, i8* %80, i64 %idxprom78, !dbg !838
  %83 = load i8, i8* %arrayidx79, align 1, !dbg !838
  %conv80 = zext i8 %83 to i32, !dbg !838
  %84 = load i16*, i16** %io, align 8, !dbg !842
  %85 = load i32, i32* %c, align 4, !dbg !843
  %idxprom81 = sext i32 %85 to i64, !dbg !842
  %arrayidx82 = getelementptr inbounds i16, i16* %84, i64 %idxprom81, !dbg !842
  %86 = load i16, i16* %arrayidx82, align 2, !dbg !842
  %conv83 = zext i16 %86 to i32, !dbg !842
  %add84 = add nsw i32 %conv80, %conv83, !dbg !844
  %idxprom85 = sext i32 %add84 to i64, !dbg !837
  %arrayidx86 = getelementptr inbounds i16, i16* %79, i64 %idxprom85, !dbg !837
  %87 = load i16, i16* %arrayidx86, align 2, !dbg !837
  %conv87 = zext i16 %87 to i32, !dbg !837
  %idx.ext88 = sext i32 %conv87 to i64, !dbg !845
  %add.ptr89 = getelementptr inbounds i8, i8* %78, i64 %idx.ext88, !dbg !845
  %88 = load i8**, i8*** %x, align 8, !dbg !846
  %89 = load i32, i32* %c, align 4, !dbg !847
  %idx.ext90 = sext i32 %89 to i64, !dbg !848
  %add.ptr91 = getelementptr inbounds i8*, i8** %88, i64 %idx.ext90, !dbg !848
  store i8* %add.ptr89, i8** %add.ptr91, align 8, !dbg !849
  br label %for.inc, !dbg !850
  %90 = load i32, i32* %c, align 4, !dbg !851
  %inc = add nsw i32 %90, 1, !dbg !851
  store i32 %inc, i32* %c, align 4, !dbg !851
  br label %for.cond, !dbg !852, !llvm.loop !853
  br label %if.end92, !dbg !855
  %91 = load i32, i32* %i, align 4, !dbg !856
  %cmp93 = icmp eq i32 %91, 0, !dbg !858
  br i1 %cmp93, label %if.then95, label %if.else295, !dbg !859
  %92 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !860
  %locales96 = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %92, i32 0, i32 31, !dbg !862
  %93 = load i32, i32* %row, align 4, !dbg !863
  %mul97 = mul nsw i32 9, %93, !dbg !864
  %add98 = add nsw i32 %mul97, 2, !dbg !865
  %idxprom99 = sext i32 %add98 to i64, !dbg !860
  %arrayidx100 = getelementptr inbounds [2826 x i8], [2826 x i8]* %locales96, i64 0, i64 %idxprom99, !dbg !860
  %94 = load i8, i8* %arrayidx100, align 1, !dbg !860
  %conv101 = zext i8 %94 to i32, !dbg !860
  store i32 %conv101, i32* %c, align 4, !dbg !866
  %95 = load i32, i32* %c, align 4, !dbg !867
  %cmp102 = icmp sle i32 %95, 2, !dbg !869
  br i1 %cmp102, label %if.then104, label %if.else112, !dbg !870
  %96 = load i32, i32* %c, align 4, !dbg !871
  %cmp105 = icmp eq i32 %96, 2, !dbg !874
ructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.190
//Instructions in stack: Num.191
//Instructions in stack: Num.192
//Instructions in stack: Num.193
//Instructions in stack: Num.194
//Instructions in stack: Num.195
//Instructions in stack: Num.196
//Instructions in stack: Num.197
//Instructions in stack: Num.198
//Instructions in stack: Num.199
//Instructions in stack: Num.200
//Instructions in stack: Num.201
//Instructions in stack: Num.202
//Instructions in stack: Num.203
//Instructions in stack: Num.204
//Instructions in stack: Num.205
//Instructions in stack: Num.206
//Instructions in stack: Num.207
//Instructions in stack: Num.208
//Instructions in stack: Num.209
//Instructions in stack: Num.210
//Instructions in stack: Num.211
//Instructions in stack: Num.212
//Instructions in stack: Num.213
//Instructions in stack: Num.214
//Instructions in stack: Num.215
//Instructions in stack: Num.216
//Instructions in stack: Num.217
//Instructions in stack: Num.218
//Instructions in stack: Num.219
//Instructions in stack: Num.220
//Instructions in stack: Num.221
//Instructions in stack: Num.222
//Instructions in stack: Num.223
//Instructions in stack: Num.224
//Instructions in stack: Num.225
//Instructions in stack: Num.226
//Instructions in stack: Num.227
//Instructions in stack: Num.228
//Instructions in stack: Num.229
//Instructions in stack: Num.230
//Instructions in stack: Num.231
//Instructions in stack: Num.232
//Instructions in stack: Num.233
//Instructions in stack: Num.234
//Instructions in stack: Num.235
//Instructions in stack: Num.236
//Instructions in stack: Num.237
//Instructions in stack: Num.238
//Instructions in stack: Num.239
//Instructions in stack: Num.240
//Instructions in stack: Num.241
//Instructions in stack: Num.242
//Instructions in stack: Num.243
//Instructions in stack: Num.244
//Instructions in stack: Num.245
//Instructions in stack: Num.246
//Instructions in stack: Num.247
//Instructions in stack: Num.248
//Instructions in stack: Num.249
//Instructions in stack: Num.250
//Instructions in stack: Num.251
//Instructions in stack: Num.252
//Instructions in stack: Num.253
//Instructions in stack: Num.254
//Instructions in stack: Num.255
//Instructions in stack: Num.256
//Instructions in stack: Num.257
//Instructions in stack: Num.258
//Instructions in stack: Num.259
//Instructions in stack: Num.260
//Instructions in stack: Num.261
//Instructions in stack: Num.262
//Instructions in stack: Num.263
//Instructions in stack: Num.264
//Instructions in stack: Num.265
//Instructions in stack: Num.266
//Instructions in stack: Num.267
//Instructions in stack: Num.268
//Instructions in stack: Num.269
//Instructions in stack: Num.270
//Instructions in stack: Num.271
//Instructions in stack: Num.272
//Instructions in stack: Num.273
//Instructions in stack: Num.274
//Instructions in stack: Num.275
//Instructions in stack: Num.276
//Instructions in stack: Num.277
//Instructions in stack: Num.278
//Instructions in stack: Num.279
//Instructions in stack: Num.280
//Instructions in stack: Num.281
//Instructions in stack: Num.282
//Instructions in stack: Num.283
//Instructions in stack: Num.284
//Instruct  br i1 %cmp105, label %if.then107, label %if.else, !dbg !875
  %97 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !876
  %codeset = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %97, i32 0, i32 38, !dbg !878
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @utf8, i64 0, i64 0), i8** %codeset, align 8, !dbg !879
  %98 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !880
  %encoding = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %98, i32 0, i32 9, !dbg !881
  store i8 1, i8* %encoding, align 8, !dbg !882
  %99 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !883
  %mb_cur_max = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %99, i32 0, i32 10, !dbg !884
  store i8 6, i8* %mb_cur_max, align 1, !dbg !885
  br label %if.end111, !dbg !886
  %100 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !887
  %codeset108 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %100, i32 0, i32 38, !dbg !889
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @ascii, i64 0, i64 0), i8** %codeset108, align 8, !dbg !890
  %101 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !891
  %encoding109 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %101, i32 0, i32 9, !dbg !892
  store i8 0, i8* %encoding109, align 8, !dbg !893
  %102 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !894
  %mb_cur_max110 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %102, i32 0, i32 10, !dbg !895
  store i8 1, i8* %mb_cur_max110, align 1, !dbg !896
  br label %if.end111
  br label %if.end280, !dbg !897
  call void @llvm.dbg.declare(metadata %struct.__codeset_8_bit_t.161** %c8b, metadata !1298, metadata !DIExpression()), !dbg !1310
  %103 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !911
  %codeset_list = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %103, i32 0, i32 35, !dbg !911
  %arraydecay113 = getelementptr inbounds [255 x i8], [255 x i8]* %codeset_list, i64 0, i64 0, !dbg !911
  store i8* %arraydecay113, i8** %r, align 8, !dbg !912
  %104 = load i8*, i8** %r, align 8, !dbg !913
  %105 = load i8*, i8** %r, align 8, !dbg !914
  %106 = load i32, i32* %c, align 4, !dbg !915
  %sub = sub nsw i32 %106, 3, !dbg !915
  store i32 %sub, i32* %c, align 4, !dbg !915
  %idxprom114 = sext i32 %sub to i64, !dbg !914
  %arrayidx115 = getelementptr inbounds i8, i8* %105, i64 %idxprom114, !dbg !914
  %107 = load i8, i8* %arrayidx115, align 1, !dbg !914
  %conv116 = zext i8 %107 to i32, !dbg !914
  %idx.ext117 = sext i32 %conv116 to i64, !dbg !916
  %add.ptr118 = getelementptr inbounds i8, i8* %104, i64 %idx.ext117, !dbg !916
  %108 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !917
  %codeset119 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %108, i32 0, i32 38, !dbg !918
  store i8* %add.ptr118, i8** %codeset119, align 8, !dbg !919
  %109 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !920
  %encoding120 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %109, i32 0, i32 9, !dbg !921
  store i8 2, i8* %encoding120, align 8, !dbg !922
  %110 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !923
  %mb_cur_max121 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %110, i32 0, i32 10, !dbg !924
  store i8 1, i8* %mb_cur_max121, align 1, !dbg !925
  %111 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !926
  %codeset_8_bit = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %111, i32 0, i32 12, !dbg !927
  %arraydecay122 = getelementptr inbounds [23 x %struct.__codeset_8_bit_t.161], [23 x %struct.__codeset_8_bit_t.161]* %codeset_8_bit, i64 0, i64 0, !dbg !926
  %112 = load i32, i32* %c, align 4, !dbg !928
  %idx.ext123 = sext i32 %112 to i64, !dbg !929
  %add.ptr124 = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %arraydecay122, i64 %idx.ext123, !dbg !929
  store %struct.__codeset_8_bit_t.161* %add.ptr124, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !930
  %113 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !931
  %idx8ctype = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %113, i32 0, i32 0, !dbg !932
  %arraydecay125 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8ctype, i64 0, i64 0, !dbg !931
  %114 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !933
  %idx8ctype126 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %114, i32 0, i32 12, !dbg !934
  store i8* %arraydecay125, i8** %idx8ctype126, align 8, !dbg !935
  %115 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !936
  %idx8uplow = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %115, i32 0, i32 1, !dbg !937
  %arraydecay127 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8uplow, i64 0, i64 0, !dbg !936
  %116 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !938
  %idx8uplow128 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %116, i32 0, i32 14, !dbg !939
  store i8* %arraydecay127, i8** %idx8uplow128, align 8, !dbg !940
  %117 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !941
  %idx8c2wc = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %117, i32 0, i32 2, !dbg !942
  %arraydecay129 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8c2wc, i64 0, i64 0, !dbg !941
  %118 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !943
  %idx8c2wc130 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %118, i32 0, i32 16, !dbg !944
  store i8* %arraydecay129, i8** %idx8c2wc130, align 8, !dbg !945
  %119 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !946
  %idx8wc2c = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %119, i32 0, i32 3, !dbg !947
  %arraydecay131 = getelementptr inbounds [38 x i8], [38 x i8]* %idx8wc2c, i64 0, i64 0, !dbg !946
  %120 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !948
  %idx8wc2c132 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %120, i32 0, i32 18, !dbg !949
  store i8* %arraydecay131, i8** %idx8wc2c132, align 8, !dbg !950
  %121 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !951
  %__ctype_b_data = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %121, i32 0, i32 3, !dbg !952
  %arraydecay133 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data, i64 0, i64 0, !dbg !951
  %122 = bitcast i16* %arraydecay133 to i8*, !dbg !951
  %123 = load i16*, i16** @__C_ctype_b, align 8, !dbg !953
  %add.ptr134 = getelementptr inbounds i16, i16* %123, i64 -128, !dbg !954
  %124 = bitcast i16* %add.ptr134 to i8*, !dbg !953
  %call135 = call i8* @memcpy(i8* %122, i8* %124, i64 768) #11, !dbg !955
  %125 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !956
  %__ctype_tolower_data = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %125, i32 0, i32 4, !dbg !957
  %arraydecay136 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data, i64 0, i64 0, !dbg !956
  %126 = bitcast i16* %arraydecay136 to i8*, !dbg !956
  %127 = load i16*, i16** @__C_ctype_tolower, align 8, !dbg !958
  %add.ptr137 = getelementptr inbounds i16, i16* %127, i64 -128, !dbg !959
  %128 = bitcast i16* %add.ptr137 to i8*, !dbg !958
  %call138 = call i8* @memcpy(i8* %126, i8* %128, i64 768) #11, !dbg !960
  %129 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !961
  %__ctype_toupper_data = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %129, i32 0, i32 5, !dbg !962
  %arraydecay139 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data, i64 0, i64 0, !dbg !961
  %130 = bitcast i16* %arraydecay139 to i8*, !dbg !961
  %131 = load i16*, i16** @__C_ctype_toupper, align 8, !dbg !963
  %add.ptr140 = getelementptr inbounds i16, i16* %131, i64 -128, !dbg !964
  %132 = bitcast i16* %add.ptr140 to i8*, !dbg !963
  %call141 = call i8* @memcpy(i8* %130, i8* %132, i64 768) #11, !dbg !965
  call void @llvm.dbg.declare(metadata i32* %u, metadata !1366, metadata !DIExpression()), !dbg !1368
  call void @llvm.dbg.declare(metadata i16* %m, metadata !1369, metadata !DIExpression()), !dbg !1370
  store i32 0, i32* %u, align 4, !dbg !971
  br label %for.cond142, !dbg !973
  %133 = load i32, i32* %u, align 4, !dbg !974
  %cmp143 = icmp slt i32 %133, 128, !dbg !976
  br i1 %cmp143, label %for.body145, label %for.end270, !dbg !977
  %134 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !978
  %tbl8ctype = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %134, i32 0, i32 13, !dbg !980
  %135 = load i8*, i8** %tbl8ctype, align 8, !dbg !980
  %136 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !981
  %idx8ctype146 = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %136, i32 0, i32 0, !dbg !982
  %137 = load i32, i32* %u, align 4, !dbg !983
  %shr = ashr i32 %137, 3, !dbg !984
  %idxprom147 = sext i32 %shr to i64, !dbg !981
  %arrayidx148 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8ctype146, i64 0, i64 %idxprom147, !dbg !981
  %138 = load i8, i8* %arrayidx148, align 1, !dbg !981
  %conv149 = zext i8 %138 to i32, !dbg !985
  %shl150 = shl i32 %conv149, 2, !dbg !986
  %139 = load i32, i32* %u, align 4, !dbg !987
  %and151 = and i32 %139, 7, !dbg !988
  %shr152 = ashr i32 %and151, 1, !dbg !989
ions in stack: Num.285
//Instructions in stack: Num.286
//Instructions in stack: Num.287
//Instructions in stack: Num.288
//Instructions in stack: Num.289
//Instructions in stack: Num.290
//Instructions in stack: Num.291
//Instructions in stack: Num.292
//Instructions in stack: Num.293
//Instructions in stack: Num.294
//Instructions in stack: Num.295
//Instructions in stack: Num.296
//Instructions in stack: Num.297
//Instructions in stack: Num.298
//Instructions in stack: Num.299
//Instructions in stack: Num.300
//Instructions in stack: Num.301
//Instructions in stack: Num.302
//Instructions in stack: Num.303
//Instructions in stack: Num.304
//Instructions in stack: Num.305
//Instructions in stack: Num.306
//Instructions in stack: Num.307
//Instructions in stack: Num.308
//Instructions in stack: Num.309
//Instructions in stack: Num.310
//Instructions in stack: Num.311
//Instructions in stack: Num.312
//Instructions in stack: Num.313
//Instructions in stack: Num.314
//Instructions in stack: Num.315
//Instructions in stack: Num.316
//Instructions in stack: Num.317
//Instructions in stack: Num.318
//Instructions in stack: Num.319
//Instructions in stack: Num.320
//Instructions in stack: Num.321
//Instructions in stack: Num.322
//Instructions in stack: Num.323
//Instructions in stack: Num.324
//Instructions in stack: Num.325
//Instructions in stack: Num.326
//Instructions in stack: Num.327
//Instructions in stack: Num.328
//Instructions in stack: Num.329
//Instructions in stack: Num.330
//Instructions in stack: Num.331
//Instructions in stack: Num.332
//Instructions in stack: Num.333
//Instructions in stack: Num.334
//Instructions in stack: Num.335
//Instructions in stack: Num.336
//Instructions in stack: Num.337
//Instructions in stack: Num.338
//Instructions in stack: Num.339
//Instructions in stack: Num.340
//Instructions in stack: Num.341
//Instructions in stack: Num.342
//Instructions in stack: Num.343
//Instructions in stack: Num.344
//Instructions in stack: Num.345
//Instructions in stack: Num.346
//Instructions in stack: Num.347
//Instructions in stack: Num.348
//Instructions in stack: Num.349
//Instructions in stack: Num.350
//Instructions in stack: Num.351
//Instructions in stack: Num.352
//Instructions in stack: Num.353
//Instructions in stack: Num.354
//Instructions in stack: Num.355
//Instructions in stack: Num.356
//Instructions in stack: Num.357
//Instructions in stack: Num.358
//Instructions in stack: Num.359
//Instructions in stack: Num.360
//Instructions in stack: Num.361
//Instructions in stack: Num.362
//Instructions in stack: Num.363
//Instructions in stack: Num.364
//Instructions in stack: Num.365
//Instructions in stack: Num.366
//Instructions in stack: Num.367
//Instructions in stack: Num.368
//Instructions in stack: Num.369
//Instructions in stack: Num.370
//Instructions in stack: Num.371
//Instructions in stack: Num.372
//Instructions in stack: Num.373
//Instructions in stack: Num.374
//Instructions in stack: Num.375
//Instructions in stack: Num.376
//Instructions in stack: Num.377
//Instructions in stack: Num.378
//Instructions in stack: Num.379
//Instructions in stack: Num.380
//Instructions in stack: Num.381
//Instructions in stack: Num.382
//Instructions in stack: Num.383
//Instructions in stack: Num.384
//Instructions in stack: Num.385
//Instructions in stack: Num.386
//Instructions in stack: Num.387
//Instructions in stack: Num.388
//Instructions in stack: Num.389
//Instructions in stack: Num.390
//Instructions in stack: Num.391
//Instructions in stack: Num.392
//Instructions in stack: Num.393
//Instructions in stack: Num.394
//Instructions in stack: Num.395
//Instructions in stack: Num.396
//Instructions in stack: Num.397
//Instructions in stack: Num.398
//Instructions in stack: Num.399
//Instructions in stack: Num.400
//Instructions in stack: Num.401
//Instructions in stack: Num.402
//Instructions in stack: Num.403
//Instructions in stack: Num.404
//Instructions in stack: Num.405
//Instructions in stack: Num.406
//Instructions in stack: Num.407
//Instructions in stack: Num.408
//Instructions  %add153 = add nsw i32 %shl150, %shr152, !dbg !990
  %idxprom154 = sext i32 %add153 to i64, !dbg !978
  %arrayidx155 = getelementptr inbounds i8, i8* %135, i64 %idxprom154, !dbg !978
  %140 = load i8, i8* %arrayidx155, align 1, !dbg !978
  %conv156 = zext i8 %140 to i32, !dbg !978
  store i32 %conv156, i32* %c, align 4, !dbg !991
  %141 = load i32, i32* %u, align 4, !dbg !992
  %and157 = and i32 %141, 1, !dbg !993
  %tobool158 = icmp ne i32 %and157, 0, !dbg !993
  br i1 %tobool158, label %cond.true, label %cond.false, !dbg !994
  %142 = load i32, i32* %c, align 4, !dbg !995
  %shr159 = ashr i32 %142, 4, !dbg !996
  br label %cond.end, !dbg !994
  %143 = load i32, i32* %c, align 4, !dbg !997
  %and160 = and i32 %143, 15, !dbg !998
  br label %cond.end, !dbg !994
  %cond = phi i32 [ %shr159, %cond.true ], [ %and160, %cond.false ], !dbg !994
  store i32 %cond, i32* %c, align 4, !dbg !999
  %144 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1000
  %code2flag = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %144, i32 0, i32 20, !dbg !1001
  %145 = load i16*, i16** %code2flag, align 8, !dbg !1001
  %146 = load i32, i32* %c, align 4, !dbg !1002
  %idxprom161 = sext i32 %146 to i64, !dbg !1000
  %arrayidx162 = getelementptr inbounds i16, i16* %145, i64 %idxprom161, !dbg !1000
  %147 = load i16, i16* %arrayidx162, align 2, !dbg !1000
  store i16 %147, i16* %m, align 2, !dbg !1003
  %148 = load i16, i16* %m, align 2, !dbg !1004
  %149 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1005
  %__ctype_b_data163 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %149, i32 0, i32 3, !dbg !1006
  %150 = load i32, i32* %u, align 4, !dbg !1007
  %add164 = add nsw i32 256, %150, !dbg !1008
  %idxprom165 = sext i32 %add164 to i64, !dbg !1005
  %arrayidx166 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data163, i64 0, i64 %idxprom165, !dbg !1005
  store i16 %148, i16* %arrayidx166, align 2, !dbg !1009
  %151 = load i32, i32* %u, align 4, !dbg !1010
  %add167 = add nsw i32 128, %151, !dbg !1012
  %conv168 = trunc i32 %add167 to i8, !dbg !1013
  %conv169 = sext i8 %conv168 to i32, !dbg !1014
  %cmp170 = icmp ne i32 %conv169, -1, !dbg !1015
  br i1 %cmp170, label %if.then172, label %if.end180, !dbg !1016
  %152 = load i16, i16* %m, align 2, !dbg !1017
  %153 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1019
  %__ctype_b_data173 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %153, i32 0, i32 3, !dbg !1020
  %154 = load i32, i32* %u, align 4, !dbg !1021
  %add174 = add nsw i32 128, %154, !dbg !1022
  %conv175 = trunc i32 %add174 to i8, !dbg !1023
  %conv176 = sext i8 %conv175 to i32, !dbg !1024
  %add177 = add nsw i32 128, %conv176, !dbg !1025
  %idxprom178 = sext i32 %add177 to i64, !dbg !1019
  %arrayidx179 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data173, i64 0, i64 %idxprom178, !dbg !1019
  store i16 %152, i16* %arrayidx179, align 2, !dbg !1026
  br label %if.end180, !dbg !1027
  %155 = load i32, i32* %u, align 4, !dbg !1028
  %add181 = add nsw i32 128, %155, !dbg !1029
  %conv182 = trunc i32 %add181 to i16, !dbg !1030
  %156 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1031
  %__ctype_tolower_data183 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %156, i32 0, i32 4, !dbg !1032
  %157 = load i32, i32* %u, align 4, !dbg !1033
  %add184 = add nsw i32 256, %157, !dbg !1034
  %idxprom185 = sext i32 %add184 to i64, !dbg !1031
  %arrayidx186 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data183, i64 0, i64 %idxprom185, !dbg !1031
  store i16 %conv182, i16* %arrayidx186, align 2, !dbg !1035
  %158 = load i32, i32* %u, align 4, !dbg !1036
  %add187 = add nsw i32 128, %158, !dbg !1037
  %conv188 = trunc i32 %add187 to i16, !dbg !1038
  %159 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1039
  %__ctype_toupper_data189 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %159, i32 0, i32 5, !dbg !1040
  %160 = load i32, i32* %u, align 4, !dbg !1041
  %add190 = add nsw i32 256, %160, !dbg !1042
  %idxprom191 = sext i32 %add190 to i64, !dbg !1039
  %arrayidx192 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data189, i64 0, i64 %idxprom191, !dbg !1039
  store i16 %conv188, i16* %arrayidx192, align 2, !dbg !1043
  %161 = load i16, i16* %m, align 2, !dbg !1044
  %conv193 = zext i16 %161 to i32, !dbg !1044
  %and194 = and i32 %conv193, 768, !dbg !1046
  %tobool195 = icmp ne i32 %and194, 0, !dbg !1046
  br i1 %tobool195, label %if.then196, label %if.end267, !dbg !1047
  %162 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1048
  %tbl8uplow = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %162, i32 0, i32 15, !dbg !1050
  %163 = load i8*, i8** %tbl8uplow, align 8, !dbg !1050
  %164 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !1051
  %idx8uplow197 = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %164, i32 0, i32 1, !dbg !1052
  %165 = load i32, i32* %u, align 4, !dbg !1053
  %shr198 = ashr i32 %165, 3, !dbg !1054
  %idxprom199 = sext i32 %shr198 to i64, !dbg !1051
  %arrayidx200 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8uplow197, i64 0, i64 %idxprom199, !dbg !1051
  %166 = load i8, i8* %arrayidx200, align 1, !dbg !1051
  %conv201 = zext i8 %166 to i32, !dbg !1055
  %shl202 = shl i32 %conv201, 3, !dbg !1056
  %167 = load i32, i32* %u, align 4, !dbg !1057
  %add203 = add nsw i32 128, %167, !dbg !1058
  %and204 = and i32 %add203, 7, !dbg !1059
  %add205 = add nsw i32 %shl202, %and204, !dbg !1060
  %idxprom206 = sext i32 %add205 to i64, !dbg !1048
  %arrayidx207 = getelementptr inbounds i8, i8* %163, i64 %idxprom206, !dbg !1048
  %168 = load i8, i8* %arrayidx207, align 1, !dbg !1048
  %conv208 = zext i8 %168 to i32, !dbg !1048
  store i32 %conv208, i32* %c, align 4, !dbg !1061
  %169 = load i16, i16* %m, align 2, !dbg !1062
  %conv209 = zext i16 %169 to i32, !dbg !1062
  %and210 = and i32 %conv209, 512, !dbg !1064
  %tobool211 = icmp ne i32 %and210, 0, !dbg !1064
  br i1 %tobool211, label %if.then212, label %if.else239, !dbg !1065
  %170 = load i32, i32* %u, align 4, !dbg !1066
  %add213 = add nsw i32 128, %170, !dbg !1068
  %171 = load i32, i32* %c, align 4, !dbg !1069
  %add214 = add nsw i32 %add213, %171, !dbg !1070
  %conv215 = trunc i32 %add214 to i8, !dbg !1071
  %conv216 = zext i8 %conv215 to i16, !dbg !1071
  %172 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1072
  %__ctype_toupper_data217 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %172, i32 0, i32 5, !dbg !1073
  %173 = load i32, i32* %u, align 4, !dbg !1074
  %add218 = add nsw i32 256, %173, !dbg !1075
  %idxprom219 = sext i32 %add218 to i64, !dbg !1072
  %arrayidx220 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data217, i64 0, i64 %idxprom219, !dbg !1072
  store i16 %conv216, i16* %arrayidx220, align 2, !dbg !1076
  %174 = load i32, i32* %u, align 4, !dbg !1077
  %add221 = add nsw i32 128, %174, !dbg !1079
  %conv222 = trunc i32 %add221 to i8, !dbg !1080
  %conv223 = sext i8 %conv222 to i32, !dbg !1081
  %cmp224 = icmp ne i32 %conv223, -1, !dbg !1082
  br i1 %cmp224, label %if.then226, label %if.end238, !dbg !1083
  %175 = load i32, i32* %u, align 4, !dbg !1084
  %add227 = add nsw i32 128, %175, !dbg !1086
 in stack: Num.409
//Instructions in stack: Num.410
//Instructions in stack: Num.411
//Instructions in stack: Num.412
//Instructions in stack: Num.413
//Instructions in stack: Num.414
//Instructions in stack: Num.415
//Instructions in stack: Num.416
//Instructions in stack: Num.417
//Instructions in stack: Num.418
//Instructions in stack: Num.419
//Instructions in stack: Num.420
//Instructions in stack: Num.421
//Instructions in stack: Num.422
//Instructions in stack: Num.423
//Instructions in stack: Num.424
//Instructions in stack: Num.425
//Instructions in stack: Num.426
//Instructions in stack: Num.427
//Instructions in stack: Num.428
//Instructions in stack: Num.429
//Instructions in stack: Num.430
//Instructions in stack: Num.431
//Instructions in stack: Num.432
//Instructions in stack: Num.433
//Instructions in stack: Num.434
//Instructions in stack: Num.435
//Instructions in stack: Num.436
//Instructions in stack: Num.437
//Instructions in stack: Num.438
//Instructions in stack: Num.439
//Instructions in stack: Num.440
//Instructions in stack: Num.441
//Instructions in stack: Num.442
//Instructions in stack: Num.443
//Instructions in stack: Num.444
//Instructions in stack: Num.445
//Instructions in stack: Num.446
//Instructions in stack: Num.447
//Instructions in stack: Num.448
//Instructions in stack: Num.449
//Instructions in stack: Num.450
//Instructions in stack: Num.451
//Instructions in stack: Num.452
//Instructions in stack: Num.453
//Instructions in stack: Num.454
//Instructions in stack: Num.455
//Instructions in stack: Num.456
//Instructions in stack: Num.457
//Instructions in stack: Num.458
//Instructions in stack: Num.459
//Instructions in stack: Num.460
//Instructions in stack: Num.461
//Instructions in stack: Num.462
//Instructions in stack: Num.463
//Instructions in stack: Num.464
//Instructions in stack: Num.465
//Instructions in stack: Num.466
//Instructions in stack: Num.467
//Instructions in stack: Num.468
//Instructions in stack: Num.469
//Instructions in stack: Num.470
//Instructions in stack: Num.471
//Instructions in stack: Num.472
//Instructions in stack: Num.473
//Instructions in stack: Num.474
//Instructions in stack: Num.475
//Instructions in stack: Num.476
//Instructions in stack: Num.477
//Instructions in stack: Num.478
//Instructions in stack: Num.479
//Instructions in stack: Num.480
//Instructions in stack: Num.481
//Instructions in stack: Num.482
//Instructions in stack: Num.483
//Instructions in stack: Num.484
//Instructions in stack: Num.485
//Instructions in stack: Num.486
//Instructions in stack: Num.487
//Instructions in stack: Num.488
//Instructions in stack: Num.489
//Instructions in stack: Num.490
//Instructions in stack: Num.491
//Instructions in stack: Num.492
//Instructions in stack: Num.493
//Instructions in stack: Num.494
//Instructions in stack: Num.495
//Instructions in stack: Num.496
//Instructions in stack: Num.497
//Instructions in stack: Num.498
//Instructions in stack: Num.499
//Instructions in stack: Num.500
//Instructions in stack: Num.501
//Instructions in stack: Num.502
//Instructions in stack: Num.503
//Instructions in stack: Num.504
//Instructions in stack: Num.505
//Instructions in stack: Num.506
//Instructions in stack: Num.507
//Instructions in stack: Num.508
//Instructions in stack: Num.509
//Instructions in stack: Num.510
//Instructions in stack: Num.511
//Instructions in stack: Num.512
//Instructions in stack: Num.513
//Instructions in stack: Num.514
//Instructions in stack: Num.515
//Instructions in stack: Num.516
//Instructions in stack: Num.517
//Instructions in stack: Num.518
//Instructions in stack: Num.519
//Instructions in stack: Num.520
//Instructions in stack: Num.521
//Instructions in stack: Num.522
//Instructions in stack: Num.523
//Instructions in stack: Num.524
//Instructions in stack: Num.525
//Instructions in stack: Num.526
//Instructions in stack: Num.527
//Instructions in stack: Num.528
//Instructions in stack: Num.529
//Instructions in stack: Num.530
//Instructions in stack: Num.531
//Instructions in stack: Num.532
//Instructions in   %176 = load i32, i32* %c, align 4, !dbg !1087
  %add228 = add nsw i32 %add227, %176, !dbg !1088
  %conv229 = trunc i32 %add228 to i8, !dbg !1089
  %conv230 = zext i8 %conv229 to i16, !dbg !1089
  %177 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1090
  %__ctype_toupper_data231 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %177, i32 0, i32 5, !dbg !1091
  %178 = load i32, i32* %u, align 4, !dbg !1092
  %add232 = add nsw i32 128, %178, !dbg !1093
  %conv233 = trunc i32 %add232 to i8, !dbg !1094
  %conv234 = sext i8 %conv233 to i32, !dbg !1095
  %add235 = add nsw i32 128, %conv234, !dbg !1096
  %idxprom236 = sext i32 %add235 to i64, !dbg !1090
  %arrayidx237 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data231, i64 0, i64 %idxprom236, !dbg !1090
  store i16 %conv230, i16* %arrayidx237, align 2, !dbg !1097
  br label %if.end238, !dbg !1098
  br label %if.end266, !dbg !1099
  %179 = load i32, i32* %u, align 4, !dbg !1100
  %add240 = add nsw i32 128, %179, !dbg !1102
  %180 = load i32, i32* %c, align 4, !dbg !1103
  %sub241 = sub nsw i32 %add240, %180, !dbg !1104
  %conv242 = trunc i32 %sub241 to i8, !dbg !1105
  %conv243 = zext i8 %conv242 to i16, !dbg !1105
  %181 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1106
  %__ctype_tolower_data244 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %181, i32 0, i32 4, !dbg !1107
  %182 = load i32, i32* %u, align 4, !dbg !1108
  %add245 = add nsw i32 256, %182, !dbg !1109
  %idxprom246 = sext i32 %add245 to i64, !dbg !1106
  %arrayidx247 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data244, i64 0, i64 %idxprom246, !dbg !1106
  store i16 %conv243, i16* %arrayidx247, align 2, !dbg !1110
  %183 = load i32, i32* %u, align 4, !dbg !1111
  %add248 = add nsw i32 128, %183, !dbg !1113
  %conv249 = trunc i32 %add248 to i8, !dbg !1114
  %conv250 = sext i8 %conv249 to i32, !dbg !1115
  %cmp251 = icmp ne i32 %conv250, -1, !dbg !1116
  br i1 %cmp251, label %if.then253, label %if.end265, !dbg !1117
  %184 = load i32, i32* %u, align 4, !dbg !1118
  %add254 = add nsw i32 128, %184, !dbg !1120
  %185 = load i32, i32* %c, align 4, !dbg !1121
  %sub255 = sub nsw i32 %add254, %185, !dbg !1122
  %conv256 = trunc i32 %sub255 to i8, !dbg !1123
  %conv257 = zext i8 %conv256 to i16, !dbg !1123
  %186 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1124
  %__ctype_tolower_data258 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %186, i32 0, i32 4, !dbg !1125
  %187 = load i32, i32* %u, align 4, !dbg !1126
  %add259 = add nsw i32 128, %187, !dbg !1127
  %conv260 = trunc i32 %add259 to i8, !dbg !1128
  %conv261 = sext i8 %conv260 to i32, !dbg !1129
  %add262 = add nsw i32 128, %conv261, !dbg !1130
  %idxprom263 = sext i32 %add262 to i64, !dbg !1124
  %arrayidx264 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data258, i64 0, i64 %idxprom263, !dbg !1124
  store i16 %conv257, i16* %arrayidx264, align 2, !dbg !1131
  br label %if.end265, !dbg !1132
  br label %if.end266
  br label %if.end267, !dbg !1133
  br label %for.inc268, !dbg !1134
  %188 = load i32, i32* %u, align 4, !dbg !1135
  %inc269 = add nsw i32 %188, 1, !dbg !1135
  store i32 %inc269, i32* %u, align 4, !dbg !1135
  br label %for.cond142, !dbg !1136, !llvm.loop !1137
  %189 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1139
  %__ctype_b_data271 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %189, i32 0, i32 3, !dbg !1140
  %arraydecay272 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data271, i64 0, i64 0, !dbg !1139
  %add.ptr273 = getelementptr inbounds i16, i16* %arraydecay272, i64 128, !dbg !1141
  %190 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1142
  %__ctype_b = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %190, i32 0, i32 0, !dbg !1143
  store i16* %add.ptr273, i16** %__ctype_b, align 8, !dbg !1144
  %191 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1145
  %__ctype_tolower_data274 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %191, i32 0, i32 4, !dbg !1146
  %arraydecay275 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data274, i64 0, i64 0, !dbg !1145
  %add.ptr276 = getelementptr inbounds i16, i16* %arraydecay275, i64 128, !dbg !1147
  %192 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1148
  %__ctype_tolower = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %192, i32 0, i32 1, !dbg !1149
  store i16* %add.ptr276, i16** %__ctype_tolower, align 8, !dbg !1150
  %193 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1151
  %__ctype_toupper_data277 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %193, i32 0, i32 5, !dbg !1152
  %arraydecay278 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data277, i64 0, i64 0, !dbg !1151
  %add.ptr279 = getelementptr inbounds i16, i16* %arraydecay278, i64 128, !dbg !1153
  %194 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1154
  %__ctype_toupper = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %194, i32 0, i32 2, !dbg !1155
  store i16* %add.ptr279, i16** %__ctype_toupper, align 8, !dbg !1156
  br label %if.end280
  %195 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1157
  %outdigit_length = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %195, i32 0, i32 11, !dbg !1158
  %arraydecay281 = getelementptr inbounds [10 x i8], [10 x i8]* %outdigit_length, i64 0, i64 0, !dbg !1157
  store i8* %arraydecay281, i8** %d, align 8, !dbg !1159
  %196 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1160
  %outdigit0_mb = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %196, i32 0, i32 28, !dbg !1161
  store i8** %outdigit0_mb, i8*** %x, align 8, !dbg !1162
  store i32 0, i32* %c, align 4, !dbg !1163
  br label %for.cond282, !dbg !1165
  %197 = load i32, i32* %c, align 4, !dbg !1166
  %cmp283 = icmp slt i32 %197, 10, !dbg !1168
  br i1 %cmp283, label %for.body285, label %for.end294, !dbg !1169
  %198 = load i8**, i8*** %x, align 8, !dbg !1170
  %199 = load i32, i32* %c, align 4, !dbg !1172
  %idxprom286 = sext i32 %199 to i64, !dbg !1170
  %arrayidx287 = getelementptr inbounds i8*, i8** %198, i64 %idxprom286, !dbg !1170
  %200 = load i8*, i8** %arrayidx287, align 8, !dbg !1170
  %call288 = call i64 @strlen(i8* %200) #12, !dbg !1173
  %conv289 = trunc i64 %call288 to i8, !dbg !1173
  %201 = load i8*, i8** %d, align 8, !dbg !1174
  %202 = load i32, i32* %c, align 4, !dbg !1175
  %idxprom290 = sext i32 %202 to i64, !dbg !1176
  %arrayidx291 = getelementptr inbounds i8, i8* %201, i64 %idxprom290, !dbg !1176
  store i8 %conv289, i8* %arrayidx291, align 1, !dbg !1177
  br label %for.inc292, !dbg !1178
  %203 = load i32, i32* %c, align 4, !dbg !1179
  %inc293 = add nsw i32 %203, 1, !dbg !1179
  store i32 %inc293, i32* %c, align 4, !dbg !1179
  br label %for.cond282, !dbg !1180, !llvm.loop !1181
  br label %if.end312, !dbg !1183
  %204 = load i32, i32* %i, align 4, !dbg !1184
  %cmp296 = icmp eq i32 %204, 1, !dbg !1186
  br i1 %cmp296, label %if.then298, label %if.end311, !dbg !1187
  %205 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1188
  %decimal_point_wc = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %205, i32 0, i32 24, !dbg !1190
  %206 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1191
  %decimal_point = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %206, i32 0, i32 39, !dbg !1192
  %207 = load i8*, i8** %decimal_point, align 8, !dbg !1192
  %208 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1193
  %call299 = call i32 @__locale_mbrtowc_l(i32* %decimal_point_wc, i8* %207, %struct.__uclibc_locale_struct.160* %208) #10, !dbg !1194
  %209 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1195
  %decimal_point_len = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %209, i32 0, i32 26, !dbg !1196
  store i32 %call299, i32* %decimal_point_len, align 8, !dbg !1197
stack: Num.533
//Instructions in stack: Num.534
//Instructions in stack: Num.535
//Instructions in stack: Num.536
//Instructions in stack: Num.537
//Instructions in stack: Num.538
//Instructions in stack: Num.539
//Instructions in stack: Num.540
//Instructions in stack: Num.541
//Instructions in stack: Num.542
//Instructions in stack: Num.543
//Instructions in stack: Num.544
//Instructions in stack: Num.545
//Instructions in stack: Num.546
//Instructions in stack: Num.547
//Instructions in stack: Num.548
//Instructions in stack: Num.549
//Instructions in stack: Num.550
//Instructions in stack: Num.551
//Instructions in stack: Num.552
//Instructions in stack: Num.553
//Instructions in stack: Num.554
//Instructions in stack: Num.555
//Instructions in stack: Num.556
//Instructions in stack: Num.557
//Instructions in stack: Num.558
//Instructions in stack: Num.559
//Instructions in stack: Num.560
//Instructions in stack: Num.561
//Instructions in stack: Num.562
//Instructions in stack: Num.563
//Instructions in stack: Num.564
//Instructions in stack: Num.565
//Instructions in stack: Num.566
//Instructions in stack: Num.567
//Instructions in stack: Num.568
//Instructions in stack: Num.569
//Instructions in stack: Num.570
//Instructions in stack: Num.571
//Instructions in stack: Num.572
//Instructions in stack: Num.573
//Instructions in stack: Num.574
//Instructions in stack: Num.575
//Instructions in stack: Num.576
//Instructions in stack: Num.577
//Instructions in stack: Num.578
//Instructions in stack: Num.579
//Instructions in stack: Num.580
//Instructions in stack: Num.581
//Instructions in stack: Num.582
//Instructions in stack: Num.583
//Instructions in stack: Num.584
//Instructions in stack: Num.585
//Instructions in stack: Num.586
//Instructions in stack: Num.587
//Instructions in stack: Num.588
//Instructions in stack: Num.589
//Instructions in stack: Num.590
//Instructions in stack: Num.591
//Instructions in stack: Num.592
//Instructions in stack: Num.593
//Instructions in stack: Num.594
//Instructions in stack: Num.595
//Instructions in stack: Num.596
//Instructions in stack: Num.597
//Instructions in stack: Num.598
//Instructions in stack: Num.599
//Instructions in stack: Num.600
//Instructions in stack: Num.601
//Instructions in stack: Num.602
//Instructions in stack: Num.603
//Instructions in stack: Num.604
//Instructions in stack: Num.605
//Instructions in stack: Num.606
//Instructions in stack: Num.607
//Instructions in stack: Num.608
//Instructions in stack: Num.609
//Instructions in stack: Num.610
//Instructions in stack: Num.611
//Instructions in stack: Num.612
//Instructions in stack: Num.613
//Instructions in stack: Num.614
//Instructions in stack: Num.615
//Instructions in stack: Num.616
//Instructions in stack: Num.617
//Instructions in stack: Num.618
//Instructions in stack: Num.619
//Instructions in stack: Num.620
//Instructions in stack: Num.621
//Instructions in stack: Num.622
//Instructions in stack: Num.623
//Instructions in stack: Num.624
//Instructions in stack: Num.625
//Instructions in stack: Num.626
//Instructions in stack: Num.627
//Instructions in stack: Num.628
//Instructions in stack: Num.629
//Instructions in stack: Num.630
//Instructions in stack: Num.631
//Instructions in stack: Num.632
//Instructions in stack: Num.633
//Instructions in stack: Num.634
//Instructions in stack: Num.635
//Instructions in stack: Num.636
//Instructions in stack: Num.637
//Instructions in stack: Num.638
//Instructions in stack: Num.639
//Instructions in stack: Num.640
//Instructions in stack: Num.641
//Instructions in stack: Num.642
//Instructions in stack: Num.643
//Instructions in stack: Num.644
//Instructions in stack: Num.645
//Instructions in stack: Num.646
//Instructions in stack: Num.647
//Instructions in stack: Num.648
//Instructions in stack: Num.649
//Instructions in stack: Num.650
//Instructions in stack: Num.651
//Instructions in stack: Num.652
//Instructions in stack: Num.653
//Instructions in stack: Num.654
//Instructions in stack: Num.655
//Instructions in stack: Num.656
//Instructions in stac  %210 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1198
  %grouping = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %210, i32 0, i32 41, !dbg !1200
  %211 = load i8*, i8** %grouping, align 8, !dbg !1200
  %212 = load i8, i8* %211, align 1, !dbg !1201
  %tobool300 = icmp ne i8 %212, 0, !dbg !1201
  br i1 %tobool300, label %if.then301, label %if.end310, !dbg !1202
  %213 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1203
  %thousands_sep_wc = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %213, i32 0, i32 25, !dbg !1205
  %214 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1206
  %thousands_sep = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %214, i32 0, i32 40, !dbg !1207
  %215 = load i8*, i8** %thousands_sep, align 8, !dbg !1207
  %216 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1208
  %call302 = call i32 @__locale_mbrtowc_l(i32* %thousands_sep_wc, i8* %215, %struct.__uclibc_locale_struct.160* %216) #10, !dbg !1209
  %217 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1210
  %thousands_sep_len = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %217, i32 0, i32 27, !dbg !1211
  store i32 %call302, i32* %thousands_sep_len, align 4, !dbg !1212
  %218 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1213
  %thousands_sep_len303 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %218, i32 0, i32 27, !dbg !1215
  %219 = load i32, i32* %thousands_sep_len303, align 4, !dbg !1215
  %cmp304 = icmp eq i32 %219, 0, !dbg !1216
  br i1 %cmp304, label %if.then306, label %if.end309, !dbg !1217
  %220 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1218
  %thousands_sep307 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %220, i32 0, i32 40, !dbg !1220
  %221 = load i8*, i8** %thousands_sep307, align 8, !dbg !1220
  %222 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1221
  %grouping308 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %222, i32 0, i32 41, !dbg !1222
  store i8* %221, i8** %grouping308, align 8, !dbg !1223
  br label %if.end309, !dbg !1224
  br label %if.end310, !dbg !1225
  br label %if.end311, !dbg !1226
  br label %if.end312
  br label %if.end313, !dbg !1227
  %223 = load i32, i32* %i, align 4, !dbg !1228
  %inc314 = add nsw i32 %223, 1, !dbg !1228
  store i32 %inc314, i32* %i, align 4, !dbg !1228
  %224 = load i8*, i8** %p.addr, align 8, !dbg !1229
  %add.ptr315 = getelementptr inbounds i8, i8* %224, i64 2, !dbg !1229
  store i8* %add.ptr315, i8** %p.addr, align 8, !dbg !1229
  %225 = load i8*, i8** %s, align 8, !dbg !1230
  %add.ptr316 = getelementptr inbounds i8, i8* %225, i64 2, !dbg !1230
  store i8* %add.ptr316, i8** %s, align 8, !dbg !1230
  br label %do.cond, !dbg !1231
  %226 = load i32, i32* %i, align 4, !dbg !1232
  %cmp317 = icmp slt i32 %226, 6, !dbg !1233
  br i1 %cmp317, label %do.body, label %do.end, !dbg !1231, !llvm.loop !1234
  store i32 1, i32* %retval, align 4, !dbg !1236
  br label %return, !dbg !1236
  %227 = load i32, i32* %retval, align 4, !dbg !1237
  ret i32 %227, !dbg !1237
  %s.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !2692, metadata !DIExpression()), !dbg !2693
  call void @llvm.dbg.declare(metadata i8** %p, metadata !2694, metadata !DIExpression()), !dbg !2695
  %0 = load i8*, i8** %s.addr, align 8, !dbg !664
  store i8* %0, i8** %p, align 8, !dbg !666
  br label %for.cond, !dbg !667
  %1 = load i8*, i8** %p, align 8, !dbg !668
  %2 = load i8, i8* %1, align 1, !dbg !670
  %tobool = icmp ne i8 %2, 0, !dbg !671
  br i1 %tobool, label %for.body, label %for.end, !dbg !671
  br label %for.inc, !dbg !671
  %3 = load i8*, i8** %p, align 8, !dbg !672
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !672
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !672
  br label %for.cond, !dbg !673, !llvm.loop !674
  %4 = load i8*, i8** %p, align 8, !dbg !676
  %5 = load i8*, i8** %s.addr, align 8, !dbg !677
  %sub.ptr.lhs.cast = ptrtoint i8* %4 to i64, !dbg !678
  %sub.ptr.rhs.cast = ptrtoint i8* %5 to i64, !dbg !678
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !678
  ret i64 %sub.ptr.sub, !dbg !679
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
k: Num.657
//Instructions in stack: Num.658
//Instructions in stack: Num.659
//Instructions in stack: Num.660
//Instructions in stack: Num.661
//Instructions in stack: Num.662
//Instructions in stack: Num.663
//Instructions in stack: Num.664
//Instructions in stack: Num.665
//Instructions in stack: Num.666
//Instructions in stack: Num.667
//Instructions in stack: Num.668
//Instructions in stack: Num.669
//Instructions in stack: Num.670
//Instructions in stack: Num.671
//Instructions in stack: Num.672
//Instructions in stack: Num.673
//Instructions in stack: Num.674
//Instructions in stack: Num.675
//Instructions in stack: Num.676
//Instructions in stack: Num.677
//Instructions in stack: Num.678
//Instructions in stack: Num.679
//Instructions in stack: Num.680
//Instructions in stack: Num.681
//Instructions in stack: Num.682
//Instructions in stack: Num.683
//Instructions in stack: Num.684
//Instructions in stack: Num.685
//Instructions in stack: Num.686
//Instructions in stack: Num.687
//Instructions in stack: Num.688
//Instructions in stack: Num.689
//Instructions in stack: Num.690
//Instructions in stack: Num.691
//Instructions in stack: Num.692
//Instructions in stack: Num.693
//Instructions in stack: Num.694
//Instructions in stack: Num.695
//Instructions in stack: Num.696
//Instructions in stack: Num.697
//Instructions in stack: Num.698
//Instructions in stack: Num.699
//Instructions in stack: Num.700
//Instructions in stack: Num.701
//Instructions in stack: Num.702
//Instructions in stack: Num.703
//Instructions in stack: Num.704
//Instructions in stack: Num.705
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Nu  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
m.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructio  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  %0 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !657
  %tobool = icmp ne i32 %0, 0, !dbg !657
  br i1 %tobool, label %if.then, label %if.end, !dbg !659
  br label %if.end4, !dbg !660
  %1 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  %inc = add nsw i32 %1, 1, !dbg !661
  store i32 %inc, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  store i64 4096, i64* @__pagesize, align 8, !dbg !662
  br i1 true, label %if.then1, label %if.end2, !dbg !663
  call void @_locale_init() #10, !dbg !664
  br label %if.end2, !dbg !664
  br i1 true, label %if.then3, label %if.end4, !dbg !666
  call void @_stdio_init() #10, !dbg !667
  br label %if.end4, !dbg !667
  ret void, !dbg !669
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** @__global_locale, align 8, !dbg !658
  call void @_locale_init_l(%struct.__uclibc_locale_struct.160* %0) #10, !dbg !659
  ret void, !dbg !660
  %base.addr = alloca %struct.__uclibc_locale_struct.160*, align 8
  store %struct.__uclibc_locale_struct.160* %base, %struct.__uclibc_locale_struct.160** %base.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__uclibc_locale_struct.160** %base.addr, metadata !1973, metadata !DIExpression()), !dbg !1974
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !662
  %cur_locale = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %0, i32 0, i32 6, !dbg !663
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale, i64 0, i64 0, !dbg !662
  %call = call i8* @memset(i8* %arraydecay, i32 0, i64 14) #10, !dbg !664
  %1 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !665
  %cur_locale1 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %1, i32 0, i32 6, !dbg !666
  %arrayidx = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale1, i64 0, i64 0, !dbg !665
  store i8 35, i8* %arrayidx, align 8, !dbg !667
  %2 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !668
  %category_item_count = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %2, i32 0, i32 8, !dbg !669
  %arraydecay2 = getelementptr inbounds [6 x i8], [6 x i8]* %category_item_count, i64 0, i64 0, !dbg !668
  %3 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !670
  %lc_common_item_offsets_LEN = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %3, i32 0, i32 29, !dbg !671
  %arraydecay3 = getelementptr inbounds [6 x i8], [6 x i8]* %lc_common_item_offsets_LEN, i64 0, i64 0, !dbg !670
  %call4 = call i8* @memcpy(i8* %arraydecay2, i8* %arraydecay3, i64 6) #10, !dbg !672
  %4 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !673
  %category_item_count5 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %4, i32 0, i32 8, !dbg !674
  %arrayidx6 = getelementptr inbounds [6 x i8], [6 x i8]* %category_item_count5, i64 0, i64 0, !dbg !673
  %5 = load i8, i8* %arrayidx6, align 2, !dbg !675
  %inc = add i8 %5, 1, !dbg !675
  store i8 %inc, i8* %arrayidx6, align 2, !dbg !675
  %6 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !676
  %category_offsets = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %6, i32 0, i32 7, !dbg !677
  %arrayidx7 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets, i64 0, i64 0, !dbg !676
  store i16 2488, i16* %arrayidx7, align 2, !dbg !678
  %7 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !679
  %category_offsets8 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %7, i32 0, i32 7, !dbg !680
  %arrayidx9 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets8, i64 0, i64 1, !dbg !679
  store i16 2576, i16* %arrayidx9, align 2, !dbg !681
  %8 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !682
  %category_offsets10 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %8, i32 0, i32 7, !dbg !683
  %arrayidx11 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets10, i64 0, i64 2, !dbg !682
  store i16 2600, i16* %arrayidx11, align 2, !dbg !684
  %9 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !685
  %category_offsets12 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %9, i32 0, i32 7, !dbg !686
  %arrayidx13 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets12, i64 0, i64 3, !dbg !685
  store i16 2776, i16* %arrayidx13, align 2, !dbg !687
  %10 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !688
  %category_offsets14 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %10, i32 0, i32 7, !dbg !689
  %arrayidx15 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets14, i64 0, i64 5, !dbg !688
  store i16 3176, i16* %arrayidx15, align 2, !dbg !690
  %11 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !691
  %tbl8ctype = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %11, i32 0, i32 0, !dbg !692
  %12 = bitcast [420 x i8]* %tbl8ctype to i8*, !dbg !693
  %13 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !694
  %tbl8ctype16 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %13, i32 0, i32 13, !dbg !695
  store i8* %12, i8** %tbl8ctype16, align 8, !dbg !696
  %14 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !697
  %tbl8uplow = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %14, i32 0, i32 1, !dbg !698
  %15 = bitcast [504 x i8]* %tbl8uplow to i8*, !dbg !699
  %16 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !700
  %tbl8uplow17 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %16, i32 0, i32 15, !dbg !701
  store i8* %15, i8** %tbl8uplow17, align 8, !dbg !702
  %17 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !703
  %tbl8c2wc = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %17, i32 0, i32 2, !dbg !704
  %18 = bitcast [1760 x i16]* %tbl8c2wc to i16*, !dbg !705
  %19 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !706
  %tbl8c2wc18 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %19, i32 0, i32 17, !dbg !707
  store i16* %18, i16** %tbl8c2wc18, align 8, !dbg !708
  %20 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !709
  %tbl8wc2c = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %20, i32 0, i32 3, !dbg !710
  %21 = bitcast [4528 x i8]* %tbl8wc2c to i8*, !dbg !711
  %22 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !712
  %tbl8wc2c19 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %22, i32 0, i32 19, !dbg !713
  store i8* %21, i8** %tbl8wc2c19, align 8, !dbg !714
  %23 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !715
  %tblwctype = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %23, i32 0, i32 4, !dbg !716
  %24 = bitcast [3604 x i8]* %tblwctype to i8*, !dbg !717
  %25 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !718
  %tblwctype20 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %25, i32 0, i32 21, !dbg !719
  store i8* %24, i8** %tblwctype20, align 8, !dbg !720
  %26 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !721
  %tblwuplow = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %26, i32 0, i32 5, !dbg !722
  %27 = bitcast [1680 x i8]* %tblwuplow to i8*, !dbg !723
  %28 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !724
  %tblwuplow21 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %28, i32 0, i32 22, !dbg !725
  store i8* %27, i8** %tblwuplow21, align 8, !dbg !726
  %29 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !727
  %tblwuplow_diff = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %29, i32 0, i32 6, !dbg !728
  %30 = bitcast [196 x i16]* %tblwuplow_diff to i16*, !dbg !729
  %31 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !730
  %tblwuplow_diff22 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %31, i32 0, i32 23, !dbg !731
  store i16* %30, i16** %tblwuplow_diff22, align 8, !dbg !732
  %32 = load i16*, i16** @__C_ctype_b, align 8, !dbg !733
  %33 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !734
  %__ctype_b = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %33, i32 0, i32 0, !dbg !735
  store i16* %32, i16** %__ctype_b, align 8, !dbg !736
  %34 = load i16*, i16** @__C_ctype_tolower, align 8, !dbg !737
  %35 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !738
  %__ctype_tolower = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %35, i32 0, i32 1, !dbg !739
  store i16* %34, i16** %__ctype_tolower, align 8, !dbg !740
  %36 = load i16*, i16** @__C_ctype_toupper, align 8, !dbg !741
  %37 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !742
  %__ctype_toupper = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %37, i32 0, i32 2, !dbg !743
  store i16* %36, i16** %__ctype_toupper, align 8, !dbg !744
  %38 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !745
ns in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack:  %code2flag = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %38, i32 0, i32 20, !dbg !746
  store i16* getelementptr inbounds ([16 x i16], [16 x i16]* @__code2flag, i64 0, i64 0), i16** %code2flag, align 8, !dbg !747
  %39 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !748
  %call23 = call i32 @_locale_set_l(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), %struct.__uclibc_locale_struct.160* %39) #11, !dbg !749
  ret void, !dbg !750
  %retval = alloca i32, align 4
  %p.addr = alloca i8*, align 8
  %base.addr = alloca %struct.__uclibc_locale_struct.160*, align 8
  %x = alloca i8**, align 8
  %s = alloca i8*, align 8
  %stp = alloca i64*, align 8
  %r = alloca i8*, align 8
  %io = alloca i16*, align 8
  %ii = alloca i16*, align 8
  %d = alloca i8*, align 8
  %row = alloca i32, align 4
  %crow = alloca i32, align 4
  %len = alloca i32, align 4
  %c = alloca i32, align 4
  %i = alloca i32, align 4
  %newcol = alloca %struct.__collate_t.159, align 8
  %c8b = alloca %struct.__codeset_8_bit_t.161*, align 8
  %u = alloca i32, align 4
  %m = alloca i16, align 2
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !1060, metadata !DIExpression()), !dbg !1061
  store %struct.__uclibc_locale_struct.160* %base, %struct.__uclibc_locale_struct.160** %base.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__uclibc_locale_struct.160** %base.addr, metadata !1062, metadata !DIExpression()), !dbg !1063
  call void @llvm.dbg.declare(metadata i8*** %x, metadata !1064, metadata !DIExpression()), !dbg !1065
  call void @llvm.dbg.declare(metadata i8** %s, metadata !1066, metadata !DIExpression()), !dbg !1067
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !668
  %cur_locale = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %0, i32 0, i32 6, !dbg !669
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale, i64 0, i64 0, !dbg !668
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 1, !dbg !670
  store i8* %add.ptr, i8** %s, align 8, !dbg !667
  call void @llvm.dbg.declare(metadata i64** %stp, metadata !1071, metadata !DIExpression()), !dbg !1074
  call void @llvm.dbg.declare(metadata i8** %r, metadata !1075, metadata !DIExpression()), !dbg !1076
  call void @llvm.dbg.declare(metadata i16** %io, metadata !1077, metadata !DIExpression()), !dbg !1078
  call void @llvm.dbg.declare(metadata i16** %ii, metadata !1079, metadata !DIExpression()), !dbg !1080
  call void @llvm.dbg.declare(metadata i8** %d, metadata !1081, metadata !DIExpression()), !dbg !1082
  call void @llvm.dbg.declare(metadata i32* %row, metadata !1083, metadata !DIExpression()), !dbg !1084
  call void @llvm.dbg.declare(metadata i32* %crow, metadata !1085, metadata !DIExpression()), !dbg !1086
  call void @llvm.dbg.declare(metadata i32* %len, metadata !1087, metadata !DIExpression()), !dbg !1088
  call void @llvm.dbg.declare(metadata i32* %c, metadata !1089, metadata !DIExpression()), !dbg !1090
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1091, metadata !DIExpression()), !dbg !1092
  store i32 0, i32* %i, align 4, !dbg !692
  call void @llvm.dbg.declare(metadata %struct.__collate_t.159* %newcol, metadata !1093, metadata !DIExpression()), !dbg !1094
  %1 = load i8*, i8** %p.addr, align 8, !dbg !695
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i32 1, !dbg !695
  store i8* %incdec.ptr, i8** %p.addr, align 8, !dbg !695
  %index2weight = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %newcol, i32 0, i32 23, !dbg !696
  store i16* null, i16** %index2weight, align 8, !dbg !697
  %2 = load i8*, i8** %p.addr, align 8, !dbg !698
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 8, !dbg !698
  %3 = load i8, i8* %arrayidx, align 1, !dbg !698
  %conv = zext i8 %3 to i32, !dbg !698
  %4 = load i8*, i8** %s, align 8, !dbg !700
  %arrayidx1 = getelementptr inbounds i8, i8* %4, i64 8, !dbg !700
  %5 = load i8, i8* %arrayidx1, align 1, !dbg !700
  %conv2 = zext i8 %5 to i32, !dbg !700
  %cmp = icmp ne i32 %conv, %conv2, !dbg !701
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !702
  %6 = load i8*, i8** %p.addr, align 8, !dbg !703
  %arrayidx4 = getelementptr inbounds i8, i8* %6, i64 9, !dbg !703
  %7 = load i8, i8* %arrayidx4, align 1, !dbg !703
  %conv5 = zext i8 %7 to i32, !dbg !703
  %8 = load i8*, i8** %s, align 8, !dbg !704
  %arrayidx6 = getelementptr inbounds i8, i8* %8, i64 9, !dbg !704
  %9 = load i8, i8* %arrayidx6, align 1, !dbg !704
  %conv7 = zext i8 %9 to i32, !dbg !704
  %cmp8 = icmp ne i32 %conv5, %conv7, !dbg !705
  br i1 %cmp8, label %if.then, label %if.end22, !dbg !706
  %10 = load i8*, i8** %p.addr, align 8, !dbg !707
  %11 = load i8, i8* %10, align 1, !dbg !709
  %conv10 = zext i8 %11 to i32, !dbg !709
  %and = and i32 %conv10, 127, !dbg !710
  %shl = shl i32 %and, 7, !dbg !711
  %12 = load i8*, i8** %p.addr, align 8, !dbg !712
  %arrayidx11 = getelementptr inbounds i8, i8* %12, i64 1, !dbg !712
  %13 = load i8, i8* %arrayidx11, align 1, !dbg !712
  %conv12 = zext i8 %13 to i32, !dbg !712
  %and13 = and i32 %conv12, 127, !dbg !713
  %add = add nsw i32 %shl, %and13, !dbg !714
  store i32 %add, i32* %row, align 4, !dbg !715
  %14 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !716
  %locales = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %14, i32 0, i32 31, !dbg !718
  %15 = load i32, i32* %row, align 4, !dbg !719
  %mul = mul nsw i32 9, %15, !dbg !720
  %add14 = add nsw i32 %mul, 3, !dbg !721
  %add15 = add nsw i32 %add14, 4, !dbg !722
  %idxprom = sext i32 %add15 to i64, !dbg !716
  %arrayidx16 = getelementptr inbounds [2826 x i8], [2826 x i8]* %locales, i64 0, i64 %idxprom, !dbg !716
  %16 = load i8, i8* %arrayidx16, align 1, !dbg !716
  %conv17 = zext i8 %16 to i32, !dbg !716
  %call = call i32 @init_cur_collate(i32 %conv17, %struct.__collate_t.159* %newcol) #10, !dbg !723
  %tobool = icmp ne i32 %call, 0, !dbg !723
  br i1 %tobool, label %if.end, label %if.then18, !dbg !724
  store i32 0, i32* %retval, align 4, !dbg !725
  br label %return, !dbg !725
  %17 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !727
  %collate = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %17, i32 0, i32 118, !dbg !728
  %index2weight19 = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %collate, i32 0, i32 23, !dbg !729
  %18 = load i16*, i16** %index2weight19, align 8, !dbg !729
  %19 = bitcast i16* %18 to i8*, !dbg !727
  call void @free(i8* %19) #11, !dbg !730
  %20 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !731
  %collate20 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %20, i32 0, i32 118, !dbg !732
  %21 = bitcast %struct.__collate_t.159* %collate20 to i8*, !dbg !733
  %22 = bitcast %struct.__collate_t.159* %newcol to i8*, !dbg !734
  %call21 = call i8* @memcpy(i8* %21, i8* %22, i64 112) #11, !dbg !735
  br label %if.end22, !dbg !736
  br label %do.body, !dbg !737
  %23 = load i8*, i8** %p.addr, align 8, !dbg !738
  %24 = load i8, i8* %23, align 1, !dbg !741
  %conv23 = zext i8 %24 to i32, !dbg !741
  %25 = load i8*, i8** %s, align 8, !dbg !742
  %26 = load i8, i8* %25, align 1, !dbg !743
  %conv24 = zext i8 %26 to i32, !dbg !743
  %cmp25 = icmp ne i32 %conv23, %conv24, !dbg !744
  br i1 %cmp25, label %if.then34, label %lor.lhs.false27, !dbg !745
  %27 = load i8*, i8** %p.addr, align 8, !dbg !746
  %arrayidx28 = getelementptr inbounds i8, i8* %27, i64 1, !dbg !746
  %28 = load i8, i8* %arrayidx28, align 1, !dbg !746
  %conv29 = zext i8 %28 to i32, !dbg !746
  %29 = load i8*, i8** %s, align 8, !dbg !747
  %arrayidx30 = getelementptr inbounds i8, i8* %29, i64 1, !dbg !747
  %30 = load i8, i8* %arrayidx30, align 1, !dbg !747
  %conv31 = zext i8 %30 to i32, !dbg !747
 Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instr  %cmp32 = icmp ne i32 %conv29, %conv31, !dbg !748
  br i1 %cmp32, label %if.then34, label %if.end313, !dbg !749
  %31 = load i8*, i8** %p.addr, align 8, !dbg !750
  %32 = load i8, i8* %31, align 1, !dbg !752
  %conv35 = zext i8 %32 to i32, !dbg !752
  %and36 = and i32 %conv35, 127, !dbg !753
  %shl37 = shl i32 %and36, 7, !dbg !754
  %33 = load i8*, i8** %p.addr, align 8, !dbg !755
  %arrayidx38 = getelementptr inbounds i8, i8* %33, i64 1, !dbg !755
  %34 = load i8, i8* %arrayidx38, align 1, !dbg !755
  %conv39 = zext i8 %34 to i32, !dbg !755
  %and40 = and i32 %conv39, 127, !dbg !756
  %add41 = add nsw i32 %shl37, %and40, !dbg !757
  store i32 %add41, i32* %row, align 4, !dbg !758
  %35 = load i8*, i8** %p.addr, align 8, !dbg !759
  %36 = load i8, i8* %35, align 1, !dbg !760
  %37 = load i8*, i8** %s, align 8, !dbg !761
  store i8 %36, i8* %37, align 1, !dbg !762
  %38 = load i8*, i8** %p.addr, align 8, !dbg !763
  %arrayidx42 = getelementptr inbounds i8, i8* %38, i64 1, !dbg !763
  %39 = load i8, i8* %arrayidx42, align 1, !dbg !763
  %40 = load i8*, i8** %s, align 8, !dbg !764
  %arrayidx43 = getelementptr inbounds i8, i8* %40, i64 1, !dbg !764
  store i8 %39, i8* %arrayidx43, align 1, !dbg !765
  %41 = load i32, i32* %i, align 4, !dbg !766
  %cmp44 = icmp ne i32 %41, 4, !dbg !768
  br i1 %cmp44, label %land.lhs.true, label %if.end92, !dbg !769
  %42 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !770
  %lc_common_item_offsets_LEN = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %42, i32 0, i32 29, !dbg !771
  %43 = load i32, i32* %i, align 4, !dbg !772
  %idxprom46 = sext i32 %43 to i64, !dbg !770
  %arrayidx47 = getelementptr inbounds [6 x i8], [6 x i8]* %lc_common_item_offsets_LEN, i64 0, i64 %idxprom46, !dbg !770
  %44 = load i8, i8* %arrayidx47, align 1, !dbg !770
  %conv48 = zext i8 %44 to i32, !dbg !770
  store i32 %conv48, i32* %len, align 4, !dbg !773
  %cmp49 = icmp ne i32 %conv48, 0, !dbg !774
  br i1 %cmp49, label %if.then51, label %if.end92, !dbg !775
  %45 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !776
  %locales52 = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %45, i32 0, i32 31, !dbg !778
  %46 = load i32, i32* %row, align 4, !dbg !779
  %mul53 = mul nsw i32 9, %46, !dbg !780
  %add54 = add nsw i32 %mul53, 3, !dbg !781
  %47 = load i32, i32* %i, align 4, !dbg !782
  %add55 = add nsw i32 %add54, %47, !dbg !783
  %idxprom56 = sext i32 %add55 to i64, !dbg !776
  %arrayidx57 = getelementptr inbounds [2826 x i8], [2826 x i8]* %locales52, i64 0, i64 %idxprom56, !dbg !776
  %48 = load i8, i8* %arrayidx57, align 1, !dbg !776
  %conv58 = zext i8 %48 to i32, !dbg !776
  %49 = load i32, i32* %len, align 4, !dbg !784
  %mul59 = mul nsw i32 %conv58, %49, !dbg !785
  store i32 %mul59, i32* %crow, align 4, !dbg !786
  %50 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !787
  %51 = bitcast %struct.__uclibc_locale_struct.160* %50 to i8*, !dbg !788
  %52 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !789
  %category_offsets = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %52, i32 0, i32 7, !dbg !790
  %53 = load i32, i32* %i, align 4, !dbg !791
  %idxprom60 = sext i32 %53 to i64, !dbg !789
  %arrayidx61 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets, i64 0, i64 %idxprom60, !dbg !789
  %54 = load i16, i16* %arrayidx61, align 2, !dbg !789
  %conv62 = zext i16 %54 to i32, !dbg !789
  %idx.ext = sext i32 %conv62 to i64, !dbg !792
  %add.ptr63 = getelementptr inbounds i8, i8* %51, i64 %idx.ext, !dbg !792
  %55 = bitcast i8* %add.ptr63 to i8**, !dbg !793
  store i8** %55, i8*** %x, align 8, !dbg !794
  %56 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !795
  %lc_common_tbl_offsets = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %56, i32 0, i32 30, !dbg !796
  %arraydecay64 = getelementptr inbounds [24 x i64], [24 x i64]* %lc_common_tbl_offsets, i64 0, i64 0, !dbg !795
  %57 = load i32, i32* %i, align 4, !dbg !797
  %mul65 = mul nsw i32 4, %57, !dbg !798
  %idx.ext66 = sext i32 %mul65 to i64, !dbg !799
  %add.ptr67 = getelementptr inbounds i64, i64* %arraydecay64, i64 %idx.ext66, !dbg !799
  store i64* %add.ptr67, i64** %stp, align 8, !dbg !800
  %58 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !801
  %59 = bitcast %struct.__locale_mmap_t.162* %58 to i8*, !dbg !802
  %60 = load i64*, i64** %stp, align 8, !dbg !803
  %61 = load i64, i64* %60, align 8, !dbg !804
  %add.ptr68 = getelementptr inbounds i8, i8* %59, i64 %61, !dbg !805
  store i8* %add.ptr68, i8** %r, align 8, !dbg !806
  %62 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !807
  %63 = bitcast %struct.__locale_mmap_t.162* %62 to i8*, !dbg !808
  %64 = load i64*, i64** %stp, align 8, !dbg !809
  %incdec.ptr69 = getelementptr inbounds i64, i64* %64, i32 1, !dbg !809
  store i64* %incdec.ptr69, i64** %stp, align 8, !dbg !809
  %65 = load i64, i64* %incdec.ptr69, align 8, !dbg !810
  %add.ptr70 = getelementptr inbounds i8, i8* %63, i64 %65, !dbg !811
  %66 = bitcast i8* %add.ptr70 to i16*, !dbg !812
  store i16* %66, i16** %io, align 8, !dbg !813
  %67 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !814
  %68 = bitcast %struct.__locale_mmap_t.162* %67 to i8*, !dbg !815
  %69 = load i64*, i64** %stp, align 8, !dbg !816
  %incdec.ptr71 = getelementptr inbounds i64, i64* %69, i32 1, !dbg !816
  store i64* %incdec.ptr71, i64** %stp, align 8, !dbg !816
  %70 = load i64, i64* %incdec.ptr71, align 8, !dbg !817
  %add.ptr72 = getelementptr inbounds i8, i8* %68, i64 %70, !dbg !818
  %71 = bitcast i8* %add.ptr72 to i16*, !dbg !819
  store i16* %71, i16** %ii, align 8, !dbg !820
  %72 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !821
  %73 = bitcast %struct.__locale_mmap_t.162* %72 to i8*, !dbg !822
  %74 = load i64*, i64** %stp, align 8, !dbg !823
  %incdec.ptr73 = getelementptr inbounds i64, i64* %74, i32 1, !dbg !823
  store i64* %incdec.ptr73, i64** %stp, align 8, !dbg !823
  %75 = load i64, i64* %incdec.ptr73, align 8, !dbg !824
  %add.ptr74 = getelementptr inbounds i8, i8* %73, i64 %75, !dbg !825
  store i8* %add.ptr74, i8** %d, align 8, !dbg !826
  store i32 0, i32* %c, align 4, !dbg !827
  br label %for.cond, !dbg !829
  %76 = load i32, i32* %c, align 4, !dbg !830
  %77 = load i32, i32* %len, align 4, !dbg !832
  %cmp75 = icmp slt i32 %76, %77, !dbg !833
  br i1 %cmp75, label %for.body, label %for.end, !dbg !834
  %78 = load i8*, i8** %d, align 8, !dbg !835
  %79 = load i16*, i16** %ii, align 8, !dbg !837
  %80 = load i8*, i8** %r, align 8, !dbg !838
  %81 = load i32, i32* %crow, align 4, !dbg !839
  %82 = load i32, i32* %c, align 4, !dbg !840
  %add77 = add nsw i32 %81, %82, !dbg !841
  %idxprom78 = sext i32 %add77 to i64, !dbg !838
  %arrayidx79 = getelementptr inbounds i8, i8* %80, i64 %idxprom78, !dbg !838
  %83 = load i8, i8* %arrayidx79, align 1, !dbg !838
  %conv80 = zext i8 %83 to i32, !dbg !838
  %84 = load i16*, i16** %io, align 8, !dbg !842
  %85 = load i32, i32* %c, align 4, !dbg !843
  %idxprom81 = sext i32 %85 to i64, !dbg !842
  %arrayidx82 = getelementptr inbounds i16, i16* %84, i64 %idxprom81, !dbg !842
uctions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.190
//Instructions in stack: Num.191
//Instructions in stack: Num.192
//Instructions in stack: Num.193
//Instructions in stack: Num.194
//Instructions in stack: Num.195
//Instructions in stack: Num.196
//Instructions in stack: Num.197
//Instructions in stack: Num.198
//Instructions in stack: Num.199
//Instructions in stack: Num.200
//Instructions in stack: Num.201
//Instructions in stack: Num.202
//Instructions in stack: Num.203
//Instructions in stack: Num.204
//Instructions in stack: Num.205
//Instructions in stack: Num.206
//Instructions in stack: Num.207
//Instructions in stack: Num.208
//Instructions in stack: Num.209
//Instructions in stack: Num.210
//Instructions in stack: Num.211
//Instructions in stack: Num.212
//Instructions in stack: Num.213
//Instructions in stack: Num.214
//Instructions in stack: Num.215
//Instructions in stack: Num.216
//Instructions in stack: Num.217
//Instructions in stack: Num.218
//Instructions in stack: Num.219
//Instructions in stack: Num.220
//Instructions in stack: Num.221
//Instructions in stack: Num.222
//Instructions in stack: Num.223
//Instructions in stack: Num.224
//Instructions in stack: Num.225
//Instructions in stack: Num.226
//Instructions in stack: Num.227
//Instructions in stack: Num.228
//Instructions in stack: Num.229
//Instructions in stack: Num.230
//Instructions in stack: Num.231
//Instructions in stack: Num.232
//Instructions in stack: Num.233
//Instructions in stack: Num.234
//Instructions in stack: Num.235
//Instructions in stack: Num.236
//Instructions in stack: Num.237
//Instructions in stack: Num.238
//Instructions in stack: Num.239
//Instructions in stack: Num.240
//Instructions in stack: Num.241
//Instructions in stack: Num.242
//Instructions in stack: Num.243
//Instructions in stack: Num.244
//Instructions in stack: Num.245
//Instructions in stack: Num.246
//Instructi  %86 = load i16, i16* %arrayidx82, align 2, !dbg !842
  %conv83 = zext i16 %86 to i32, !dbg !842
  %add84 = add nsw i32 %conv80, %conv83, !dbg !844
  %idxprom85 = sext i32 %add84 to i64, !dbg !837
  %arrayidx86 = getelementptr inbounds i16, i16* %79, i64 %idxprom85, !dbg !837
  %87 = load i16, i16* %arrayidx86, align 2, !dbg !837
  %conv87 = zext i16 %87 to i32, !dbg !837
  %idx.ext88 = sext i32 %conv87 to i64, !dbg !845
  %add.ptr89 = getelementptr inbounds i8, i8* %78, i64 %idx.ext88, !dbg !845
  %88 = load i8**, i8*** %x, align 8, !dbg !846
  %89 = load i32, i32* %c, align 4, !dbg !847
  %idx.ext90 = sext i32 %89 to i64, !dbg !848
  %add.ptr91 = getelementptr inbounds i8*, i8** %88, i64 %idx.ext90, !dbg !848
  store i8* %add.ptr89, i8** %add.ptr91, align 8, !dbg !849
  br label %for.inc, !dbg !850
  %90 = load i32, i32* %c, align 4, !dbg !851
  %inc = add nsw i32 %90, 1, !dbg !851
  store i32 %inc, i32* %c, align 4, !dbg !851
  br label %for.cond, !dbg !852, !llvm.loop !853
  br label %if.end92, !dbg !855
  %91 = load i32, i32* %i, align 4, !dbg !856
  %cmp93 = icmp eq i32 %91, 0, !dbg !858
  br i1 %cmp93, label %if.then95, label %if.else295, !dbg !859
  %92 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !860
  %locales96 = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %92, i32 0, i32 31, !dbg !862
  %93 = load i32, i32* %row, align 4, !dbg !863
  %mul97 = mul nsw i32 9, %93, !dbg !864
  %add98 = add nsw i32 %mul97, 2, !dbg !865
  %idxprom99 = sext i32 %add98 to i64, !dbg !860
  %arrayidx100 = getelementptr inbounds [2826 x i8], [2826 x i8]* %locales96, i64 0, i64 %idxprom99, !dbg !860
  %94 = load i8, i8* %arrayidx100, align 1, !dbg !860
  %conv101 = zext i8 %94 to i32, !dbg !860
  store i32 %conv101, i32* %c, align 4, !dbg !866
  %95 = load i32, i32* %c, align 4, !dbg !867
  %cmp102 = icmp sle i32 %95, 2, !dbg !869
  br i1 %cmp102, label %if.then104, label %if.else112, !dbg !870
  %96 = load i32, i32* %c, align 4, !dbg !871
  %cmp105 = icmp eq i32 %96, 2, !dbg !874
  br i1 %cmp105, label %if.then107, label %if.else, !dbg !875
  %97 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !876
  %codeset = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %97, i32 0, i32 38, !dbg !878
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @utf8, i64 0, i64 0), i8** %codeset, align 8, !dbg !879
  %98 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !880
  %encoding = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %98, i32 0, i32 9, !dbg !881
  store i8 1, i8* %encoding, align 8, !dbg !882
  %99 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !883
  %mb_cur_max = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %99, i32 0, i32 10, !dbg !884
  store i8 6, i8* %mb_cur_max, align 1, !dbg !885
  br label %if.end111, !dbg !886
  %100 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !887
  %codeset108 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %100, i32 0, i32 38, !dbg !889
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @ascii, i64 0, i64 0), i8** %codeset108, align 8, !dbg !890
  %101 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !891
  %encoding109 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %101, i32 0, i32 9, !dbg !892
  store i8 0, i8* %encoding109, align 8, !dbg !893
  %102 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !894
  %mb_cur_max110 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %102, i32 0, i32 10, !dbg !895
  store i8 1, i8* %mb_cur_max110, align 1, !dbg !896
  br label %if.end111
  br label %if.end280, !dbg !897
  call void @llvm.dbg.declare(metadata %struct.__codeset_8_bit_t.161** %c8b, metadata !1298, metadata !DIExpression()), !dbg !1310
  %103 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !911
  %codeset_list = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %103, i32 0, i32 35, !dbg !911
  %arraydecay113 = getelementptr inbounds [255 x i8], [255 x i8]* %codeset_list, i64 0, i64 0, !dbg !911
  store i8* %arraydecay113, i8** %r, align 8, !dbg !912
  %104 = load i8*, i8** %r, align 8, !dbg !913
  %105 = load i8*, i8** %r, align 8, !dbg !914
  %106 = load i32, i32* %c, align 4, !dbg !915
  %sub = sub nsw i32 %106, 3, !dbg !915
  store i32 %sub, i32* %c, align 4, !dbg !915
  %idxprom114 = sext i32 %sub to i64, !dbg !914
  %arrayidx115 = getelementptr inbounds i8, i8* %105, i64 %idxprom114, !dbg !914
  %107 = load i8, i8* %arrayidx115, align 1, !dbg !914
  %conv116 = zext i8 %107 to i32, !dbg !914
  %idx.ext117 = sext i32 %conv116 to i64, !dbg !916
  %add.ptr118 = getelementptr inbounds i8, i8* %104, i64 %idx.ext117, !dbg !916
  %108 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !917
  %codeset119 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %108, i32 0, i32 38, !dbg !918
  store i8* %add.ptr118, i8** %codeset119, align 8, !dbg !919
  %109 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !920
  %encoding120 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %109, i32 0, i32 9, !dbg !921
  store i8 2, i8* %encoding120, align 8, !dbg !922
  %110 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !923
  %mb_cur_max121 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %110, i32 0, i32 10, !dbg !924
  store i8 1, i8* %mb_cur_max121, align 1, !dbg !925
  %111 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !926
  %codeset_8_bit = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %111, i32 0, i32 12, !dbg !927
  %arraydecay122 = getelementptr inbounds [23 x %struct.__codeset_8_bit_t.161], [23 x %struct.__codeset_8_bit_t.161]* %codeset_8_bit, i64 0, i64 0, !dbg !926
  %112 = load i32, i32* %c, align 4, !dbg !928
  %idx.ext123 = sext i32 %112 to i64, !dbg !929
  %add.ptr124 = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %arraydecay122, i64 %idx.ext123, !dbg !929
  store %struct.__codeset_8_bit_t.161* %add.ptr124, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !930
  %113 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !931
  %idx8ctype = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %113, i32 0, i32 0, !dbg !932
  %arraydecay125 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8ctype, i64 0, i64 0, !dbg !931
  %114 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !933
  %idx8ctype126 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %114, i32 0, i32 12, !dbg !934
  store i8* %arraydecay125, i8** %idx8ctype126, align 8, !dbg !935
  %115 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !936
  %idx8uplow = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %115, i32 0, i32 1, !dbg !937
  %arraydecay127 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8uplow, i64 0, i64 0, !dbg !936
  %116 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !938
  %idx8uplow128 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %116, i32 0, i32 14, !dbg !939
  store i8* %arraydecay127, i8** %idx8uplow128, align 8, !dbg !940
  %117 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !941
  %idx8c2wc = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %117, i32 0, i32 2, !dbg !942
  %arraydecay129 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8c2wc, i64 0, i64 0, !dbg !941
  %118 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !943
  %idx8c2wc130 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %118, i32 0, i32 16, !dbg !944
  store i8* %arraydecay129, i8** %idx8c2wc130, align 8, !dbg !945
  %119 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !946
  %idx8wc2c = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %119, i32 0, i32 3, !dbg !947
  %arraydecay131 = getelementptr inbounds [38 x i8], [38 x i8]* %idx8wc2c, i64 0, i64 0, !dbg !946
  %120 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !948
  %idx8wc2c132 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %120, i32 0, i32 18, !dbg !949
  store i8* %arraydecay131, i8** %idx8wc2c132, align 8, !dbg !950
  %121 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !951
  %__ctype_b_data = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %121, i32 0, i32 3, !dbg !952
  %arraydecay133 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data, i64 0, i64 0, !dbg !951
  %122 = bitcast i16* %arraydecay133 to i8*, !dbg !951
  %123 = load i16*, i16** @__C_ctype_b, align 8, !dbg !953
  %add.ptr134 = getelementptr inbounds i16, i16* %123, i64 -128, !dbg !954
  %124 = bitcast i16* %add.ptr134 to i8*, !dbg !953
  %call135 = call i8* @memcpy(i8* %122, i8* %124, i64 768) #11, !dbg !955
ons in stack: Num.247
//Instructions in stack: Num.248
//Instructions in stack: Num.249
//Instructions in stack: Num.250
//Instructions in stack: Num.251
//Instructions in stack: Num.252
//Instructions in stack: Num.253
//Instructions in stack: Num.254
//Instructions in stack: Num.255
//Instructions in stack: Num.256
//Instructions in stack: Num.257
//Instructions in stack: Num.258
//Instructions in stack: Num.259
//Instructions in stack: Num.260
//Instructions in stack: Num.261
//Instructions in stack: Num.262
//Instructions in stack: Num.263
//Instructions in stack: Num.264
//Instructions in stack: Num.265
//Instructions in stack: Num.266
//Instructions in stack: Num.267
//Instructions in stack: Num.268
//Instructions in stack: Num.269
//Instructions in stack: Num.270
//Instructions in stack: Num.271
//Instructions in stack: Num.272
//Instructions in stack: Num.273
//Instructions in stack: Num.274
//Instructions in stack: Num.275
//Instructions in stack: Num.276
//Instructions in stack: Num.277
//Instructions in stack: Num.278
//Instructions in stack: Num.279
//Instructions in stack: Num.280
//Instructions in stack: Num.281
//Instructions in stack: Num.282
//Instructions in stack: Num.283
//Instructions in stack: Num.284
//Instructions in stack: Num.285
//Instructions in stack: Num.286
//Instructions in stack: Num.287
//Instructions in stack: Num.288
//Instructions in stack: Num.289
//Instructions in stack: Num.290
//Instructions in stack: Num.291
//Instructions in stack: Num.292
//Instructions in stack: Num.293
//Instructions in stack: Num.294
//Instructions in stack: Num.295
//Instructions in stack: Num.296
//Instructions in stack: Num.297
//Instructions in stack: Num.298
//Instructions in stack: Num.299
//Instructions in stack: Num.300
//Instructions in stack: Num.301
//Instructions in stack: Num.302
//Instructions in stack: Num.303
//Instructions in stack: Num.304
//Instructions in stack: Num.305
//Instructions in stack: Num.306
//Instructions in stack: Num.307
//Instructions in stack: Num.308
//Instructions in stack: Num.309
//Instructions in stack: Num.310
//Instructions in stack: Num.311
//Instructions in stack: Num.312
//Instructions in stack: Num.313
//Instructions in stack: Num.314
//Instructions in stack: Num.315
//Instructions in stack: Num.316
//Instructions in stack: Num.317
//Instructions in stack: Num.318
//Instructions in stack: Num.319
//Instructions in stack: Num.320
//Instructions in stack: Num.321
//Instructions in stack: Num.322
//Instructions in stack: Num.323
//Instructions in stack: Num.324
//Instructions in stack: Num.325
//Instructions in stack: Num.326
//Instructions in stack: Num.327
//Instructions in stack: Num.328
//Instructions in stack: Num.329
//Instructions in stack: Num.330
//Instructions in stack: Num.331
//Instructions in stack: Num.332
//Instructions in stack: Num.333
//Instructions in stack: Num.334
//Instructions in stack: Num.335
//Instructions in stack: Num.336
//Instructions in stack: Num.337
//Instructions in stack: Num.338
//Instructions in stack: Num.339
//Instructions in stack: Num.340
//Instructions in stack: Num.341
//Instructions in stack: Num.342
//Instructions in stack: Num.343
//Instructions in stack: Num.344
//Instructions in stack: Num.345
//Instructions in stack: Num.346
//Instructions in stack: Num.347
//Instructions in stack: Num.348
//Instructions in stack: Num.349
//Instructions in stack: Num.350
//Instructions in stack: Num.351
//Instructions in stack: Num.352
//Instructions in stack: Num.353
//Instructions in stack: Num.354
//Instructions in stack: Num.355
//Instructions in stack: Num.356
//Instructions in stack: Num.357
//Instructions in stack: Num.358
//Instructions in stack: Num.359
//Instructions in stack: Num.360
//Instructions in stack: Num.361
//Instructions in stack: Num.362
//Instructions in stack: Num.363
//Instructions in stack: Num.364
//Instructions in stack: Num.365
//Instructions in stack: Num.366
//Instructions in stack: Num.367
//Instructions in stack: Num.368
//Instructions in stack: Num.369
//Instructions in stack: Num.370
//Instructions   %125 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !956
  %__ctype_tolower_data = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %125, i32 0, i32 4, !dbg !957
  %arraydecay136 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data, i64 0, i64 0, !dbg !956
  %126 = bitcast i16* %arraydecay136 to i8*, !dbg !956
  %127 = load i16*, i16** @__C_ctype_tolower, align 8, !dbg !958
  %add.ptr137 = getelementptr inbounds i16, i16* %127, i64 -128, !dbg !959
  %128 = bitcast i16* %add.ptr137 to i8*, !dbg !958
  %call138 = call i8* @memcpy(i8* %126, i8* %128, i64 768) #11, !dbg !960
  %129 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !961
  %__ctype_toupper_data = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %129, i32 0, i32 5, !dbg !962
  %arraydecay139 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data, i64 0, i64 0, !dbg !961
  %130 = bitcast i16* %arraydecay139 to i8*, !dbg !961
  %131 = load i16*, i16** @__C_ctype_toupper, align 8, !dbg !963
  %add.ptr140 = getelementptr inbounds i16, i16* %131, i64 -128, !dbg !964
  %132 = bitcast i16* %add.ptr140 to i8*, !dbg !963
  %call141 = call i8* @memcpy(i8* %130, i8* %132, i64 768) #11, !dbg !965
  call void @llvm.dbg.declare(metadata i32* %u, metadata !1366, metadata !DIExpression()), !dbg !1368
  call void @llvm.dbg.declare(metadata i16* %m, metadata !1369, metadata !DIExpression()), !dbg !1370
  store i32 0, i32* %u, align 4, !dbg !971
  br label %for.cond142, !dbg !973
  %133 = load i32, i32* %u, align 4, !dbg !974
  %cmp143 = icmp slt i32 %133, 128, !dbg !976
  br i1 %cmp143, label %for.body145, label %for.end270, !dbg !977
  %134 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !978
  %tbl8ctype = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %134, i32 0, i32 13, !dbg !980
  %135 = load i8*, i8** %tbl8ctype, align 8, !dbg !980
  %136 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !981
  %idx8ctype146 = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %136, i32 0, i32 0, !dbg !982
  %137 = load i32, i32* %u, align 4, !dbg !983
  %shr = ashr i32 %137, 3, !dbg !984
  %idxprom147 = sext i32 %shr to i64, !dbg !981
  %arrayidx148 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8ctype146, i64 0, i64 %idxprom147, !dbg !981
  %138 = load i8, i8* %arrayidx148, align 1, !dbg !981
  %conv149 = zext i8 %138 to i32, !dbg !985
  %shl150 = shl i32 %conv149, 2, !dbg !986
  %139 = load i32, i32* %u, align 4, !dbg !987
  %and151 = and i32 %139, 7, !dbg !988
  %shr152 = ashr i32 %and151, 1, !dbg !989
  %add153 = add nsw i32 %shl150, %shr152, !dbg !990
  %idxprom154 = sext i32 %add153 to i64, !dbg !978
  %arrayidx155 = getelementptr inbounds i8, i8* %135, i64 %idxprom154, !dbg !978
  %140 = load i8, i8* %arrayidx155, align 1, !dbg !978
  %conv156 = zext i8 %140 to i32, !dbg !978
  store i32 %conv156, i32* %c, align 4, !dbg !991
  %141 = load i32, i32* %u, align 4, !dbg !992
  %and157 = and i32 %141, 1, !dbg !993
  %tobool158 = icmp ne i32 %and157, 0, !dbg !993
  br i1 %tobool158, label %cond.true, label %cond.false, !dbg !994
  %142 = load i32, i32* %c, align 4, !dbg !995
  %shr159 = ashr i32 %142, 4, !dbg !996
  br label %cond.end, !dbg !994
  %143 = load i32, i32* %c, align 4, !dbg !997
  %and160 = and i32 %143, 15, !dbg !998
  br label %cond.end, !dbg !994
  %cond = phi i32 [ %shr159, %cond.true ], [ %and160, %cond.false ], !dbg !994
  store i32 %cond, i32* %c, align 4, !dbg !999
  %144 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1000
  %code2flag = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %144, i32 0, i32 20, !dbg !1001
  %145 = load i16*, i16** %code2flag, align 8, !dbg !1001
  %146 = load i32, i32* %c, align 4, !dbg !1002
  %idxprom161 = sext i32 %146 to i64, !dbg !1000
  %arrayidx162 = getelementptr inbounds i16, i16* %145, i64 %idxprom161, !dbg !1000
  %147 = load i16, i16* %arrayidx162, align 2, !dbg !1000
  store i16 %147, i16* %m, align 2, !dbg !1003
  %148 = load i16, i16* %m, align 2, !dbg !1004
  %149 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1005
  %__ctype_b_data163 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %149, i32 0, i32 3, !dbg !1006
  %150 = load i32, i32* %u, align 4, !dbg !1007
  %add164 = add nsw i32 256, %150, !dbg !1008
  %idxprom165 = sext i32 %add164 to i64, !dbg !1005
  %arrayidx166 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data163, i64 0, i64 %idxprom165, !dbg !1005
  store i16 %148, i16* %arrayidx166, align 2, !dbg !1009
  %151 = load i32, i32* %u, align 4, !dbg !1010
  %add167 = add nsw i32 128, %151, !dbg !1012
  %conv168 = trunc i32 %add167 to i8, !dbg !1013
  %conv169 = sext i8 %conv168 to i32, !dbg !1014
  %cmp170 = icmp ne i32 %conv169, -1, !dbg !1015
  br i1 %cmp170, label %if.then172, label %if.end180, !dbg !1016
  %152 = load i16, i16* %m, align 2, !dbg !1017
  %153 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1019
  %__ctype_b_data173 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %153, i32 0, i32 3, !dbg !1020
  %154 = load i32, i32* %u, align 4, !dbg !1021
  %add174 = add nsw i32 128, %154, !dbg !1022
  %conv175 = trunc i32 %add174 to i8, !dbg !1023
  %conv176 = sext i8 %conv175 to i32, !dbg !1024
  %add177 = add nsw i32 128, %conv176, !dbg !1025
  %idxprom178 = sext i32 %add177 to i64, !dbg !1019
  %arrayidx179 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data173, i64 0, i64 %idxprom178, !dbg !1019
  store i16 %152, i16* %arrayidx179, align 2, !dbg !1026
  br label %if.end180, !dbg !1027
  %155 = load i32, i32* %u, align 4, !dbg !1028
  %add181 = add nsw i32 128, %155, !dbg !1029
  %conv182 = trunc i32 %add181 to i16, !dbg !1030
  %156 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1031
  %__ctype_tolower_data183 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %156, i32 0, i32 4, !dbg !1032
  %157 = load i32, i32* %u, align 4, !dbg !1033
  %add184 = add nsw i32 256, %157, !dbg !1034
  %idxprom185 = sext i32 %add184 to i64, !dbg !1031
  %arrayidx186 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data183, i64 0, i64 %idxprom185, !dbg !1031
  store i16 %conv182, i16* %arrayidx186, align 2, !dbg !1035
  %158 = load i32, i32* %u, align 4, !dbg !1036
  %add187 = add nsw i32 128, %158, !dbg !1037
  %conv188 = trunc i32 %add187 to i16, !dbg !1038
  %159 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1039
  %__ctype_toupper_data189 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %159, i32 0, i32 5, !dbg !1040
  %160 = load i32, i32* %u, align 4, !dbg !1041
  %add190 = add nsw i32 256, %160, !dbg !1042
  %idxprom191 = sext i32 %add190 to i64, !dbg !1039
  %arrayidx192 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data189, i64 0, i64 %idxprom191, !dbg !1039
  store i16 %conv188, i16* %arrayidx192, align 2, !dbg !1043
  %161 = load i16, i16* %m, align 2, !dbg !1044
  %conv193 = zext i16 %161 to i32, !dbg !1044
  %and194 = and i32 %conv193, 768, !dbg !1046
  %tobool195 = icmp ne i32 %and194, 0, !dbg !1046
  br i1 %tobool195, label %if.then196, label %if.end267, !dbg !1047
  %162 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1048
  %tbl8uplow = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %162, i32 0, i32 15, !dbg !1050
  %163 = load i8*, i8** %tbl8uplow, align 8, !dbg !1050
  %164 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !1051
  %idx8uplow197 = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %164, i32 0, i32 1, !dbg !1052
  %165 = load i32, i32* %u, align 4, !dbg !1053
  %shr198 = ashr i32 %165, 3, !dbg !1054
  %idxprom199 = sext i32 %shr198 to i64, !dbg !1051
  %arrayidx200 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8uplow197, i64 0, i64 %idxprom199, !dbg !1051
in stack: Num.371
//Instructions in stack: Num.372
//Instructions in stack: Num.373
//Instructions in stack: Num.374
//Instructions in stack: Num.375
//Instructions in stack: Num.376
//Instructions in stack: Num.377
//Instructions in stack: Num.378
//Instructions in stack: Num.379
//Instructions in stack: Num.380
//Instructions in stack: Num.381
//Instructions in stack: Num.382
//Instructions in stack: Num.383
//Instructions in stack: Num.384
//Instructions in stack: Num.385
//Instructions in stack: Num.386
//Instructions in stack: Num.387
//Instructions in stack: Num.388
//Instructions in stack: Num.389
//Instructions in stack: Num.390
//Instructions in stack: Num.391
//Instructions in stack: Num.392
//Instructions in stack: Num.393
//Instructions in stack: Num.394
//Instructions in stack: Num.395
//Instructions in stack: Num.396
//Instructions in stack: Num.397
//Instructions in stack: Num.398
//Instructions in stack: Num.399
//Instructions in stack: Num.400
//Instructions in stack: Num.401
//Instructions in stack: Num.402
//Instructions in stack: Num.403
//Instructions in stack: Num.404
//Instructions in stack: Num.405
//Instructions in stack: Num.406
//Instructions in stack: Num.407
//Instructions in stack: Num.408
//Instructions in stack: Num.409
//Instructions in stack: Num.410
//Instructions in stack: Num.411
//Instructions in stack: Num.412
//Instructions in stack: Num.413
//Instructions in stack: Num.414
//Instructions in stack: Num.415
//Instructions in stack: Num.416
//Instructions in stack: Num.417
//Instructions in stack: Num.418
//Instructions in stack: Num.419
//Instructions in stack: Num.420
//Instructions in stack: Num.421
//Instructions in stack: Num.422
//Instructions in stack: Num.423
//Instructions in stack: Num.424
//Instructions in stack: Num.425
//Instructions in stack: Num.426
//Instructions in stack: Num.427
//Instructions in stack: Num.428
//Instructions in stack: Num.429
//Instructions in stack: Num.430
//Instructions in stack: Num.431
//Instructions in stack: Num.432
//Instructions in stack: Num.433
//Instructions in stack: Num.434
//Instructions in stack: Num.435
//Instructions in stack: Num.436
//Instructions in stack: Num.437
//Instructions in stack: Num.438
//Instructions in stack: Num.439
//Instructions in stack: Num.440
//Instructions in stack: Num.441
//Instructions in stack: Num.442
//Instructions in stack: Num.443
//Instructions in stack: Num.444
//Instructions in stack: Num.445
//Instructions in stack: Num.446
//Instructions in stack: Num.447
//Instructions in stack: Num.448
//Instructions in stack: Num.449
//Instructions in stack: Num.450
//Instructions in stack: Num.451
//Instructions in stack: Num.452
//Instructions in stack: Num.453
//Instructions in stack: Num.454
//Instructions in stack: Num.455
//Instructions in stack: Num.456
//Instructions in stack: Num.457
//Instructions in stack: Num.458
//Instructions in stack: Num.459
//Instructions in stack: Num.460
//Instructions in stack: Num.461
//Instructions in stack: Num.462
//Instructions in stack: Num.463
//Instructions in stack: Num.464
//Instructions in stack: Num.465
//Instructions in stack: Num.466
//Instructions in stack: Num.467
//Instructions in stack: Num.468
//Instructions in stack: Num.469
//Instructions in stack: Num.470
//Instructions in stack: Num.471
//Instructions in stack: Num.472
//Instructions in stack: Num.473
//Instructions in stack: Num.474
//Instructions in stack: Num.475
//Instructions in stack: Num.476
//Instructions in stack: Num.477
//Instructions in stack: Num.478
//Instructions in stack: Num.479
//Instructions in stack: Num.480
//Instructions in stack: Num.481
//Instructions in stack: Num.482
//Instructions in stack: Num.483
//Instructions in stack: Num.484
//Instructions in stack: Num.485
//Instructions in stack: Num.486
//Instructions in stack: Num.487
//Instructions in stack: Num.488
//Instructions in stack: Num.489
//Instructions in stack: Num.490
//Instructions in stack: Num.491
//Instructions in stack: Num.492
//Instructions in stack: Num.493
//Instructions in stack: Num.494
//Instructions in s  %166 = load i8, i8* %arrayidx200, align 1, !dbg !1051
  %conv201 = zext i8 %166 to i32, !dbg !1055
  %shl202 = shl i32 %conv201, 3, !dbg !1056
  %167 = load i32, i32* %u, align 4, !dbg !1057
  %add203 = add nsw i32 128, %167, !dbg !1058
  %and204 = and i32 %add203, 7, !dbg !1059
  %add205 = add nsw i32 %shl202, %and204, !dbg !1060
  %idxprom206 = sext i32 %add205 to i64, !dbg !1048
  %arrayidx207 = getelementptr inbounds i8, i8* %163, i64 %idxprom206, !dbg !1048
  %168 = load i8, i8* %arrayidx207, align 1, !dbg !1048
  %conv208 = zext i8 %168 to i32, !dbg !1048
  store i32 %conv208, i32* %c, align 4, !dbg !1061
  %169 = load i16, i16* %m, align 2, !dbg !1062
  %conv209 = zext i16 %169 to i32, !dbg !1062
  %and210 = and i32 %conv209, 512, !dbg !1064
  %tobool211 = icmp ne i32 %and210, 0, !dbg !1064
  br i1 %tobool211, label %if.then212, label %if.else239, !dbg !1065
  %170 = load i32, i32* %u, align 4, !dbg !1066
  %add213 = add nsw i32 128, %170, !dbg !1068
  %171 = load i32, i32* %c, align 4, !dbg !1069
  %add214 = add nsw i32 %add213, %171, !dbg !1070
  %conv215 = trunc i32 %add214 to i8, !dbg !1071
  %conv216 = zext i8 %conv215 to i16, !dbg !1071
  %172 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1072
  %__ctype_toupper_data217 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %172, i32 0, i32 5, !dbg !1073
  %173 = load i32, i32* %u, align 4, !dbg !1074
  %add218 = add nsw i32 256, %173, !dbg !1075
  %idxprom219 = sext i32 %add218 to i64, !dbg !1072
  %arrayidx220 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data217, i64 0, i64 %idxprom219, !dbg !1072
  store i16 %conv216, i16* %arrayidx220, align 2, !dbg !1076
  %174 = load i32, i32* %u, align 4, !dbg !1077
  %add221 = add nsw i32 128, %174, !dbg !1079
  %conv222 = trunc i32 %add221 to i8, !dbg !1080
  %conv223 = sext i8 %conv222 to i32, !dbg !1081
  %cmp224 = icmp ne i32 %conv223, -1, !dbg !1082
  br i1 %cmp224, label %if.then226, label %if.end238, !dbg !1083
  %175 = load i32, i32* %u, align 4, !dbg !1084
  %add227 = add nsw i32 128, %175, !dbg !1086
  %176 = load i32, i32* %c, align 4, !dbg !1087
  %add228 = add nsw i32 %add227, %176, !dbg !1088
  %conv229 = trunc i32 %add228 to i8, !dbg !1089
  %conv230 = zext i8 %conv229 to i16, !dbg !1089
  %177 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1090
  %__ctype_toupper_data231 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %177, i32 0, i32 5, !dbg !1091
  %178 = load i32, i32* %u, align 4, !dbg !1092
  %add232 = add nsw i32 128, %178, !dbg !1093
  %conv233 = trunc i32 %add232 to i8, !dbg !1094
  %conv234 = sext i8 %conv233 to i32, !dbg !1095
  %add235 = add nsw i32 128, %conv234, !dbg !1096
  %idxprom236 = sext i32 %add235 to i64, !dbg !1090
  %arrayidx237 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data231, i64 0, i64 %idxprom236, !dbg !1090
  store i16 %conv230, i16* %arrayidx237, align 2, !dbg !1097
  br label %if.end238, !dbg !1098
  br label %if.end266, !dbg !1099
  %179 = load i32, i32* %u, align 4, !dbg !1100
  %add240 = add nsw i32 128, %179, !dbg !1102
  %180 = load i32, i32* %c, align 4, !dbg !1103
  %sub241 = sub nsw i32 %add240, %180, !dbg !1104
  %conv242 = trunc i32 %sub241 to i8, !dbg !1105
  %conv243 = zext i8 %conv242 to i16, !dbg !1105
  %181 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1106
  %__ctype_tolower_data244 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %181, i32 0, i32 4, !dbg !1107
  %182 = load i32, i32* %u, align 4, !dbg !1108
  %add245 = add nsw i32 256, %182, !dbg !1109
  %idxprom246 = sext i32 %add245 to i64, !dbg !1106
  %arrayidx247 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data244, i64 0, i64 %idxprom246, !dbg !1106
  store i16 %conv243, i16* %arrayidx247, align 2, !dbg !1110
  %183 = load i32, i32* %u, align 4, !dbg !1111
  %add248 = add nsw i32 128, %183, !dbg !1113
  %conv249 = trunc i32 %add248 to i8, !dbg !1114
  %conv250 = sext i8 %conv249 to i32, !dbg !1115
  %cmp251 = icmp ne i32 %conv250, -1, !dbg !1116
  br i1 %cmp251, label %if.then253, label %if.end265, !dbg !1117
  %184 = load i32, i32* %u, align 4, !dbg !1118
  %add254 = add nsw i32 128, %184, !dbg !1120
  %185 = load i32, i32* %c, align 4, !dbg !1121
  %sub255 = sub nsw i32 %add254, %185, !dbg !1122
  %conv256 = trunc i32 %sub255 to i8, !dbg !1123
  %conv257 = zext i8 %conv256 to i16, !dbg !1123
  %186 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1124
  %__ctype_tolower_data258 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %186, i32 0, i32 4, !dbg !1125
  %187 = load i32, i32* %u, align 4, !dbg !1126
  %add259 = add nsw i32 128, %187, !dbg !1127
  %conv260 = trunc i32 %add259 to i8, !dbg !1128
  %conv261 = sext i8 %conv260 to i32, !dbg !1129
  %add262 = add nsw i32 128, %conv261, !dbg !1130
  %idxprom263 = sext i32 %add262 to i64, !dbg !1124
  %arrayidx264 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data258, i64 0, i64 %idxprom263, !dbg !1124
  store i16 %conv257, i16* %arrayidx264, align 2, !dbg !1131
  br label %if.end265, !dbg !1132
  br label %if.end266
  br label %if.end267, !dbg !1133
  br label %for.inc268, !dbg !1134
  %188 = load i32, i32* %u, align 4, !dbg !1135
  %inc269 = add nsw i32 %188, 1, !dbg !1135
  store i32 %inc269, i32* %u, align 4, !dbg !1135
  br label %for.cond142, !dbg !1136, !llvm.loop !1137
  %189 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1139
  %__ctype_b_data271 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %189, i32 0, i32 3, !dbg !1140
  %arraydecay272 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data271, i64 0, i64 0, !dbg !1139
  %add.ptr273 = getelementptr inbounds i16, i16* %arraydecay272, i64 128, !dbg !1141
  %190 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1142
  %__ctype_b = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %190, i32 0, i32 0, !dbg !1143
  store i16* %add.ptr273, i16** %__ctype_b, align 8, !dbg !1144
  %191 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1145
  %__ctype_tolower_data274 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %191, i32 0, i32 4, !dbg !1146
  %arraydecay275 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data274, i64 0, i64 0, !dbg !1145
  %add.ptr276 = getelementptr inbounds i16, i16* %arraydecay275, i64 128, !dbg !1147
  %192 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1148
  %__ctype_tolower = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %192, i32 0, i32 1, !dbg !1149
  store i16* %add.ptr276, i16** %__ctype_tolower, align 8, !dbg !1150
  %193 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1151
  %__ctype_toupper_data277 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %193, i32 0, i32 5, !dbg !1152
  %arraydecay278 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data277, i64 0, i64 0, !dbg !1151
  %add.ptr279 = getelementptr inbounds i16, i16* %arraydecay278, i64 128, !dbg !1153
  %194 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1154
  %__ctype_toupper = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %194, i32 0, i32 2, !dbg !1155
  store i16* %add.ptr279, i16** %__ctype_toupper, align 8, !dbg !1156
  br label %if.end280
  %195 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1157
  %outdigit_length = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %195, i32 0, i32 11, !dbg !1158
  %arraydecay281 = getelementptr inbounds [10 x i8], [10 x i8]* %outdigit_length, i64 0, i64 0, !dbg !1157
  store i8* %arraydecay281, i8** %d, align 8, !dbg !1159
  %196 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1160
tack: Num.495
//Instructions in stack: Num.496
//Instructions in stack: Num.497
//Instructions in stack: Num.498
//Instructions in stack: Num.499
//Instructions in stack: Num.500
//Instructions in stack: Num.501
//Instructions in stack: Num.502
//Instructions in stack: Num.503
//Instructions in stack: Num.504
//Instructions in stack: Num.505
//Instructions in stack: Num.506
//Instructions in stack: Num.507
//Instructions in stack: Num.508
//Instructions in stack: Num.509
//Instructions in stack: Num.510
//Instructions in stack: Num.511
//Instructions in stack: Num.512
//Instructions in stack: Num.513
//Instructions in stack: Num.514
//Instructions in stack: Num.515
//Instructions in stack: Num.516
//Instructions in stack: Num.517
//Instructions in stack: Num.518
//Instructions in stack: Num.519
//Instructions in stack: Num.520
//Instructions in stack: Num.521
//Instructions in stack: Num.522
//Instructions in stack: Num.523
//Instructions in stack: Num.524
//Instructions in stack: Num.525
//Instructions in stack: Num.526
//Instructions in stack: Num.527
//Instructions in stack: Num.528
//Instructions in stack: Num.529
//Instructions in stack: Num.530
//Instructions in stack: Num.531
//Instructions in stack: Num.532
//Instructions in stack: Num.533
//Instructions in stack: Num.534
//Instructions in stack: Num.535
//Instructions in stack: Num.536
//Instructions in stack: Num.537
//Instructions in stack: Num.538
//Instructions in stack: Num.539
//Instructions in stack: Num.540
//Instructions in stack: Num.541
//Instructions in stack: Num.542
//Instructions in stack: Num.543
//Instructions in stack: Num.544
//Instructions in stack: Num.545
//Instructions in stack: Num.546
//Instructions in stack: Num.547
//Instructions in stack: Num.548
//Instructions in stack: Num.549
//Instructions in stack: Num.550
//Instructions in stack: Num.551
//Instructions in stack: Num.552
//Instructions in stack: Num.553
//Instructions in stack: Num.554
//Instructions in stack: Num.555
//Instructions in stack: Num.556
//Instructions in stack: Num.557
//Instructions in stack: Num.558
//Instructions in stack: Num.559
//Instructions in stack: Num.560
//Instructions in stack: Num.561
//Instructions in stack: Num.562
//Instructions in stack: Num.563
//Instructions in stack: Num.564
//Instructions in stack: Num.565
//Instructions in stack: Num.566
//Instructions in stack: Num.567
//Instructions in stack: Num.568
//Instructions in stack: Num.569
//Instructions in stack: Num.570
//Instructions in stack: Num.571
//Instructions in stack: Num.572
//Instructions in stack: Num.573
//Instructions in stack: Num.574
//Instructions in stack: Num.575
//Instructions in stack: Num.576
//Instructions in stack: Num.577
//Instructions in stack: Num.578
//Instructions in stack: Num.579
//Instructions in stack: Num.580
//Instructions in stack: Num.581
//Instructions in stack: Num.582
//Instructions in stack: Num.583
//Instructions in stack: Num.584
//Instructions in stack: Num.585
//Instructions in stack: Num.586
//Instructions in stack: Num.587
//Instructions in stack: Num.588
//Instructions in stack: Num.589
//Instructions in stack: Num.590
//Instructions in stack: Num.591
//Instructions in stack: Num.592
//Instructions in stack: Num.593
//Instructions in stack: Num.594
//Instructions in stack: Num.595
//Instructions in stack: Num.596
//Instructions in stack: Num.597
//Instructions in stack: Num.598
//Instructions in stack: Num.599
//Instructions in stack: Num.600
//Instructions in stack: Num.601
//Instructions in stack: Num.602
//Instructions in stack: Num.603
//Instructions in stack: Num.604
//Instructions in stack: Num.605
//Instructions in stack: Num.606
//Instructions in stack: Num.607
//Instructions in stack: Num.608
//Instructions in stack: Num.609
//Instructions in stack: Num.610
//Instructions in stack: Num.611
//Instructions in stack: Num.612
//Instructions in stack: Num.613
//Instructions in stack: Num.614
//Instructions in stack: Num.615
//Instructions in stack: Num.616
//Instructions in stack: Num.617
//Instructions in stack: Num.618
//Instructions in stack  %outdigit0_mb = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %196, i32 0, i32 28, !dbg !1161
  store i8** %outdigit0_mb, i8*** %x, align 8, !dbg !1162
  store i32 0, i32* %c, align 4, !dbg !1163
  br label %for.cond282, !dbg !1165
  %197 = load i32, i32* %c, align 4, !dbg !1166
  %cmp283 = icmp slt i32 %197, 10, !dbg !1168
  br i1 %cmp283, label %for.body285, label %for.end294, !dbg !1169
  %198 = load i8**, i8*** %x, align 8, !dbg !1170
  %199 = load i32, i32* %c, align 4, !dbg !1172
  %idxprom286 = sext i32 %199 to i64, !dbg !1170
  %arrayidx287 = getelementptr inbounds i8*, i8** %198, i64 %idxprom286, !dbg !1170
  %200 = load i8*, i8** %arrayidx287, align 8, !dbg !1170
  %call288 = call i64 @strlen(i8* %200) #12, !dbg !1173
  %conv289 = trunc i64 %call288 to i8, !dbg !1173
  %201 = load i8*, i8** %d, align 8, !dbg !1174
  %202 = load i32, i32* %c, align 4, !dbg !1175
  %idxprom290 = sext i32 %202 to i64, !dbg !1176
  %arrayidx291 = getelementptr inbounds i8, i8* %201, i64 %idxprom290, !dbg !1176
  store i8 %conv289, i8* %arrayidx291, align 1, !dbg !1177
  br label %for.inc292, !dbg !1178
  %203 = load i32, i32* %c, align 4, !dbg !1179
  %inc293 = add nsw i32 %203, 1, !dbg !1179
  store i32 %inc293, i32* %c, align 4, !dbg !1179
  br label %for.cond282, !dbg !1180, !llvm.loop !1181
  br label %if.end312, !dbg !1183
  %204 = load i32, i32* %i, align 4, !dbg !1184
  %cmp296 = icmp eq i32 %204, 1, !dbg !1186
  br i1 %cmp296, label %if.then298, label %if.end311, !dbg !1187
  %205 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1188
  %decimal_point_wc = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %205, i32 0, i32 24, !dbg !1190
  %206 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1191
  %decimal_point = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %206, i32 0, i32 39, !dbg !1192
  %207 = load i8*, i8** %decimal_point, align 8, !dbg !1192
  %208 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1193
  %call299 = call i32 @__locale_mbrtowc_l(i32* %decimal_point_wc, i8* %207, %struct.__uclibc_locale_struct.160* %208) #10, !dbg !1194
  %209 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1195
  %decimal_point_len = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %209, i32 0, i32 26, !dbg !1196
  store i32 %call299, i32* %decimal_point_len, align 8, !dbg !1197
  %210 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1198
  %grouping = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %210, i32 0, i32 41, !dbg !1200
  %211 = load i8*, i8** %grouping, align 8, !dbg !1200
  %212 = load i8, i8* %211, align 1, !dbg !1201
  %tobool300 = icmp ne i8 %212, 0, !dbg !1201
  br i1 %tobool300, label %if.then301, label %if.end310, !dbg !1202
  %213 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1203
  %thousands_sep_wc = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %213, i32 0, i32 25, !dbg !1205
  %214 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1206
  %thousands_sep = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %214, i32 0, i32 40, !dbg !1207
  %215 = load i8*, i8** %thousands_sep, align 8, !dbg !1207
  %216 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1208
  %call302 = call i32 @__locale_mbrtowc_l(i32* %thousands_sep_wc, i8* %215, %struct.__uclibc_locale_struct.160* %216) #10, !dbg !1209
  %217 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1210
  %thousands_sep_len = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %217, i32 0, i32 27, !dbg !1211
  store i32 %call302, i32* %thousands_sep_len, align 4, !dbg !1212
  %218 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1213
  %thousands_sep_len303 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %218, i32 0, i32 27, !dbg !1215
  %219 = load i32, i32* %thousands_sep_len303, align 4, !dbg !1215
  %cmp304 = icmp eq i32 %219, 0, !dbg !1216
  br i1 %cmp304, label %if.then306, label %if.end309, !dbg !1217
  %220 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1218
  %thousands_sep307 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %220, i32 0, i32 40, !dbg !1220
  %221 = load i8*, i8** %thousands_sep307, align 8, !dbg !1220
  %222 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1221
  %grouping308 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %222, i32 0, i32 41, !dbg !1222
  store i8* %221, i8** %grouping308, align 8, !dbg !1223
  br label %if.end309, !dbg !1224
  br label %if.end310, !dbg !1225
  br label %if.end311, !dbg !1226
  br label %if.end312
  br label %if.end313, !dbg !1227
  %223 = load i32, i32* %i, align 4, !dbg !1228
  %inc314 = add nsw i32 %223, 1, !dbg !1228
  store i32 %inc314, i32* %i, align 4, !dbg !1228
  %224 = load i8*, i8** %p.addr, align 8, !dbg !1229
  %add.ptr315 = getelementptr inbounds i8, i8* %224, i64 2, !dbg !1229
  store i8* %add.ptr315, i8** %p.addr, align 8, !dbg !1229
  %225 = load i8*, i8** %s, align 8, !dbg !1230
  %add.ptr316 = getelementptr inbounds i8, i8* %225, i64 2, !dbg !1230
  store i8* %add.ptr316, i8** %s, align 8, !dbg !1230
  br label %do.cond, !dbg !1231
  %226 = load i32, i32* %i, align 4, !dbg !1232
  %cmp317 = icmp slt i32 %226, 6, !dbg !1233
  br i1 %cmp317, label %do.body, label %do.end, !dbg !1231, !llvm.loop !1234
  store i32 1, i32* %retval, align 4, !dbg !1236
  br label %return, !dbg !1236
  %227 = load i32, i32* %retval, align 4, !dbg !1237
  ret i32 %227, !dbg !1237
  %s.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !2692, metadata !DIExpression()), !dbg !2693
  call void @llvm.dbg.declare(metadata i8** %p, metadata !2694, metadata !DIExpression()), !dbg !2695
  %0 = load i8*, i8** %s.addr, align 8, !dbg !664
  store i8* %0, i8** %p, align 8, !dbg !666
  br label %for.cond, !dbg !667
  %1 = load i8*, i8** %p, align 8, !dbg !668
  %2 = load i8, i8* %1, align 1, !dbg !670
  %tobool = icmp ne i8 %2, 0, !dbg !671
  br i1 %tobool, label %for.body, label %for.end, !dbg !671
  br label %for.inc, !dbg !671
  %3 = load i8*, i8** %p, align 8, !dbg !672
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !672
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !672
  br label %for.cond, !dbg !673, !llvm.loop !674
  %4 = load i8*, i8** %p, align 8, !dbg !676
  %5 = load i8*, i8** %s.addr, align 8, !dbg !677
  %sub.ptr.lhs.cast = ptrtoint i8* %4 to i64, !dbg !678
  %sub.ptr.rhs.cast = ptrtoint i8* %5 to i64, !dbg !678
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !678
  ret i64 %sub.ptr.sub, !dbg !679
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
: Num.619
//Instructions in stack: Num.620
//Instructions in stack: Num.621
//Instructions in stack: Num.622
//Instructions in stack: Num.623
//Instructions in stack: Num.624
//Instructions in stack: Num.625
//Instructions in stack: Num.626
//Instructions in stack: Num.627
//Instructions in stack: Num.628
//Instructions in stack: Num.629
//Instructions in stack: Num.630
//Instructions in stack: Num.631
//Instructions in stack: Num.632
//Instructions in stack: Num.633
//Instructions in stack: Num.634
//Instructions in stack: Num.635
//Instructions in stack: Num.636
//Instructions in stack: Num.637
//Instructions in stack: Num.638
//Instructions in stack: Num.639
//Instructions in stack: Num.640
//Instructions in stack: Num.641
//Instructions in stack: Num.642
//Instructions in stack: Num.643
//Instructions in stack: Num.644
//Instructions in stack: Num.645
//Instructions in stack: Num.646
//Instructions in stack: Num.647
//Instructions in stack: Num.648
//Instructions in stack: Num.649
//Instructions in stack: Num.650
//Instructions in stack: Num.651
//Instructions in stack: Num.652
//Instructions in stack: Num.653
//Instructions in stack: Num.654
//Instructions in stack: Num.655
//Instructions in stack: Num.656
//Instructions in stack: Num.657
//Instructions in stack: Num.658
//Instructions in stack: Num.659
//Instructions in stack: Num.660
//Instructions in stack: Num.661
//Instructions in stack: Num.662
//Instructions in stack: Num.663
//Instructions in stack: Num.664
//Instructions in stack: Num.665
//Instructions in stack: Num.666
//Instructions in stack: Num.667
//Instructions in stack: Num.668
//Instructions in stack: Num.669
//Instructions in stack: Num.670
//Instructions in stack: Num.671
//Instructions in stack: Num.672
//Instructions in stack: Num.673
//Instructions in stack: Num.674
//Instructions in stack: Num.675
//Instructions in stack: Num.676
//Instructions in stack: Num.677
//Instructions in stack: Num.678
//Instructions in stack: Num.679
//Instructions in stack: Num.680
//Instructions in stack: Num.681
//Instructions in stack: Num.682
//Instructions in stack: Num.683
//Instructions in stack: Num.684
//Instructions in stack: Num.685
//Instructions in stack: Num.686
//Instructions in stack: Num.687
//Instructions in stack: Num.688
//Instructions in stack: Num.689
//Instructions in stack: Num.690
//Instructions in stack: Num.691
//Instructions in stack: Num.692
//Instructions in stack: Num.693
//Instructions in stack: Num.694
//Instructions in stack: Num.695
//Instructions in stack: Num.696
//Instructions in stack: Num.697
//Instructions in stack: Num.698
//Instructions in stack: Num.699
//Instructions in stack: Num.700
//Instructions in stack: Num.701
//Instructions in stack: Num.702
//Instructions in stack: Num.703
//Instructions in stack: Num.704
//Instructions in stack: Num.705
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stac  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
k: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instruction  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  %0 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !657
  %tobool = icmp ne i32 %0, 0, !dbg !657
  br i1 %tobool, label %if.then, label %if.end, !dbg !659
  br label %if.end4, !dbg !660
  %1 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  %inc = add nsw i32 %1, 1, !dbg !661
  store i32 %inc, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  store i64 4096, i64* @__pagesize, align 8, !dbg !662
  br i1 true, label %if.then1, label %if.end2, !dbg !663
  call void @_locale_init() #10, !dbg !664
  br label %if.end2, !dbg !664
  br i1 true, label %if.then3, label %if.end4, !dbg !666
  call void @_stdio_init() #10, !dbg !667
  br label %if.end4, !dbg !667
  ret void, !dbg !669
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** @__global_locale, align 8, !dbg !658
  call void @_locale_init_l(%struct.__uclibc_locale_struct.160* %0) #10, !dbg !659
  ret void, !dbg !660
  %base.addr = alloca %struct.__uclibc_locale_struct.160*, align 8
  store %struct.__uclibc_locale_struct.160* %base, %struct.__uclibc_locale_struct.160** %base.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__uclibc_locale_struct.160** %base.addr, metadata !1973, metadata !DIExpression()), !dbg !1974
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !662
  %cur_locale = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %0, i32 0, i32 6, !dbg !663
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale, i64 0, i64 0, !dbg !662
  %call = call i8* @memset(i8* %arraydecay, i32 0, i64 14) #10, !dbg !664
  %1 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !665
  %cur_locale1 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %1, i32 0, i32 6, !dbg !666
  %arrayidx = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale1, i64 0, i64 0, !dbg !665
  store i8 35, i8* %arrayidx, align 8, !dbg !667
  %2 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !668
  %category_item_count = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %2, i32 0, i32 8, !dbg !669
  %arraydecay2 = getelementptr inbounds [6 x i8], [6 x i8]* %category_item_count, i64 0, i64 0, !dbg !668
  %3 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !670
  %lc_common_item_offsets_LEN = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %3, i32 0, i32 29, !dbg !671
  %arraydecay3 = getelementptr inbounds [6 x i8], [6 x i8]* %lc_common_item_offsets_LEN, i64 0, i64 0, !dbg !670
  %call4 = call i8* @memcpy(i8* %arraydecay2, i8* %arraydecay3, i64 6) #10, !dbg !672
  %4 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !673
  %category_item_count5 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %4, i32 0, i32 8, !dbg !674
  %arrayidx6 = getelementptr inbounds [6 x i8], [6 x i8]* %category_item_count5, i64 0, i64 0, !dbg !673
  %5 = load i8, i8* %arrayidx6, align 2, !dbg !675
  %inc = add i8 %5, 1, !dbg !675
  store i8 %inc, i8* %arrayidx6, align 2, !dbg !675
  %6 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !676
  %category_offsets = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %6, i32 0, i32 7, !dbg !677
  %arrayidx7 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets, i64 0, i64 0, !dbg !676
  store i16 2488, i16* %arrayidx7, align 2, !dbg !678
  %7 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !679
  %category_offsets8 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %7, i32 0, i32 7, !dbg !680
  %arrayidx9 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets8, i64 0, i64 1, !dbg !679
  store i16 2576, i16* %arrayidx9, align 2, !dbg !681
  %8 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !682
  %category_offsets10 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %8, i32 0, i32 7, !dbg !683
  %arrayidx11 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets10, i64 0, i64 2, !dbg !682
  store i16 2600, i16* %arrayidx11, align 2, !dbg !684
  %9 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !685
  %category_offsets12 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %9, i32 0, i32 7, !dbg !686
  %arrayidx13 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets12, i64 0, i64 3, !dbg !685
  store i16 2776, i16* %arrayidx13, align 2, !dbg !687
  %10 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !688
  %category_offsets14 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %10, i32 0, i32 7, !dbg !689
  %arrayidx15 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets14, i64 0, i64 5, !dbg !688
  store i16 3176, i16* %arrayidx15, align 2, !dbg !690
  %11 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !691
  %tbl8ctype = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %11, i32 0, i32 0, !dbg !692
  %12 = bitcast [420 x i8]* %tbl8ctype to i8*, !dbg !693
  %13 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !694
  %tbl8ctype16 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %13, i32 0, i32 13, !dbg !695
  store i8* %12, i8** %tbl8ctype16, align 8, !dbg !696
  %14 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !697
  %tbl8uplow = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %14, i32 0, i32 1, !dbg !698
  %15 = bitcast [504 x i8]* %tbl8uplow to i8*, !dbg !699
  %16 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !700
  %tbl8uplow17 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %16, i32 0, i32 15, !dbg !701
  store i8* %15, i8** %tbl8uplow17, align 8, !dbg !702
  %17 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !703
  %tbl8c2wc = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %17, i32 0, i32 2, !dbg !704
  %18 = bitcast [1760 x i16]* %tbl8c2wc to i16*, !dbg !705
  %19 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !706
s in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in s  %tbl8c2wc18 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %19, i32 0, i32 17, !dbg !707
  store i16* %18, i16** %tbl8c2wc18, align 8, !dbg !708
  %20 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !709
  %tbl8wc2c = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %20, i32 0, i32 3, !dbg !710
  %21 = bitcast [4528 x i8]* %tbl8wc2c to i8*, !dbg !711
  %22 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !712
  %tbl8wc2c19 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %22, i32 0, i32 19, !dbg !713
  store i8* %21, i8** %tbl8wc2c19, align 8, !dbg !714
  %23 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !715
  %tblwctype = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %23, i32 0, i32 4, !dbg !716
  %24 = bitcast [3604 x i8]* %tblwctype to i8*, !dbg !717
  %25 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !718
  %tblwctype20 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %25, i32 0, i32 21, !dbg !719
  store i8* %24, i8** %tblwctype20, align 8, !dbg !720
  %26 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !721
  %tblwuplow = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %26, i32 0, i32 5, !dbg !722
  %27 = bitcast [1680 x i8]* %tblwuplow to i8*, !dbg !723
  %28 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !724
  %tblwuplow21 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %28, i32 0, i32 22, !dbg !725
  store i8* %27, i8** %tblwuplow21, align 8, !dbg !726
  %29 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !727
  %tblwuplow_diff = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %29, i32 0, i32 6, !dbg !728
  %30 = bitcast [196 x i16]* %tblwuplow_diff to i16*, !dbg !729
  %31 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !730
  %tblwuplow_diff22 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %31, i32 0, i32 23, !dbg !731
  store i16* %30, i16** %tblwuplow_diff22, align 8, !dbg !732
  %32 = load i16*, i16** @__C_ctype_b, align 8, !dbg !733
  %33 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !734
  %__ctype_b = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %33, i32 0, i32 0, !dbg !735
  store i16* %32, i16** %__ctype_b, align 8, !dbg !736
  %34 = load i16*, i16** @__C_ctype_tolower, align 8, !dbg !737
  %35 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !738
  %__ctype_tolower = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %35, i32 0, i32 1, !dbg !739
  store i16* %34, i16** %__ctype_tolower, align 8, !dbg !740
  %36 = load i16*, i16** @__C_ctype_toupper, align 8, !dbg !741
  %37 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !742
  %__ctype_toupper = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %37, i32 0, i32 2, !dbg !743
  store i16* %36, i16** %__ctype_toupper, align 8, !dbg !744
  %38 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !745
  %code2flag = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %38, i32 0, i32 20, !dbg !746
  store i16* getelementptr inbounds ([16 x i16], [16 x i16]* @__code2flag, i64 0, i64 0), i16** %code2flag, align 8, !dbg !747
  %39 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !748
  %call23 = call i32 @_locale_set_l(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), %struct.__uclibc_locale_struct.160* %39) #11, !dbg !749
  ret void, !dbg !750
  %retval = alloca i32, align 4
  %p.addr = alloca i8*, align 8
  %base.addr = alloca %struct.__uclibc_locale_struct.160*, align 8
  %x = alloca i8**, align 8
  %s = alloca i8*, align 8
  %stp = alloca i64*, align 8
  %r = alloca i8*, align 8
  %io = alloca i16*, align 8
  %ii = alloca i16*, align 8
  %d = alloca i8*, align 8
  %row = alloca i32, align 4
  %crow = alloca i32, align 4
  %len = alloca i32, align 4
  %c = alloca i32, align 4
  %i = alloca i32, align 4
  %newcol = alloca %struct.__collate_t.159, align 8
  %c8b = alloca %struct.__codeset_8_bit_t.161*, align 8
  %u = alloca i32, align 4
  %m = alloca i16, align 2
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !1060, metadata !DIExpression()), !dbg !1061
  store %struct.__uclibc_locale_struct.160* %base, %struct.__uclibc_locale_struct.160** %base.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__uclibc_locale_struct.160** %base.addr, metadata !1062, metadata !DIExpression()), !dbg !1063
  call void @llvm.dbg.declare(metadata i8*** %x, metadata !1064, metadata !DIExpression()), !dbg !1065
  call void @llvm.dbg.declare(metadata i8** %s, metadata !1066, metadata !DIExpression()), !dbg !1067
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !668
  %cur_locale = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %0, i32 0, i32 6, !dbg !669
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale, i64 0, i64 0, !dbg !668
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 1, !dbg !670
  store i8* %add.ptr, i8** %s, align 8, !dbg !667
  call void @llvm.dbg.declare(metadata i64** %stp, metadata !1071, metadata !DIExpression()), !dbg !1074
  call void @llvm.dbg.declare(metadata i8** %r, metadata !1075, metadata !DIExpression()), !dbg !1076
  call void @llvm.dbg.declare(metadata i16** %io, metadata !1077, metadata !DIExpression()), !dbg !1078
  call void @llvm.dbg.declare(metadata i16** %ii, metadata !1079, metadata !DIExpression()), !dbg !1080
  call void @llvm.dbg.declare(metadata i8** %d, metadata !1081, metadata !DIExpression()), !dbg !1082
  call void @llvm.dbg.declare(metadata i32* %row, metadata !1083, metadata !DIExpression()), !dbg !1084
  call void @llvm.dbg.declare(metadata i32* %crow, metadata !1085, metadata !DIExpression()), !dbg !1086
  call void @llvm.dbg.declare(metadata i32* %len, metadata !1087, metadata !DIExpression()), !dbg !1088
  call void @llvm.dbg.declare(metadata i32* %c, metadata !1089, metadata !DIExpression()), !dbg !1090
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1091, metadata !DIExpression()), !dbg !1092
  store i32 0, i32* %i, align 4, !dbg !692
  call void @llvm.dbg.declare(metadata %struct.__collate_t.159* %newcol, metadata !1093, metadata !DIExpression()), !dbg !1094
  %1 = load i8*, i8** %p.addr, align 8, !dbg !695
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i32 1, !dbg !695
  store i8* %incdec.ptr, i8** %p.addr, align 8, !dbg !695
  %index2weight = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %newcol, i32 0, i32 23, !dbg !696
  store i16* null, i16** %index2weight, align 8, !dbg !697
  %2 = load i8*, i8** %p.addr, align 8, !dbg !698
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 8, !dbg !698
  %3 = load i8, i8* %arrayidx, align 1, !dbg !698
  %conv = zext i8 %3 to i32, !dbg !698
  %4 = load i8*, i8** %s, align 8, !dbg !700
  %arrayidx1 = getelementptr inbounds i8, i8* %4, i64 8, !dbg !700
  %5 = load i8, i8* %arrayidx1, align 1, !dbg !700
  %conv2 = zext i8 %5 to i32, !dbg !700
  %cmp = icmp ne i32 %conv, %conv2, !dbg !701
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !702
  %6 = load i8*, i8** %p.addr, align 8, !dbg !703
  %arrayidx4 = getelementptr inbounds i8, i8* %6, i64 9, !dbg !703
  %7 = load i8, i8* %arrayidx4, align 1, !dbg !703
  %conv5 = zext i8 %7 to i32, !dbg !703
  %8 = load i8*, i8** %s, align 8, !dbg !704
  %arrayidx6 = getelementptr inbounds i8, i8* %8, i64 9, !dbg !704
  %9 = load i8, i8* %arrayidx6, align 1, !dbg !704
  %conv7 = zext i8 %9 to i32, !dbg !704
  %cmp8 = icmp ne i32 %conv5, %conv7, !dbg !705
  br i1 %cmp8, label %if.then, label %if.end22, !dbg !706
  %10 = load i8*, i8** %p.addr, align 8, !dbg !707
  %11 = load i8, i8* %10, align 1, !dbg !709
  %conv10 = zext i8 %11 to i32, !dbg !709
  %and = and i32 %conv10, 127, !dbg !710
  %shl = shl i32 %and, 7, !dbg !711
  %12 = load i8*, i8** %p.addr, align 8, !dbg !712
  %arrayidx11 = getelementptr inbounds i8, i8* %12, i64 1, !dbg !712
  %13 = load i8, i8* %arrayidx11, align 1, !dbg !712
  %conv12 = zext i8 %13 to i32, !dbg !712
  %and13 = and i32 %conv12, 127, !dbg !713
  %add = add nsw i32 %shl, %and13, !dbg !714
  store i32 %add, i32* %row, align 4, !dbg !715
  %14 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !716
  %locales = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %14, i32 0, i32 31, !dbg !718
  %15 = load i32, i32* %row, align 4, !dbg !719
  %mul = mul nsw i32 9, %15, !dbg !720
  %add14 = add nsw i32 %mul, 3, !dbg !721
tack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack:   %add15 = add nsw i32 %add14, 4, !dbg !722
  %idxprom = sext i32 %add15 to i64, !dbg !716
  %arrayidx16 = getelementptr inbounds [2826 x i8], [2826 x i8]* %locales, i64 0, i64 %idxprom, !dbg !716
  %16 = load i8, i8* %arrayidx16, align 1, !dbg !716
  %conv17 = zext i8 %16 to i32, !dbg !716
  %call = call i32 @init_cur_collate(i32 %conv17, %struct.__collate_t.159* %newcol) #10, !dbg !723
  %tobool = icmp ne i32 %call, 0, !dbg !723
  br i1 %tobool, label %if.end, label %if.then18, !dbg !724
  store i32 0, i32* %retval, align 4, !dbg !725
  br label %return, !dbg !725
  %17 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !727
  %collate = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %17, i32 0, i32 118, !dbg !728
  %index2weight19 = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %collate, i32 0, i32 23, !dbg !729
  %18 = load i16*, i16** %index2weight19, align 8, !dbg !729
  %19 = bitcast i16* %18 to i8*, !dbg !727
  call void @free(i8* %19) #11, !dbg !730
  %20 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !731
  %collate20 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %20, i32 0, i32 118, !dbg !732
  %21 = bitcast %struct.__collate_t.159* %collate20 to i8*, !dbg !733
  %22 = bitcast %struct.__collate_t.159* %newcol to i8*, !dbg !734
  %call21 = call i8* @memcpy(i8* %21, i8* %22, i64 112) #11, !dbg !735
  br label %if.end22, !dbg !736
  br label %do.body, !dbg !737
  %23 = load i8*, i8** %p.addr, align 8, !dbg !738
  %24 = load i8, i8* %23, align 1, !dbg !741
  %conv23 = zext i8 %24 to i32, !dbg !741
  %25 = load i8*, i8** %s, align 8, !dbg !742
  %26 = load i8, i8* %25, align 1, !dbg !743
  %conv24 = zext i8 %26 to i32, !dbg !743
  %cmp25 = icmp ne i32 %conv23, %conv24, !dbg !744
  br i1 %cmp25, label %if.then34, label %lor.lhs.false27, !dbg !745
  %27 = load i8*, i8** %p.addr, align 8, !dbg !746
  %arrayidx28 = getelementptr inbounds i8, i8* %27, i64 1, !dbg !746
  %28 = load i8, i8* %arrayidx28, align 1, !dbg !746
  %conv29 = zext i8 %28 to i32, !dbg !746
  %29 = load i8*, i8** %s, align 8, !dbg !747
  %arrayidx30 = getelementptr inbounds i8, i8* %29, i64 1, !dbg !747
  %30 = load i8, i8* %arrayidx30, align 1, !dbg !747
  %conv31 = zext i8 %30 to i32, !dbg !747
  %cmp32 = icmp ne i32 %conv29, %conv31, !dbg !748
  br i1 %cmp32, label %if.then34, label %if.end313, !dbg !749
  %31 = load i8*, i8** %p.addr, align 8, !dbg !750
  %32 = load i8, i8* %31, align 1, !dbg !752
  %conv35 = zext i8 %32 to i32, !dbg !752
  %and36 = and i32 %conv35, 127, !dbg !753
  %shl37 = shl i32 %and36, 7, !dbg !754
  %33 = load i8*, i8** %p.addr, align 8, !dbg !755
  %arrayidx38 = getelementptr inbounds i8, i8* %33, i64 1, !dbg !755
  %34 = load i8, i8* %arrayidx38, align 1, !dbg !755
  %conv39 = zext i8 %34 to i32, !dbg !755
  %and40 = and i32 %conv39, 127, !dbg !756
  %add41 = add nsw i32 %shl37, %and40, !dbg !757
  store i32 %add41, i32* %row, align 4, !dbg !758
  %35 = load i8*, i8** %p.addr, align 8, !dbg !759
  %36 = load i8, i8* %35, align 1, !dbg !760
  %37 = load i8*, i8** %s, align 8, !dbg !761
  store i8 %36, i8* %37, align 1, !dbg !762
  %38 = load i8*, i8** %p.addr, align 8, !dbg !763
  %arrayidx42 = getelementptr inbounds i8, i8* %38, i64 1, !dbg !763
  %39 = load i8, i8* %arrayidx42, align 1, !dbg !763
  %40 = load i8*, i8** %s, align 8, !dbg !764
  %arrayidx43 = getelementptr inbounds i8, i8* %40, i64 1, !dbg !764
  store i8 %39, i8* %arrayidx43, align 1, !dbg !765
  %41 = load i32, i32* %i, align 4, !dbg !766
  %cmp44 = icmp ne i32 %41, 4, !dbg !768
  br i1 %cmp44, label %land.lhs.true, label %if.end92, !dbg !769
  %42 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !770
  %lc_common_item_offsets_LEN = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %42, i32 0, i32 29, !dbg !771
  %43 = load i32, i32* %i, align 4, !dbg !772
  %idxprom46 = sext i32 %43 to i64, !dbg !770
  %arrayidx47 = getelementptr inbounds [6 x i8], [6 x i8]* %lc_common_item_offsets_LEN, i64 0, i64 %idxprom46, !dbg !770
  %44 = load i8, i8* %arrayidx47, align 1, !dbg !770
  %conv48 = zext i8 %44 to i32, !dbg !770
  store i32 %conv48, i32* %len, align 4, !dbg !773
  %cmp49 = icmp ne i32 %conv48, 0, !dbg !774
  br i1 %cmp49, label %if.then51, label %if.end92, !dbg !775
  %45 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !776
  %locales52 = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %45, i32 0, i32 31, !dbg !778
  %46 = load i32, i32* %row, align 4, !dbg !779
  %mul53 = mul nsw i32 9, %46, !dbg !780
  %add54 = add nsw i32 %mul53, 3, !dbg !781
  %47 = load i32, i32* %i, align 4, !dbg !782
  %add55 = add nsw i32 %add54, %47, !dbg !783
  %idxprom56 = sext i32 %add55 to i64, !dbg !776
  %arrayidx57 = getelementptr inbounds [2826 x i8], [2826 x i8]* %locales52, i64 0, i64 %idxprom56, !dbg !776
  %48 = load i8, i8* %arrayidx57, align 1, !dbg !776
  %conv58 = zext i8 %48 to i32, !dbg !776
  %49 = load i32, i32* %len, align 4, !dbg !784
  %mul59 = mul nsw i32 %conv58, %49, !dbg !785
  store i32 %mul59, i32* %crow, align 4, !dbg !786
  %50 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !787
  %51 = bitcast %struct.__uclibc_locale_struct.160* %50 to i8*, !dbg !788
  %52 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !789
  %category_offsets = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %52, i32 0, i32 7, !dbg !790
  %53 = load i32, i32* %i, align 4, !dbg !791
  %idxprom60 = sext i32 %53 to i64, !dbg !789
  %arrayidx61 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets, i64 0, i64 %idxprom60, !dbg !789
  %54 = load i16, i16* %arrayidx61, align 2, !dbg !789
  %conv62 = zext i16 %54 to i32, !dbg !789
  %idx.ext = sext i32 %conv62 to i64, !dbg !792
  %add.ptr63 = getelementptr inbounds i8, i8* %51, i64 %idx.ext, !dbg !792
  %55 = bitcast i8* %add.ptr63 to i8**, !dbg !793
  store i8** %55, i8*** %x, align 8, !dbg !794
  %56 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !795
  %lc_common_tbl_offsets = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %56, i32 0, i32 30, !dbg !796
  %arraydecay64 = getelementptr inbounds [24 x i64], [24 x i64]* %lc_common_tbl_offsets, i64 0, i64 0, !dbg !795
  %57 = load i32, i32* %i, align 4, !dbg !797
  %mul65 = mul nsw i32 4, %57, !dbg !798
  %idx.ext66 = sext i32 %mul65 to i64, !dbg !799
  %add.ptr67 = getelementptr inbounds i64, i64* %arraydecay64, i64 %idx.ext66, !dbg !799
  store i64* %add.ptr67, i64** %stp, align 8, !dbg !800
  %58 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !801
  %59 = bitcast %struct.__locale_mmap_t.162* %58 to i8*, !dbg !802
  %60 = load i64*, i64** %stp, align 8, !dbg !803
  %61 = load i64, i64* %60, align 8, !dbg !804
  %add.ptr68 = getelementptr inbounds i8, i8* %59, i64 %61, !dbg !805
  store i8* %add.ptr68, i8** %r, align 8, !dbg !806
  %62 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !807
  %63 = bitcast %struct.__locale_mmap_t.162* %62 to i8*, !dbg !808
  %64 = load i64*, i64** %stp, align 8, !dbg !809
  %incdec.ptr69 = getelementptr inbounds i64, i64* %64, i32 1, !dbg !809
  store i64* %incdec.ptr69, i64** %stp, align 8, !dbg !809
  %65 = load i64, i64* %incdec.ptr69, align 8, !dbg !810
  %add.ptr70 = getelementptr inbounds i8, i8* %63, i64 %65, !dbg !811
  %66 = bitcast i8* %add.ptr70 to i16*, !dbg !812
Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.190
//Instructions in stack: Num.191
//Instructions in stack: Num.192
//Instructions in stack: Num.193
//Instructions in stack: Num.194
//Instructions in stack: Num.195
//Instructions in stack: Num.196
//Instructions in stack: Num.197
//Instructions in stack: Num.198
//Instructions in stack: Num.199
//Instructions in stack: Num.200
//Instructions in stack: Num.201
//Instructions in stack: Num.202
//Instructions in stack: Num.203
//Instructions in stack: Num.204
//Instructions in stack: Num.205
//Instructions in stack: Num.206
//Instructions in stack: Num.207
//Instructions in stack: Num.208
//Instructio  store i16* %66, i16** %io, align 8, !dbg !813
  %67 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !814
  %68 = bitcast %struct.__locale_mmap_t.162* %67 to i8*, !dbg !815
  %69 = load i64*, i64** %stp, align 8, !dbg !816
  %incdec.ptr71 = getelementptr inbounds i64, i64* %69, i32 1, !dbg !816
  store i64* %incdec.ptr71, i64** %stp, align 8, !dbg !816
  %70 = load i64, i64* %incdec.ptr71, align 8, !dbg !817
  %add.ptr72 = getelementptr inbounds i8, i8* %68, i64 %70, !dbg !818
  %71 = bitcast i8* %add.ptr72 to i16*, !dbg !819
  store i16* %71, i16** %ii, align 8, !dbg !820
  %72 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !821
  %73 = bitcast %struct.__locale_mmap_t.162* %72 to i8*, !dbg !822
  %74 = load i64*, i64** %stp, align 8, !dbg !823
  %incdec.ptr73 = getelementptr inbounds i64, i64* %74, i32 1, !dbg !823
  store i64* %incdec.ptr73, i64** %stp, align 8, !dbg !823
  %75 = load i64, i64* %incdec.ptr73, align 8, !dbg !824
  %add.ptr74 = getelementptr inbounds i8, i8* %73, i64 %75, !dbg !825
  store i8* %add.ptr74, i8** %d, align 8, !dbg !826
  store i32 0, i32* %c, align 4, !dbg !827
  br label %for.cond, !dbg !829
  %76 = load i32, i32* %c, align 4, !dbg !830
  %77 = load i32, i32* %len, align 4, !dbg !832
  %cmp75 = icmp slt i32 %76, %77, !dbg !833
  br i1 %cmp75, label %for.body, label %for.end, !dbg !834
  %78 = load i8*, i8** %d, align 8, !dbg !835
  %79 = load i16*, i16** %ii, align 8, !dbg !837
  %80 = load i8*, i8** %r, align 8, !dbg !838
  %81 = load i32, i32* %crow, align 4, !dbg !839
  %82 = load i32, i32* %c, align 4, !dbg !840
  %add77 = add nsw i32 %81, %82, !dbg !841
  %idxprom78 = sext i32 %add77 to i64, !dbg !838
  %arrayidx79 = getelementptr inbounds i8, i8* %80, i64 %idxprom78, !dbg !838
  %83 = load i8, i8* %arrayidx79, align 1, !dbg !838
  %conv80 = zext i8 %83 to i32, !dbg !838
  %84 = load i16*, i16** %io, align 8, !dbg !842
  %85 = load i32, i32* %c, align 4, !dbg !843
  %idxprom81 = sext i32 %85 to i64, !dbg !842
  %arrayidx82 = getelementptr inbounds i16, i16* %84, i64 %idxprom81, !dbg !842
  %86 = load i16, i16* %arrayidx82, align 2, !dbg !842
  %conv83 = zext i16 %86 to i32, !dbg !842
  %add84 = add nsw i32 %conv80, %conv83, !dbg !844
  %idxprom85 = sext i32 %add84 to i64, !dbg !837
  %arrayidx86 = getelementptr inbounds i16, i16* %79, i64 %idxprom85, !dbg !837
  %87 = load i16, i16* %arrayidx86, align 2, !dbg !837
  %conv87 = zext i16 %87 to i32, !dbg !837
  %idx.ext88 = sext i32 %conv87 to i64, !dbg !845
  %add.ptr89 = getelementptr inbounds i8, i8* %78, i64 %idx.ext88, !dbg !845
  %88 = load i8**, i8*** %x, align 8, !dbg !846
  %89 = load i32, i32* %c, align 4, !dbg !847
  %idx.ext90 = sext i32 %89 to i64, !dbg !848
  %add.ptr91 = getelementptr inbounds i8*, i8** %88, i64 %idx.ext90, !dbg !848
  store i8* %add.ptr89, i8** %add.ptr91, align 8, !dbg !849
  br label %for.inc, !dbg !850
  %90 = load i32, i32* %c, align 4, !dbg !851
  %inc = add nsw i32 %90, 1, !dbg !851
  store i32 %inc, i32* %c, align 4, !dbg !851
  br label %for.cond, !dbg !852, !llvm.loop !853
  br label %if.end92, !dbg !855
  %91 = load i32, i32* %i, align 4, !dbg !856
  %cmp93 = icmp eq i32 %91, 0, !dbg !858
  br i1 %cmp93, label %if.then95, label %if.else295, !dbg !859
  %92 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !860
  %locales96 = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %92, i32 0, i32 31, !dbg !862
  %93 = load i32, i32* %row, align 4, !dbg !863
  %mul97 = mul nsw i32 9, %93, !dbg !864
  %add98 = add nsw i32 %mul97, 2, !dbg !865
  %idxprom99 = sext i32 %add98 to i64, !dbg !860
  %arrayidx100 = getelementptr inbounds [2826 x i8], [2826 x i8]* %locales96, i64 0, i64 %idxprom99, !dbg !860
  %94 = load i8, i8* %arrayidx100, align 1, !dbg !860
  %conv101 = zext i8 %94 to i32, !dbg !860
  store i32 %conv101, i32* %c, align 4, !dbg !866
  %95 = load i32, i32* %c, align 4, !dbg !867
  %cmp102 = icmp sle i32 %95, 2, !dbg !869
  br i1 %cmp102, label %if.then104, label %if.else112, !dbg !870
  %96 = load i32, i32* %c, align 4, !dbg !871
  %cmp105 = icmp eq i32 %96, 2, !dbg !874
  br i1 %cmp105, label %if.then107, label %if.else, !dbg !875
  %97 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !876
  %codeset = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %97, i32 0, i32 38, !dbg !878
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @utf8, i64 0, i64 0), i8** %codeset, align 8, !dbg !879
  %98 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !880
  %encoding = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %98, i32 0, i32 9, !dbg !881
  store i8 1, i8* %encoding, align 8, !dbg !882
  %99 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !883
  %mb_cur_max = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %99, i32 0, i32 10, !dbg !884
  store i8 6, i8* %mb_cur_max, align 1, !dbg !885
  br label %if.end111, !dbg !886
  %100 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !887
  %codeset108 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %100, i32 0, i32 38, !dbg !889
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @ascii, i64 0, i64 0), i8** %codeset108, align 8, !dbg !890
  %101 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !891
  %encoding109 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %101, i32 0, i32 9, !dbg !892
  store i8 0, i8* %encoding109, align 8, !dbg !893
  %102 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !894
  %mb_cur_max110 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %102, i32 0, i32 10, !dbg !895
  store i8 1, i8* %mb_cur_max110, align 1, !dbg !896
  br label %if.end111
  br label %if.end280, !dbg !897
  call void @llvm.dbg.declare(metadata %struct.__codeset_8_bit_t.161** %c8b, metadata !1298, metadata !DIExpression()), !dbg !1310
  %103 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !911
  %codeset_list = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %103, i32 0, i32 35, !dbg !911
  %arraydecay113 = getelementptr inbounds [255 x i8], [255 x i8]* %codeset_list, i64 0, i64 0, !dbg !911
  store i8* %arraydecay113, i8** %r, align 8, !dbg !912
  %104 = load i8*, i8** %r, align 8, !dbg !913
  %105 = load i8*, i8** %r, align 8, !dbg !914
  %106 = load i32, i32* %c, align 4, !dbg !915
  %sub = sub nsw i32 %106, 3, !dbg !915
  store i32 %sub, i32* %c, align 4, !dbg !915
  %idxprom114 = sext i32 %sub to i64, !dbg !914
  %arrayidx115 = getelementptr inbounds i8, i8* %105, i64 %idxprom114, !dbg !914
  %107 = load i8, i8* %arrayidx115, align 1, !dbg !914
  %conv116 = zext i8 %107 to i32, !dbg !914
  %idx.ext117 = sext i32 %conv116 to i64, !dbg !916
  %add.ptr118 = getelementptr inbounds i8, i8* %104, i64 %idx.ext117, !dbg !916
  %108 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !917
  %codeset119 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %108, i32 0, i32 38, !dbg !918
  store i8* %add.ptr118, i8** %codeset119, align 8, !dbg !919
  %109 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !920
  %encoding120 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %109, i32 0, i32 9, !dbg !921
  store i8 2, i8* %encoding120, align 8, !dbg !922
  %110 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !923
  %mb_cur_max121 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %110, i32 0, i32 10, !dbg !924
  store i8 1, i8* %mb_cur_max121, align 1, !dbg !925
  %111 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !926
ns in stack: Num.209
//Instructions in stack: Num.210
//Instructions in stack: Num.211
//Instructions in stack: Num.212
//Instructions in stack: Num.213
//Instructions in stack: Num.214
//Instructions in stack: Num.215
//Instructions in stack: Num.216
//Instructions in stack: Num.217
//Instructions in stack: Num.218
//Instructions in stack: Num.219
//Instructions in stack: Num.220
//Instructions in stack: Num.221
//Instructions in stack: Num.222
//Instructions in stack: Num.223
//Instructions in stack: Num.224
//Instructions in stack: Num.225
//Instructions in stack: Num.226
//Instructions in stack: Num.227
//Instructions in stack: Num.228
//Instructions in stack: Num.229
//Instructions in stack: Num.230
//Instructions in stack: Num.231
//Instructions in stack: Num.232
//Instructions in stack: Num.233
//Instructions in stack: Num.234
//Instructions in stack: Num.235
//Instructions in stack: Num.236
//Instructions in stack: Num.237
//Instructions in stack: Num.238
//Instructions in stack: Num.239
//Instructions in stack: Num.240
//Instructions in stack: Num.241
//Instructions in stack: Num.242
//Instructions in stack: Num.243
//Instructions in stack: Num.244
//Instructions in stack: Num.245
//Instructions in stack: Num.246
//Instructions in stack: Num.247
//Instructions in stack: Num.248
//Instructions in stack: Num.249
//Instructions in stack: Num.250
//Instructions in stack: Num.251
//Instructions in stack: Num.252
//Instructions in stack: Num.253
//Instructions in stack: Num.254
//Instructions in stack: Num.255
//Instructions in stack: Num.256
//Instructions in stack: Num.257
//Instructions in stack: Num.258
//Instructions in stack: Num.259
//Instructions in stack: Num.260
//Instructions in stack: Num.261
//Instructions in stack: Num.262
//Instructions in stack: Num.263
//Instructions in stack: Num.264
//Instructions in stack: Num.265
//Instructions in stack: Num.266
//Instructions in stack: Num.267
//Instructions in stack: Num.268
//Instructions in stack: Num.269
//Instructions in stack: Num.270
//Instructions in stack: Num.271
//Instructions in stack: Num.272
//Instructions in stack: Num.273
//Instructions in stack: Num.274
//Instructions in stack: Num.275
//Instructions in stack: Num.276
//Instructions in stack: Num.277
//Instructions in stack: Num.278
//Instructions in stack: Num.279
//Instructions in stack: Num.280
//Instructions in stack: Num.281
//Instructions in stack: Num.282
//Instructions in stack: Num.283
//Instructions in stack: Num.284
//Instructions in stack: Num.285
//Instructions in stack: Num.286
//Instructions in stack: Num.287
//Instructions in stack: Num.288
//Instructions in stack: Num.289
//Instructions in stack: Num.290
//Instructions in stack: Num.291
//Instructions in stack: Num.292
//Instructions in stack: Num.293
//Instructions in stack: Num.294
//Instructions in stack: Num.295
//Instructions in stack: Num.296
//Instructions in stack: Num.297
//Instructions in stack: Num.298
//Instructions in stack: Num.299
//Instructions in stack: Num.300
//Instructions in stack: Num.301
//Instructions in stack: Num.302
//Instructions in stack: Num.303
//Instructions in stack: Num.304
//Instructions in stack: Num.305
//Instructions in stack: Num.306
//Instructions in stack: Num.307
//Instructions in stack: Num.308
//Instructions in stack: Num.309
//Instructions in stack: Num.310
//Instructions in stack: Num.311
//Instructions in stack: Num.312
//Instructions in stack: Num.313
//Instructions in stack: Num.314
//Instructions in stack: Num.315
//Instructions in stack: Num.316
//Instructions in stack: Num.317
//Instructions in stack: Num.318
//Instructions in stack: Num.319
//Instructions in stack: Num.320
//Instructions in stack: Num.321
//Instructions in stack: Num.322
//Instructions in stack: Num.323
//Instructions in stack: Num.324
//Instructions in stack: Num.325
//Instructions in stack: Num.326
//Instructions in stack: Num.327
//Instructions in stack: Num.328
//Instructions in stack: Num.329
//Instructions in stack: Num.330
//Instructions in stack: Num.331
//Instructions in stack: Num.332
//Instructions i  %codeset_8_bit = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %111, i32 0, i32 12, !dbg !927
  %arraydecay122 = getelementptr inbounds [23 x %struct.__codeset_8_bit_t.161], [23 x %struct.__codeset_8_bit_t.161]* %codeset_8_bit, i64 0, i64 0, !dbg !926
  %112 = load i32, i32* %c, align 4, !dbg !928
  %idx.ext123 = sext i32 %112 to i64, !dbg !929
  %add.ptr124 = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %arraydecay122, i64 %idx.ext123, !dbg !929
  store %struct.__codeset_8_bit_t.161* %add.ptr124, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !930
  %113 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !931
  %idx8ctype = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %113, i32 0, i32 0, !dbg !932
  %arraydecay125 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8ctype, i64 0, i64 0, !dbg !931
  %114 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !933
  %idx8ctype126 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %114, i32 0, i32 12, !dbg !934
  store i8* %arraydecay125, i8** %idx8ctype126, align 8, !dbg !935
  %115 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !936
  %idx8uplow = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %115, i32 0, i32 1, !dbg !937
  %arraydecay127 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8uplow, i64 0, i64 0, !dbg !936
  %116 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !938
  %idx8uplow128 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %116, i32 0, i32 14, !dbg !939
  store i8* %arraydecay127, i8** %idx8uplow128, align 8, !dbg !940
  %117 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !941
  %idx8c2wc = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %117, i32 0, i32 2, !dbg !942
  %arraydecay129 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8c2wc, i64 0, i64 0, !dbg !941
  %118 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !943
  %idx8c2wc130 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %118, i32 0, i32 16, !dbg !944
  store i8* %arraydecay129, i8** %idx8c2wc130, align 8, !dbg !945
  %119 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !946
  %idx8wc2c = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %119, i32 0, i32 3, !dbg !947
  %arraydecay131 = getelementptr inbounds [38 x i8], [38 x i8]* %idx8wc2c, i64 0, i64 0, !dbg !946
  %120 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !948
  %idx8wc2c132 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %120, i32 0, i32 18, !dbg !949
  store i8* %arraydecay131, i8** %idx8wc2c132, align 8, !dbg !950
  %121 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !951
  %__ctype_b_data = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %121, i32 0, i32 3, !dbg !952
  %arraydecay133 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data, i64 0, i64 0, !dbg !951
  %122 = bitcast i16* %arraydecay133 to i8*, !dbg !951
  %123 = load i16*, i16** @__C_ctype_b, align 8, !dbg !953
  %add.ptr134 = getelementptr inbounds i16, i16* %123, i64 -128, !dbg !954
  %124 = bitcast i16* %add.ptr134 to i8*, !dbg !953
  %call135 = call i8* @memcpy(i8* %122, i8* %124, i64 768) #11, !dbg !955
  %125 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !956
  %__ctype_tolower_data = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %125, i32 0, i32 4, !dbg !957
  %arraydecay136 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data, i64 0, i64 0, !dbg !956
  %126 = bitcast i16* %arraydecay136 to i8*, !dbg !956
  %127 = load i16*, i16** @__C_ctype_tolower, align 8, !dbg !958
  %add.ptr137 = getelementptr inbounds i16, i16* %127, i64 -128, !dbg !959
  %128 = bitcast i16* %add.ptr137 to i8*, !dbg !958
  %call138 = call i8* @memcpy(i8* %126, i8* %128, i64 768) #11, !dbg !960
  %129 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !961
  %__ctype_toupper_data = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %129, i32 0, i32 5, !dbg !962
  %arraydecay139 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data, i64 0, i64 0, !dbg !961
  %130 = bitcast i16* %arraydecay139 to i8*, !dbg !961
  %131 = load i16*, i16** @__C_ctype_toupper, align 8, !dbg !963
  %add.ptr140 = getelementptr inbounds i16, i16* %131, i64 -128, !dbg !964
  %132 = bitcast i16* %add.ptr140 to i8*, !dbg !963
  %call141 = call i8* @memcpy(i8* %130, i8* %132, i64 768) #11, !dbg !965
  call void @llvm.dbg.declare(metadata i32* %u, metadata !1366, metadata !DIExpression()), !dbg !1368
  call void @llvm.dbg.declare(metadata i16* %m, metadata !1369, metadata !DIExpression()), !dbg !1370
  store i32 0, i32* %u, align 4, !dbg !971
  br label %for.cond142, !dbg !973
  %133 = load i32, i32* %u, align 4, !dbg !974
  %cmp143 = icmp slt i32 %133, 128, !dbg !976
  br i1 %cmp143, label %for.body145, label %for.end270, !dbg !977
  %134 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !978
  %tbl8ctype = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %134, i32 0, i32 13, !dbg !980
  %135 = load i8*, i8** %tbl8ctype, align 8, !dbg !980
  %136 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !981
  %idx8ctype146 = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %136, i32 0, i32 0, !dbg !982
  %137 = load i32, i32* %u, align 4, !dbg !983
  %shr = ashr i32 %137, 3, !dbg !984
  %idxprom147 = sext i32 %shr to i64, !dbg !981
  %arrayidx148 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8ctype146, i64 0, i64 %idxprom147, !dbg !981
  %138 = load i8, i8* %arrayidx148, align 1, !dbg !981
  %conv149 = zext i8 %138 to i32, !dbg !985
  %shl150 = shl i32 %conv149, 2, !dbg !986
  %139 = load i32, i32* %u, align 4, !dbg !987
  %and151 = and i32 %139, 7, !dbg !988
  %shr152 = ashr i32 %and151, 1, !dbg !989
  %add153 = add nsw i32 %shl150, %shr152, !dbg !990
  %idxprom154 = sext i32 %add153 to i64, !dbg !978
  %arrayidx155 = getelementptr inbounds i8, i8* %135, i64 %idxprom154, !dbg !978
  %140 = load i8, i8* %arrayidx155, align 1, !dbg !978
  %conv156 = zext i8 %140 to i32, !dbg !978
  store i32 %conv156, i32* %c, align 4, !dbg !991
  %141 = load i32, i32* %u, align 4, !dbg !992
  %and157 = and i32 %141, 1, !dbg !993
  %tobool158 = icmp ne i32 %and157, 0, !dbg !993
  br i1 %tobool158, label %cond.true, label %cond.false, !dbg !994
  %142 = load i32, i32* %c, align 4, !dbg !995
  %shr159 = ashr i32 %142, 4, !dbg !996
  br label %cond.end, !dbg !994
  %143 = load i32, i32* %c, align 4, !dbg !997
  %and160 = and i32 %143, 15, !dbg !998
  br label %cond.end, !dbg !994
  %cond = phi i32 [ %shr159, %cond.true ], [ %and160, %cond.false ], !dbg !994
  store i32 %cond, i32* %c, align 4, !dbg !999
  %144 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1000
  %code2flag = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %144, i32 0, i32 20, !dbg !1001
  %145 = load i16*, i16** %code2flag, align 8, !dbg !1001
  %146 = load i32, i32* %c, align 4, !dbg !1002
  %idxprom161 = sext i32 %146 to i64, !dbg !1000
  %arrayidx162 = getelementptr inbounds i16, i16* %145, i64 %idxprom161, !dbg !1000
  %147 = load i16, i16* %arrayidx162, align 2, !dbg !1000
  store i16 %147, i16* %m, align 2, !dbg !1003
  %148 = load i16, i16* %m, align 2, !dbg !1004
  %149 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1005
  %__ctype_b_data163 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %149, i32 0, i32 3, !dbg !1006
  %150 = load i32, i32* %u, align 4, !dbg !1007
  %add164 = add nsw i32 256, %150, !dbg !1008
  %idxprom165 = sext i32 %add164 to i64, !dbg !1005
  %arrayidx166 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data163, i64 0, i64 %idxprom165, !dbg !1005
  store i16 %148, i16* %arrayidx166, align 2, !dbg !1009
  %151 = load i32, i32* %u, align 4, !dbg !1010
  %add167 = add nsw i32 128, %151, !dbg !1012
  %conv168 = trunc i32 %add167 to i8, !dbg !1013
  %conv169 = sext i8 %conv168 to i32, !dbg !1014
  %cmp170 = icmp ne i32 %conv169, -1, !dbg !1015
  br i1 %cmp170, label %if.then172, label %if.end180, !dbg !1016
  %152 = load i16, i16* %m, align 2, !dbg !1017
  %153 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1019
  %__ctype_b_data173 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %153, i32 0, i32 3, !dbg !1020
  %154 = load i32, i32* %u, align 4, !dbg !1021
  %add174 = add nsw i32 128, %154, !dbg !1022
  %conv175 = trunc i32 %add174 to i8, !dbg !1023
  %conv176 = sext i8 %conv175 to i32, !dbg !1024
  %add177 = add nsw i32 128, %conv176, !dbg !1025
n stack: Num.333
//Instructions in stack: Num.334
//Instructions in stack: Num.335
//Instructions in stack: Num.336
//Instructions in stack: Num.337
//Instructions in stack: Num.338
//Instructions in stack: Num.339
//Instructions in stack: Num.340
//Instructions in stack: Num.341
//Instructions in stack: Num.342
//Instructions in stack: Num.343
//Instructions in stack: Num.344
//Instructions in stack: Num.345
//Instructions in stack: Num.346
//Instructions in stack: Num.347
//Instructions in stack: Num.348
//Instructions in stack: Num.349
//Instructions in stack: Num.350
//Instructions in stack: Num.351
//Instructions in stack: Num.352
//Instructions in stack: Num.353
//Instructions in stack: Num.354
//Instructions in stack: Num.355
//Instructions in stack: Num.356
//Instructions in stack: Num.357
//Instructions in stack: Num.358
//Instructions in stack: Num.359
//Instructions in stack: Num.360
//Instructions in stack: Num.361
//Instructions in stack: Num.362
//Instructions in stack: Num.363
//Instructions in stack: Num.364
//Instructions in stack: Num.365
//Instructions in stack: Num.366
//Instructions in stack: Num.367
//Instructions in stack: Num.368
//Instructions in stack: Num.369
//Instructions in stack: Num.370
//Instructions in stack: Num.371
//Instructions in stack: Num.372
//Instructions in stack: Num.373
//Instructions in stack: Num.374
//Instructions in stack: Num.375
//Instructions in stack: Num.376
//Instructions in stack: Num.377
//Instructions in stack: Num.378
//Instructions in stack: Num.379
//Instructions in stack: Num.380
//Instructions in stack: Num.381
//Instructions in stack: Num.382
//Instructions in stack: Num.383
//Instructions in stack: Num.384
//Instructions in stack: Num.385
//Instructions in stack: Num.386
//Instructions in stack: Num.387
//Instructions in stack: Num.388
//Instructions in stack: Num.389
//Instructions in stack: Num.390
//Instructions in stack: Num.391
//Instructions in stack: Num.392
//Instructions in stack: Num.393
//Instructions in stack: Num.394
//Instructions in stack: Num.395
//Instructions in stack: Num.396
//Instructions in stack: Num.397
//Instructions in stack: Num.398
//Instructions in stack: Num.399
//Instructions in stack: Num.400
//Instructions in stack: Num.401
//Instructions in stack: Num.402
//Instructions in stack: Num.403
//Instructions in stack: Num.404
//Instructions in stack: Num.405
//Instructions in stack: Num.406
//Instructions in stack: Num.407
//Instructions in stack: Num.408
//Instructions in stack: Num.409
//Instructions in stack: Num.410
//Instructions in stack: Num.411
//Instructions in stack: Num.412
//Instructions in stack: Num.413
//Instructions in stack: Num.414
//Instructions in stack: Num.415
//Instructions in stack: Num.416
//Instructions in stack: Num.417
//Instructions in stack: Num.418
//Instructions in stack: Num.419
//Instructions in stack: Num.420
//Instructions in stack: Num.421
//Instructions in stack: Num.422
//Instructions in stack: Num.423
//Instructions in stack: Num.424
//Instructions in stack: Num.425
//Instructions in stack: Num.426
//Instructions in stack: Num.427
//Instructions in stack: Num.428
//Instructions in stack: Num.429
//Instructions in stack: Num.430
//Instructions in stack: Num.431
//Instructions in stack: Num.432
//Instructions in stack: Num.433
//Instructions in stack: Num.434
//Instructions in stack: Num.435
//Instructions in stack: Num.436
//Instructions in stack: Num.437
//Instructions in stack: Num.438
//Instructions in stack: Num.439
//Instructions in stack: Num.440
//Instructions in stack: Num.441
//Instructions in stack: Num.442
//Instructions in stack: Num.443
//Instructions in stack: Num.444
//Instructions in stack: Num.445
//Instructions in stack: Num.446
//Instructions in stack: Num.447
//Instructions in stack: Num.448
//Instructions in stack: Num.449
//Instructions in stack: Num.450
//Instructions in stack: Num.451
//Instructions in stack: Num.452
//Instructions in stack: Num.453
//Instructions in stack: Num.454
//Instructions in stack: Num.455
//Instructions in stack: Num.456
//Instructions in st  %idxprom178 = sext i32 %add177 to i64, !dbg !1019
  %arrayidx179 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data173, i64 0, i64 %idxprom178, !dbg !1019
  store i16 %152, i16* %arrayidx179, align 2, !dbg !1026
  br label %if.end180, !dbg !1027
  %155 = load i32, i32* %u, align 4, !dbg !1028
  %add181 = add nsw i32 128, %155, !dbg !1029
  %conv182 = trunc i32 %add181 to i16, !dbg !1030
  %156 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1031
  %__ctype_tolower_data183 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %156, i32 0, i32 4, !dbg !1032
  %157 = load i32, i32* %u, align 4, !dbg !1033
  %add184 = add nsw i32 256, %157, !dbg !1034
  %idxprom185 = sext i32 %add184 to i64, !dbg !1031
  %arrayidx186 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data183, i64 0, i64 %idxprom185, !dbg !1031
  store i16 %conv182, i16* %arrayidx186, align 2, !dbg !1035
  %158 = load i32, i32* %u, align 4, !dbg !1036
  %add187 = add nsw i32 128, %158, !dbg !1037
  %conv188 = trunc i32 %add187 to i16, !dbg !1038
  %159 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1039
  %__ctype_toupper_data189 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %159, i32 0, i32 5, !dbg !1040
  %160 = load i32, i32* %u, align 4, !dbg !1041
  %add190 = add nsw i32 256, %160, !dbg !1042
  %idxprom191 = sext i32 %add190 to i64, !dbg !1039
  %arrayidx192 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data189, i64 0, i64 %idxprom191, !dbg !1039
  store i16 %conv188, i16* %arrayidx192, align 2, !dbg !1043
  %161 = load i16, i16* %m, align 2, !dbg !1044
  %conv193 = zext i16 %161 to i32, !dbg !1044
  %and194 = and i32 %conv193, 768, !dbg !1046
  %tobool195 = icmp ne i32 %and194, 0, !dbg !1046
  br i1 %tobool195, label %if.then196, label %if.end267, !dbg !1047
  %162 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1048
  %tbl8uplow = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %162, i32 0, i32 15, !dbg !1050
  %163 = load i8*, i8** %tbl8uplow, align 8, !dbg !1050
  %164 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !1051
  %idx8uplow197 = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %164, i32 0, i32 1, !dbg !1052
  %165 = load i32, i32* %u, align 4, !dbg !1053
  %shr198 = ashr i32 %165, 3, !dbg !1054
  %idxprom199 = sext i32 %shr198 to i64, !dbg !1051
  %arrayidx200 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8uplow197, i64 0, i64 %idxprom199, !dbg !1051
  %166 = load i8, i8* %arrayidx200, align 1, !dbg !1051
  %conv201 = zext i8 %166 to i32, !dbg !1055
  %shl202 = shl i32 %conv201, 3, !dbg !1056
  %167 = load i32, i32* %u, align 4, !dbg !1057
  %add203 = add nsw i32 128, %167, !dbg !1058
  %and204 = and i32 %add203, 7, !dbg !1059
  %add205 = add nsw i32 %shl202, %and204, !dbg !1060
  %idxprom206 = sext i32 %add205 to i64, !dbg !1048
  %arrayidx207 = getelementptr inbounds i8, i8* %163, i64 %idxprom206, !dbg !1048
  %168 = load i8, i8* %arrayidx207, align 1, !dbg !1048
  %conv208 = zext i8 %168 to i32, !dbg !1048
  store i32 %conv208, i32* %c, align 4, !dbg !1061
  %169 = load i16, i16* %m, align 2, !dbg !1062
  %conv209 = zext i16 %169 to i32, !dbg !1062
  %and210 = and i32 %conv209, 512, !dbg !1064
  %tobool211 = icmp ne i32 %and210, 0, !dbg !1064
  br i1 %tobool211, label %if.then212, label %if.else239, !dbg !1065
  %170 = load i32, i32* %u, align 4, !dbg !1066
  %add213 = add nsw i32 128, %170, !dbg !1068
  %171 = load i32, i32* %c, align 4, !dbg !1069
  %add214 = add nsw i32 %add213, %171, !dbg !1070
  %conv215 = trunc i32 %add214 to i8, !dbg !1071
  %conv216 = zext i8 %conv215 to i16, !dbg !1071
  %172 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1072
  %__ctype_toupper_data217 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %172, i32 0, i32 5, !dbg !1073
  %173 = load i32, i32* %u, align 4, !dbg !1074
  %add218 = add nsw i32 256, %173, !dbg !1075
  %idxprom219 = sext i32 %add218 to i64, !dbg !1072
  %arrayidx220 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data217, i64 0, i64 %idxprom219, !dbg !1072
  store i16 %conv216, i16* %arrayidx220, align 2, !dbg !1076
  %174 = load i32, i32* %u, align 4, !dbg !1077
  %add221 = add nsw i32 128, %174, !dbg !1079
  %conv222 = trunc i32 %add221 to i8, !dbg !1080
  %conv223 = sext i8 %conv222 to i32, !dbg !1081
  %cmp224 = icmp ne i32 %conv223, -1, !dbg !1082
  br i1 %cmp224, label %if.then226, label %if.end238, !dbg !1083
  %175 = load i32, i32* %u, align 4, !dbg !1084
  %add227 = add nsw i32 128, %175, !dbg !1086
  %176 = load i32, i32* %c, align 4, !dbg !1087
  %add228 = add nsw i32 %add227, %176, !dbg !1088
  %conv229 = trunc i32 %add228 to i8, !dbg !1089
  %conv230 = zext i8 %conv229 to i16, !dbg !1089
  %177 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1090
  %__ctype_toupper_data231 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %177, i32 0, i32 5, !dbg !1091
  %178 = load i32, i32* %u, align 4, !dbg !1092
  %add232 = add nsw i32 128, %178, !dbg !1093
  %conv233 = trunc i32 %add232 to i8, !dbg !1094
  %conv234 = sext i8 %conv233 to i32, !dbg !1095
  %add235 = add nsw i32 128, %conv234, !dbg !1096
  %idxprom236 = sext i32 %add235 to i64, !dbg !1090
  %arrayidx237 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data231, i64 0, i64 %idxprom236, !dbg !1090
  store i16 %conv230, i16* %arrayidx237, align 2, !dbg !1097
  br label %if.end238, !dbg !1098
  br label %if.end266, !dbg !1099
  %179 = load i32, i32* %u, align 4, !dbg !1100
  %add240 = add nsw i32 128, %179, !dbg !1102
  %180 = load i32, i32* %c, align 4, !dbg !1103
  %sub241 = sub nsw i32 %add240, %180, !dbg !1104
  %conv242 = trunc i32 %sub241 to i8, !dbg !1105
  %conv243 = zext i8 %conv242 to i16, !dbg !1105
  %181 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1106
  %__ctype_tolower_data244 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %181, i32 0, i32 4, !dbg !1107
  %182 = load i32, i32* %u, align 4, !dbg !1108
  %add245 = add nsw i32 256, %182, !dbg !1109
  %idxprom246 = sext i32 %add245 to i64, !dbg !1106
  %arrayidx247 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data244, i64 0, i64 %idxprom246, !dbg !1106
  store i16 %conv243, i16* %arrayidx247, align 2, !dbg !1110
  %183 = load i32, i32* %u, align 4, !dbg !1111
  %add248 = add nsw i32 128, %183, !dbg !1113
  %conv249 = trunc i32 %add248 to i8, !dbg !1114
  %conv250 = sext i8 %conv249 to i32, !dbg !1115
  %cmp251 = icmp ne i32 %conv250, -1, !dbg !1116
  br i1 %cmp251, label %if.then253, label %if.end265, !dbg !1117
  %184 = load i32, i32* %u, align 4, !dbg !1118
  %add254 = add nsw i32 128, %184, !dbg !1120
  %185 = load i32, i32* %c, align 4, !dbg !1121
  %sub255 = sub nsw i32 %add254, %185, !dbg !1122
  %conv256 = trunc i32 %sub255 to i8, !dbg !1123
  %conv257 = zext i8 %conv256 to i16, !dbg !1123
  %186 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1124
  %__ctype_tolower_data258 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %186, i32 0, i32 4, !dbg !1125
  %187 = load i32, i32* %u, align 4, !dbg !1126
  %add259 = add nsw i32 128, %187, !dbg !1127
  %conv260 = trunc i32 %add259 to i8, !dbg !1128
  %conv261 = sext i8 %conv260 to i32, !dbg !1129
  %add262 = add nsw i32 128, %conv261, !dbg !1130
ack: Num.457
//Instructions in stack: Num.458
//Instructions in stack: Num.459
//Instructions in stack: Num.460
//Instructions in stack: Num.461
//Instructions in stack: Num.462
//Instructions in stack: Num.463
//Instructions in stack: Num.464
//Instructions in stack: Num.465
//Instructions in stack: Num.466
//Instructions in stack: Num.467
//Instructions in stack: Num.468
//Instructions in stack: Num.469
//Instructions in stack: Num.470
//Instructions in stack: Num.471
//Instructions in stack: Num.472
//Instructions in stack: Num.473
//Instructions in stack: Num.474
//Instructions in stack: Num.475
//Instructions in stack: Num.476
//Instructions in stack: Num.477
//Instructions in stack: Num.478
//Instructions in stack: Num.479
//Instructions in stack: Num.480
//Instructions in stack: Num.481
//Instructions in stack: Num.482
//Instructions in stack: Num.483
//Instructions in stack: Num.484
//Instructions in stack: Num.485
//Instructions in stack: Num.486
//Instructions in stack: Num.487
//Instructions in stack: Num.488
//Instructions in stack: Num.489
//Instructions in stack: Num.490
//Instructions in stack: Num.491
//Instructions in stack: Num.492
//Instructions in stack: Num.493
//Instructions in stack: Num.494
//Instructions in stack: Num.495
//Instructions in stack: Num.496
//Instructions in stack: Num.497
//Instructions in stack: Num.498
//Instructions in stack: Num.499
//Instructions in stack: Num.500
//Instructions in stack: Num.501
//Instructions in stack: Num.502
//Instructions in stack: Num.503
//Instructions in stack: Num.504
//Instructions in stack: Num.505
//Instructions in stack: Num.506
//Instructions in stack: Num.507
//Instructions in stack: Num.508
//Instructions in stack: Num.509
//Instructions in stack: Num.510
//Instructions in stack: Num.511
//Instructions in stack: Num.512
//Instructions in stack: Num.513
//Instructions in stack: Num.514
//Instructions in stack: Num.515
//Instructions in stack: Num.516
//Instructions in stack: Num.517
//Instructions in stack: Num.518
//Instructions in stack: Num.519
//Instructions in stack: Num.520
//Instructions in stack: Num.521
//Instructions in stack: Num.522
//Instructions in stack: Num.523
//Instructions in stack: Num.524
//Instructions in stack: Num.525
//Instructions in stack: Num.526
//Instructions in stack: Num.527
//Instructions in stack: Num.528
//Instructions in stack: Num.529
//Instructions in stack: Num.530
//Instructions in stack: Num.531
//Instructions in stack: Num.532
//Instructions in stack: Num.533
//Instructions in stack: Num.534
//Instructions in stack: Num.535
//Instructions in stack: Num.536
//Instructions in stack: Num.537
//Instructions in stack: Num.538
//Instructions in stack: Num.539
//Instructions in stack: Num.540
//Instructions in stack: Num.541
//Instructions in stack: Num.542
//Instructions in stack: Num.543
//Instructions in stack: Num.544
//Instructions in stack: Num.545
//Instructions in stack: Num.546
//Instructions in stack: Num.547
//Instructions in stack: Num.548
//Instructions in stack: Num.549
//Instructions in stack: Num.550
//Instructions in stack: Num.551
//Instructions in stack: Num.552
//Instructions in stack: Num.553
//Instructions in stack: Num.554
//Instructions in stack: Num.555
//Instructions in stack: Num.556
//Instructions in stack: Num.557
//Instructions in stack: Num.558
//Instructions in stack: Num.559
//Instructions in stack: Num.560
//Instructions in stack: Num.561
//Instructions in stack: Num.562
//Instructions in stack: Num.563
//Instructions in stack: Num.564
//Instructions in stack: Num.565
//Instructions in stack: Num.566
//Instructions in stack: Num.567
//Instructions in stack: Num.568
//Instructions in stack: Num.569
//Instructions in stack: Num.570
//Instructions in stack: Num.571
//Instructions in stack: Num.572
//Instructions in stack: Num.573
//Instructions in stack: Num.574
//Instructions in stack: Num.575
//Instructions in stack: Num.576
//Instructions in stack: Num.577
//Instructions in stack: Num.578
//Instructions in stack: Num.579
//Instructions in stack: Num.580
//Instructions in stack:  %idxprom263 = sext i32 %add262 to i64, !dbg !1124
  %arrayidx264 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data258, i64 0, i64 %idxprom263, !dbg !1124
  store i16 %conv257, i16* %arrayidx264, align 2, !dbg !1131
  br label %if.end265, !dbg !1132
  br label %if.end266
  br label %if.end267, !dbg !1133
  br label %for.inc268, !dbg !1134
  %188 = load i32, i32* %u, align 4, !dbg !1135
  %inc269 = add nsw i32 %188, 1, !dbg !1135
  store i32 %inc269, i32* %u, align 4, !dbg !1135
  br label %for.cond142, !dbg !1136, !llvm.loop !1137
  %189 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1139
  %__ctype_b_data271 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %189, i32 0, i32 3, !dbg !1140
  %arraydecay272 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data271, i64 0, i64 0, !dbg !1139
  %add.ptr273 = getelementptr inbounds i16, i16* %arraydecay272, i64 128, !dbg !1141
  %190 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1142
  %__ctype_b = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %190, i32 0, i32 0, !dbg !1143
  store i16* %add.ptr273, i16** %__ctype_b, align 8, !dbg !1144
  %191 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1145
  %__ctype_tolower_data274 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %191, i32 0, i32 4, !dbg !1146
  %arraydecay275 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data274, i64 0, i64 0, !dbg !1145
  %add.ptr276 = getelementptr inbounds i16, i16* %arraydecay275, i64 128, !dbg !1147
  %192 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1148
  %__ctype_tolower = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %192, i32 0, i32 1, !dbg !1149
  store i16* %add.ptr276, i16** %__ctype_tolower, align 8, !dbg !1150
  %193 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1151
  %__ctype_toupper_data277 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %193, i32 0, i32 5, !dbg !1152
  %arraydecay278 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data277, i64 0, i64 0, !dbg !1151
  %add.ptr279 = getelementptr inbounds i16, i16* %arraydecay278, i64 128, !dbg !1153
  %194 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1154
  %__ctype_toupper = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %194, i32 0, i32 2, !dbg !1155
  store i16* %add.ptr279, i16** %__ctype_toupper, align 8, !dbg !1156
  br label %if.end280
  %195 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1157
  %outdigit_length = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %195, i32 0, i32 11, !dbg !1158
  %arraydecay281 = getelementptr inbounds [10 x i8], [10 x i8]* %outdigit_length, i64 0, i64 0, !dbg !1157
  store i8* %arraydecay281, i8** %d, align 8, !dbg !1159
  %196 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1160
  %outdigit0_mb = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %196, i32 0, i32 28, !dbg !1161
  store i8** %outdigit0_mb, i8*** %x, align 8, !dbg !1162
  store i32 0, i32* %c, align 4, !dbg !1163
  br label %for.cond282, !dbg !1165
  %197 = load i32, i32* %c, align 4, !dbg !1166
  %cmp283 = icmp slt i32 %197, 10, !dbg !1168
  br i1 %cmp283, label %for.body285, label %for.end294, !dbg !1169
  %198 = load i8**, i8*** %x, align 8, !dbg !1170
  %199 = load i32, i32* %c, align 4, !dbg !1172
  %idxprom286 = sext i32 %199 to i64, !dbg !1170
  %arrayidx287 = getelementptr inbounds i8*, i8** %198, i64 %idxprom286, !dbg !1170
  %200 = load i8*, i8** %arrayidx287, align 8, !dbg !1170
  %call288 = call i64 @strlen(i8* %200) #12, !dbg !1173
  %conv289 = trunc i64 %call288 to i8, !dbg !1173
  %201 = load i8*, i8** %d, align 8, !dbg !1174
  %202 = load i32, i32* %c, align 4, !dbg !1175
  %idxprom290 = sext i32 %202 to i64, !dbg !1176
  %arrayidx291 = getelementptr inbounds i8, i8* %201, i64 %idxprom290, !dbg !1176
  store i8 %conv289, i8* %arrayidx291, align 1, !dbg !1177
  br label %for.inc292, !dbg !1178
  %203 = load i32, i32* %c, align 4, !dbg !1179
  %inc293 = add nsw i32 %203, 1, !dbg !1179
  store i32 %inc293, i32* %c, align 4, !dbg !1179
  br label %for.cond282, !dbg !1180, !llvm.loop !1181
  br label %if.end312, !dbg !1183
  %204 = load i32, i32* %i, align 4, !dbg !1184
  %cmp296 = icmp eq i32 %204, 1, !dbg !1186
  br i1 %cmp296, label %if.then298, label %if.end311, !dbg !1187
  %205 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1188
  %decimal_point_wc = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %205, i32 0, i32 24, !dbg !1190
  %206 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1191
  %decimal_point = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %206, i32 0, i32 39, !dbg !1192
  %207 = load i8*, i8** %decimal_point, align 8, !dbg !1192
  %208 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1193
  %call299 = call i32 @__locale_mbrtowc_l(i32* %decimal_point_wc, i8* %207, %struct.__uclibc_locale_struct.160* %208) #10, !dbg !1194
  %209 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1195
  %decimal_point_len = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %209, i32 0, i32 26, !dbg !1196
  store i32 %call299, i32* %decimal_point_len, align 8, !dbg !1197
  %210 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1198
  %grouping = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %210, i32 0, i32 41, !dbg !1200
  %211 = load i8*, i8** %grouping, align 8, !dbg !1200
  %212 = load i8, i8* %211, align 1, !dbg !1201
  %tobool300 = icmp ne i8 %212, 0, !dbg !1201
  br i1 %tobool300, label %if.then301, label %if.end310, !dbg !1202
  %213 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1203
  %thousands_sep_wc = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %213, i32 0, i32 25, !dbg !1205
  %214 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1206
  %thousands_sep = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %214, i32 0, i32 40, !dbg !1207
  %215 = load i8*, i8** %thousands_sep, align 8, !dbg !1207
  %216 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1208
  %call302 = call i32 @__locale_mbrtowc_l(i32* %thousands_sep_wc, i8* %215, %struct.__uclibc_locale_struct.160* %216) #10, !dbg !1209
  %217 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1210
  %thousands_sep_len = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %217, i32 0, i32 27, !dbg !1211
  store i32 %call302, i32* %thousands_sep_len, align 4, !dbg !1212
  %218 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1213
  %thousands_sep_len303 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %218, i32 0, i32 27, !dbg !1215
  %219 = load i32, i32* %thousands_sep_len303, align 4, !dbg !1215
  %cmp304 = icmp eq i32 %219, 0, !dbg !1216
  br i1 %cmp304, label %if.then306, label %if.end309, !dbg !1217
  %220 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1218
  %thousands_sep307 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %220, i32 0, i32 40, !dbg !1220
  %221 = load i8*, i8** %thousands_sep307, align 8, !dbg !1220
  %222 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1221
  %grouping308 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %222, i32 0, i32 41, !dbg !1222
  store i8* %221, i8** %grouping308, align 8, !dbg !1223
  br label %if.end309, !dbg !1224
  br label %if.end310, !dbg !1225
  br label %if.end311, !dbg !1226
  br label %if.end312
  br label %if.end313, !dbg !1227
  %223 = load i32, i32* %i, align 4, !dbg !1228
  %inc314 = add nsw i32 %223, 1, !dbg !1228
  store i32 %inc314, i32* %i, align 4, !dbg !1228
  %224 = load i8*, i8** %p.addr, align 8, !dbg !1229
  %add.ptr315 = getelementptr inbounds i8, i8* %224, i64 2, !dbg !1229
  store i8* %add.ptr315, i8** %p.addr, align 8, !dbg !1229
  %225 = load i8*, i8** %s, align 8, !dbg !1230
  %add.ptr316 = getelementptr inbounds i8, i8* %225, i64 2, !dbg !1230
  store i8* %add.ptr316, i8** %s, align 8, !dbg !1230
  br label %do.cond, !dbg !1231
  %226 = load i32, i32* %i, align 4, !dbg !1232
  %cmp317 = icmp slt i32 %226, 6, !dbg !1233
  br i1 %cmp317, label %do.body, label %do.end, !dbg !1231, !llvm.loop !1234
  store i32 1, i32* %retval, align 4, !dbg !1236
  br label %return, !dbg !1236
  %227 = load i32, i32* %retval, align 4, !dbg !1237
 Num.581
//Instructions in stack: Num.582
//Instructions in stack: Num.583
//Instructions in stack: Num.584
//Instructions in stack: Num.585
//Instructions in stack: Num.586
//Instructions in stack: Num.587
//Instructions in stack: Num.588
//Instructions in stack: Num.589
//Instructions in stack: Num.590
//Instructions in stack: Num.591
//Instructions in stack: Num.592
//Instructions in stack: Num.593
//Instructions in stack: Num.594
//Instructions in stack: Num.595
//Instructions in stack: Num.596
//Instructions in stack: Num.597
//Instructions in stack: Num.598
//Instructions in stack: Num.599
//Instructions in stack: Num.600
//Instructions in stack: Num.601
//Instructions in stack: Num.602
//Instructions in stack: Num.603
//Instructions in stack: Num.604
//Instructions in stack: Num.605
//Instructions in stack: Num.606
//Instructions in stack: Num.607
//Instructions in stack: Num.608
//Instructions in stack: Num.609
//Instructions in stack: Num.610
//Instructions in stack: Num.611
//Instructions in stack: Num.612
//Instructions in stack: Num.613
//Instructions in stack: Num.614
//Instructions in stack: Num.615
//Instructions in stack: Num.616
//Instructions in stack: Num.617
//Instructions in stack: Num.618
//Instructions in stack: Num.619
//Instructions in stack: Num.620
//Instructions in stack: Num.621
//Instructions in stack: Num.622
//Instructions in stack: Num.623
//Instructions in stack: Num.624
//Instructions in stack: Num.625
//Instructions in stack: Num.626
//Instructions in stack: Num.627
//Instructions in stack: Num.628
//Instructions in stack: Num.629
//Instructions in stack: Num.630
//Instructions in stack: Num.631
//Instructions in stack: Num.632
//Instructions in stack: Num.633
//Instructions in stack: Num.634
//Instructions in stack: Num.635
//Instructions in stack: Num.636
//Instructions in stack: Num.637
//Instructions in stack: Num.638
//Instructions in stack: Num.639
//Instructions in stack: Num.640
//Instructions in stack: Num.641
//Instructions in stack: Num.642
//Instructions in stack: Num.643
//Instructions in stack: Num.644
//Instructions in stack: Num.645
//Instructions in stack: Num.646
//Instructions in stack: Num.647
//Instructions in stack: Num.648
//Instructions in stack: Num.649
//Instructions in stack: Num.650
//Instructions in stack: Num.651
//Instructions in stack: Num.652
//Instructions in stack: Num.653
//Instructions in stack: Num.654
//Instructions in stack: Num.655
//Instructions in stack: Num.656
//Instructions in stack: Num.657
//Instructions in stack: Num.658
//Instructions in stack: Num.659
//Instructions in stack: Num.660
//Instructions in stack: Num.661
//Instructions in stack: Num.662
//Instructions in stack: Num.663
//Instructions in stack: Num.664
//Instructions in stack: Num.665
//Instructions in stack: Num.666
//Instructions in stack: Num.667
//Instructions in stack: Num.668
//Instructions in stack: Num.669
//Instructions in stack: Num.670
//Instructions in stack: Num.671
//Instructions in stack: Num.672
//Instructions in stack: Num.673
//Instructions in stack: Num.674
//Instructions in stack: Num.675
//Instructions in stack: Num.676
//Instructions in stack: Num.677
//Instructions in stack: Num.678
//Instructions in stack: Num.679
//Instructions in stack: Num.680
//Instructions in stack: Num.681
//Instructions in stack: Num.682
//Instructions in stack: Num.683
//Instructions in stack: Num.684
//Instructions in stack: Num.685
//Instructions in stack: Num.686
//Instructions in stack: Num.687
//Instructions in stack: Num.688
//Instructions in stack: Num.689
//Instructions in stack: Num.690
//Instructions in stack: Num.691
//Instructions in stack: Num.692
//Instructions in stack: Num.693
//Instructions in stack: Num.694
//Instructions in stack: Num.695
//Instructions in stack: Num.696
//Instructions in stack: Num.697
//Instructions in stack: Num.698
//Instructions in stack: Num.699
//Instructions in stack: Num.700
//Instructions in stack: Num.701
//Instructions in stack: Num.702
//Instructions in stack: Num.703
//Instructions in stack: Num.704
//Instructions in stack: Num  ret i32 %227, !dbg !1237
  %s.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !2692, metadata !DIExpression()), !dbg !2693
  call void @llvm.dbg.declare(metadata i8** %p, metadata !2694, metadata !DIExpression()), !dbg !2695
  %0 = load i8*, i8** %s.addr, align 8, !dbg !664
  store i8* %0, i8** %p, align 8, !dbg !666
  br label %for.cond, !dbg !667
  %1 = load i8*, i8** %p, align 8, !dbg !668
  %2 = load i8, i8* %1, align 1, !dbg !670
  %tobool = icmp ne i8 %2, 0, !dbg !671
  br i1 %tobool, label %for.body, label %for.end, !dbg !671
  br label %for.inc, !dbg !671
  %3 = load i8*, i8** %p, align 8, !dbg !672
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !672
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !672
  br label %for.cond, !dbg !673, !llvm.loop !674
  %4 = load i8*, i8** %p, align 8, !dbg !676
  %5 = load i8*, i8** %s.addr, align 8, !dbg !677
  %sub.ptr.lhs.cast = ptrtoint i8* %4 to i64, !dbg !678
  %sub.ptr.rhs.cast = ptrtoint i8* %5 to i64, !dbg !678
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !678
  ret i64 %sub.ptr.sub, !dbg !679
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
.705
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  %0 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !657
  %tobool = icmp ne i32 %0, 0, !dbg !657
  br i1 %tobool, label %if.then, label %if.end, !dbg !659
  br label %if.end4, !dbg !660
  %1 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  %inc = add nsw i32 %1, 1, !dbg !661
  store i32 %inc, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  store i64 4096, i64* @__pagesize, align 8, !dbg !662
  br i1 true, label %if.then1, label %if.end2, !dbg !663
  call void @_locale_init() #10, !dbg !664
  br label %if.end2, !dbg !664
  br i1 true, label %if.then3, label %if.end4, !dbg !666
  call void @_stdio_init() #10, !dbg !667
  br label %if.end4, !dbg !667
  ret void, !dbg !669
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** @__global_locale, align 8, !dbg !658
  call void @_locale_init_l(%struct.__uclibc_locale_struct.160* %0) #10, !dbg !659
  ret void, !dbg !660
  %base.addr = alloca %struct.__uclibc_locale_struct.160*, align 8
  store %struct.__uclibc_locale_struct.160* %base, %struct.__uclibc_locale_struct.160** %base.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__uclibc_locale_struct.160** %base.addr, metadata !1973, metadata !DIExpression()), !dbg !1974
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !662
  %cur_locale = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %0, i32 0, i32 6, !dbg !663
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale, i64 0, i64 0, !dbg !662
  %call = call i8* @memset(i8* %arraydecay, i32 0, i64 14) #10, !dbg !664
  %1 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !665
  %cur_locale1 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %1, i32 0, i32 6, !dbg !666
  %arrayidx = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale1, i64 0, i64 0, !dbg !665
  store i8 35, i8* %arrayidx, align 8, !dbg !667
  %2 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !668
  %category_item_count = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %2, i32 0, i32 8, !dbg !669
  %arraydecay2 = getelementptr inbounds [6 x i8], [6 x i8]* %category_item_count, i64 0, i64 0, !dbg !668
  %3 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !670
  %lc_common_item_offsets_LEN = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %3, i32 0, i32 29, !dbg !671
  %arraydecay3 = getelementptr inbounds [6 x i8], [6 x i8]* %lc_common_item_offsets_LEN, i64 0, i64 0, !dbg !670
  %call4 = call i8* @memcpy(i8* %arraydecay2, i8* %arraydecay3, i64 6) #10, !dbg !672
  %4 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !673
  %category_item_count5 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %4, i32 0, i32 8, !dbg !674
  %arrayidx6 = getelementptr inbounds [6 x i8], [6 x i8]* %category_item_count5, i64 0, i64 0, !dbg !673
 in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions  %5 = load i8, i8* %arrayidx6, align 2, !dbg !675
  %inc = add i8 %5, 1, !dbg !675
  store i8 %inc, i8* %arrayidx6, align 2, !dbg !675
  %6 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !676
  %category_offsets = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %6, i32 0, i32 7, !dbg !677
  %arrayidx7 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets, i64 0, i64 0, !dbg !676
  store i16 2488, i16* %arrayidx7, align 2, !dbg !678
  %7 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !679
  %category_offsets8 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %7, i32 0, i32 7, !dbg !680
  %arrayidx9 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets8, i64 0, i64 1, !dbg !679
  store i16 2576, i16* %arrayidx9, align 2, !dbg !681
  %8 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !682
  %category_offsets10 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %8, i32 0, i32 7, !dbg !683
  %arrayidx11 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets10, i64 0, i64 2, !dbg !682
  store i16 2600, i16* %arrayidx11, align 2, !dbg !684
  %9 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !685
  %category_offsets12 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %9, i32 0, i32 7, !dbg !686
  %arrayidx13 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets12, i64 0, i64 3, !dbg !685
  store i16 2776, i16* %arrayidx13, align 2, !dbg !687
  %10 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !688
  %category_offsets14 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %10, i32 0, i32 7, !dbg !689
  %arrayidx15 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets14, i64 0, i64 5, !dbg !688
  store i16 3176, i16* %arrayidx15, align 2, !dbg !690
  %11 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !691
  %tbl8ctype = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %11, i32 0, i32 0, !dbg !692
  %12 = bitcast [420 x i8]* %tbl8ctype to i8*, !dbg !693
  %13 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !694
  %tbl8ctype16 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %13, i32 0, i32 13, !dbg !695
  store i8* %12, i8** %tbl8ctype16, align 8, !dbg !696
  %14 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !697
  %tbl8uplow = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %14, i32 0, i32 1, !dbg !698
  %15 = bitcast [504 x i8]* %tbl8uplow to i8*, !dbg !699
  %16 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !700
  %tbl8uplow17 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %16, i32 0, i32 15, !dbg !701
  store i8* %15, i8** %tbl8uplow17, align 8, !dbg !702
  %17 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !703
  %tbl8c2wc = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %17, i32 0, i32 2, !dbg !704
  %18 = bitcast [1760 x i16]* %tbl8c2wc to i16*, !dbg !705
  %19 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !706
  %tbl8c2wc18 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %19, i32 0, i32 17, !dbg !707
  store i16* %18, i16** %tbl8c2wc18, align 8, !dbg !708
  %20 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !709
  %tbl8wc2c = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %20, i32 0, i32 3, !dbg !710
  %21 = bitcast [4528 x i8]* %tbl8wc2c to i8*, !dbg !711
  %22 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !712
  %tbl8wc2c19 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %22, i32 0, i32 19, !dbg !713
  store i8* %21, i8** %tbl8wc2c19, align 8, !dbg !714
  %23 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !715
  %tblwctype = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %23, i32 0, i32 4, !dbg !716
  %24 = bitcast [3604 x i8]* %tblwctype to i8*, !dbg !717
  %25 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !718
  %tblwctype20 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %25, i32 0, i32 21, !dbg !719
  store i8* %24, i8** %tblwctype20, align 8, !dbg !720
  %26 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !721
  %tblwuplow = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %26, i32 0, i32 5, !dbg !722
  %27 = bitcast [1680 x i8]* %tblwuplow to i8*, !dbg !723
  %28 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !724
  %tblwuplow21 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %28, i32 0, i32 22, !dbg !725
  store i8* %27, i8** %tblwuplow21, align 8, !dbg !726
  %29 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !727
  %tblwuplow_diff = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %29, i32 0, i32 6, !dbg !728
  %30 = bitcast [196 x i16]* %tblwuplow_diff to i16*, !dbg !729
  %31 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !730
  %tblwuplow_diff22 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %31, i32 0, i32 23, !dbg !731
  store i16* %30, i16** %tblwuplow_diff22, align 8, !dbg !732
  %32 = load i16*, i16** @__C_ctype_b, align 8, !dbg !733
  %33 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !734
  %__ctype_b = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %33, i32 0, i32 0, !dbg !735
  store i16* %32, i16** %__ctype_b, align 8, !dbg !736
  %34 = load i16*, i16** @__C_ctype_tolower, align 8, !dbg !737
  %35 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !738
  %__ctype_tolower = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %35, i32 0, i32 1, !dbg !739
  store i16* %34, i16** %__ctype_tolower, align 8, !dbg !740
  %36 = load i16*, i16** @__C_ctype_toupper, align 8, !dbg !741
  %37 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !742
  %__ctype_toupper = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %37, i32 0, i32 2, !dbg !743
  store i16* %36, i16** %__ctype_toupper, align 8, !dbg !744
  %38 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !745
  %code2flag = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %38, i32 0, i32 20, !dbg !746
  store i16* getelementptr inbounds ([16 x i16], [16 x i16]* @__code2flag, i64 0, i64 0), i16** %code2flag, align 8, !dbg !747
  %39 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !748
  %call23 = call i32 @_locale_set_l(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), %struct.__uclibc_locale_struct.160* %39) #11, !dbg !749
  ret void, !dbg !750
  %retval = alloca i32, align 4
  %p.addr = alloca i8*, align 8
  %base.addr = alloca %struct.__uclibc_locale_struct.160*, align 8
  %x = alloca i8**, align 8
  %s = alloca i8*, align 8
  %stp = alloca i64*, align 8
  %r = alloca i8*, align 8
  %io = alloca i16*, align 8
  %ii = alloca i16*, align 8
  %d = alloca i8*, align 8
  %row = alloca i32, align 4
  %crow = alloca i32, align 4
  %len = alloca i32, align 4
  %c = alloca i32, align 4
  %i = alloca i32, align 4
  %newcol = alloca %struct.__collate_t.159, align 8
  %c8b = alloca %struct.__codeset_8_bit_t.161*, align 8
  %u = alloca i32, align 4
  %m = alloca i16, align 2
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !1060, metadata !DIExpression()), !dbg !1061
  store %struct.__uclibc_locale_struct.160* %base, %struct.__uclibc_locale_struct.160** %base.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__uclibc_locale_struct.160** %base.addr, metadata !1062, metadata !DIExpression()), !dbg !1063
  call void @llvm.dbg.declare(metadata i8*** %x, metadata !1064, metadata !DIExpression()), !dbg !1065
  call void @llvm.dbg.declare(metadata i8** %s, metadata !1066, metadata !DIExpression()), !dbg !1067
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !668
  %cur_locale = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %0, i32 0, i32 6, !dbg !669
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale, i64 0, i64 0, !dbg !668
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 1, !dbg !670
  store i8* %add.ptr, i8** %s, align 8, !dbg !667
  call void @llvm.dbg.declare(metadata i64** %stp, metadata !1071, metadata !DIExpression()), !dbg !1074
  call void @llvm.dbg.declare(metadata i8** %r, metadata !1075, metadata !DIExpression()), !dbg !1076
  call void @llvm.dbg.declare(metadata i16** %io, metadata !1077, metadata !DIExpression()), !dbg !1078
  call void @llvm.dbg.declare(metadata i16** %ii, metadata !1079, metadata !DIExpression()), !dbg !1080
  call void @llvm.dbg.declare(metadata i8** %d, metadata !1081, metadata !DIExpression()), !dbg !1082
  call void @llvm.dbg.declare(metadata i32* %row, metadata !1083, metadata !DIExpression()), !dbg !1084
  call void @llvm.dbg.declare(metadata i32* %crow, metadata !1085, metadata !DIExpression()), !dbg !1086
  call void @llvm.dbg.declare(metadata i32* %len, metadata !1087, metadata !DIExpression()), !dbg !1088
  call void @llvm.dbg.declare(metadata i32* %c, metadata !1089, metadata !DIExpression()), !dbg !1090
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1091, metadata !DIExpression()), !dbg !1092
  store i32 0, i32* %i, align 4, !dbg !692
  call void @llvm.dbg.declare(metadata %struct.__collate_t.159* %newcol, metadata !1093, metadata !DIExpression()), !dbg !1094
  %1 = load i8*, i8** %p.addr, align 8, !dbg !695
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i32 1, !dbg !695
  store i8* %incdec.ptr, i8** %p.addr, align 8, !dbg !695
 in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in st  %index2weight = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %newcol, i32 0, i32 23, !dbg !696
  store i16* null, i16** %index2weight, align 8, !dbg !697
  %2 = load i8*, i8** %p.addr, align 8, !dbg !698
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 8, !dbg !698
  %3 = load i8, i8* %arrayidx, align 1, !dbg !698
  %conv = zext i8 %3 to i32, !dbg !698
  %4 = load i8*, i8** %s, align 8, !dbg !700
  %arrayidx1 = getelementptr inbounds i8, i8* %4, i64 8, !dbg !700
  %5 = load i8, i8* %arrayidx1, align 1, !dbg !700
  %conv2 = zext i8 %5 to i32, !dbg !700
  %cmp = icmp ne i32 %conv, %conv2, !dbg !701
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !702
  %6 = load i8*, i8** %p.addr, align 8, !dbg !703
  %arrayidx4 = getelementptr inbounds i8, i8* %6, i64 9, !dbg !703
  %7 = load i8, i8* %arrayidx4, align 1, !dbg !703
  %conv5 = zext i8 %7 to i32, !dbg !703
  %8 = load i8*, i8** %s, align 8, !dbg !704
  %arrayidx6 = getelementptr inbounds i8, i8* %8, i64 9, !dbg !704
  %9 = load i8, i8* %arrayidx6, align 1, !dbg !704
  %conv7 = zext i8 %9 to i32, !dbg !704
  %cmp8 = icmp ne i32 %conv5, %conv7, !dbg !705
  br i1 %cmp8, label %if.then, label %if.end22, !dbg !706
  %10 = load i8*, i8** %p.addr, align 8, !dbg !707
  %11 = load i8, i8* %10, align 1, !dbg !709
  %conv10 = zext i8 %11 to i32, !dbg !709
  %and = and i32 %conv10, 127, !dbg !710
  %shl = shl i32 %and, 7, !dbg !711
  %12 = load i8*, i8** %p.addr, align 8, !dbg !712
  %arrayidx11 = getelementptr inbounds i8, i8* %12, i64 1, !dbg !712
  %13 = load i8, i8* %arrayidx11, align 1, !dbg !712
  %conv12 = zext i8 %13 to i32, !dbg !712
  %and13 = and i32 %conv12, 127, !dbg !713
  %add = add nsw i32 %shl, %and13, !dbg !714
  store i32 %add, i32* %row, align 4, !dbg !715
  %14 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !716
  %locales = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %14, i32 0, i32 31, !dbg !718
  %15 = load i32, i32* %row, align 4, !dbg !719
  %mul = mul nsw i32 9, %15, !dbg !720
  %add14 = add nsw i32 %mul, 3, !dbg !721
  %add15 = add nsw i32 %add14, 4, !dbg !722
  %idxprom = sext i32 %add15 to i64, !dbg !716
  %arrayidx16 = getelementptr inbounds [2826 x i8], [2826 x i8]* %locales, i64 0, i64 %idxprom, !dbg !716
  %16 = load i8, i8* %arrayidx16, align 1, !dbg !716
  %conv17 = zext i8 %16 to i32, !dbg !716
  %call = call i32 @init_cur_collate(i32 %conv17, %struct.__collate_t.159* %newcol) #10, !dbg !723
  %tobool = icmp ne i32 %call, 0, !dbg !723
  br i1 %tobool, label %if.end, label %if.then18, !dbg !724
  store i32 0, i32* %retval, align 4, !dbg !725
  br label %return, !dbg !725
  %17 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !727
  %collate = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %17, i32 0, i32 118, !dbg !728
  %index2weight19 = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %collate, i32 0, i32 23, !dbg !729
  %18 = load i16*, i16** %index2weight19, align 8, !dbg !729
  %19 = bitcast i16* %18 to i8*, !dbg !727
  call void @free(i8* %19) #11, !dbg !730
  %20 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !731
  %collate20 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %20, i32 0, i32 118, !dbg !732
  %21 = bitcast %struct.__collate_t.159* %collate20 to i8*, !dbg !733
  %22 = bitcast %struct.__collate_t.159* %newcol to i8*, !dbg !734
  %call21 = call i8* @memcpy(i8* %21, i8* %22, i64 112) #11, !dbg !735
  br label %if.end22, !dbg !736
  br label %do.body, !dbg !737
  %23 = load i8*, i8** %p.addr, align 8, !dbg !738
  %24 = load i8, i8* %23, align 1, !dbg !741
  %conv23 = zext i8 %24 to i32, !dbg !741
  %25 = load i8*, i8** %s, align 8, !dbg !742
  %26 = load i8, i8* %25, align 1, !dbg !743
  %conv24 = zext i8 %26 to i32, !dbg !743
  %cmp25 = icmp ne i32 %conv23, %conv24, !dbg !744
  br i1 %cmp25, label %if.then34, label %lor.lhs.false27, !dbg !745
  %27 = load i8*, i8** %p.addr, align 8, !dbg !746
  %arrayidx28 = getelementptr inbounds i8, i8* %27, i64 1, !dbg !746
  %28 = load i8, i8* %arrayidx28, align 1, !dbg !746
  %conv29 = zext i8 %28 to i32, !dbg !746
  %29 = load i8*, i8** %s, align 8, !dbg !747
  %arrayidx30 = getelementptr inbounds i8, i8* %29, i64 1, !dbg !747
  %30 = load i8, i8* %arrayidx30, align 1, !dbg !747
  %conv31 = zext i8 %30 to i32, !dbg !747
  %cmp32 = icmp ne i32 %conv29, %conv31, !dbg !748
  br i1 %cmp32, label %if.then34, label %if.end313, !dbg !749
  %31 = load i8*, i8** %p.addr, align 8, !dbg !750
  %32 = load i8, i8* %31, align 1, !dbg !752
  %conv35 = zext i8 %32 to i32, !dbg !752
  %and36 = and i32 %conv35, 127, !dbg !753
  %shl37 = shl i32 %and36, 7, !dbg !754
  %33 = load i8*, i8** %p.addr, align 8, !dbg !755
  %arrayidx38 = getelementptr inbounds i8, i8* %33, i64 1, !dbg !755
  %34 = load i8, i8* %arrayidx38, align 1, !dbg !755
  %conv39 = zext i8 %34 to i32, !dbg !755
  %and40 = and i32 %conv39, 127, !dbg !756
  %add41 = add nsw i32 %shl37, %and40, !dbg !757
  store i32 %add41, i32* %row, align 4, !dbg !758
  %35 = load i8*, i8** %p.addr, align 8, !dbg !759
  %36 = load i8, i8* %35, align 1, !dbg !760
  %37 = load i8*, i8** %s, align 8, !dbg !761
  store i8 %36, i8* %37, align 1, !dbg !762
  %38 = load i8*, i8** %p.addr, align 8, !dbg !763
  %arrayidx42 = getelementptr inbounds i8, i8* %38, i64 1, !dbg !763
  %39 = load i8, i8* %arrayidx42, align 1, !dbg !763
  %40 = load i8*, i8** %s, align 8, !dbg !764
  %arrayidx43 = getelementptr inbounds i8, i8* %40, i64 1, !dbg !764
  store i8 %39, i8* %arrayidx43, align 1, !dbg !765
  %41 = load i32, i32* %i, align 4, !dbg !766
  %cmp44 = icmp ne i32 %41, 4, !dbg !768
  br i1 %cmp44, label %land.lhs.true, label %if.end92, !dbg !769
  %42 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !770
  %lc_common_item_offsets_LEN = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %42, i32 0, i32 29, !dbg !771
  %43 = load i32, i32* %i, align 4, !dbg !772
  %idxprom46 = sext i32 %43 to i64, !dbg !770
  %arrayidx47 = getelementptr inbounds [6 x i8], [6 x i8]* %lc_common_item_offsets_LEN, i64 0, i64 %idxprom46, !dbg !770
  %44 = load i8, i8* %arrayidx47, align 1, !dbg !770
  %conv48 = zext i8 %44 to i32, !dbg !770
  store i32 %conv48, i32* %len, align 4, !dbg !773
  %cmp49 = icmp ne i32 %conv48, 0, !dbg !774
  br i1 %cmp49, label %if.then51, label %if.end92, !dbg !775
  %45 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !776
  %locales52 = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %45, i32 0, i32 31, !dbg !778
  %46 = load i32, i32* %row, align 4, !dbg !779
  %mul53 = mul nsw i32 9, %46, !dbg !780
  %add54 = add nsw i32 %mul53, 3, !dbg !781
  %47 = load i32, i32* %i, align 4, !dbg !782
  %add55 = add nsw i32 %add54, %47, !dbg !783
  %idxprom56 = sext i32 %add55 to i64, !dbg !776
  %arrayidx57 = getelementptr inbounds [2826 x i8], [2826 x i8]* %locales52, i64 0, i64 %idxprom56, !dbg !776
  %48 = load i8, i8* %arrayidx57, align 1, !dbg !776
  %conv58 = zext i8 %48 to i32, !dbg !776
ack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instruction  %49 = load i32, i32* %len, align 4, !dbg !784
  %mul59 = mul nsw i32 %conv58, %49, !dbg !785
  store i32 %mul59, i32* %crow, align 4, !dbg !786
  %50 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !787
  %51 = bitcast %struct.__uclibc_locale_struct.160* %50 to i8*, !dbg !788
  %52 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !789
  %category_offsets = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %52, i32 0, i32 7, !dbg !790
  %53 = load i32, i32* %i, align 4, !dbg !791
  %idxprom60 = sext i32 %53 to i64, !dbg !789
  %arrayidx61 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets, i64 0, i64 %idxprom60, !dbg !789
  %54 = load i16, i16* %arrayidx61, align 2, !dbg !789
  %conv62 = zext i16 %54 to i32, !dbg !789
  %idx.ext = sext i32 %conv62 to i64, !dbg !792
  %add.ptr63 = getelementptr inbounds i8, i8* %51, i64 %idx.ext, !dbg !792
  %55 = bitcast i8* %add.ptr63 to i8**, !dbg !793
  store i8** %55, i8*** %x, align 8, !dbg !794
  %56 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !795
  %lc_common_tbl_offsets = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %56, i32 0, i32 30, !dbg !796
  %arraydecay64 = getelementptr inbounds [24 x i64], [24 x i64]* %lc_common_tbl_offsets, i64 0, i64 0, !dbg !795
  %57 = load i32, i32* %i, align 4, !dbg !797
  %mul65 = mul nsw i32 4, %57, !dbg !798
  %idx.ext66 = sext i32 %mul65 to i64, !dbg !799
  %add.ptr67 = getelementptr inbounds i64, i64* %arraydecay64, i64 %idx.ext66, !dbg !799
  store i64* %add.ptr67, i64** %stp, align 8, !dbg !800
  %58 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !801
  %59 = bitcast %struct.__locale_mmap_t.162* %58 to i8*, !dbg !802
  %60 = load i64*, i64** %stp, align 8, !dbg !803
  %61 = load i64, i64* %60, align 8, !dbg !804
  %add.ptr68 = getelementptr inbounds i8, i8* %59, i64 %61, !dbg !805
  store i8* %add.ptr68, i8** %r, align 8, !dbg !806
  %62 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !807
  %63 = bitcast %struct.__locale_mmap_t.162* %62 to i8*, !dbg !808
  %64 = load i64*, i64** %stp, align 8, !dbg !809
  %incdec.ptr69 = getelementptr inbounds i64, i64* %64, i32 1, !dbg !809
  store i64* %incdec.ptr69, i64** %stp, align 8, !dbg !809
  %65 = load i64, i64* %incdec.ptr69, align 8, !dbg !810
  %add.ptr70 = getelementptr inbounds i8, i8* %63, i64 %65, !dbg !811
  %66 = bitcast i8* %add.ptr70 to i16*, !dbg !812
  store i16* %66, i16** %io, align 8, !dbg !813
  %67 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !814
  %68 = bitcast %struct.__locale_mmap_t.162* %67 to i8*, !dbg !815
  %69 = load i64*, i64** %stp, align 8, !dbg !816
  %incdec.ptr71 = getelementptr inbounds i64, i64* %69, i32 1, !dbg !816
  store i64* %incdec.ptr71, i64** %stp, align 8, !dbg !816
  %70 = load i64, i64* %incdec.ptr71, align 8, !dbg !817
  %add.ptr72 = getelementptr inbounds i8, i8* %68, i64 %70, !dbg !818
  %71 = bitcast i8* %add.ptr72 to i16*, !dbg !819
  store i16* %71, i16** %ii, align 8, !dbg !820
  %72 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !821
  %73 = bitcast %struct.__locale_mmap_t.162* %72 to i8*, !dbg !822
  %74 = load i64*, i64** %stp, align 8, !dbg !823
  %incdec.ptr73 = getelementptr inbounds i64, i64* %74, i32 1, !dbg !823
  store i64* %incdec.ptr73, i64** %stp, align 8, !dbg !823
  %75 = load i64, i64* %incdec.ptr73, align 8, !dbg !824
  %add.ptr74 = getelementptr inbounds i8, i8* %73, i64 %75, !dbg !825
  store i8* %add.ptr74, i8** %d, align 8, !dbg !826
  store i32 0, i32* %c, align 4, !dbg !827
  br label %for.cond, !dbg !829
  %76 = load i32, i32* %c, align 4, !dbg !830
  %77 = load i32, i32* %len, align 4, !dbg !832
  %cmp75 = icmp slt i32 %76, %77, !dbg !833
  br i1 %cmp75, label %for.body, label %for.end, !dbg !834
  %78 = load i8*, i8** %d, align 8, !dbg !835
  %79 = load i16*, i16** %ii, align 8, !dbg !837
  %80 = load i8*, i8** %r, align 8, !dbg !838
  %81 = load i32, i32* %crow, align 4, !dbg !839
  %82 = load i32, i32* %c, align 4, !dbg !840
  %add77 = add nsw i32 %81, %82, !dbg !841
  %idxprom78 = sext i32 %add77 to i64, !dbg !838
  %arrayidx79 = getelementptr inbounds i8, i8* %80, i64 %idxprom78, !dbg !838
  %83 = load i8, i8* %arrayidx79, align 1, !dbg !838
  %conv80 = zext i8 %83 to i32, !dbg !838
  %84 = load i16*, i16** %io, align 8, !dbg !842
  %85 = load i32, i32* %c, align 4, !dbg !843
  %idxprom81 = sext i32 %85 to i64, !dbg !842
  %arrayidx82 = getelementptr inbounds i16, i16* %84, i64 %idxprom81, !dbg !842
  %86 = load i16, i16* %arrayidx82, align 2, !dbg !842
  %conv83 = zext i16 %86 to i32, !dbg !842
  %add84 = add nsw i32 %conv80, %conv83, !dbg !844
  %idxprom85 = sext i32 %add84 to i64, !dbg !837
  %arrayidx86 = getelementptr inbounds i16, i16* %79, i64 %idxprom85, !dbg !837
  %87 = load i16, i16* %arrayidx86, align 2, !dbg !837
  %conv87 = zext i16 %87 to i32, !dbg !837
  %idx.ext88 = sext i32 %conv87 to i64, !dbg !845
  %add.ptr89 = getelementptr inbounds i8, i8* %78, i64 %idx.ext88, !dbg !845
  %88 = load i8**, i8*** %x, align 8, !dbg !846
  %89 = load i32, i32* %c, align 4, !dbg !847
  %idx.ext90 = sext i32 %89 to i64, !dbg !848
  %add.ptr91 = getelementptr inbounds i8*, i8** %88, i64 %idx.ext90, !dbg !848
  store i8* %add.ptr89, i8** %add.ptr91, align 8, !dbg !849
  br label %for.inc, !dbg !850
  %90 = load i32, i32* %c, align 4, !dbg !851
  %inc = add nsw i32 %90, 1, !dbg !851
  store i32 %inc, i32* %c, align 4, !dbg !851
  br label %for.cond, !dbg !852, !llvm.loop !853
  br label %if.end92, !dbg !855
  %91 = load i32, i32* %i, align 4, !dbg !856
  %cmp93 = icmp eq i32 %91, 0, !dbg !858
  br i1 %cmp93, label %if.then95, label %if.else295, !dbg !859
  %92 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !860
  %locales96 = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %92, i32 0, i32 31, !dbg !862
  %93 = load i32, i32* %row, align 4, !dbg !863
  %mul97 = mul nsw i32 9, %93, !dbg !864
  %add98 = add nsw i32 %mul97, 2, !dbg !865
  %idxprom99 = sext i32 %add98 to i64, !dbg !860
  %arrayidx100 = getelementptr inbounds [2826 x i8], [2826 x i8]* %locales96, i64 0, i64 %idxprom99, !dbg !860
  %94 = load i8, i8* %arrayidx100, align 1, !dbg !860
  %conv101 = zext i8 %94 to i32, !dbg !860
  store i32 %conv101, i32* %c, align 4, !dbg !866
  %95 = load i32, i32* %c, align 4, !dbg !867
  %cmp102 = icmp sle i32 %95, 2, !dbg !869
  br i1 %cmp102, label %if.then104, label %if.else112, !dbg !870
  %96 = load i32, i32* %c, align 4, !dbg !871
  %cmp105 = icmp eq i32 %96, 2, !dbg !874
  br i1 %cmp105, label %if.then107, label %if.else, !dbg !875
  %97 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !876
  %codeset = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %97, i32 0, i32 38, !dbg !878
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @utf8, i64 0, i64 0), i8** %codeset, align 8, !dbg !879
  %98 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !880
  %encoding = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %98, i32 0, i32 9, !dbg !881
  store i8 1, i8* %encoding, align 8, !dbg !882
  %99 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !883
  %mb_cur_max = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %99, i32 0, i32 10, !dbg !884
  store i8 6, i8* %mb_cur_max, align 1, !dbg !885
s in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.190
//Instructions in stack: Num.191
//Instructions in stack: Num.192
//Instructions in stack: Num.193
//Instructions in stack: Num.194
//Instructions in stack: Num.195
//Instructions in stack: Num.196
//Instructions in stack: Num.197
//Instructions in stack: Num.198
//Instructions in stack: Num.199
//Instructions in stack: Num.200
//Instructions in stack: Num.201
//Instructions in stack: Num.202
//Instructions in stack: Num.203
//Instructions in stack: Num.204
//Instructions in stack: Num.205
//Instructions in stack: Num.206
//Instructions in stack: Num.207
//Instructions in stack: Num.208
//Instructions in stack: Num.209
//Instructions in stack: Num.210
//Instructions in stack: Num.211
//Instructions in stack: Num.212
//Instructions in stack: Num.213
//Instructions in stack: Num.214
//Instructions in stack: Num.215
//Instructions in stack: Num.216
//Instructions in stack: Num.217
//Instructions in stack: Num.218
//Instructions in stack: Num.219
//Instructions in stack: Num.220
//Instructions in stack: Num.221
//Instructions in stack: Num.222
//Instructions in stack: Num.223
//Instructions in stack: Num.224
//Instructions in stack: Num.225
//Instructions in stack: Num.226
//Instructions in stack: Num.227
//Instructions in stack: Num.228
//Instructions in stack: Num.229
//Instructions in stack: Num.230
//Instructions in stack: Num.231
//Instructions in stack: Num.232
//Instructions in stack: Num.233
//Instructions in stack: Num.234
//Instructions in stack: Num.235
//Instructions in stack: Num.236
//Instructions in stack: Num.237
//Instructions in stack: Num.238
//Instructions in stack: Num.239
//Instructions in stack: Num.240
//Instructions in stack: Num.241
//Instructions in stack: Num.242
//Instructions in stack: Num.243
//Instructions in stack: Num.244
//Instructions in stack: Num.245
//Instructions in stack: Num.246
//Instructions in stack: Num.247
//Instructions in stack: Num.248
//Instructions in stack: Num.249
//Instructions in stack: Num.250
//Instructions in stack: Num.251
//Instructions in stack: Num.252
//Instructions in stack: Num.253
//Instructions in stack: Num.254
//Instructions in stack: Num.255
//Instructions in stack: Num.256
//Instructions in stack: Num.257
//Instructions in stack: Num.258
//Instructions in stack: Num.259
//Instructions in stack: Num.260
//Instructions in stack: Num.261
//Instructions in stack: Num.262
//Instructions in stack: Num.263
//Instructions in stack: Num.264
//Instructions in stack: Num.265
//Instructions in stack: Num.266
//Instructions in stack: Num.267
//Instructions in stack: Num.268
//Instructions in stack: Num.269
//Instructions in stack: Num.270
//Instructions in stack: Num.271
//Instructions in stack: Num.272
//Instructions in stack: Num.273
//Instructions in stack: Num.274
//Instructions in stack: Num.275
//Instructions in stack: Num.276
//Instructions in stack: Num.277
//Instructions in stack: Num.278
//Instructions in stack: Num.279
//Instructions in stack: Num.280
//Instructions in stack: Num.281
//Instructions in stack: Num.282
//Instructions in stack: Num.283
//Instructions in stack: Num.284
//Instructions in stack: Num.285
//Instructions in stack: Num.286
//Instructions in stack: Num.287
//Instructions in stack: Num.288
//Instructions in stack: Num.289
//Instructions in stack: Num.290
//Instructions in stack: Num.291
//Instructions in stack: Num.292
//Instructions in stack: Num.293
//Instructions in stack: Num.294
//Instructions in  br label %if.end111, !dbg !886
  %100 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !887
  %codeset108 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %100, i32 0, i32 38, !dbg !889
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @ascii, i64 0, i64 0), i8** %codeset108, align 8, !dbg !890
  %101 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !891
  %encoding109 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %101, i32 0, i32 9, !dbg !892
  store i8 0, i8* %encoding109, align 8, !dbg !893
  %102 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !894
  %mb_cur_max110 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %102, i32 0, i32 10, !dbg !895
  store i8 1, i8* %mb_cur_max110, align 1, !dbg !896
  br label %if.end111
  br label %if.end280, !dbg !897
  call void @llvm.dbg.declare(metadata %struct.__codeset_8_bit_t.161** %c8b, metadata !1298, metadata !DIExpression()), !dbg !1310
  %103 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !911
  %codeset_list = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %103, i32 0, i32 35, !dbg !911
  %arraydecay113 = getelementptr inbounds [255 x i8], [255 x i8]* %codeset_list, i64 0, i64 0, !dbg !911
  store i8* %arraydecay113, i8** %r, align 8, !dbg !912
  %104 = load i8*, i8** %r, align 8, !dbg !913
  %105 = load i8*, i8** %r, align 8, !dbg !914
  %106 = load i32, i32* %c, align 4, !dbg !915
  %sub = sub nsw i32 %106, 3, !dbg !915
  store i32 %sub, i32* %c, align 4, !dbg !915
  %idxprom114 = sext i32 %sub to i64, !dbg !914
  %arrayidx115 = getelementptr inbounds i8, i8* %105, i64 %idxprom114, !dbg !914
  %107 = load i8, i8* %arrayidx115, align 1, !dbg !914
  %conv116 = zext i8 %107 to i32, !dbg !914
  %idx.ext117 = sext i32 %conv116 to i64, !dbg !916
  %add.ptr118 = getelementptr inbounds i8, i8* %104, i64 %idx.ext117, !dbg !916
  %108 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !917
  %codeset119 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %108, i32 0, i32 38, !dbg !918
  store i8* %add.ptr118, i8** %codeset119, align 8, !dbg !919
  %109 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !920
  %encoding120 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %109, i32 0, i32 9, !dbg !921
  store i8 2, i8* %encoding120, align 8, !dbg !922
  %110 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !923
  %mb_cur_max121 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %110, i32 0, i32 10, !dbg !924
  store i8 1, i8* %mb_cur_max121, align 1, !dbg !925
  %111 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !926
  %codeset_8_bit = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %111, i32 0, i32 12, !dbg !927
  %arraydecay122 = getelementptr inbounds [23 x %struct.__codeset_8_bit_t.161], [23 x %struct.__codeset_8_bit_t.161]* %codeset_8_bit, i64 0, i64 0, !dbg !926
  %112 = load i32, i32* %c, align 4, !dbg !928
  %idx.ext123 = sext i32 %112 to i64, !dbg !929
  %add.ptr124 = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %arraydecay122, i64 %idx.ext123, !dbg !929
  store %struct.__codeset_8_bit_t.161* %add.ptr124, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !930
  %113 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !931
  %idx8ctype = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %113, i32 0, i32 0, !dbg !932
  %arraydecay125 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8ctype, i64 0, i64 0, !dbg !931
  %114 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !933
  %idx8ctype126 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %114, i32 0, i32 12, !dbg !934
  store i8* %arraydecay125, i8** %idx8ctype126, align 8, !dbg !935
  %115 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !936
  %idx8uplow = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %115, i32 0, i32 1, !dbg !937
  %arraydecay127 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8uplow, i64 0, i64 0, !dbg !936
  %116 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !938
  %idx8uplow128 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %116, i32 0, i32 14, !dbg !939
  store i8* %arraydecay127, i8** %idx8uplow128, align 8, !dbg !940
  %117 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !941
  %idx8c2wc = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %117, i32 0, i32 2, !dbg !942
  %arraydecay129 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8c2wc, i64 0, i64 0, !dbg !941
  %118 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !943
  %idx8c2wc130 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %118, i32 0, i32 16, !dbg !944
  store i8* %arraydecay129, i8** %idx8c2wc130, align 8, !dbg !945
  %119 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !946
  %idx8wc2c = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %119, i32 0, i32 3, !dbg !947
  %arraydecay131 = getelementptr inbounds [38 x i8], [38 x i8]* %idx8wc2c, i64 0, i64 0, !dbg !946
  %120 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !948
  %idx8wc2c132 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %120, i32 0, i32 18, !dbg !949
  store i8* %arraydecay131, i8** %idx8wc2c132, align 8, !dbg !950
  %121 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !951
  %__ctype_b_data = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %121, i32 0, i32 3, !dbg !952
  %arraydecay133 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data, i64 0, i64 0, !dbg !951
  %122 = bitcast i16* %arraydecay133 to i8*, !dbg !951
  %123 = load i16*, i16** @__C_ctype_b, align 8, !dbg !953
  %add.ptr134 = getelementptr inbounds i16, i16* %123, i64 -128, !dbg !954
  %124 = bitcast i16* %add.ptr134 to i8*, !dbg !953
  %call135 = call i8* @memcpy(i8* %122, i8* %124, i64 768) #11, !dbg !955
  %125 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !956
  %__ctype_tolower_data = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %125, i32 0, i32 4, !dbg !957
  %arraydecay136 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data, i64 0, i64 0, !dbg !956
  %126 = bitcast i16* %arraydecay136 to i8*, !dbg !956
  %127 = load i16*, i16** @__C_ctype_tolower, align 8, !dbg !958
  %add.ptr137 = getelementptr inbounds i16, i16* %127, i64 -128, !dbg !959
  %128 = bitcast i16* %add.ptr137 to i8*, !dbg !958
  %call138 = call i8* @memcpy(i8* %126, i8* %128, i64 768) #11, !dbg !960
  %129 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !961
  %__ctype_toupper_data = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %129, i32 0, i32 5, !dbg !962
  %arraydecay139 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data, i64 0, i64 0, !dbg !961
  %130 = bitcast i16* %arraydecay139 to i8*, !dbg !961
  %131 = load i16*, i16** @__C_ctype_toupper, align 8, !dbg !963
  %add.ptr140 = getelementptr inbounds i16, i16* %131, i64 -128, !dbg !964
  %132 = bitcast i16* %add.ptr140 to i8*, !dbg !963
  %call141 = call i8* @memcpy(i8* %130, i8* %132, i64 768) #11, !dbg !965
  call void @llvm.dbg.declare(metadata i32* %u, metadata !1366, metadata !DIExpression()), !dbg !1368
  call void @llvm.dbg.declare(metadata i16* %m, metadata !1369, metadata !DIExpression()), !dbg !1370
  store i32 0, i32* %u, align 4, !dbg !971
  br label %for.cond142, !dbg !973
  %133 = load i32, i32* %u, align 4, !dbg !974
  %cmp143 = icmp slt i32 %133, 128, !dbg !976
  br i1 %cmp143, label %for.body145, label %for.end270, !dbg !977
  %134 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !978
  %tbl8ctype = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %134, i32 0, i32 13, !dbg !980
  %135 = load i8*, i8** %tbl8ctype, align 8, !dbg !980
  %136 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !981
  %idx8ctype146 = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %136, i32 0, i32 0, !dbg !982
  %137 = load i32, i32* %u, align 4, !dbg !983
  %shr = ashr i32 %137, 3, !dbg !984
  %idxprom147 = sext i32 %shr to i64, !dbg !981
  %arrayidx148 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8ctype146, i64 0, i64 %idxprom147, !dbg !981
  %138 = load i8, i8* %arrayidx148, align 1, !dbg !981
  %conv149 = zext i8 %138 to i32, !dbg !985
  %shl150 = shl i32 %conv149, 2, !dbg !986
  %139 = load i32, i32* %u, align 4, !dbg !987
  %and151 = and i32 %139, 7, !dbg !988
  %shr152 = ashr i32 %and151, 1, !dbg !989
  %add153 = add nsw i32 %shl150, %shr152, !dbg !990
  %idxprom154 = sext i32 %add153 to i64, !dbg !978
  %arrayidx155 = getelementptr inbounds i8, i8* %135, i64 %idxprom154, !dbg !978
  %140 = load i8, i8* %arrayidx155, align 1, !dbg !978
  %conv156 = zext i8 %140 to i32, !dbg !978
  store i32 %conv156, i32* %c, align 4, !dbg !991
  %141 = load i32, i32* %u, align 4, !dbg !992
  %and157 = and i32 %141, 1, !dbg !993
  %tobool158 = icmp ne i32 %and157, 0, !dbg !993
  br i1 %tobool158, label %cond.true, label %cond.false, !dbg !994
 stack: Num.295
//Instructions in stack: Num.296
//Instructions in stack: Num.297
//Instructions in stack: Num.298
//Instructions in stack: Num.299
//Instructions in stack: Num.300
//Instructions in stack: Num.301
//Instructions in stack: Num.302
//Instructions in stack: Num.303
//Instructions in stack: Num.304
//Instructions in stack: Num.305
//Instructions in stack: Num.306
//Instructions in stack: Num.307
//Instructions in stack: Num.308
//Instructions in stack: Num.309
//Instructions in stack: Num.310
//Instructions in stack: Num.311
//Instructions in stack: Num.312
//Instructions in stack: Num.313
//Instructions in stack: Num.314
//Instructions in stack: Num.315
//Instructions in stack: Num.316
//Instructions in stack: Num.317
//Instructions in stack: Num.318
//Instructions in stack: Num.319
//Instructions in stack: Num.320
//Instructions in stack: Num.321
//Instructions in stack: Num.322
//Instructions in stack: Num.323
//Instructions in stack: Num.324
//Instructions in stack: Num.325
//Instructions in stack: Num.326
//Instructions in stack: Num.327
//Instructions in stack: Num.328
//Instructions in stack: Num.329
//Instructions in stack: Num.330
//Instructions in stack: Num.331
//Instructions in stack: Num.332
//Instructions in stack: Num.333
//Instructions in stack: Num.334
//Instructions in stack: Num.335
//Instructions in stack: Num.336
//Instructions in stack: Num.337
//Instructions in stack: Num.338
//Instructions in stack: Num.339
//Instructions in stack: Num.340
//Instructions in stack: Num.341
//Instructions in stack: Num.342
//Instructions in stack: Num.343
//Instructions in stack: Num.344
//Instructions in stack: Num.345
//Instructions in stack: Num.346
//Instructions in stack: Num.347
//Instructions in stack: Num.348
//Instructions in stack: Num.349
//Instructions in stack: Num.350
//Instructions in stack: Num.351
//Instructions in stack: Num.352
//Instructions in stack: Num.353
//Instructions in stack: Num.354
//Instructions in stack: Num.355
//Instructions in stack: Num.356
//Instructions in stack: Num.357
//Instructions in stack: Num.358
//Instructions in stack: Num.359
//Instructions in stack: Num.360
//Instructions in stack: Num.361
//Instructions in stack: Num.362
//Instructions in stack: Num.363
//Instructions in stack: Num.364
//Instructions in stack: Num.365
//Instructions in stack: Num.366
//Instructions in stack: Num.367
//Instructions in stack: Num.368
//Instructions in stack: Num.369
//Instructions in stack: Num.370
//Instructions in stack: Num.371
//Instructions in stack: Num.372
//Instructions in stack: Num.373
//Instructions in stack: Num.374
//Instructions in stack: Num.375
//Instructions in stack: Num.376
//Instructions in stack: Num.377
//Instructions in stack: Num.378
//Instructions in stack: Num.379
//Instructions in stack: Num.380
//Instructions in stack: Num.381
//Instructions in stack: Num.382
//Instructions in stack: Num.383
//Instructions in stack: Num.384
//Instructions in stack: Num.385
//Instructions in stack: Num.386
//Instructions in stack: Num.387
//Instructions in stack: Num.388
//Instructions in stack: Num.389
//Instructions in stack: Num.390
//Instructions in stack: Num.391
//Instructions in stack: Num.392
//Instructions in stack: Num.393
//Instructions in stack: Num.394
//Instructions in stack: Num.395
//Instructions in stack: Num.396
//Instructions in stack: Num.397
//Instructions in stack: Num.398
//Instructions in stack: Num.399
//Instructions in stack: Num.400
//Instructions in stack: Num.401
//Instructions in stack: Num.402
//Instructions in stack: Num.403
//Instructions in stack: Num.404
//Instructions in stack: Num.405
//Instructions in stack: Num.406
//Instructions in stack: Num.407
//Instructions in stack: Num.408
//Instructions in stack: Num.409
//Instructions in stack: Num.410
//Instructions in stack: Num.411
//Instructions in stack: Num.412
//Instructions in stack: Num.413
//Instructions in stack: Num.414
//Instructions in stack: Num.415
//Instructions in stack: Num.416
//Instructions in stack: Num.417
//Instructions in stack: Num.418
//Instructions in sta  %142 = load i32, i32* %c, align 4, !dbg !995
  %shr159 = ashr i32 %142, 4, !dbg !996
  br label %cond.end, !dbg !994
  %143 = load i32, i32* %c, align 4, !dbg !997
  %and160 = and i32 %143, 15, !dbg !998
  br label %cond.end, !dbg !994
  %cond = phi i32 [ %shr159, %cond.true ], [ %and160, %cond.false ], !dbg !994
  store i32 %cond, i32* %c, align 4, !dbg !999
  %144 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1000
  %code2flag = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %144, i32 0, i32 20, !dbg !1001
  %145 = load i16*, i16** %code2flag, align 8, !dbg !1001
  %146 = load i32, i32* %c, align 4, !dbg !1002
  %idxprom161 = sext i32 %146 to i64, !dbg !1000
  %arrayidx162 = getelementptr inbounds i16, i16* %145, i64 %idxprom161, !dbg !1000
  %147 = load i16, i16* %arrayidx162, align 2, !dbg !1000
  store i16 %147, i16* %m, align 2, !dbg !1003
  %148 = load i16, i16* %m, align 2, !dbg !1004
  %149 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1005
  %__ctype_b_data163 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %149, i32 0, i32 3, !dbg !1006
  %150 = load i32, i32* %u, align 4, !dbg !1007
  %add164 = add nsw i32 256, %150, !dbg !1008
  %idxprom165 = sext i32 %add164 to i64, !dbg !1005
  %arrayidx166 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data163, i64 0, i64 %idxprom165, !dbg !1005
  store i16 %148, i16* %arrayidx166, align 2, !dbg !1009
  %151 = load i32, i32* %u, align 4, !dbg !1010
  %add167 = add nsw i32 128, %151, !dbg !1012
  %conv168 = trunc i32 %add167 to i8, !dbg !1013
  %conv169 = sext i8 %conv168 to i32, !dbg !1014
  %cmp170 = icmp ne i32 %conv169, -1, !dbg !1015
  br i1 %cmp170, label %if.then172, label %if.end180, !dbg !1016
  %152 = load i16, i16* %m, align 2, !dbg !1017
  %153 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1019
  %__ctype_b_data173 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %153, i32 0, i32 3, !dbg !1020
  %154 = load i32, i32* %u, align 4, !dbg !1021
  %add174 = add nsw i32 128, %154, !dbg !1022
  %conv175 = trunc i32 %add174 to i8, !dbg !1023
  %conv176 = sext i8 %conv175 to i32, !dbg !1024
  %add177 = add nsw i32 128, %conv176, !dbg !1025
  %idxprom178 = sext i32 %add177 to i64, !dbg !1019
  %arrayidx179 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data173, i64 0, i64 %idxprom178, !dbg !1019
  store i16 %152, i16* %arrayidx179, align 2, !dbg !1026
  br label %if.end180, !dbg !1027
  %155 = load i32, i32* %u, align 4, !dbg !1028
  %add181 = add nsw i32 128, %155, !dbg !1029
  %conv182 = trunc i32 %add181 to i16, !dbg !1030
  %156 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1031
  %__ctype_tolower_data183 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %156, i32 0, i32 4, !dbg !1032
  %157 = load i32, i32* %u, align 4, !dbg !1033
  %add184 = add nsw i32 256, %157, !dbg !1034
  %idxprom185 = sext i32 %add184 to i64, !dbg !1031
  %arrayidx186 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data183, i64 0, i64 %idxprom185, !dbg !1031
  store i16 %conv182, i16* %arrayidx186, align 2, !dbg !1035
  %158 = load i32, i32* %u, align 4, !dbg !1036
  %add187 = add nsw i32 128, %158, !dbg !1037
  %conv188 = trunc i32 %add187 to i16, !dbg !1038
  %159 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1039
  %__ctype_toupper_data189 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %159, i32 0, i32 5, !dbg !1040
  %160 = load i32, i32* %u, align 4, !dbg !1041
  %add190 = add nsw i32 256, %160, !dbg !1042
  %idxprom191 = sext i32 %add190 to i64, !dbg !1039
  %arrayidx192 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data189, i64 0, i64 %idxprom191, !dbg !1039
  store i16 %conv188, i16* %arrayidx192, align 2, !dbg !1043
  %161 = load i16, i16* %m, align 2, !dbg !1044
  %conv193 = zext i16 %161 to i32, !dbg !1044
  %and194 = and i32 %conv193, 768, !dbg !1046
  %tobool195 = icmp ne i32 %and194, 0, !dbg !1046
  br i1 %tobool195, label %if.then196, label %if.end267, !dbg !1047
  %162 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1048
  %tbl8uplow = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %162, i32 0, i32 15, !dbg !1050
  %163 = load i8*, i8** %tbl8uplow, align 8, !dbg !1050
  %164 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !1051
  %idx8uplow197 = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %164, i32 0, i32 1, !dbg !1052
  %165 = load i32, i32* %u, align 4, !dbg !1053
  %shr198 = ashr i32 %165, 3, !dbg !1054
  %idxprom199 = sext i32 %shr198 to i64, !dbg !1051
  %arrayidx200 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8uplow197, i64 0, i64 %idxprom199, !dbg !1051
  %166 = load i8, i8* %arrayidx200, align 1, !dbg !1051
  %conv201 = zext i8 %166 to i32, !dbg !1055
  %shl202 = shl i32 %conv201, 3, !dbg !1056
  %167 = load i32, i32* %u, align 4, !dbg !1057
  %add203 = add nsw i32 128, %167, !dbg !1058
  %and204 = and i32 %add203, 7, !dbg !1059
  %add205 = add nsw i32 %shl202, %and204, !dbg !1060
  %idxprom206 = sext i32 %add205 to i64, !dbg !1048
  %arrayidx207 = getelementptr inbounds i8, i8* %163, i64 %idxprom206, !dbg !1048
  %168 = load i8, i8* %arrayidx207, align 1, !dbg !1048
  %conv208 = zext i8 %168 to i32, !dbg !1048
  store i32 %conv208, i32* %c, align 4, !dbg !1061
  %169 = load i16, i16* %m, align 2, !dbg !1062
  %conv209 = zext i16 %169 to i32, !dbg !1062
  %and210 = and i32 %conv209, 512, !dbg !1064
  %tobool211 = icmp ne i32 %and210, 0, !dbg !1064
  br i1 %tobool211, label %if.then212, label %if.else239, !dbg !1065
  %170 = load i32, i32* %u, align 4, !dbg !1066
  %add213 = add nsw i32 128, %170, !dbg !1068
  %171 = load i32, i32* %c, align 4, !dbg !1069
  %add214 = add nsw i32 %add213, %171, !dbg !1070
  %conv215 = trunc i32 %add214 to i8, !dbg !1071
  %conv216 = zext i8 %conv215 to i16, !dbg !1071
  %172 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1072
  %__ctype_toupper_data217 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %172, i32 0, i32 5, !dbg !1073
  %173 = load i32, i32* %u, align 4, !dbg !1074
  %add218 = add nsw i32 256, %173, !dbg !1075
  %idxprom219 = sext i32 %add218 to i64, !dbg !1072
  %arrayidx220 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data217, i64 0, i64 %idxprom219, !dbg !1072
  store i16 %conv216, i16* %arrayidx220, align 2, !dbg !1076
  %174 = load i32, i32* %u, align 4, !dbg !1077
  %add221 = add nsw i32 128, %174, !dbg !1079
  %conv222 = trunc i32 %add221 to i8, !dbg !1080
  %conv223 = sext i8 %conv222 to i32, !dbg !1081
  %cmp224 = icmp ne i32 %conv223, -1, !dbg !1082
  br i1 %cmp224, label %if.then226, label %if.end238, !dbg !1083
  %175 = load i32, i32* %u, align 4, !dbg !1084
  %add227 = add nsw i32 128, %175, !dbg !1086
  %176 = load i32, i32* %c, align 4, !dbg !1087
  %add228 = add nsw i32 %add227, %176, !dbg !1088
  %conv229 = trunc i32 %add228 to i8, !dbg !1089
  %conv230 = zext i8 %conv229 to i16, !dbg !1089
  %177 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1090
  %__ctype_toupper_data231 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %177, i32 0, i32 5, !dbg !1091
  %178 = load i32, i32* %u, align 4, !dbg !1092
  %add232 = add nsw i32 128, %178, !dbg !1093
  %conv233 = trunc i32 %add232 to i8, !dbg !1094
  %conv234 = sext i8 %conv233 to i32, !dbg !1095
ck: Num.419
//Instructions in stack: Num.420
//Instructions in stack: Num.421
//Instructions in stack: Num.422
//Instructions in stack: Num.423
//Instructions in stack: Num.424
//Instructions in stack: Num.425
//Instructions in stack: Num.426
//Instructions in stack: Num.427
//Instructions in stack: Num.428
//Instructions in stack: Num.429
//Instructions in stack: Num.430
//Instructions in stack: Num.431
//Instructions in stack: Num.432
//Instructions in stack: Num.433
//Instructions in stack: Num.434
//Instructions in stack: Num.435
//Instructions in stack: Num.436
//Instructions in stack: Num.437
//Instructions in stack: Num.438
//Instructions in stack: Num.439
//Instructions in stack: Num.440
//Instructions in stack: Num.441
//Instructions in stack: Num.442
//Instructions in stack: Num.443
//Instructions in stack: Num.444
//Instructions in stack: Num.445
//Instructions in stack: Num.446
//Instructions in stack: Num.447
//Instructions in stack: Num.448
//Instructions in stack: Num.449
//Instructions in stack: Num.450
//Instructions in stack: Num.451
//Instructions in stack: Num.452
//Instructions in stack: Num.453
//Instructions in stack: Num.454
//Instructions in stack: Num.455
//Instructions in stack: Num.456
//Instructions in stack: Num.457
//Instructions in stack: Num.458
//Instructions in stack: Num.459
//Instructions in stack: Num.460
//Instructions in stack: Num.461
//Instructions in stack: Num.462
//Instructions in stack: Num.463
//Instructions in stack: Num.464
//Instructions in stack: Num.465
//Instructions in stack: Num.466
//Instructions in stack: Num.467
//Instructions in stack: Num.468
//Instructions in stack: Num.469
//Instructions in stack: Num.470
//Instructions in stack: Num.471
//Instructions in stack: Num.472
//Instructions in stack: Num.473
//Instructions in stack: Num.474
//Instructions in stack: Num.475
//Instructions in stack: Num.476
//Instructions in stack: Num.477
//Instructions in stack: Num.478
//Instructions in stack: Num.479
//Instructions in stack: Num.480
//Instructions in stack: Num.481
//Instructions in stack: Num.482
//Instructions in stack: Num.483
//Instructions in stack: Num.484
//Instructions in stack: Num.485
//Instructions in stack: Num.486
//Instructions in stack: Num.487
//Instructions in stack: Num.488
//Instructions in stack: Num.489
//Instructions in stack: Num.490
//Instructions in stack: Num.491
//Instructions in stack: Num.492
//Instructions in stack: Num.493
//Instructions in stack: Num.494
//Instructions in stack: Num.495
//Instructions in stack: Num.496
//Instructions in stack: Num.497
//Instructions in stack: Num.498
//Instructions in stack: Num.499
//Instructions in stack: Num.500
//Instructions in stack: Num.501
//Instructions in stack: Num.502
//Instructions in stack: Num.503
//Instructions in stack: Num.504
//Instructions in stack: Num.505
//Instructions in stack: Num.506
//Instructions in stack: Num.507
//Instructions in stack: Num.508
//Instructions in stack: Num.509
//Instructions in stack: Num.510
//Instructions in stack: Num.511
//Instructions in stack: Num.512
//Instructions in stack: Num.513
//Instructions in stack: Num.514
//Instructions in stack: Num.515
//Instructions in stack: Num.516
//Instructions in stack: Num.517
//Instructions in stack: Num.518
//Instructions in stack: Num.519
//Instructions in stack: Num.520
//Instructions in stack: Num.521
//Instructions in stack: Num.522
//Instructions in stack: Num.523
//Instructions in stack: Num.524
//Instructions in stack: Num.525
//Instructions in stack: Num.526
//Instructions in stack: Num.527
//Instructions in stack: Num.528
//Instructions in stack: Num.529
//Instructions in stack: Num.530
//Instructions in stack: Num.531
//Instructions in stack: Num.532
//Instructions in stack: Num.533
//Instructions in stack: Num.534
//Instructions in stack: Num.535
//Instructions in stack: Num.536
//Instructions in stack: Num.537
//Instructions in stack: Num.538
//Instructions in stack: Num.539
//Instructions in stack: Num.540
//Instructions in stack: Num.541
//Instructions in stack: Num.542
//Instructions in stack:   %add235 = add nsw i32 128, %conv234, !dbg !1096
  %idxprom236 = sext i32 %add235 to i64, !dbg !1090
  %arrayidx237 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data231, i64 0, i64 %idxprom236, !dbg !1090
  store i16 %conv230, i16* %arrayidx237, align 2, !dbg !1097
  br label %if.end238, !dbg !1098
  br label %if.end266, !dbg !1099
  %179 = load i32, i32* %u, align 4, !dbg !1100
  %add240 = add nsw i32 128, %179, !dbg !1102
  %180 = load i32, i32* %c, align 4, !dbg !1103
  %sub241 = sub nsw i32 %add240, %180, !dbg !1104
  %conv242 = trunc i32 %sub241 to i8, !dbg !1105
  %conv243 = zext i8 %conv242 to i16, !dbg !1105
  %181 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1106
  %__ctype_tolower_data244 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %181, i32 0, i32 4, !dbg !1107
  %182 = load i32, i32* %u, align 4, !dbg !1108
  %add245 = add nsw i32 256, %182, !dbg !1109
  %idxprom246 = sext i32 %add245 to i64, !dbg !1106
  %arrayidx247 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data244, i64 0, i64 %idxprom246, !dbg !1106
  store i16 %conv243, i16* %arrayidx247, align 2, !dbg !1110
  %183 = load i32, i32* %u, align 4, !dbg !1111
  %add248 = add nsw i32 128, %183, !dbg !1113
  %conv249 = trunc i32 %add248 to i8, !dbg !1114
  %conv250 = sext i8 %conv249 to i32, !dbg !1115
  %cmp251 = icmp ne i32 %conv250, -1, !dbg !1116
  br i1 %cmp251, label %if.then253, label %if.end265, !dbg !1117
  %184 = load i32, i32* %u, align 4, !dbg !1118
  %add254 = add nsw i32 128, %184, !dbg !1120
  %185 = load i32, i32* %c, align 4, !dbg !1121
  %sub255 = sub nsw i32 %add254, %185, !dbg !1122
  %conv256 = trunc i32 %sub255 to i8, !dbg !1123
  %conv257 = zext i8 %conv256 to i16, !dbg !1123
  %186 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1124
  %__ctype_tolower_data258 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %186, i32 0, i32 4, !dbg !1125
  %187 = load i32, i32* %u, align 4, !dbg !1126
  %add259 = add nsw i32 128, %187, !dbg !1127
  %conv260 = trunc i32 %add259 to i8, !dbg !1128
  %conv261 = sext i8 %conv260 to i32, !dbg !1129
  %add262 = add nsw i32 128, %conv261, !dbg !1130
  %idxprom263 = sext i32 %add262 to i64, !dbg !1124
  %arrayidx264 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data258, i64 0, i64 %idxprom263, !dbg !1124
  store i16 %conv257, i16* %arrayidx264, align 2, !dbg !1131
  br label %if.end265, !dbg !1132
  br label %if.end266
  br label %if.end267, !dbg !1133
  br label %for.inc268, !dbg !1134
  %188 = load i32, i32* %u, align 4, !dbg !1135
  %inc269 = add nsw i32 %188, 1, !dbg !1135
  store i32 %inc269, i32* %u, align 4, !dbg !1135
  br label %for.cond142, !dbg !1136, !llvm.loop !1137
  %189 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1139
  %__ctype_b_data271 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %189, i32 0, i32 3, !dbg !1140
  %arraydecay272 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data271, i64 0, i64 0, !dbg !1139
  %add.ptr273 = getelementptr inbounds i16, i16* %arraydecay272, i64 128, !dbg !1141
  %190 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1142
  %__ctype_b = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %190, i32 0, i32 0, !dbg !1143
  store i16* %add.ptr273, i16** %__ctype_b, align 8, !dbg !1144
  %191 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1145
  %__ctype_tolower_data274 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %191, i32 0, i32 4, !dbg !1146
  %arraydecay275 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data274, i64 0, i64 0, !dbg !1145
  %add.ptr276 = getelementptr inbounds i16, i16* %arraydecay275, i64 128, !dbg !1147
  %192 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1148
  %__ctype_tolower = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %192, i32 0, i32 1, !dbg !1149
  store i16* %add.ptr276, i16** %__ctype_tolower, align 8, !dbg !1150
  %193 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1151
  %__ctype_toupper_data277 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %193, i32 0, i32 5, !dbg !1152
  %arraydecay278 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data277, i64 0, i64 0, !dbg !1151
  %add.ptr279 = getelementptr inbounds i16, i16* %arraydecay278, i64 128, !dbg !1153
  %194 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1154
  %__ctype_toupper = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %194, i32 0, i32 2, !dbg !1155
  store i16* %add.ptr279, i16** %__ctype_toupper, align 8, !dbg !1156
  br label %if.end280
  %195 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1157
  %outdigit_length = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %195, i32 0, i32 11, !dbg !1158
  %arraydecay281 = getelementptr inbounds [10 x i8], [10 x i8]* %outdigit_length, i64 0, i64 0, !dbg !1157
  store i8* %arraydecay281, i8** %d, align 8, !dbg !1159
  %196 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1160
  %outdigit0_mb = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %196, i32 0, i32 28, !dbg !1161
  store i8** %outdigit0_mb, i8*** %x, align 8, !dbg !1162
  store i32 0, i32* %c, align 4, !dbg !1163
  br label %for.cond282, !dbg !1165
  %197 = load i32, i32* %c, align 4, !dbg !1166
  %cmp283 = icmp slt i32 %197, 10, !dbg !1168
  br i1 %cmp283, label %for.body285, label %for.end294, !dbg !1169
  %198 = load i8**, i8*** %x, align 8, !dbg !1170
  %199 = load i32, i32* %c, align 4, !dbg !1172
  %idxprom286 = sext i32 %199 to i64, !dbg !1170
  %arrayidx287 = getelementptr inbounds i8*, i8** %198, i64 %idxprom286, !dbg !1170
  %200 = load i8*, i8** %arrayidx287, align 8, !dbg !1170
  %call288 = call i64 @strlen(i8* %200) #12, !dbg !1173
  %conv289 = trunc i64 %call288 to i8, !dbg !1173
  %201 = load i8*, i8** %d, align 8, !dbg !1174
  %202 = load i32, i32* %c, align 4, !dbg !1175
  %idxprom290 = sext i32 %202 to i64, !dbg !1176
  %arrayidx291 = getelementptr inbounds i8, i8* %201, i64 %idxprom290, !dbg !1176
  store i8 %conv289, i8* %arrayidx291, align 1, !dbg !1177
  br label %for.inc292, !dbg !1178
  %203 = load i32, i32* %c, align 4, !dbg !1179
  %inc293 = add nsw i32 %203, 1, !dbg !1179
  store i32 %inc293, i32* %c, align 4, !dbg !1179
  br label %for.cond282, !dbg !1180, !llvm.loop !1181
  br label %if.end312, !dbg !1183
  %204 = load i32, i32* %i, align 4, !dbg !1184
  %cmp296 = icmp eq i32 %204, 1, !dbg !1186
  br i1 %cmp296, label %if.then298, label %if.end311, !dbg !1187
  %205 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1188
  %decimal_point_wc = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %205, i32 0, i32 24, !dbg !1190
  %206 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1191
  %decimal_point = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %206, i32 0, i32 39, !dbg !1192
  %207 = load i8*, i8** %decimal_point, align 8, !dbg !1192
  %208 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1193
  %call299 = call i32 @__locale_mbrtowc_l(i32* %decimal_point_wc, i8* %207, %struct.__uclibc_locale_struct.160* %208) #10, !dbg !1194
  %209 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1195
  %decimal_point_len = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %209, i32 0, i32 26, !dbg !1196
  store i32 %call299, i32* %decimal_point_len, align 8, !dbg !1197
  %210 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1198
  %grouping = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %210, i32 0, i32 41, !dbg !1200
  %211 = load i8*, i8** %grouping, align 8, !dbg !1200
  %212 = load i8, i8* %211, align 1, !dbg !1201
  %tobool300 = icmp ne i8 %212, 0, !dbg !1201
  br i1 %tobool300, label %if.then301, label %if.end310, !dbg !1202
  %213 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1203
  %thousands_sep_wc = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %213, i32 0, i32 25, !dbg !1205
  %214 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1206
  %thousands_sep = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %214, i32 0, i32 40, !dbg !1207
Num.543
//Instructions in stack: Num.544
//Instructions in stack: Num.545
//Instructions in stack: Num.546
//Instructions in stack: Num.547
//Instructions in stack: Num.548
//Instructions in stack: Num.549
//Instructions in stack: Num.550
//Instructions in stack: Num.551
//Instructions in stack: Num.552
//Instructions in stack: Num.553
//Instructions in stack: Num.554
//Instructions in stack: Num.555
//Instructions in stack: Num.556
//Instructions in stack: Num.557
//Instructions in stack: Num.558
//Instructions in stack: Num.559
//Instructions in stack: Num.560
//Instructions in stack: Num.561
//Instructions in stack: Num.562
//Instructions in stack: Num.563
//Instructions in stack: Num.564
//Instructions in stack: Num.565
//Instructions in stack: Num.566
//Instructions in stack: Num.567
//Instructions in stack: Num.568
//Instructions in stack: Num.569
//Instructions in stack: Num.570
//Instructions in stack: Num.571
//Instructions in stack: Num.572
//Instructions in stack: Num.573
//Instructions in stack: Num.574
//Instructions in stack: Num.575
//Instructions in stack: Num.576
//Instructions in stack: Num.577
//Instructions in stack: Num.578
//Instructions in stack: Num.579
//Instructions in stack: Num.580
//Instructions in stack: Num.581
//Instructions in stack: Num.582
//Instructions in stack: Num.583
//Instructions in stack: Num.584
//Instructions in stack: Num.585
//Instructions in stack: Num.586
//Instructions in stack: Num.587
//Instructions in stack: Num.588
//Instructions in stack: Num.589
//Instructions in stack: Num.590
//Instructions in stack: Num.591
//Instructions in stack: Num.592
//Instructions in stack: Num.593
//Instructions in stack: Num.594
//Instructions in stack: Num.595
//Instructions in stack: Num.596
//Instructions in stack: Num.597
//Instructions in stack: Num.598
//Instructions in stack: Num.599
//Instructions in stack: Num.600
//Instructions in stack: Num.601
//Instructions in stack: Num.602
//Instructions in stack: Num.603
//Instructions in stack: Num.604
//Instructions in stack: Num.605
//Instructions in stack: Num.606
//Instructions in stack: Num.607
//Instructions in stack: Num.608
//Instructions in stack: Num.609
//Instructions in stack: Num.610
//Instructions in stack: Num.611
//Instructions in stack: Num.612
//Instructions in stack: Num.613
//Instructions in stack: Num.614
//Instructions in stack: Num.615
//Instructions in stack: Num.616
//Instructions in stack: Num.617
//Instructions in stack: Num.618
//Instructions in stack: Num.619
//Instructions in stack: Num.620
//Instructions in stack: Num.621
//Instructions in stack: Num.622
//Instructions in stack: Num.623
//Instructions in stack: Num.624
//Instructions in stack: Num.625
//Instructions in stack: Num.626
//Instructions in stack: Num.627
//Instructions in stack: Num.628
//Instructions in stack: Num.629
//Instructions in stack: Num.630
//Instructions in stack: Num.631
//Instructions in stack: Num.632
//Instructions in stack: Num.633
//Instructions in stack: Num.634
//Instructions in stack: Num.635
//Instructions in stack: Num.636
//Instructions in stack: Num.637
//Instructions in stack: Num.638
//Instructions in stack: Num.639
//Instructions in stack: Num.640
//Instructions in stack: Num.641
//Instructions in stack: Num.642
//Instructions in stack: Num.643
//Instructions in stack: Num.644
//Instructions in stack: Num.645
//Instructions in stack: Num.646
//Instructions in stack: Num.647
//Instructions in stack: Num.648
//Instructions in stack: Num.649
//Instructions in stack: Num.650
//Instructions in stack: Num.651
//Instructions in stack: Num.652
//Instructions in stack: Num.653
//Instructions in stack: Num.654
//Instructions in stack: Num.655
//Instructions in stack: Num.656
//Instructions in stack: Num.657
//Instructions in stack: Num.658
//Instructions in stack: Num.659
//Instructions in stack: Num.660
//Instructions in stack: Num.661
//Instructions in stack: Num.662
//Instructions in stack: Num.663
//Instructions in stack: Num.664
//Instructions in stack: Num.665
//Instructions in stack: Num.666
//Instructions in stack: Num.  %215 = load i8*, i8** %thousands_sep, align 8, !dbg !1207
  %216 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1208
  %call302 = call i32 @__locale_mbrtowc_l(i32* %thousands_sep_wc, i8* %215, %struct.__uclibc_locale_struct.160* %216) #10, !dbg !1209
  %217 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1210
  %thousands_sep_len = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %217, i32 0, i32 27, !dbg !1211
  store i32 %call302, i32* %thousands_sep_len, align 4, !dbg !1212
  %218 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1213
  %thousands_sep_len303 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %218, i32 0, i32 27, !dbg !1215
  %219 = load i32, i32* %thousands_sep_len303, align 4, !dbg !1215
  %cmp304 = icmp eq i32 %219, 0, !dbg !1216
  br i1 %cmp304, label %if.then306, label %if.end309, !dbg !1217
  %220 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1218
  %thousands_sep307 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %220, i32 0, i32 40, !dbg !1220
  %221 = load i8*, i8** %thousands_sep307, align 8, !dbg !1220
  %222 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1221
  %grouping308 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %222, i32 0, i32 41, !dbg !1222
  store i8* %221, i8** %grouping308, align 8, !dbg !1223
  br label %if.end309, !dbg !1224
  br label %if.end310, !dbg !1225
  br label %if.end311, !dbg !1226
  br label %if.end312
  br label %if.end313, !dbg !1227
  %223 = load i32, i32* %i, align 4, !dbg !1228
  %inc314 = add nsw i32 %223, 1, !dbg !1228
  store i32 %inc314, i32* %i, align 4, !dbg !1228
  %224 = load i8*, i8** %p.addr, align 8, !dbg !1229
  %add.ptr315 = getelementptr inbounds i8, i8* %224, i64 2, !dbg !1229
  store i8* %add.ptr315, i8** %p.addr, align 8, !dbg !1229
  %225 = load i8*, i8** %s, align 8, !dbg !1230
  %add.ptr316 = getelementptr inbounds i8, i8* %225, i64 2, !dbg !1230
  store i8* %add.ptr316, i8** %s, align 8, !dbg !1230
  br label %do.cond, !dbg !1231
  %226 = load i32, i32* %i, align 4, !dbg !1232
  %cmp317 = icmp slt i32 %226, 6, !dbg !1233
  br i1 %cmp317, label %do.body, label %do.end, !dbg !1231, !llvm.loop !1234
  store i32 1, i32* %retval, align 4, !dbg !1236
  br label %return, !dbg !1236
  %227 = load i32, i32* %retval, align 4, !dbg !1237
  ret i32 %227, !dbg !1237
  %s.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !2692, metadata !DIExpression()), !dbg !2693
  call void @llvm.dbg.declare(metadata i8** %p, metadata !2694, metadata !DIExpression()), !dbg !2695
  %0 = load i8*, i8** %s.addr, align 8, !dbg !664
  store i8* %0, i8** %p, align 8, !dbg !666
  br label %for.cond, !dbg !667
  %1 = load i8*, i8** %p, align 8, !dbg !668
  %2 = load i8, i8* %1, align 1, !dbg !670
  %tobool = icmp ne i8 %2, 0, !dbg !671
  br i1 %tobool, label %for.body, label %for.end, !dbg !671
  br label %for.inc, !dbg !671
  %3 = load i8*, i8** %p, align 8, !dbg !672
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !672
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !672
  br label %for.cond, !dbg !673, !llvm.loop !674
  %4 = load i8*, i8** %p, align 8, !dbg !676
  %5 = load i8*, i8** %s.addr, align 8, !dbg !677
  %sub.ptr.lhs.cast = ptrtoint i8* %4 to i64, !dbg !678
  %sub.ptr.rhs.cast = ptrtoint i8* %5 to i64, !dbg !678
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !678
  ret i64 %sub.ptr.sub, !dbg !679
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
667
//Instructions in stack: Num.668
//Instructions in stack: Num.669
//Instructions in stack: Num.670
//Instructions in stack: Num.671
//Instructions in stack: Num.672
//Instructions in stack: Num.673
//Instructions in stack: Num.674
//Instructions in stack: Num.675
//Instructions in stack: Num.676
//Instructions in stack: Num.677
//Instructions in stack: Num.678
//Instructions in stack: Num.679
//Instructions in stack: Num.680
//Instructions in stack: Num.681
//Instructions in stack: Num.682
//Instructions in stack: Num.683
//Instructions in stack: Num.684
//Instructions in stack: Num.685
//Instructions in stack: Num.686
//Instructions in stack: Num.687
//Instructions in stack: Num.688
//Instructions in stack: Num.689
//Instructions in stack: Num.690
//Instructions in stack: Num.691
//Instructions in stack: Num.692
//Instructions in stack: Num.693
//Instructions in stack: Num.694
//Instructions in stack: Num.695
//Instructions in stack: Num.696
//Instructions in stack: Num.697
//Instructions in stack: Num.698
//Instructions in stack: Num.699
//Instructions in stack: Num.700
//Instructions in stack: Num.701
//Instructions in stack: Num.702
//Instructions in stack: Num.703
//Instructions in stack: Num.704
//Instructions in stack: Num.705
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructio  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
ns in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in s  unreachable, !dbg !822
  %0 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !657
  %tobool = icmp ne i32 %0, 0, !dbg !657
  br i1 %tobool, label %if.then, label %if.end, !dbg !659
  br label %if.end4, !dbg !660
  %1 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  %inc = add nsw i32 %1, 1, !dbg !661
  store i32 %inc, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  store i64 4096, i64* @__pagesize, align 8, !dbg !662
  br i1 true, label %if.then1, label %if.end2, !dbg !663
  call void @_locale_init() #10, !dbg !664
  br label %if.end2, !dbg !664
  br i1 true, label %if.then3, label %if.end4, !dbg !666
  call void @_stdio_init() #10, !dbg !667
  br label %if.end4, !dbg !667
  ret void, !dbg !669
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** @__global_locale, align 8, !dbg !658
  call void @_locale_init_l(%struct.__uclibc_locale_struct.160* %0) #10, !dbg !659
  ret void, !dbg !660
  %base.addr = alloca %struct.__uclibc_locale_struct.160*, align 8
  store %struct.__uclibc_locale_struct.160* %base, %struct.__uclibc_locale_struct.160** %base.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__uclibc_locale_struct.160** %base.addr, metadata !1973, metadata !DIExpression()), !dbg !1974
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !662
  %cur_locale = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %0, i32 0, i32 6, !dbg !663
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale, i64 0, i64 0, !dbg !662
  %call = call i8* @memset(i8* %arraydecay, i32 0, i64 14) #10, !dbg !664
  %1 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !665
  %cur_locale1 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %1, i32 0, i32 6, !dbg !666
  %arrayidx = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale1, i64 0, i64 0, !dbg !665
  store i8 35, i8* %arrayidx, align 8, !dbg !667
  %2 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !668
  %category_item_count = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %2, i32 0, i32 8, !dbg !669
  %arraydecay2 = getelementptr inbounds [6 x i8], [6 x i8]* %category_item_count, i64 0, i64 0, !dbg !668
  %3 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !670
  %lc_common_item_offsets_LEN = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %3, i32 0, i32 29, !dbg !671
  %arraydecay3 = getelementptr inbounds [6 x i8], [6 x i8]* %lc_common_item_offsets_LEN, i64 0, i64 0, !dbg !670
  %call4 = call i8* @memcpy(i8* %arraydecay2, i8* %arraydecay3, i64 6) #10, !dbg !672
  %4 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !673
  %category_item_count5 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %4, i32 0, i32 8, !dbg !674
  %arrayidx6 = getelementptr inbounds [6 x i8], [6 x i8]* %category_item_count5, i64 0, i64 0, !dbg !673
  %5 = load i8, i8* %arrayidx6, align 2, !dbg !675
  %inc = add i8 %5, 1, !dbg !675
  store i8 %inc, i8* %arrayidx6, align 2, !dbg !675
  %6 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !676
  %category_offsets = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %6, i32 0, i32 7, !dbg !677
  %arrayidx7 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets, i64 0, i64 0, !dbg !676
  store i16 2488, i16* %arrayidx7, align 2, !dbg !678
  %7 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !679
  %category_offsets8 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %7, i32 0, i32 7, !dbg !680
  %arrayidx9 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets8, i64 0, i64 1, !dbg !679
  store i16 2576, i16* %arrayidx9, align 2, !dbg !681
  %8 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !682
  %category_offsets10 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %8, i32 0, i32 7, !dbg !683
  %arrayidx11 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets10, i64 0, i64 2, !dbg !682
  store i16 2600, i16* %arrayidx11, align 2, !dbg !684
  %9 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !685
  %category_offsets12 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %9, i32 0, i32 7, !dbg !686
  %arrayidx13 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets12, i64 0, i64 3, !dbg !685
  store i16 2776, i16* %arrayidx13, align 2, !dbg !687
  %10 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !688
  %category_offsets14 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %10, i32 0, i32 7, !dbg !689
  %arrayidx15 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets14, i64 0, i64 5, !dbg !688
  store i16 3176, i16* %arrayidx15, align 2, !dbg !690
  %11 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !691
  %tbl8ctype = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %11, i32 0, i32 0, !dbg !692
  %12 = bitcast [420 x i8]* %tbl8ctype to i8*, !dbg !693
  %13 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !694
  %tbl8ctype16 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %13, i32 0, i32 13, !dbg !695
  store i8* %12, i8** %tbl8ctype16, align 8, !dbg !696
  %14 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !697
  %tbl8uplow = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %14, i32 0, i32 1, !dbg !698
  %15 = bitcast [504 x i8]* %tbl8uplow to i8*, !dbg !699
  %16 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !700
  %tbl8uplow17 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %16, i32 0, i32 15, !dbg !701
  store i8* %15, i8** %tbl8uplow17, align 8, !dbg !702
  %17 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !703
  %tbl8c2wc = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %17, i32 0, i32 2, !dbg !704
  %18 = bitcast [1760 x i16]* %tbl8c2wc to i16*, !dbg !705
  %19 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !706
  %tbl8c2wc18 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %19, i32 0, i32 17, !dbg !707
  store i16* %18, i16** %tbl8c2wc18, align 8, !dbg !708
  %20 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !709
  %tbl8wc2c = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %20, i32 0, i32 3, !dbg !710
  %21 = bitcast [4528 x i8]* %tbl8wc2c to i8*, !dbg !711
  %22 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !712
  %tbl8wc2c19 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %22, i32 0, i32 19, !dbg !713
  store i8* %21, i8** %tbl8wc2c19, align 8, !dbg !714
  %23 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !715
  %tblwctype = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %23, i32 0, i32 4, !dbg !716
  %24 = bitcast [3604 x i8]* %tblwctype to i8*, !dbg !717
  %25 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !718
  %tblwctype20 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %25, i32 0, i32 21, !dbg !719
  store i8* %24, i8** %tblwctype20, align 8, !dbg !720
  %26 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !721
  %tblwuplow = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %26, i32 0, i32 5, !dbg !722
  %27 = bitcast [1680 x i8]* %tblwuplow to i8*, !dbg !723
  %28 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !724
  %tblwuplow21 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %28, i32 0, i32 22, !dbg !725
  store i8* %27, i8** %tblwuplow21, align 8, !dbg !726
  %29 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !727
  %tblwuplow_diff = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %29, i32 0, i32 6, !dbg !728
  %30 = bitcast [196 x i16]* %tblwuplow_diff to i16*, !dbg !729
  %31 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !730
  %tblwuplow_diff22 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %31, i32 0, i32 23, !dbg !731
  store i16* %30, i16** %tblwuplow_diff22, align 8, !dbg !732
  %32 = load i16*, i16** @__C_ctype_b, align 8, !dbg !733
  %33 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !734
  %__ctype_b = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %33, i32 0, i32 0, !dbg !735
  store i16* %32, i16** %__ctype_b, align 8, !dbg !736
  %34 = load i16*, i16** @__C_ctype_tolower, align 8, !dbg !737
  %35 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !738
  %__ctype_tolower = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %35, i32 0, i32 1, !dbg !739
  store i16* %34, i16** %__ctype_tolower, align 8, !dbg !740
  %36 = load i16*, i16** @__C_ctype_toupper, align 8, !dbg !741
  %37 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !742
  %__ctype_toupper = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %37, i32 0, i32 2, !dbg !743
  store i16* %36, i16** %__ctype_toupper, align 8, !dbg !744
  %38 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !745
  %code2flag = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %38, i32 0, i32 20, !dbg !746
  store i16* getelementptr inbounds ([16 x i16], [16 x i16]* @__code2flag, i64 0, i64 0), i16** %code2flag, align 8, !dbg !747
  %39 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !748
  %call23 = call i32 @_locale_set_l(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), %struct.__uclibc_locale_struct.160* %39) #11, !dbg !749
  ret void, !dbg !750
  %retval = alloca i32, align 4
  %p.addr = alloca i8*, align 8
  %base.addr = alloca %struct.__uclibc_locale_struct.160*, align 8
  %x = alloca i8**, align 8
  %s = alloca i8*, align 8
  %stp = alloca i64*, align 8
tack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructi  %r = alloca i8*, align 8
  %io = alloca i16*, align 8
  %ii = alloca i16*, align 8
  %d = alloca i8*, align 8
  %row = alloca i32, align 4
  %crow = alloca i32, align 4
  %len = alloca i32, align 4
  %c = alloca i32, align 4
  %i = alloca i32, align 4
  %newcol = alloca %struct.__collate_t.159, align 8
  %c8b = alloca %struct.__codeset_8_bit_t.161*, align 8
  %u = alloca i32, align 4
  %m = alloca i16, align 2
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !1060, metadata !DIExpression()), !dbg !1061
  store %struct.__uclibc_locale_struct.160* %base, %struct.__uclibc_locale_struct.160** %base.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__uclibc_locale_struct.160** %base.addr, metadata !1062, metadata !DIExpression()), !dbg !1063
  call void @llvm.dbg.declare(metadata i8*** %x, metadata !1064, metadata !DIExpression()), !dbg !1065
  call void @llvm.dbg.declare(metadata i8** %s, metadata !1066, metadata !DIExpression()), !dbg !1067
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !668
  %cur_locale = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %0, i32 0, i32 6, !dbg !669
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale, i64 0, i64 0, !dbg !668
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 1, !dbg !670
  store i8* %add.ptr, i8** %s, align 8, !dbg !667
  call void @llvm.dbg.declare(metadata i64** %stp, metadata !1071, metadata !DIExpression()), !dbg !1074
  call void @llvm.dbg.declare(metadata i8** %r, metadata !1075, metadata !DIExpression()), !dbg !1076
  call void @llvm.dbg.declare(metadata i16** %io, metadata !1077, metadata !DIExpression()), !dbg !1078
  call void @llvm.dbg.declare(metadata i16** %ii, metadata !1079, metadata !DIExpression()), !dbg !1080
  call void @llvm.dbg.declare(metadata i8** %d, metadata !1081, metadata !DIExpression()), !dbg !1082
  call void @llvm.dbg.declare(metadata i32* %row, metadata !1083, metadata !DIExpression()), !dbg !1084
  call void @llvm.dbg.declare(metadata i32* %crow, metadata !1085, metadata !DIExpression()), !dbg !1086
  call void @llvm.dbg.declare(metadata i32* %len, metadata !1087, metadata !DIExpression()), !dbg !1088
  call void @llvm.dbg.declare(metadata i32* %c, metadata !1089, metadata !DIExpression()), !dbg !1090
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1091, metadata !DIExpression()), !dbg !1092
  store i32 0, i32* %i, align 4, !dbg !692
  call void @llvm.dbg.declare(metadata %struct.__collate_t.159* %newcol, metadata !1093, metadata !DIExpression()), !dbg !1094
  %1 = load i8*, i8** %p.addr, align 8, !dbg !695
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i32 1, !dbg !695
  store i8* %incdec.ptr, i8** %p.addr, align 8, !dbg !695
  %index2weight = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %newcol, i32 0, i32 23, !dbg !696
  store i16* null, i16** %index2weight, align 8, !dbg !697
  %2 = load i8*, i8** %p.addr, align 8, !dbg !698
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 8, !dbg !698
  %3 = load i8, i8* %arrayidx, align 1, !dbg !698
  %conv = zext i8 %3 to i32, !dbg !698
  %4 = load i8*, i8** %s, align 8, !dbg !700
  %arrayidx1 = getelementptr inbounds i8, i8* %4, i64 8, !dbg !700
  %5 = load i8, i8* %arrayidx1, align 1, !dbg !700
  %conv2 = zext i8 %5 to i32, !dbg !700
  %cmp = icmp ne i32 %conv, %conv2, !dbg !701
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !702
  %6 = load i8*, i8** %p.addr, align 8, !dbg !703
  %arrayidx4 = getelementptr inbounds i8, i8* %6, i64 9, !dbg !703
  %7 = load i8, i8* %arrayidx4, align 1, !dbg !703
  %conv5 = zext i8 %7 to i32, !dbg !703
  %8 = load i8*, i8** %s, align 8, !dbg !704
  %arrayidx6 = getelementptr inbounds i8, i8* %8, i64 9, !dbg !704
  %9 = load i8, i8* %arrayidx6, align 1, !dbg !704
  %conv7 = zext i8 %9 to i32, !dbg !704
  %cmp8 = icmp ne i32 %conv5, %conv7, !dbg !705
  br i1 %cmp8, label %if.then, label %if.end22, !dbg !706
  %10 = load i8*, i8** %p.addr, align 8, !dbg !707
  %11 = load i8, i8* %10, align 1, !dbg !709
  %conv10 = zext i8 %11 to i32, !dbg !709
  %and = and i32 %conv10, 127, !dbg !710
  %shl = shl i32 %and, 7, !dbg !711
  %12 = load i8*, i8** %p.addr, align 8, !dbg !712
  %arrayidx11 = getelementptr inbounds i8, i8* %12, i64 1, !dbg !712
  %13 = load i8, i8* %arrayidx11, align 1, !dbg !712
  %conv12 = zext i8 %13 to i32, !dbg !712
  %and13 = and i32 %conv12, 127, !dbg !713
  %add = add nsw i32 %shl, %and13, !dbg !714
  store i32 %add, i32* %row, align 4, !dbg !715
  %14 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !716
  %locales = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %14, i32 0, i32 31, !dbg !718
  %15 = load i32, i32* %row, align 4, !dbg !719
  %mul = mul nsw i32 9, %15, !dbg !720
  %add14 = add nsw i32 %mul, 3, !dbg !721
  %add15 = add nsw i32 %add14, 4, !dbg !722
  %idxprom = sext i32 %add15 to i64, !dbg !716
  %arrayidx16 = getelementptr inbounds [2826 x i8], [2826 x i8]* %locales, i64 0, i64 %idxprom, !dbg !716
  %16 = load i8, i8* %arrayidx16, align 1, !dbg !716
  %conv17 = zext i8 %16 to i32, !dbg !716
  %call = call i32 @init_cur_collate(i32 %conv17, %struct.__collate_t.159* %newcol) #10, !dbg !723
  %tobool = icmp ne i32 %call, 0, !dbg !723
  br i1 %tobool, label %if.end, label %if.then18, !dbg !724
  store i32 0, i32* %retval, align 4, !dbg !725
  br label %return, !dbg !725
  %17 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !727
  %collate = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %17, i32 0, i32 118, !dbg !728
  %index2weight19 = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %collate, i32 0, i32 23, !dbg !729
  %18 = load i16*, i16** %index2weight19, align 8, !dbg !729
  %19 = bitcast i16* %18 to i8*, !dbg !727
  call void @free(i8* %19) #11, !dbg !730
  %20 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !731
  %collate20 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %20, i32 0, i32 118, !dbg !732
  %21 = bitcast %struct.__collate_t.159* %collate20 to i8*, !dbg !733
  %22 = bitcast %struct.__collate_t.159* %newcol to i8*, !dbg !734
  %call21 = call i8* @memcpy(i8* %21, i8* %22, i64 112) #11, !dbg !735
  br label %if.end22, !dbg !736
  br label %do.body, !dbg !737
  %23 = load i8*, i8** %p.addr, align 8, !dbg !738
  %24 = load i8, i8* %23, align 1, !dbg !741
  %conv23 = zext i8 %24 to i32, !dbg !741
  %25 = load i8*, i8** %s, align 8, !dbg !742
  %26 = load i8, i8* %25, align 1, !dbg !743
  %conv24 = zext i8 %26 to i32, !dbg !743
  %cmp25 = icmp ne i32 %conv23, %conv24, !dbg !744
  br i1 %cmp25, label %if.then34, label %lor.lhs.false27, !dbg !745
  %27 = load i8*, i8** %p.addr, align 8, !dbg !746
  %arrayidx28 = getelementptr inbounds i8, i8* %27, i64 1, !dbg !746
  %28 = load i8, i8* %arrayidx28, align 1, !dbg !746
  %conv29 = zext i8 %28 to i32, !dbg !746
  %29 = load i8*, i8** %s, align 8, !dbg !747
  %arrayidx30 = getelementptr inbounds i8, i8* %29, i64 1, !dbg !747
  %30 = load i8, i8* %arrayidx30, align 1, !dbg !747
  %conv31 = zext i8 %30 to i32, !dbg !747
  %cmp32 = icmp ne i32 %conv29, %conv31, !dbg !748
  br i1 %cmp32, label %if.then34, label %if.end313, !dbg !749
  %31 = load i8*, i8** %p.addr, align 8, !dbg !750
  %32 = load i8, i8* %31, align 1, !dbg !752
  %conv35 = zext i8 %32 to i32, !dbg !752
  %and36 = and i32 %conv35, 127, !dbg !753
  %shl37 = shl i32 %and36, 7, !dbg !754
  %33 = load i8*, i8** %p.addr, align 8, !dbg !755
  %arrayidx38 = getelementptr inbounds i8, i8* %33, i64 1, !dbg !755
  %34 = load i8, i8* %arrayidx38, align 1, !dbg !755
ons in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions  %conv39 = zext i8 %34 to i32, !dbg !755
  %and40 = and i32 %conv39, 127, !dbg !756
  %add41 = add nsw i32 %shl37, %and40, !dbg !757
  store i32 %add41, i32* %row, align 4, !dbg !758
  %35 = load i8*, i8** %p.addr, align 8, !dbg !759
  %36 = load i8, i8* %35, align 1, !dbg !760
  %37 = load i8*, i8** %s, align 8, !dbg !761
  store i8 %36, i8* %37, align 1, !dbg !762
  %38 = load i8*, i8** %p.addr, align 8, !dbg !763
  %arrayidx42 = getelementptr inbounds i8, i8* %38, i64 1, !dbg !763
  %39 = load i8, i8* %arrayidx42, align 1, !dbg !763
  %40 = load i8*, i8** %s, align 8, !dbg !764
  %arrayidx43 = getelementptr inbounds i8, i8* %40, i64 1, !dbg !764
  store i8 %39, i8* %arrayidx43, align 1, !dbg !765
  %41 = load i32, i32* %i, align 4, !dbg !766
  %cmp44 = icmp ne i32 %41, 4, !dbg !768
  br i1 %cmp44, label %land.lhs.true, label %if.end92, !dbg !769
  %42 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !770
  %lc_common_item_offsets_LEN = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %42, i32 0, i32 29, !dbg !771
  %43 = load i32, i32* %i, align 4, !dbg !772
  %idxprom46 = sext i32 %43 to i64, !dbg !770
  %arrayidx47 = getelementptr inbounds [6 x i8], [6 x i8]* %lc_common_item_offsets_LEN, i64 0, i64 %idxprom46, !dbg !770
  %44 = load i8, i8* %arrayidx47, align 1, !dbg !770
  %conv48 = zext i8 %44 to i32, !dbg !770
  store i32 %conv48, i32* %len, align 4, !dbg !773
  %cmp49 = icmp ne i32 %conv48, 0, !dbg !774
  br i1 %cmp49, label %if.then51, label %if.end92, !dbg !775
  %45 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !776
  %locales52 = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %45, i32 0, i32 31, !dbg !778
  %46 = load i32, i32* %row, align 4, !dbg !779
  %mul53 = mul nsw i32 9, %46, !dbg !780
  %add54 = add nsw i32 %mul53, 3, !dbg !781
  %47 = load i32, i32* %i, align 4, !dbg !782
  %add55 = add nsw i32 %add54, %47, !dbg !783
  %idxprom56 = sext i32 %add55 to i64, !dbg !776
  %arrayidx57 = getelementptr inbounds [2826 x i8], [2826 x i8]* %locales52, i64 0, i64 %idxprom56, !dbg !776
  %48 = load i8, i8* %arrayidx57, align 1, !dbg !776
  %conv58 = zext i8 %48 to i32, !dbg !776
  %49 = load i32, i32* %len, align 4, !dbg !784
  %mul59 = mul nsw i32 %conv58, %49, !dbg !785
  store i32 %mul59, i32* %crow, align 4, !dbg !786
  %50 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !787
  %51 = bitcast %struct.__uclibc_locale_struct.160* %50 to i8*, !dbg !788
  %52 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !789
  %category_offsets = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %52, i32 0, i32 7, !dbg !790
  %53 = load i32, i32* %i, align 4, !dbg !791
  %idxprom60 = sext i32 %53 to i64, !dbg !789
  %arrayidx61 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets, i64 0, i64 %idxprom60, !dbg !789
  %54 = load i16, i16* %arrayidx61, align 2, !dbg !789
  %conv62 = zext i16 %54 to i32, !dbg !789
  %idx.ext = sext i32 %conv62 to i64, !dbg !792
  %add.ptr63 = getelementptr inbounds i8, i8* %51, i64 %idx.ext, !dbg !792
  %55 = bitcast i8* %add.ptr63 to i8**, !dbg !793
  store i8** %55, i8*** %x, align 8, !dbg !794
  %56 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !795
  %lc_common_tbl_offsets = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %56, i32 0, i32 30, !dbg !796
  %arraydecay64 = getelementptr inbounds [24 x i64], [24 x i64]* %lc_common_tbl_offsets, i64 0, i64 0, !dbg !795
  %57 = load i32, i32* %i, align 4, !dbg !797
  %mul65 = mul nsw i32 4, %57, !dbg !798
  %idx.ext66 = sext i32 %mul65 to i64, !dbg !799
  %add.ptr67 = getelementptr inbounds i64, i64* %arraydecay64, i64 %idx.ext66, !dbg !799
  store i64* %add.ptr67, i64** %stp, align 8, !dbg !800
  %58 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !801
  %59 = bitcast %struct.__locale_mmap_t.162* %58 to i8*, !dbg !802
  %60 = load i64*, i64** %stp, align 8, !dbg !803
  %61 = load i64, i64* %60, align 8, !dbg !804
  %add.ptr68 = getelementptr inbounds i8, i8* %59, i64 %61, !dbg !805
  store i8* %add.ptr68, i8** %r, align 8, !dbg !806
  %62 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !807
  %63 = bitcast %struct.__locale_mmap_t.162* %62 to i8*, !dbg !808
  %64 = load i64*, i64** %stp, align 8, !dbg !809
  %incdec.ptr69 = getelementptr inbounds i64, i64* %64, i32 1, !dbg !809
  store i64* %incdec.ptr69, i64** %stp, align 8, !dbg !809
  %65 = load i64, i64* %incdec.ptr69, align 8, !dbg !810
  %add.ptr70 = getelementptr inbounds i8, i8* %63, i64 %65, !dbg !811
  %66 = bitcast i8* %add.ptr70 to i16*, !dbg !812
  store i16* %66, i16** %io, align 8, !dbg !813
  %67 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !814
  %68 = bitcast %struct.__locale_mmap_t.162* %67 to i8*, !dbg !815
  %69 = load i64*, i64** %stp, align 8, !dbg !816
  %incdec.ptr71 = getelementptr inbounds i64, i64* %69, i32 1, !dbg !816
  store i64* %incdec.ptr71, i64** %stp, align 8, !dbg !816
  %70 = load i64, i64* %incdec.ptr71, align 8, !dbg !817
  %add.ptr72 = getelementptr inbounds i8, i8* %68, i64 %70, !dbg !818
  %71 = bitcast i8* %add.ptr72 to i16*, !dbg !819
  store i16* %71, i16** %ii, align 8, !dbg !820
  %72 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !821
  %73 = bitcast %struct.__locale_mmap_t.162* %72 to i8*, !dbg !822
  %74 = load i64*, i64** %stp, align 8, !dbg !823
  %incdec.ptr73 = getelementptr inbounds i64, i64* %74, i32 1, !dbg !823
  store i64* %incdec.ptr73, i64** %stp, align 8, !dbg !823
  %75 = load i64, i64* %incdec.ptr73, align 8, !dbg !824
  %add.ptr74 = getelementptr inbounds i8, i8* %73, i64 %75, !dbg !825
  store i8* %add.ptr74, i8** %d, align 8, !dbg !826
  store i32 0, i32* %c, align 4, !dbg !827
  br label %for.cond, !dbg !829
  %76 = load i32, i32* %c, align 4, !dbg !830
  %77 = load i32, i32* %len, align 4, !dbg !832
  %cmp75 = icmp slt i32 %76, %77, !dbg !833
  br i1 %cmp75, label %for.body, label %for.end, !dbg !834
  %78 = load i8*, i8** %d, align 8, !dbg !835
  %79 = load i16*, i16** %ii, align 8, !dbg !837
  %80 = load i8*, i8** %r, align 8, !dbg !838
  %81 = load i32, i32* %crow, align 4, !dbg !839
  %82 = load i32, i32* %c, align 4, !dbg !840
  %add77 = add nsw i32 %81, %82, !dbg !841
  %idxprom78 = sext i32 %add77 to i64, !dbg !838
  %arrayidx79 = getelementptr inbounds i8, i8* %80, i64 %idxprom78, !dbg !838
  %83 = load i8, i8* %arrayidx79, align 1, !dbg !838
  %conv80 = zext i8 %83 to i32, !dbg !838
  %84 = load i16*, i16** %io, align 8, !dbg !842
  %85 = load i32, i32* %c, align 4, !dbg !843
  %idxprom81 = sext i32 %85 to i64, !dbg !842
  %arrayidx82 = getelementptr inbounds i16, i16* %84, i64 %idxprom81, !dbg !842
  %86 = load i16, i16* %arrayidx82, align 2, !dbg !842
  %conv83 = zext i16 %86 to i32, !dbg !842
  %add84 = add nsw i32 %conv80, %conv83, !dbg !844
  %idxprom85 = sext i32 %add84 to i64, !dbg !837
  %arrayidx86 = getelementptr inbounds i16, i16* %79, i64 %idxprom85, !dbg !837
  %87 = load i16, i16* %arrayidx86, align 2, !dbg !837
  %conv87 = zext i16 %87 to i32, !dbg !837
  %idx.ext88 = sext i32 %conv87 to i64, !dbg !845
  %add.ptr89 = getelementptr inbounds i8, i8* %78, i64 %idx.ext88, !dbg !845
  %88 = load i8**, i8*** %x, align 8, !dbg !846
 in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.190
//Instructions in stack: Num.191
//Instructions in stack: Num.192
//Instructions in stack: Num.193
//Instructions in stack: Num.194
//Instructions in stack: Num.195
//Instructions in stack: Num.196
//Instructions in stack: Num.197
//Instructions in stack: Num.198
//Instructions in stack: Num.199
//Instructions in stack: Num.200
//Instructions in stack: Num.201
//Instructions in stack: Num.202
//Instructions in stack: Num.203
//Instructions in stack: Num.204
//Instructions in stack: Num.205
//Instructions in stack: Num.206
//Instructions in stack: Num.207
//Instructions in stack: Num.208
//Instructions in stack: Num.209
//Instructions in stack: Num.210
//Instructions in stack: Num.211
//Instructions in stack: Num.212
//Instructions in stack: Num.213
//Instructions in stack: Num.214
//Instructions in stack: Num.215
//Instructions in stack: Num.216
//Instructions in stack: Num.217
//Instructions in stack: Num.218
//Instructions in stack: Num.219
//Instructions in stack: Num.220
//Instructions in stack: Num.221
//Instructions in stack: Num.222
//Instructions in stack: Num.223
//Instructions in stack: Num.224
//Instructions in stack: Num.225
//Instructions in stack: Num.226
//Instructions in stack: Num.227
//Instructions in stack: Num.228
//Instructions in stack: Num.229
//Instructions in stack: Num.230
//Instructions in stack: Num.231
//Instructions in stack: Num.232
//Instructions in stack: Num.233
//Instructions in stack: Num.234
//Instructions in stack: Num.235
//Instructions in stack: Num.236
//Instructions in stack: Num.237
//Instructions in stack: Num.238
//Instructions in stack: Num.239
//Instructions in stack: Num.240
//Instructions in stack: Num.241
//Instructions in stack: Num.242
//Instructions in stack: Num.243
//Instructions in stack: Num.244
//Instructions in stack: Num.245
//Instructions in stack: Num.246
//Instructions in stack: Num.247
//Instructions in stack: Num.248
//Instructions in stack: Num.249
//Instructions in stack: Num.250
//Instructions in stack: Num.251
//Instructions in stack: Num.252
//Instructions in stack: Num.253
//Instructions in stack: Num.254
//Instructions in stack: Num.255
//Instructions in stack: Num.256
//Instructions in   %89 = load i32, i32* %c, align 4, !dbg !847
  %idx.ext90 = sext i32 %89 to i64, !dbg !848
  %add.ptr91 = getelementptr inbounds i8*, i8** %88, i64 %idx.ext90, !dbg !848
  store i8* %add.ptr89, i8** %add.ptr91, align 8, !dbg !849
  br label %for.inc, !dbg !850
  %90 = load i32, i32* %c, align 4, !dbg !851
  %inc = add nsw i32 %90, 1, !dbg !851
  store i32 %inc, i32* %c, align 4, !dbg !851
  br label %for.cond, !dbg !852, !llvm.loop !853
  br label %if.end92, !dbg !855
  %91 = load i32, i32* %i, align 4, !dbg !856
  %cmp93 = icmp eq i32 %91, 0, !dbg !858
  br i1 %cmp93, label %if.then95, label %if.else295, !dbg !859
  %92 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !860
  %locales96 = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %92, i32 0, i32 31, !dbg !862
  %93 = load i32, i32* %row, align 4, !dbg !863
  %mul97 = mul nsw i32 9, %93, !dbg !864
  %add98 = add nsw i32 %mul97, 2, !dbg !865
  %idxprom99 = sext i32 %add98 to i64, !dbg !860
  %arrayidx100 = getelementptr inbounds [2826 x i8], [2826 x i8]* %locales96, i64 0, i64 %idxprom99, !dbg !860
  %94 = load i8, i8* %arrayidx100, align 1, !dbg !860
  %conv101 = zext i8 %94 to i32, !dbg !860
  store i32 %conv101, i32* %c, align 4, !dbg !866
  %95 = load i32, i32* %c, align 4, !dbg !867
  %cmp102 = icmp sle i32 %95, 2, !dbg !869
  br i1 %cmp102, label %if.then104, label %if.else112, !dbg !870
  %96 = load i32, i32* %c, align 4, !dbg !871
  %cmp105 = icmp eq i32 %96, 2, !dbg !874
  br i1 %cmp105, label %if.then107, label %if.else, !dbg !875
  %97 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !876
  %codeset = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %97, i32 0, i32 38, !dbg !878
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @utf8, i64 0, i64 0), i8** %codeset, align 8, !dbg !879
  %98 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !880
  %encoding = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %98, i32 0, i32 9, !dbg !881
  store i8 1, i8* %encoding, align 8, !dbg !882
  %99 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !883
  %mb_cur_max = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %99, i32 0, i32 10, !dbg !884
  store i8 6, i8* %mb_cur_max, align 1, !dbg !885
  br label %if.end111, !dbg !886
  %100 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !887
  %codeset108 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %100, i32 0, i32 38, !dbg !889
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @ascii, i64 0, i64 0), i8** %codeset108, align 8, !dbg !890
  %101 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !891
  %encoding109 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %101, i32 0, i32 9, !dbg !892
  store i8 0, i8* %encoding109, align 8, !dbg !893
  %102 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !894
  %mb_cur_max110 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %102, i32 0, i32 10, !dbg !895
  store i8 1, i8* %mb_cur_max110, align 1, !dbg !896
  br label %if.end111
  br label %if.end280, !dbg !897
  call void @llvm.dbg.declare(metadata %struct.__codeset_8_bit_t.161** %c8b, metadata !1298, metadata !DIExpression()), !dbg !1310
  %103 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !911
  %codeset_list = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %103, i32 0, i32 35, !dbg !911
  %arraydecay113 = getelementptr inbounds [255 x i8], [255 x i8]* %codeset_list, i64 0, i64 0, !dbg !911
  store i8* %arraydecay113, i8** %r, align 8, !dbg !912
  %104 = load i8*, i8** %r, align 8, !dbg !913
  %105 = load i8*, i8** %r, align 8, !dbg !914
  %106 = load i32, i32* %c, align 4, !dbg !915
  %sub = sub nsw i32 %106, 3, !dbg !915
  store i32 %sub, i32* %c, align 4, !dbg !915
  %idxprom114 = sext i32 %sub to i64, !dbg !914
  %arrayidx115 = getelementptr inbounds i8, i8* %105, i64 %idxprom114, !dbg !914
  %107 = load i8, i8* %arrayidx115, align 1, !dbg !914
  %conv116 = zext i8 %107 to i32, !dbg !914
  %idx.ext117 = sext i32 %conv116 to i64, !dbg !916
  %add.ptr118 = getelementptr inbounds i8, i8* %104, i64 %idx.ext117, !dbg !916
  %108 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !917
  %codeset119 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %108, i32 0, i32 38, !dbg !918
  store i8* %add.ptr118, i8** %codeset119, align 8, !dbg !919
  %109 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !920
  %encoding120 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %109, i32 0, i32 9, !dbg !921
  store i8 2, i8* %encoding120, align 8, !dbg !922
  %110 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !923
  %mb_cur_max121 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %110, i32 0, i32 10, !dbg !924
  store i8 1, i8* %mb_cur_max121, align 1, !dbg !925
  %111 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !926
  %codeset_8_bit = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %111, i32 0, i32 12, !dbg !927
  %arraydecay122 = getelementptr inbounds [23 x %struct.__codeset_8_bit_t.161], [23 x %struct.__codeset_8_bit_t.161]* %codeset_8_bit, i64 0, i64 0, !dbg !926
  %112 = load i32, i32* %c, align 4, !dbg !928
  %idx.ext123 = sext i32 %112 to i64, !dbg !929
  %add.ptr124 = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %arraydecay122, i64 %idx.ext123, !dbg !929
  store %struct.__codeset_8_bit_t.161* %add.ptr124, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !930
  %113 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !931
  %idx8ctype = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %113, i32 0, i32 0, !dbg !932
  %arraydecay125 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8ctype, i64 0, i64 0, !dbg !931
  %114 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !933
  %idx8ctype126 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %114, i32 0, i32 12, !dbg !934
  store i8* %arraydecay125, i8** %idx8ctype126, align 8, !dbg !935
  %115 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !936
  %idx8uplow = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %115, i32 0, i32 1, !dbg !937
  %arraydecay127 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8uplow, i64 0, i64 0, !dbg !936
  %116 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !938
  %idx8uplow128 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %116, i32 0, i32 14, !dbg !939
  store i8* %arraydecay127, i8** %idx8uplow128, align 8, !dbg !940
  %117 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !941
  %idx8c2wc = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %117, i32 0, i32 2, !dbg !942
  %arraydecay129 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8c2wc, i64 0, i64 0, !dbg !941
  %118 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !943
  %idx8c2wc130 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %118, i32 0, i32 16, !dbg !944
  store i8* %arraydecay129, i8** %idx8c2wc130, align 8, !dbg !945
  %119 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !946
  %idx8wc2c = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %119, i32 0, i32 3, !dbg !947
  %arraydecay131 = getelementptr inbounds [38 x i8], [38 x i8]* %idx8wc2c, i64 0, i64 0, !dbg !946
  %120 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !948
  %idx8wc2c132 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %120, i32 0, i32 18, !dbg !949
  store i8* %arraydecay131, i8** %idx8wc2c132, align 8, !dbg !950
  %121 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !951
  %__ctype_b_data = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %121, i32 0, i32 3, !dbg !952
  %arraydecay133 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data, i64 0, i64 0, !dbg !951
  %122 = bitcast i16* %arraydecay133 to i8*, !dbg !951
  %123 = load i16*, i16** @__C_ctype_b, align 8, !dbg !953
  %add.ptr134 = getelementptr inbounds i16, i16* %123, i64 -128, !dbg !954
  %124 = bitcast i16* %add.ptr134 to i8*, !dbg !953
  %call135 = call i8* @memcpy(i8* %122, i8* %124, i64 768) #11, !dbg !955
  %125 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !956
  %__ctype_tolower_data = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %125, i32 0, i32 4, !dbg !957
  %arraydecay136 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data, i64 0, i64 0, !dbg !956
  %126 = bitcast i16* %arraydecay136 to i8*, !dbg !956
  %127 = load i16*, i16** @__C_ctype_tolower, align 8, !dbg !958
  %add.ptr137 = getelementptr inbounds i16, i16* %127, i64 -128, !dbg !959
  %128 = bitcast i16* %add.ptr137 to i8*, !dbg !958
  %call138 = call i8* @memcpy(i8* %126, i8* %128, i64 768) #11, !dbg !960
  %129 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !961
  %__ctype_toupper_data = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %129, i32 0, i32 5, !dbg !962
stack: Num.257
//Instructions in stack: Num.258
//Instructions in stack: Num.259
//Instructions in stack: Num.260
//Instructions in stack: Num.261
//Instructions in stack: Num.262
//Instructions in stack: Num.263
//Instructions in stack: Num.264
//Instructions in stack: Num.265
//Instructions in stack: Num.266
//Instructions in stack: Num.267
//Instructions in stack: Num.268
//Instructions in stack: Num.269
//Instructions in stack: Num.270
//Instructions in stack: Num.271
//Instructions in stack: Num.272
//Instructions in stack: Num.273
//Instructions in stack: Num.274
//Instructions in stack: Num.275
//Instructions in stack: Num.276
//Instructions in stack: Num.277
//Instructions in stack: Num.278
//Instructions in stack: Num.279
//Instructions in stack: Num.280
//Instructions in stack: Num.281
//Instructions in stack: Num.282
//Instructions in stack: Num.283
//Instructions in stack: Num.284
//Instructions in stack: Num.285
//Instructions in stack: Num.286
//Instructions in stack: Num.287
//Instructions in stack: Num.288
//Instructions in stack: Num.289
//Instructions in stack: Num.290
//Instructions in stack: Num.291
//Instructions in stack: Num.292
//Instructions in stack: Num.293
//Instructions in stack: Num.294
//Instructions in stack: Num.295
//Instructions in stack: Num.296
//Instructions in stack: Num.297
//Instructions in stack: Num.298
//Instructions in stack: Num.299
//Instructions in stack: Num.300
//Instructions in stack: Num.301
//Instructions in stack: Num.302
//Instructions in stack: Num.303
//Instructions in stack: Num.304
//Instructions in stack: Num.305
//Instructions in stack: Num.306
//Instructions in stack: Num.307
//Instructions in stack: Num.308
//Instructions in stack: Num.309
//Instructions in stack: Num.310
//Instructions in stack: Num.311
//Instructions in stack: Num.312
//Instructions in stack: Num.313
//Instructions in stack: Num.314
//Instructions in stack: Num.315
//Instructions in stack: Num.316
//Instructions in stack: Num.317
//Instructions in stack: Num.318
//Instructions in stack: Num.319
//Instructions in stack: Num.320
//Instructions in stack: Num.321
//Instructions in stack: Num.322
//Instructions in stack: Num.323
//Instructions in stack: Num.324
//Instructions in stack: Num.325
//Instructions in stack: Num.326
//Instructions in stack: Num.327
//Instructions in stack: Num.328
//Instructions in stack: Num.329
//Instructions in stack: Num.330
//Instructions in stack: Num.331
//Instructions in stack: Num.332
//Instructions in stack: Num.333
//Instructions in stack: Num.334
//Instructions in stack: Num.335
//Instructions in stack: Num.336
//Instructions in stack: Num.337
//Instructions in stack: Num.338
//Instructions in stack: Num.339
//Instructions in stack: Num.340
//Instructions in stack: Num.341
//Instructions in stack: Num.342
//Instructions in stack: Num.343
//Instructions in stack: Num.344
//Instructions in stack: Num.345
//Instructions in stack: Num.346
//Instructions in stack: Num.347
//Instructions in stack: Num.348
//Instructions in stack: Num.349
//Instructions in stack: Num.350
//Instructions in stack: Num.351
//Instructions in stack: Num.352
//Instructions in stack: Num.353
//Instructions in stack: Num.354
//Instructions in stack: Num.355
//Instructions in stack: Num.356
//Instructions in stack: Num.357
//Instructions in stack: Num.358
//Instructions in stack: Num.359
//Instructions in stack: Num.360
//Instructions in stack: Num.361
//Instructions in stack: Num.362
//Instructions in stack: Num.363
//Instructions in stack: Num.364
//Instructions in stack: Num.365
//Instructions in stack: Num.366
//Instructions in stack: Num.367
//Instructions in stack: Num.368
//Instructions in stack: Num.369
//Instructions in stack: Num.370
//Instructions in stack: Num.371
//Instructions in stack: Num.372
//Instructions in stack: Num.373
//Instructions in stack: Num.374
//Instructions in stack: Num.375
//Instructions in stack: Num.376
//Instructions in stack: Num.377
//Instructions in stack: Num.378
//Instructions in stack: Num.379
//Instructions in stack: Num.380
//Instructions in stac  %arraydecay139 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data, i64 0, i64 0, !dbg !961
  %130 = bitcast i16* %arraydecay139 to i8*, !dbg !961
  %131 = load i16*, i16** @__C_ctype_toupper, align 8, !dbg !963
  %add.ptr140 = getelementptr inbounds i16, i16* %131, i64 -128, !dbg !964
  %132 = bitcast i16* %add.ptr140 to i8*, !dbg !963
  %call141 = call i8* @memcpy(i8* %130, i8* %132, i64 768) #11, !dbg !965
  call void @llvm.dbg.declare(metadata i32* %u, metadata !1366, metadata !DIExpression()), !dbg !1368
  call void @llvm.dbg.declare(metadata i16* %m, metadata !1369, metadata !DIExpression()), !dbg !1370
  store i32 0, i32* %u, align 4, !dbg !971
  br label %for.cond142, !dbg !973
  %133 = load i32, i32* %u, align 4, !dbg !974
  %cmp143 = icmp slt i32 %133, 128, !dbg !976
  br i1 %cmp143, label %for.body145, label %for.end270, !dbg !977
  %134 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !978
  %tbl8ctype = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %134, i32 0, i32 13, !dbg !980
  %135 = load i8*, i8** %tbl8ctype, align 8, !dbg !980
  %136 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !981
  %idx8ctype146 = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %136, i32 0, i32 0, !dbg !982
  %137 = load i32, i32* %u, align 4, !dbg !983
  %shr = ashr i32 %137, 3, !dbg !984
  %idxprom147 = sext i32 %shr to i64, !dbg !981
  %arrayidx148 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8ctype146, i64 0, i64 %idxprom147, !dbg !981
  %138 = load i8, i8* %arrayidx148, align 1, !dbg !981
  %conv149 = zext i8 %138 to i32, !dbg !985
  %shl150 = shl i32 %conv149, 2, !dbg !986
  %139 = load i32, i32* %u, align 4, !dbg !987
  %and151 = and i32 %139, 7, !dbg !988
  %shr152 = ashr i32 %and151, 1, !dbg !989
  %add153 = add nsw i32 %shl150, %shr152, !dbg !990
  %idxprom154 = sext i32 %add153 to i64, !dbg !978
  %arrayidx155 = getelementptr inbounds i8, i8* %135, i64 %idxprom154, !dbg !978
  %140 = load i8, i8* %arrayidx155, align 1, !dbg !978
  %conv156 = zext i8 %140 to i32, !dbg !978
  store i32 %conv156, i32* %c, align 4, !dbg !991
  %141 = load i32, i32* %u, align 4, !dbg !992
  %and157 = and i32 %141, 1, !dbg !993
  %tobool158 = icmp ne i32 %and157, 0, !dbg !993
  br i1 %tobool158, label %cond.true, label %cond.false, !dbg !994
  %142 = load i32, i32* %c, align 4, !dbg !995
  %shr159 = ashr i32 %142, 4, !dbg !996
  br label %cond.end, !dbg !994
  %143 = load i32, i32* %c, align 4, !dbg !997
  %and160 = and i32 %143, 15, !dbg !998
  br label %cond.end, !dbg !994
  %cond = phi i32 [ %shr159, %cond.true ], [ %and160, %cond.false ], !dbg !994
  store i32 %cond, i32* %c, align 4, !dbg !999
  %144 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1000
  %code2flag = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %144, i32 0, i32 20, !dbg !1001
  %145 = load i16*, i16** %code2flag, align 8, !dbg !1001
  %146 = load i32, i32* %c, align 4, !dbg !1002
  %idxprom161 = sext i32 %146 to i64, !dbg !1000
  %arrayidx162 = getelementptr inbounds i16, i16* %145, i64 %idxprom161, !dbg !1000
  %147 = load i16, i16* %arrayidx162, align 2, !dbg !1000
  store i16 %147, i16* %m, align 2, !dbg !1003
  %148 = load i16, i16* %m, align 2, !dbg !1004
  %149 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1005
  %__ctype_b_data163 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %149, i32 0, i32 3, !dbg !1006
  %150 = load i32, i32* %u, align 4, !dbg !1007
  %add164 = add nsw i32 256, %150, !dbg !1008
  %idxprom165 = sext i32 %add164 to i64, !dbg !1005
  %arrayidx166 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data163, i64 0, i64 %idxprom165, !dbg !1005
  store i16 %148, i16* %arrayidx166, align 2, !dbg !1009
  %151 = load i32, i32* %u, align 4, !dbg !1010
  %add167 = add nsw i32 128, %151, !dbg !1012
  %conv168 = trunc i32 %add167 to i8, !dbg !1013
  %conv169 = sext i8 %conv168 to i32, !dbg !1014
  %cmp170 = icmp ne i32 %conv169, -1, !dbg !1015
  br i1 %cmp170, label %if.then172, label %if.end180, !dbg !1016
  %152 = load i16, i16* %m, align 2, !dbg !1017
  %153 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1019
  %__ctype_b_data173 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %153, i32 0, i32 3, !dbg !1020
  %154 = load i32, i32* %u, align 4, !dbg !1021
  %add174 = add nsw i32 128, %154, !dbg !1022
  %conv175 = trunc i32 %add174 to i8, !dbg !1023
  %conv176 = sext i8 %conv175 to i32, !dbg !1024
  %add177 = add nsw i32 128, %conv176, !dbg !1025
  %idxprom178 = sext i32 %add177 to i64, !dbg !1019
  %arrayidx179 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data173, i64 0, i64 %idxprom178, !dbg !1019
  store i16 %152, i16* %arrayidx179, align 2, !dbg !1026
  br label %if.end180, !dbg !1027
  %155 = load i32, i32* %u, align 4, !dbg !1028
  %add181 = add nsw i32 128, %155, !dbg !1029
  %conv182 = trunc i32 %add181 to i16, !dbg !1030
  %156 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1031
  %__ctype_tolower_data183 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %156, i32 0, i32 4, !dbg !1032
  %157 = load i32, i32* %u, align 4, !dbg !1033
  %add184 = add nsw i32 256, %157, !dbg !1034
  %idxprom185 = sext i32 %add184 to i64, !dbg !1031
  %arrayidx186 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data183, i64 0, i64 %idxprom185, !dbg !1031
  store i16 %conv182, i16* %arrayidx186, align 2, !dbg !1035
  %158 = load i32, i32* %u, align 4, !dbg !1036
  %add187 = add nsw i32 128, %158, !dbg !1037
  %conv188 = trunc i32 %add187 to i16, !dbg !1038
  %159 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1039
  %__ctype_toupper_data189 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %159, i32 0, i32 5, !dbg !1040
  %160 = load i32, i32* %u, align 4, !dbg !1041
  %add190 = add nsw i32 256, %160, !dbg !1042
  %idxprom191 = sext i32 %add190 to i64, !dbg !1039
  %arrayidx192 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data189, i64 0, i64 %idxprom191, !dbg !1039
  store i16 %conv188, i16* %arrayidx192, align 2, !dbg !1043
  %161 = load i16, i16* %m, align 2, !dbg !1044
  %conv193 = zext i16 %161 to i32, !dbg !1044
  %and194 = and i32 %conv193, 768, !dbg !1046
  %tobool195 = icmp ne i32 %and194, 0, !dbg !1046
  br i1 %tobool195, label %if.then196, label %if.end267, !dbg !1047
  %162 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1048
  %tbl8uplow = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %162, i32 0, i32 15, !dbg !1050
  %163 = load i8*, i8** %tbl8uplow, align 8, !dbg !1050
  %164 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !1051
  %idx8uplow197 = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %164, i32 0, i32 1, !dbg !1052
  %165 = load i32, i32* %u, align 4, !dbg !1053
  %shr198 = ashr i32 %165, 3, !dbg !1054
  %idxprom199 = sext i32 %shr198 to i64, !dbg !1051
  %arrayidx200 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8uplow197, i64 0, i64 %idxprom199, !dbg !1051
  %166 = load i8, i8* %arrayidx200, align 1, !dbg !1051
  %conv201 = zext i8 %166 to i32, !dbg !1055
  %shl202 = shl i32 %conv201, 3, !dbg !1056
  %167 = load i32, i32* %u, align 4, !dbg !1057
  %add203 = add nsw i32 128, %167, !dbg !1058
  %and204 = and i32 %add203, 7, !dbg !1059
  %add205 = add nsw i32 %shl202, %and204, !dbg !1060
  %idxprom206 = sext i32 %add205 to i64, !dbg !1048
  %arrayidx207 = getelementptr inbounds i8, i8* %163, i64 %idxprom206, !dbg !1048
  %168 = load i8, i8* %arrayidx207, align 1, !dbg !1048
k: Num.381
//Instructions in stack: Num.382
//Instructions in stack: Num.383
//Instructions in stack: Num.384
//Instructions in stack: Num.385
//Instructions in stack: Num.386
//Instructions in stack: Num.387
//Instructions in stack: Num.388
//Instructions in stack: Num.389
//Instructions in stack: Num.390
//Instructions in stack: Num.391
//Instructions in stack: Num.392
//Instructions in stack: Num.393
//Instructions in stack: Num.394
//Instructions in stack: Num.395
//Instructions in stack: Num.396
//Instructions in stack: Num.397
//Instructions in stack: Num.398
//Instructions in stack: Num.399
//Instructions in stack: Num.400
//Instructions in stack: Num.401
//Instructions in stack: Num.402
//Instructions in stack: Num.403
//Instructions in stack: Num.404
//Instructions in stack: Num.405
//Instructions in stack: Num.406
//Instructions in stack: Num.407
//Instructions in stack: Num.408
//Instructions in stack: Num.409
//Instructions in stack: Num.410
//Instructions in stack: Num.411
//Instructions in stack: Num.412
//Instructions in stack: Num.413
//Instructions in stack: Num.414
//Instructions in stack: Num.415
//Instructions in stack: Num.416
//Instructions in stack: Num.417
//Instructions in stack: Num.418
//Instructions in stack: Num.419
//Instructions in stack: Num.420
//Instructions in stack: Num.421
//Instructions in stack: Num.422
//Instructions in stack: Num.423
//Instructions in stack: Num.424
//Instructions in stack: Num.425
//Instructions in stack: Num.426
//Instructions in stack: Num.427
//Instructions in stack: Num.428
//Instructions in stack: Num.429
//Instructions in stack: Num.430
//Instructions in stack: Num.431
//Instructions in stack: Num.432
//Instructions in stack: Num.433
//Instructions in stack: Num.434
//Instructions in stack: Num.435
//Instructions in stack: Num.436
//Instructions in stack: Num.437
//Instructions in stack: Num.438
//Instructions in stack: Num.439
//Instructions in stack: Num.440
//Instructions in stack: Num.441
//Instructions in stack: Num.442
//Instructions in stack: Num.443
//Instructions in stack: Num.444
//Instructions in stack: Num.445
//Instructions in stack: Num.446
//Instructions in stack: Num.447
//Instructions in stack: Num.448
//Instructions in stack: Num.449
//Instructions in stack: Num.450
//Instructions in stack: Num.451
//Instructions in stack: Num.452
//Instructions in stack: Num.453
//Instructions in stack: Num.454
//Instructions in stack: Num.455
//Instructions in stack: Num.456
//Instructions in stack: Num.457
//Instructions in stack: Num.458
//Instructions in stack: Num.459
//Instructions in stack: Num.460
//Instructions in stack: Num.461
//Instructions in stack: Num.462
//Instructions in stack: Num.463
//Instructions in stack: Num.464
//Instructions in stack: Num.465
//Instructions in stack: Num.466
//Instructions in stack: Num.467
//Instructions in stack: Num.468
//Instructions in stack: Num.469
//Instructions in stack: Num.470
//Instructions in stack: Num.471
//Instructions in stack: Num.472
//Instructions in stack: Num.473
//Instructions in stack: Num.474
//Instructions in stack: Num.475
//Instructions in stack: Num.476
//Instructions in stack: Num.477
//Instructions in stack: Num.478
//Instructions in stack: Num.479
//Instructions in stack: Num.480
//Instructions in stack: Num.481
//Instructions in stack: Num.482
//Instructions in stack: Num.483
//Instructions in stack: Num.484
//Instructions in stack: Num.485
//Instructions in stack: Num.486
//Instructions in stack: Num.487
//Instructions in stack: Num.488
//Instructions in stack: Num.489
//Instructions in stack: Num.490
//Instructions in stack: Num.491
//Instructions in stack: Num.492
//Instructions in stack: Num.493
//Instructions in stack: Num.494
//Instructions in stack: Num.495
//Instructions in stack: Num.496
//Instructions in stack: Num.497
//Instructions in stack: Num.498
//Instructions in stack: Num.499
//Instructions in stack: Num.500
//Instructions in stack: Num.501
//Instructions in stack: Num.502
//Instructions in stack: Num.503
//Instructions in stack: Num.504
//Instructions in stack: N  %conv208 = zext i8 %168 to i32, !dbg !1048
  store i32 %conv208, i32* %c, align 4, !dbg !1061
  %169 = load i16, i16* %m, align 2, !dbg !1062
  %conv209 = zext i16 %169 to i32, !dbg !1062
  %and210 = and i32 %conv209, 512, !dbg !1064
  %tobool211 = icmp ne i32 %and210, 0, !dbg !1064
  br i1 %tobool211, label %if.then212, label %if.else239, !dbg !1065
  %170 = load i32, i32* %u, align 4, !dbg !1066
  %add213 = add nsw i32 128, %170, !dbg !1068
  %171 = load i32, i32* %c, align 4, !dbg !1069
  %add214 = add nsw i32 %add213, %171, !dbg !1070
  %conv215 = trunc i32 %add214 to i8, !dbg !1071
  %conv216 = zext i8 %conv215 to i16, !dbg !1071
  %172 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1072
  %__ctype_toupper_data217 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %172, i32 0, i32 5, !dbg !1073
  %173 = load i32, i32* %u, align 4, !dbg !1074
  %add218 = add nsw i32 256, %173, !dbg !1075
  %idxprom219 = sext i32 %add218 to i64, !dbg !1072
  %arrayidx220 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data217, i64 0, i64 %idxprom219, !dbg !1072
  store i16 %conv216, i16* %arrayidx220, align 2, !dbg !1076
  %174 = load i32, i32* %u, align 4, !dbg !1077
  %add221 = add nsw i32 128, %174, !dbg !1079
  %conv222 = trunc i32 %add221 to i8, !dbg !1080
  %conv223 = sext i8 %conv222 to i32, !dbg !1081
  %cmp224 = icmp ne i32 %conv223, -1, !dbg !1082
  br i1 %cmp224, label %if.then226, label %if.end238, !dbg !1083
  %175 = load i32, i32* %u, align 4, !dbg !1084
  %add227 = add nsw i32 128, %175, !dbg !1086
  %176 = load i32, i32* %c, align 4, !dbg !1087
  %add228 = add nsw i32 %add227, %176, !dbg !1088
  %conv229 = trunc i32 %add228 to i8, !dbg !1089
  %conv230 = zext i8 %conv229 to i16, !dbg !1089
  %177 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1090
  %__ctype_toupper_data231 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %177, i32 0, i32 5, !dbg !1091
  %178 = load i32, i32* %u, align 4, !dbg !1092
  %add232 = add nsw i32 128, %178, !dbg !1093
  %conv233 = trunc i32 %add232 to i8, !dbg !1094
  %conv234 = sext i8 %conv233 to i32, !dbg !1095
  %add235 = add nsw i32 128, %conv234, !dbg !1096
  %idxprom236 = sext i32 %add235 to i64, !dbg !1090
  %arrayidx237 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data231, i64 0, i64 %idxprom236, !dbg !1090
  store i16 %conv230, i16* %arrayidx237, align 2, !dbg !1097
  br label %if.end238, !dbg !1098
  br label %if.end266, !dbg !1099
  %179 = load i32, i32* %u, align 4, !dbg !1100
  %add240 = add nsw i32 128, %179, !dbg !1102
  %180 = load i32, i32* %c, align 4, !dbg !1103
  %sub241 = sub nsw i32 %add240, %180, !dbg !1104
  %conv242 = trunc i32 %sub241 to i8, !dbg !1105
  %conv243 = zext i8 %conv242 to i16, !dbg !1105
  %181 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1106
  %__ctype_tolower_data244 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %181, i32 0, i32 4, !dbg !1107
  %182 = load i32, i32* %u, align 4, !dbg !1108
  %add245 = add nsw i32 256, %182, !dbg !1109
  %idxprom246 = sext i32 %add245 to i64, !dbg !1106
  %arrayidx247 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data244, i64 0, i64 %idxprom246, !dbg !1106
  store i16 %conv243, i16* %arrayidx247, align 2, !dbg !1110
  %183 = load i32, i32* %u, align 4, !dbg !1111
  %add248 = add nsw i32 128, %183, !dbg !1113
  %conv249 = trunc i32 %add248 to i8, !dbg !1114
  %conv250 = sext i8 %conv249 to i32, !dbg !1115
  %cmp251 = icmp ne i32 %conv250, -1, !dbg !1116
  br i1 %cmp251, label %if.then253, label %if.end265, !dbg !1117
  %184 = load i32, i32* %u, align 4, !dbg !1118
  %add254 = add nsw i32 128, %184, !dbg !1120
  %185 = load i32, i32* %c, align 4, !dbg !1121
  %sub255 = sub nsw i32 %add254, %185, !dbg !1122
  %conv256 = trunc i32 %sub255 to i8, !dbg !1123
  %conv257 = zext i8 %conv256 to i16, !dbg !1123
  %186 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1124
  %__ctype_tolower_data258 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %186, i32 0, i32 4, !dbg !1125
  %187 = load i32, i32* %u, align 4, !dbg !1126
  %add259 = add nsw i32 128, %187, !dbg !1127
  %conv260 = trunc i32 %add259 to i8, !dbg !1128
  %conv261 = sext i8 %conv260 to i32, !dbg !1129
  %add262 = add nsw i32 128, %conv261, !dbg !1130
  %idxprom263 = sext i32 %add262 to i64, !dbg !1124
  %arrayidx264 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data258, i64 0, i64 %idxprom263, !dbg !1124
  store i16 %conv257, i16* %arrayidx264, align 2, !dbg !1131
  br label %if.end265, !dbg !1132
  br label %if.end266
  br label %if.end267, !dbg !1133
  br label %for.inc268, !dbg !1134
  %188 = load i32, i32* %u, align 4, !dbg !1135
  %inc269 = add nsw i32 %188, 1, !dbg !1135
  store i32 %inc269, i32* %u, align 4, !dbg !1135
  br label %for.cond142, !dbg !1136, !llvm.loop !1137
  %189 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1139
  %__ctype_b_data271 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %189, i32 0, i32 3, !dbg !1140
  %arraydecay272 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data271, i64 0, i64 0, !dbg !1139
  %add.ptr273 = getelementptr inbounds i16, i16* %arraydecay272, i64 128, !dbg !1141
  %190 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1142
  %__ctype_b = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %190, i32 0, i32 0, !dbg !1143
  store i16* %add.ptr273, i16** %__ctype_b, align 8, !dbg !1144
  %191 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1145
  %__ctype_tolower_data274 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %191, i32 0, i32 4, !dbg !1146
  %arraydecay275 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data274, i64 0, i64 0, !dbg !1145
  %add.ptr276 = getelementptr inbounds i16, i16* %arraydecay275, i64 128, !dbg !1147
  %192 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1148
  %__ctype_tolower = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %192, i32 0, i32 1, !dbg !1149
  store i16* %add.ptr276, i16** %__ctype_tolower, align 8, !dbg !1150
  %193 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1151
  %__ctype_toupper_data277 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %193, i32 0, i32 5, !dbg !1152
  %arraydecay278 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data277, i64 0, i64 0, !dbg !1151
  %add.ptr279 = getelementptr inbounds i16, i16* %arraydecay278, i64 128, !dbg !1153
  %194 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1154
  %__ctype_toupper = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %194, i32 0, i32 2, !dbg !1155
  store i16* %add.ptr279, i16** %__ctype_toupper, align 8, !dbg !1156
  br label %if.end280
  %195 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1157
  %outdigit_length = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %195, i32 0, i32 11, !dbg !1158
  %arraydecay281 = getelementptr inbounds [10 x i8], [10 x i8]* %outdigit_length, i64 0, i64 0, !dbg !1157
  store i8* %arraydecay281, i8** %d, align 8, !dbg !1159
  %196 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1160
  %outdigit0_mb = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %196, i32 0, i32 28, !dbg !1161
  store i8** %outdigit0_mb, i8*** %x, align 8, !dbg !1162
  store i32 0, i32* %c, align 4, !dbg !1163
  br label %for.cond282, !dbg !1165
  %197 = load i32, i32* %c, align 4, !dbg !1166
  %cmp283 = icmp slt i32 %197, 10, !dbg !1168
  br i1 %cmp283, label %for.body285, label %for.end294, !dbg !1169
  %198 = load i8**, i8*** %x, align 8, !dbg !1170
  %199 = load i32, i32* %c, align 4, !dbg !1172
  %idxprom286 = sext i32 %199 to i64, !dbg !1170
um.505
//Instructions in stack: Num.506
//Instructions in stack: Num.507
//Instructions in stack: Num.508
//Instructions in stack: Num.509
//Instructions in stack: Num.510
//Instructions in stack: Num.511
//Instructions in stack: Num.512
//Instructions in stack: Num.513
//Instructions in stack: Num.514
//Instructions in stack: Num.515
//Instructions in stack: Num.516
//Instructions in stack: Num.517
//Instructions in stack: Num.518
//Instructions in stack: Num.519
//Instructions in stack: Num.520
//Instructions in stack: Num.521
//Instructions in stack: Num.522
//Instructions in stack: Num.523
//Instructions in stack: Num.524
//Instructions in stack: Num.525
//Instructions in stack: Num.526
//Instructions in stack: Num.527
//Instructions in stack: Num.528
//Instructions in stack: Num.529
//Instructions in stack: Num.530
//Instructions in stack: Num.531
//Instructions in stack: Num.532
//Instructions in stack: Num.533
//Instructions in stack: Num.534
//Instructions in stack: Num.535
//Instructions in stack: Num.536
//Instructions in stack: Num.537
//Instructions in stack: Num.538
//Instructions in stack: Num.539
//Instructions in stack: Num.540
//Instructions in stack: Num.541
//Instructions in stack: Num.542
//Instructions in stack: Num.543
//Instructions in stack: Num.544
//Instructions in stack: Num.545
//Instructions in stack: Num.546
//Instructions in stack: Num.547
//Instructions in stack: Num.548
//Instructions in stack: Num.549
//Instructions in stack: Num.550
//Instructions in stack: Num.551
//Instructions in stack: Num.552
//Instructions in stack: Num.553
//Instructions in stack: Num.554
//Instructions in stack: Num.555
//Instructions in stack: Num.556
//Instructions in stack: Num.557
//Instructions in stack: Num.558
//Instructions in stack: Num.559
//Instructions in stack: Num.560
//Instructions in stack: Num.561
//Instructions in stack: Num.562
//Instructions in stack: Num.563
//Instructions in stack: Num.564
//Instructions in stack: Num.565
//Instructions in stack: Num.566
//Instructions in stack: Num.567
//Instructions in stack: Num.568
//Instructions in stack: Num.569
//Instructions in stack: Num.570
//Instructions in stack: Num.571
//Instructions in stack: Num.572
//Instructions in stack: Num.573
//Instructions in stack: Num.574
//Instructions in stack: Num.575
//Instructions in stack: Num.576
//Instructions in stack: Num.577
//Instructions in stack: Num.578
//Instructions in stack: Num.579
//Instructions in stack: Num.580
//Instructions in stack: Num.581
//Instructions in stack: Num.582
//Instructions in stack: Num.583
//Instructions in stack: Num.584
//Instructions in stack: Num.585
//Instructions in stack: Num.586
//Instructions in stack: Num.587
//Instructions in stack: Num.588
//Instructions in stack: Num.589
//Instructions in stack: Num.590
//Instructions in stack: Num.591
//Instructions in stack: Num.592
//Instructions in stack: Num.593
//Instructions in stack: Num.594
//Instructions in stack: Num.595
//Instructions in stack: Num.596
//Instructions in stack: Num.597
//Instructions in stack: Num.598
//Instructions in stack: Num.599
//Instructions in stack: Num.600
//Instructions in stack: Num.601
//Instructions in stack: Num.602
//Instructions in stack: Num.603
//Instructions in stack: Num.604
//Instructions in stack: Num.605
//Instructions in stack: Num.606
//Instructions in stack: Num.607
//Instructions in stack: Num.608
//Instructions in stack: Num.609
//Instructions in stack: Num.610
//Instructions in stack: Num.611
//Instructions in stack: Num.612
//Instructions in stack: Num.613
//Instructions in stack: Num.614
//Instructions in stack: Num.615
//Instructions in stack: Num.616
//Instructions in stack: Num.617
//Instructions in stack: Num.618
//Instructions in stack: Num.619
//Instructions in stack: Num.620
//Instructions in stack: Num.621
//Instructions in stack: Num.622
//Instructions in stack: Num.623
//Instructions in stack: Num.624
//Instructions in stack: Num.625
//Instructions in stack: Num.626
//Instructions in stack: Num.627
//Instructions in stack: Num.628
//Instructions in stack: Num.6  %arrayidx287 = getelementptr inbounds i8*, i8** %198, i64 %idxprom286, !dbg !1170
  %200 = load i8*, i8** %arrayidx287, align 8, !dbg !1170
  %call288 = call i64 @strlen(i8* %200) #12, !dbg !1173
  %conv289 = trunc i64 %call288 to i8, !dbg !1173
  %201 = load i8*, i8** %d, align 8, !dbg !1174
  %202 = load i32, i32* %c, align 4, !dbg !1175
  %idxprom290 = sext i32 %202 to i64, !dbg !1176
  %arrayidx291 = getelementptr inbounds i8, i8* %201, i64 %idxprom290, !dbg !1176
  store i8 %conv289, i8* %arrayidx291, align 1, !dbg !1177
  br label %for.inc292, !dbg !1178
  %203 = load i32, i32* %c, align 4, !dbg !1179
  %inc293 = add nsw i32 %203, 1, !dbg !1179
  store i32 %inc293, i32* %c, align 4, !dbg !1179
  br label %for.cond282, !dbg !1180, !llvm.loop !1181
  br label %if.end312, !dbg !1183
  %204 = load i32, i32* %i, align 4, !dbg !1184
  %cmp296 = icmp eq i32 %204, 1, !dbg !1186
  br i1 %cmp296, label %if.then298, label %if.end311, !dbg !1187
  %205 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1188
  %decimal_point_wc = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %205, i32 0, i32 24, !dbg !1190
  %206 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1191
  %decimal_point = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %206, i32 0, i32 39, !dbg !1192
  %207 = load i8*, i8** %decimal_point, align 8, !dbg !1192
  %208 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1193
  %call299 = call i32 @__locale_mbrtowc_l(i32* %decimal_point_wc, i8* %207, %struct.__uclibc_locale_struct.160* %208) #10, !dbg !1194
  %209 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1195
  %decimal_point_len = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %209, i32 0, i32 26, !dbg !1196
  store i32 %call299, i32* %decimal_point_len, align 8, !dbg !1197
  %210 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1198
  %grouping = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %210, i32 0, i32 41, !dbg !1200
  %211 = load i8*, i8** %grouping, align 8, !dbg !1200
  %212 = load i8, i8* %211, align 1, !dbg !1201
  %tobool300 = icmp ne i8 %212, 0, !dbg !1201
  br i1 %tobool300, label %if.then301, label %if.end310, !dbg !1202
  %213 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1203
  %thousands_sep_wc = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %213, i32 0, i32 25, !dbg !1205
  %214 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1206
  %thousands_sep = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %214, i32 0, i32 40, !dbg !1207
  %215 = load i8*, i8** %thousands_sep, align 8, !dbg !1207
  %216 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1208
  %call302 = call i32 @__locale_mbrtowc_l(i32* %thousands_sep_wc, i8* %215, %struct.__uclibc_locale_struct.160* %216) #10, !dbg !1209
  %217 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1210
  %thousands_sep_len = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %217, i32 0, i32 27, !dbg !1211
  store i32 %call302, i32* %thousands_sep_len, align 4, !dbg !1212
  %218 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1213
  %thousands_sep_len303 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %218, i32 0, i32 27, !dbg !1215
  %219 = load i32, i32* %thousands_sep_len303, align 4, !dbg !1215
  %cmp304 = icmp eq i32 %219, 0, !dbg !1216
  br i1 %cmp304, label %if.then306, label %if.end309, !dbg !1217
  %220 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1218
  %thousands_sep307 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %220, i32 0, i32 40, !dbg !1220
  %221 = load i8*, i8** %thousands_sep307, align 8, !dbg !1220
  %222 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1221
  %grouping308 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %222, i32 0, i32 41, !dbg !1222
  store i8* %221, i8** %grouping308, align 8, !dbg !1223
  br label %if.end309, !dbg !1224
  br label %if.end310, !dbg !1225
  br label %if.end311, !dbg !1226
  br label %if.end312
  br label %if.end313, !dbg !1227
  %223 = load i32, i32* %i, align 4, !dbg !1228
  %inc314 = add nsw i32 %223, 1, !dbg !1228
  store i32 %inc314, i32* %i, align 4, !dbg !1228
  %224 = load i8*, i8** %p.addr, align 8, !dbg !1229
  %add.ptr315 = getelementptr inbounds i8, i8* %224, i64 2, !dbg !1229
  store i8* %add.ptr315, i8** %p.addr, align 8, !dbg !1229
  %225 = load i8*, i8** %s, align 8, !dbg !1230
  %add.ptr316 = getelementptr inbounds i8, i8* %225, i64 2, !dbg !1230
  store i8* %add.ptr316, i8** %s, align 8, !dbg !1230
  br label %do.cond, !dbg !1231
  %226 = load i32, i32* %i, align 4, !dbg !1232
  %cmp317 = icmp slt i32 %226, 6, !dbg !1233
  br i1 %cmp317, label %do.body, label %do.end, !dbg !1231, !llvm.loop !1234
  store i32 1, i32* %retval, align 4, !dbg !1236
  br label %return, !dbg !1236
  %227 = load i32, i32* %retval, align 4, !dbg !1237
  ret i32 %227, !dbg !1237
  %s.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !2692, metadata !DIExpression()), !dbg !2693
  call void @llvm.dbg.declare(metadata i8** %p, metadata !2694, metadata !DIExpression()), !dbg !2695
  %0 = load i8*, i8** %s.addr, align 8, !dbg !664
  store i8* %0, i8** %p, align 8, !dbg !666
  br label %for.cond, !dbg !667
  %1 = load i8*, i8** %p, align 8, !dbg !668
  %2 = load i8, i8* %1, align 1, !dbg !670
  %tobool = icmp ne i8 %2, 0, !dbg !671
  br i1 %tobool, label %for.body, label %for.end, !dbg !671
  br label %for.inc, !dbg !671
  %3 = load i8*, i8** %p, align 8, !dbg !672
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !672
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !672
  br label %for.cond, !dbg !673, !llvm.loop !674
  %4 = load i8*, i8** %p, align 8, !dbg !676
  %5 = load i8*, i8** %s.addr, align 8, !dbg !677
  %sub.ptr.lhs.cast = ptrtoint i8* %4 to i64, !dbg !678
  %sub.ptr.rhs.cast = ptrtoint i8* %5 to i64, !dbg !678
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !678
  ret i64 %sub.ptr.sub, !dbg !679
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
29
//Instructions in stack: Num.630
//Instructions in stack: Num.631
//Instructions in stack: Num.632
//Instructions in stack: Num.633
//Instructions in stack: Num.634
//Instructions in stack: Num.635
//Instructions in stack: Num.636
//Instructions in stack: Num.637
//Instructions in stack: Num.638
//Instructions in stack: Num.639
//Instructions in stack: Num.640
//Instructions in stack: Num.641
//Instructions in stack: Num.642
//Instructions in stack: Num.643
//Instructions in stack: Num.644
//Instructions in stack: Num.645
//Instructions in stack: Num.646
//Instructions in stack: Num.647
//Instructions in stack: Num.648
//Instructions in stack: Num.649
//Instructions in stack: Num.650
//Instructions in stack: Num.651
//Instructions in stack: Num.652
//Instructions in stack: Num.653
//Instructions in stack: Num.654
//Instructions in stack: Num.655
//Instructions in stack: Num.656
//Instructions in stack: Num.657
//Instructions in stack: Num.658
//Instructions in stack: Num.659
//Instructions in stack: Num.660
//Instructions in stack: Num.661
//Instructions in stack: Num.662
//Instructions in stack: Num.663
//Instructions in stack: Num.664
//Instructions in stack: Num.665
//Instructions in stack: Num.666
//Instructions in stack: Num.667
//Instructions in stack: Num.668
//Instructions in stack: Num.669
//Instructions in stack: Num.670
//Instructions in stack: Num.671
//Instructions in stack: Num.672
//Instructions in stack: Num.673
//Instructions in stack: Num.674
//Instructions in stack: Num.675
//Instructions in stack: Num.676
//Instructions in stack: Num.677
//Instructions in stack: Num.678
//Instructions in stack: Num.679
//Instructions in stack: Num.680
//Instructions in stack: Num.681
//Instructions in stack: Num.682
//Instructions in stack: Num.683
//Instructions in stack: Num.684
//Instructions in stack: Num.685
//Instructions in stack: Num.686
//Instructions in stack: Num.687
//Instructions in stack: Num.688
//Instructions in stack: Num.689
//Instructions in stack: Num.690
//Instructions in stack: Num.691
//Instructions in stack: Num.692
//Instructions in stack: Num.693
//Instructions in stack: Num.694
//Instructions in stack: Num.695
//Instructions in stack: Num.696
//Instructions in stack: Num.697
//Instructions in stack: Num.698
//Instructions in stack: Num.699
//Instructions in stack: Num.700
//Instructions in stack: Num.701
//Instructions in stack: Num.702
//Instructions in stack: Num.703
//Instructions in stack: Num.704
//Instructions in stack: Num.705
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instr  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
uctions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in st  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  %0 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !657
  %tobool = icmp ne i32 %0, 0, !dbg !657
  br i1 %tobool, label %if.then, label %if.end, !dbg !659
  br label %if.end4, !dbg !660
  %1 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  %inc = add nsw i32 %1, 1, !dbg !661
  store i32 %inc, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  store i64 4096, i64* @__pagesize, align 8, !dbg !662
  br i1 true, label %if.then1, label %if.end2, !dbg !663
  call void @_locale_init() #10, !dbg !664
  br label %if.end2, !dbg !664
  br i1 true, label %if.then3, label %if.end4, !dbg !666
  call void @_stdio_init() #10, !dbg !667
  br label %if.end4, !dbg !667
  ret void, !dbg !669
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** @__global_locale, align 8, !dbg !658
  call void @_locale_init_l(%struct.__uclibc_locale_struct.160* %0) #10, !dbg !659
  ret void, !dbg !660
  %base.addr = alloca %struct.__uclibc_locale_struct.160*, align 8
  store %struct.__uclibc_locale_struct.160* %base, %struct.__uclibc_locale_struct.160** %base.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__uclibc_locale_struct.160** %base.addr, metadata !1973, metadata !DIExpression()), !dbg !1974
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !662
  %cur_locale = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %0, i32 0, i32 6, !dbg !663
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale, i64 0, i64 0, !dbg !662
  %call = call i8* @memset(i8* %arraydecay, i32 0, i64 14) #10, !dbg !664
  %1 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !665
  %cur_locale1 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %1, i32 0, i32 6, !dbg !666
  %arrayidx = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale1, i64 0, i64 0, !dbg !665
  store i8 35, i8* %arrayidx, align 8, !dbg !667
  %2 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !668
  %category_item_count = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %2, i32 0, i32 8, !dbg !669
  %arraydecay2 = getelementptr inbounds [6 x i8], [6 x i8]* %category_item_count, i64 0, i64 0, !dbg !668
  %3 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !670
  %lc_common_item_offsets_LEN = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %3, i32 0, i32 29, !dbg !671
  %arraydecay3 = getelementptr inbounds [6 x i8], [6 x i8]* %lc_common_item_offsets_LEN, i64 0, i64 0, !dbg !670
  %call4 = call i8* @memcpy(i8* %arraydecay2, i8* %arraydecay3, i64 6) #10, !dbg !672
  %4 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !673
  %category_item_count5 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %4, i32 0, i32 8, !dbg !674
  %arrayidx6 = getelementptr inbounds [6 x i8], [6 x i8]* %category_item_count5, i64 0, i64 0, !dbg !673
  %5 = load i8, i8* %arrayidx6, align 2, !dbg !675
  %inc = add i8 %5, 1, !dbg !675
  store i8 %inc, i8* %arrayidx6, align 2, !dbg !675
  %6 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !676
  %category_offsets = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %6, i32 0, i32 7, !dbg !677
  %arrayidx7 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets, i64 0, i64 0, !dbg !676
  store i16 2488, i16* %arrayidx7, align 2, !dbg !678
  %7 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !679
  %category_offsets8 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %7, i32 0, i32 7, !dbg !680
  %arrayidx9 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets8, i64 0, i64 1, !dbg !679
  store i16 2576, i16* %arrayidx9, align 2, !dbg !681
  %8 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !682
  %category_offsets10 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %8, i32 0, i32 7, !dbg !683
  %arrayidx11 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets10, i64 0, i64 2, !dbg !682
  store i16 2600, i16* %arrayidx11, align 2, !dbg !684
  %9 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !685
  %category_offsets12 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %9, i32 0, i32 7, !dbg !686
  %arrayidx13 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets12, i64 0, i64 3, !dbg !685
  store i16 2776, i16* %arrayidx13, align 2, !dbg !687
  %10 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !688
  %category_offsets14 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %10, i32 0, i32 7, !dbg !689
  %arrayidx15 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets14, i64 0, i64 5, !dbg !688
  store i16 3176, i16* %arrayidx15, align 2, !dbg !690
  %11 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !691
  %tbl8ctype = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %11, i32 0, i32 0, !dbg !692
  %12 = bitcast [420 x i8]* %tbl8ctype to i8*, !dbg !693
  %13 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !694
  %tbl8ctype16 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %13, i32 0, i32 13, !dbg !695
  store i8* %12, i8** %tbl8ctype16, align 8, !dbg !696
  %14 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !697
  %tbl8uplow = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %14, i32 0, i32 1, !dbg !698
  %15 = bitcast [504 x i8]* %tbl8uplow to i8*, !dbg !699
  %16 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !700
  %tbl8uplow17 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %16, i32 0, i32 15, !dbg !701
  store i8* %15, i8** %tbl8uplow17, align 8, !dbg !702
  %17 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !703
  %tbl8c2wc = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %17, i32 0, i32 2, !dbg !704
  %18 = bitcast [1760 x i16]* %tbl8c2wc to i16*, !dbg !705
  %19 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !706
  %tbl8c2wc18 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %19, i32 0, i32 17, !dbg !707
  store i16* %18, i16** %tbl8c2wc18, align 8, !dbg !708
  %20 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !709
  %tbl8wc2c = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %20, i32 0, i32 3, !dbg !710
  %21 = bitcast [4528 x i8]* %tbl8wc2c to i8*, !dbg !711
  %22 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !712
  %tbl8wc2c19 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %22, i32 0, i32 19, !dbg !713
  store i8* %21, i8** %tbl8wc2c19, align 8, !dbg !714
  %23 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !715
  %tblwctype = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %23, i32 0, i32 4, !dbg !716
  %24 = bitcast [3604 x i8]* %tblwctype to i8*, !dbg !717
ack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//In  %25 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !718
  %tblwctype20 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %25, i32 0, i32 21, !dbg !719
  store i8* %24, i8** %tblwctype20, align 8, !dbg !720
  %26 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !721
  %tblwuplow = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %26, i32 0, i32 5, !dbg !722
  %27 = bitcast [1680 x i8]* %tblwuplow to i8*, !dbg !723
  %28 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !724
  %tblwuplow21 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %28, i32 0, i32 22, !dbg !725
  store i8* %27, i8** %tblwuplow21, align 8, !dbg !726
  %29 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !727
  %tblwuplow_diff = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %29, i32 0, i32 6, !dbg !728
  %30 = bitcast [196 x i16]* %tblwuplow_diff to i16*, !dbg !729
  %31 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !730
  %tblwuplow_diff22 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %31, i32 0, i32 23, !dbg !731
  store i16* %30, i16** %tblwuplow_diff22, align 8, !dbg !732
  %32 = load i16*, i16** @__C_ctype_b, align 8, !dbg !733
  %33 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !734
  %__ctype_b = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %33, i32 0, i32 0, !dbg !735
  store i16* %32, i16** %__ctype_b, align 8, !dbg !736
  %34 = load i16*, i16** @__C_ctype_tolower, align 8, !dbg !737
  %35 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !738
  %__ctype_tolower = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %35, i32 0, i32 1, !dbg !739
  store i16* %34, i16** %__ctype_tolower, align 8, !dbg !740
  %36 = load i16*, i16** @__C_ctype_toupper, align 8, !dbg !741
  %37 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !742
  %__ctype_toupper = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %37, i32 0, i32 2, !dbg !743
  store i16* %36, i16** %__ctype_toupper, align 8, !dbg !744
  %38 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !745
  %code2flag = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %38, i32 0, i32 20, !dbg !746
  store i16* getelementptr inbounds ([16 x i16], [16 x i16]* @__code2flag, i64 0, i64 0), i16** %code2flag, align 8, !dbg !747
  %39 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !748
  %call23 = call i32 @_locale_set_l(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), %struct.__uclibc_locale_struct.160* %39) #11, !dbg !749
  ret void, !dbg !750
  %retval = alloca i32, align 4
  %p.addr = alloca i8*, align 8
  %base.addr = alloca %struct.__uclibc_locale_struct.160*, align 8
  %x = alloca i8**, align 8
  %s = alloca i8*, align 8
  %stp = alloca i64*, align 8
  %r = alloca i8*, align 8
  %io = alloca i16*, align 8
  %ii = alloca i16*, align 8
  %d = alloca i8*, align 8
  %row = alloca i32, align 4
  %crow = alloca i32, align 4
  %len = alloca i32, align 4
  %c = alloca i32, align 4
  %i = alloca i32, align 4
  %newcol = alloca %struct.__collate_t.159, align 8
  %c8b = alloca %struct.__codeset_8_bit_t.161*, align 8
  %u = alloca i32, align 4
  %m = alloca i16, align 2
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !1060, metadata !DIExpression()), !dbg !1061
  store %struct.__uclibc_locale_struct.160* %base, %struct.__uclibc_locale_struct.160** %base.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__uclibc_locale_struct.160** %base.addr, metadata !1062, metadata !DIExpression()), !dbg !1063
  call void @llvm.dbg.declare(metadata i8*** %x, metadata !1064, metadata !DIExpression()), !dbg !1065
  call void @llvm.dbg.declare(metadata i8** %s, metadata !1066, metadata !DIExpression()), !dbg !1067
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !668
  %cur_locale = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %0, i32 0, i32 6, !dbg !669
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale, i64 0, i64 0, !dbg !668
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 1, !dbg !670
  store i8* %add.ptr, i8** %s, align 8, !dbg !667
  call void @llvm.dbg.declare(metadata i64** %stp, metadata !1071, metadata !DIExpression()), !dbg !1074
  call void @llvm.dbg.declare(metadata i8** %r, metadata !1075, metadata !DIExpression()), !dbg !1076
  call void @llvm.dbg.declare(metadata i16** %io, metadata !1077, metadata !DIExpression()), !dbg !1078
  call void @llvm.dbg.declare(metadata i16** %ii, metadata !1079, metadata !DIExpression()), !dbg !1080
  call void @llvm.dbg.declare(metadata i8** %d, metadata !1081, metadata !DIExpression()), !dbg !1082
  call void @llvm.dbg.declare(metadata i32* %row, metadata !1083, metadata !DIExpression()), !dbg !1084
  call void @llvm.dbg.declare(metadata i32* %crow, metadata !1085, metadata !DIExpression()), !dbg !1086
  call void @llvm.dbg.declare(metadata i32* %len, metadata !1087, metadata !DIExpression()), !dbg !1088
  call void @llvm.dbg.declare(metadata i32* %c, metadata !1089, metadata !DIExpression()), !dbg !1090
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1091, metadata !DIExpression()), !dbg !1092
  store i32 0, i32* %i, align 4, !dbg !692
  call void @llvm.dbg.declare(metadata %struct.__collate_t.159* %newcol, metadata !1093, metadata !DIExpression()), !dbg !1094
  %1 = load i8*, i8** %p.addr, align 8, !dbg !695
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i32 1, !dbg !695
  store i8* %incdec.ptr, i8** %p.addr, align 8, !dbg !695
  %index2weight = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %newcol, i32 0, i32 23, !dbg !696
  store i16* null, i16** %index2weight, align 8, !dbg !697
  %2 = load i8*, i8** %p.addr, align 8, !dbg !698
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 8, !dbg !698
  %3 = load i8, i8* %arrayidx, align 1, !dbg !698
  %conv = zext i8 %3 to i32, !dbg !698
  %4 = load i8*, i8** %s, align 8, !dbg !700
  %arrayidx1 = getelementptr inbounds i8, i8* %4, i64 8, !dbg !700
  %5 = load i8, i8* %arrayidx1, align 1, !dbg !700
  %conv2 = zext i8 %5 to i32, !dbg !700
  %cmp = icmp ne i32 %conv, %conv2, !dbg !701
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !702
  %6 = load i8*, i8** %p.addr, align 8, !dbg !703
  %arrayidx4 = getelementptr inbounds i8, i8* %6, i64 9, !dbg !703
  %7 = load i8, i8* %arrayidx4, align 1, !dbg !703
  %conv5 = zext i8 %7 to i32, !dbg !703
  %8 = load i8*, i8** %s, align 8, !dbg !704
  %arrayidx6 = getelementptr inbounds i8, i8* %8, i64 9, !dbg !704
  %9 = load i8, i8* %arrayidx6, align 1, !dbg !704
  %conv7 = zext i8 %9 to i32, !dbg !704
  %cmp8 = icmp ne i32 %conv5, %conv7, !dbg !705
  br i1 %cmp8, label %if.then, label %if.end22, !dbg !706
  %10 = load i8*, i8** %p.addr, align 8, !dbg !707
  %11 = load i8, i8* %10, align 1, !dbg !709
  %conv10 = zext i8 %11 to i32, !dbg !709
  %and = and i32 %conv10, 127, !dbg !710
  %shl = shl i32 %and, 7, !dbg !711
  %12 = load i8*, i8** %p.addr, align 8, !dbg !712
  %arrayidx11 = getelementptr inbounds i8, i8* %12, i64 1, !dbg !712
  %13 = load i8, i8* %arrayidx11, align 1, !dbg !712
  %conv12 = zext i8 %13 to i32, !dbg !712
  %and13 = and i32 %conv12, 127, !dbg !713
  %add = add nsw i32 %shl, %and13, !dbg !714
  store i32 %add, i32* %row, align 4, !dbg !715
  %14 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !716
  %locales = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %14, i32 0, i32 31, !dbg !718
  %15 = load i32, i32* %row, align 4, !dbg !719
  %mul = mul nsw i32 9, %15, !dbg !720
  %add14 = add nsw i32 %mul, 3, !dbg !721
  %add15 = add nsw i32 %add14, 4, !dbg !722
  %idxprom = sext i32 %add15 to i64, !dbg !716
  %arrayidx16 = getelementptr inbounds [2826 x i8], [2826 x i8]* %locales, i64 0, i64 %idxprom, !dbg !716
  %16 = load i8, i8* %arrayidx16, align 1, !dbg !716
  %conv17 = zext i8 %16 to i32, !dbg !716
  %call = call i32 @init_cur_collate(i32 %conv17, %struct.__collate_t.159* %newcol) #10, !dbg !723
  %tobool = icmp ne i32 %call, 0, !dbg !723
  br i1 %tobool, label %if.end, label %if.then18, !dbg !724
  store i32 0, i32* %retval, align 4, !dbg !725
  br label %return, !dbg !725
  %17 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !727
structions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instruct  %collate = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %17, i32 0, i32 118, !dbg !728
  %index2weight19 = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %collate, i32 0, i32 23, !dbg !729
  %18 = load i16*, i16** %index2weight19, align 8, !dbg !729
  %19 = bitcast i16* %18 to i8*, !dbg !727
  call void @free(i8* %19) #11, !dbg !730
  %20 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !731
  %collate20 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %20, i32 0, i32 118, !dbg !732
  %21 = bitcast %struct.__collate_t.159* %collate20 to i8*, !dbg !733
  %22 = bitcast %struct.__collate_t.159* %newcol to i8*, !dbg !734
  %call21 = call i8* @memcpy(i8* %21, i8* %22, i64 112) #11, !dbg !735
  br label %if.end22, !dbg !736
  br label %do.body, !dbg !737
  %23 = load i8*, i8** %p.addr, align 8, !dbg !738
  %24 = load i8, i8* %23, align 1, !dbg !741
  %conv23 = zext i8 %24 to i32, !dbg !741
  %25 = load i8*, i8** %s, align 8, !dbg !742
  %26 = load i8, i8* %25, align 1, !dbg !743
  %conv24 = zext i8 %26 to i32, !dbg !743
  %cmp25 = icmp ne i32 %conv23, %conv24, !dbg !744
  br i1 %cmp25, label %if.then34, label %lor.lhs.false27, !dbg !745
  %27 = load i8*, i8** %p.addr, align 8, !dbg !746
  %arrayidx28 = getelementptr inbounds i8, i8* %27, i64 1, !dbg !746
  %28 = load i8, i8* %arrayidx28, align 1, !dbg !746
  %conv29 = zext i8 %28 to i32, !dbg !746
  %29 = load i8*, i8** %s, align 8, !dbg !747
  %arrayidx30 = getelementptr inbounds i8, i8* %29, i64 1, !dbg !747
  %30 = load i8, i8* %arrayidx30, align 1, !dbg !747
  %conv31 = zext i8 %30 to i32, !dbg !747
  %cmp32 = icmp ne i32 %conv29, %conv31, !dbg !748
  br i1 %cmp32, label %if.then34, label %if.end313, !dbg !749
  %31 = load i8*, i8** %p.addr, align 8, !dbg !750
  %32 = load i8, i8* %31, align 1, !dbg !752
  %conv35 = zext i8 %32 to i32, !dbg !752
  %and36 = and i32 %conv35, 127, !dbg !753
  %shl37 = shl i32 %and36, 7, !dbg !754
  %33 = load i8*, i8** %p.addr, align 8, !dbg !755
  %arrayidx38 = getelementptr inbounds i8, i8* %33, i64 1, !dbg !755
  %34 = load i8, i8* %arrayidx38, align 1, !dbg !755
  %conv39 = zext i8 %34 to i32, !dbg !755
  %and40 = and i32 %conv39, 127, !dbg !756
  %add41 = add nsw i32 %shl37, %and40, !dbg !757
  store i32 %add41, i32* %row, align 4, !dbg !758
  %35 = load i8*, i8** %p.addr, align 8, !dbg !759
  %36 = load i8, i8* %35, align 1, !dbg !760
  %37 = load i8*, i8** %s, align 8, !dbg !761
  store i8 %36, i8* %37, align 1, !dbg !762
  %38 = load i8*, i8** %p.addr, align 8, !dbg !763
  %arrayidx42 = getelementptr inbounds i8, i8* %38, i64 1, !dbg !763
  %39 = load i8, i8* %arrayidx42, align 1, !dbg !763
  %40 = load i8*, i8** %s, align 8, !dbg !764
  %arrayidx43 = getelementptr inbounds i8, i8* %40, i64 1, !dbg !764
  store i8 %39, i8* %arrayidx43, align 1, !dbg !765
  %41 = load i32, i32* %i, align 4, !dbg !766
  %cmp44 = icmp ne i32 %41, 4, !dbg !768
  br i1 %cmp44, label %land.lhs.true, label %if.end92, !dbg !769
  %42 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !770
  %lc_common_item_offsets_LEN = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %42, i32 0, i32 29, !dbg !771
  %43 = load i32, i32* %i, align 4, !dbg !772
  %idxprom46 = sext i32 %43 to i64, !dbg !770
  %arrayidx47 = getelementptr inbounds [6 x i8], [6 x i8]* %lc_common_item_offsets_LEN, i64 0, i64 %idxprom46, !dbg !770
  %44 = load i8, i8* %arrayidx47, align 1, !dbg !770
  %conv48 = zext i8 %44 to i32, !dbg !770
  store i32 %conv48, i32* %len, align 4, !dbg !773
  %cmp49 = icmp ne i32 %conv48, 0, !dbg !774
  br i1 %cmp49, label %if.then51, label %if.end92, !dbg !775
  %45 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !776
  %locales52 = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %45, i32 0, i32 31, !dbg !778
  %46 = load i32, i32* %row, align 4, !dbg !779
  %mul53 = mul nsw i32 9, %46, !dbg !780
  %add54 = add nsw i32 %mul53, 3, !dbg !781
  %47 = load i32, i32* %i, align 4, !dbg !782
  %add55 = add nsw i32 %add54, %47, !dbg !783
  %idxprom56 = sext i32 %add55 to i64, !dbg !776
  %arrayidx57 = getelementptr inbounds [2826 x i8], [2826 x i8]* %locales52, i64 0, i64 %idxprom56, !dbg !776
  %48 = load i8, i8* %arrayidx57, align 1, !dbg !776
  %conv58 = zext i8 %48 to i32, !dbg !776
  %49 = load i32, i32* %len, align 4, !dbg !784
  %mul59 = mul nsw i32 %conv58, %49, !dbg !785
  store i32 %mul59, i32* %crow, align 4, !dbg !786
  %50 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !787
  %51 = bitcast %struct.__uclibc_locale_struct.160* %50 to i8*, !dbg !788
  %52 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !789
  %category_offsets = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %52, i32 0, i32 7, !dbg !790
  %53 = load i32, i32* %i, align 4, !dbg !791
  %idxprom60 = sext i32 %53 to i64, !dbg !789
  %arrayidx61 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets, i64 0, i64 %idxprom60, !dbg !789
  %54 = load i16, i16* %arrayidx61, align 2, !dbg !789
  %conv62 = zext i16 %54 to i32, !dbg !789
  %idx.ext = sext i32 %conv62 to i64, !dbg !792
  %add.ptr63 = getelementptr inbounds i8, i8* %51, i64 %idx.ext, !dbg !792
  %55 = bitcast i8* %add.ptr63 to i8**, !dbg !793
  store i8** %55, i8*** %x, align 8, !dbg !794
  %56 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !795
  %lc_common_tbl_offsets = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %56, i32 0, i32 30, !dbg !796
  %arraydecay64 = getelementptr inbounds [24 x i64], [24 x i64]* %lc_common_tbl_offsets, i64 0, i64 0, !dbg !795
  %57 = load i32, i32* %i, align 4, !dbg !797
  %mul65 = mul nsw i32 4, %57, !dbg !798
  %idx.ext66 = sext i32 %mul65 to i64, !dbg !799
  %add.ptr67 = getelementptr inbounds i64, i64* %arraydecay64, i64 %idx.ext66, !dbg !799
  store i64* %add.ptr67, i64** %stp, align 8, !dbg !800
  %58 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !801
  %59 = bitcast %struct.__locale_mmap_t.162* %58 to i8*, !dbg !802
  %60 = load i64*, i64** %stp, align 8, !dbg !803
  %61 = load i64, i64* %60, align 8, !dbg !804
  %add.ptr68 = getelementptr inbounds i8, i8* %59, i64 %61, !dbg !805
  store i8* %add.ptr68, i8** %r, align 8, !dbg !806
  %62 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !807
  %63 = bitcast %struct.__locale_mmap_t.162* %62 to i8*, !dbg !808
  %64 = load i64*, i64** %stp, align 8, !dbg !809
  %incdec.ptr69 = getelementptr inbounds i64, i64* %64, i32 1, !dbg !809
  store i64* %incdec.ptr69, i64** %stp, align 8, !dbg !809
  %65 = load i64, i64* %incdec.ptr69, align 8, !dbg !810
  %add.ptr70 = getelementptr inbounds i8, i8* %63, i64 %65, !dbg !811
  %66 = bitcast i8* %add.ptr70 to i16*, !dbg !812
  store i16* %66, i16** %io, align 8, !dbg !813
  %67 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !814
  %68 = bitcast %struct.__locale_mmap_t.162* %67 to i8*, !dbg !815
  %69 = load i64*, i64** %stp, align 8, !dbg !816
  %incdec.ptr71 = getelementptr inbounds i64, i64* %69, i32 1, !dbg !816
  store i64* %incdec.ptr71, i64** %stp, align 8, !dbg !816
  %70 = load i64, i64* %incdec.ptr71, align 8, !dbg !817
  %add.ptr72 = getelementptr inbounds i8, i8* %68, i64 %70, !dbg !818
  %71 = bitcast i8* %add.ptr72 to i16*, !dbg !819
  store i16* %71, i16** %ii, align 8, !dbg !820
ions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.190
//Instructions in stack: Num.191
//Instructions in stack: Num.192
//Instructions in stack: Num.193
//Instructions in stack: Num.194
//Instructions in stack: Num.195
//Instructions in stack: Num.196
//Instructions in stack: Num.197
//Instructions in stack: Num.198
//Instructions in stack: Num.199
//Instructions in stack: Num.200
//Instructions in stack: Num.201
//Instructions in stack: Num.202
//Instructions in stack: Num.203
//Instructions in stack: Num.204
//Instructions in stack: Num.205
//Instructions in stack: Num.206
//Instructions in stack: Num.207
//Instructions in stack: Num.208
//Instructions in stack: Num.209
//Instructions in stack: Num.210
//Instructions in stack: Num.211
//Instructions in stack: Num.212
//Instructions in stack: Num.213
//Instructions in stack: Num.214
//Instructions in stack: Num.215
//Instructions in stack: Num.216
//Instructions in stack: Num.217
//Instructions in stack: Num.218
//Instructions in s  %72 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !821
  %73 = bitcast %struct.__locale_mmap_t.162* %72 to i8*, !dbg !822
  %74 = load i64*, i64** %stp, align 8, !dbg !823
  %incdec.ptr73 = getelementptr inbounds i64, i64* %74, i32 1, !dbg !823
  store i64* %incdec.ptr73, i64** %stp, align 8, !dbg !823
  %75 = load i64, i64* %incdec.ptr73, align 8, !dbg !824
  %add.ptr74 = getelementptr inbounds i8, i8* %73, i64 %75, !dbg !825
  store i8* %add.ptr74, i8** %d, align 8, !dbg !826
  store i32 0, i32* %c, align 4, !dbg !827
  br label %for.cond, !dbg !829
  %76 = load i32, i32* %c, align 4, !dbg !830
  %77 = load i32, i32* %len, align 4, !dbg !832
  %cmp75 = icmp slt i32 %76, %77, !dbg !833
  br i1 %cmp75, label %for.body, label %for.end, !dbg !834
  %78 = load i8*, i8** %d, align 8, !dbg !835
  %79 = load i16*, i16** %ii, align 8, !dbg !837
  %80 = load i8*, i8** %r, align 8, !dbg !838
  %81 = load i32, i32* %crow, align 4, !dbg !839
  %82 = load i32, i32* %c, align 4, !dbg !840
  %add77 = add nsw i32 %81, %82, !dbg !841
  %idxprom78 = sext i32 %add77 to i64, !dbg !838
  %arrayidx79 = getelementptr inbounds i8, i8* %80, i64 %idxprom78, !dbg !838
  %83 = load i8, i8* %arrayidx79, align 1, !dbg !838
  %conv80 = zext i8 %83 to i32, !dbg !838
  %84 = load i16*, i16** %io, align 8, !dbg !842
  %85 = load i32, i32* %c, align 4, !dbg !843
  %idxprom81 = sext i32 %85 to i64, !dbg !842
  %arrayidx82 = getelementptr inbounds i16, i16* %84, i64 %idxprom81, !dbg !842
  %86 = load i16, i16* %arrayidx82, align 2, !dbg !842
  %conv83 = zext i16 %86 to i32, !dbg !842
  %add84 = add nsw i32 %conv80, %conv83, !dbg !844
  %idxprom85 = sext i32 %add84 to i64, !dbg !837
  %arrayidx86 = getelementptr inbounds i16, i16* %79, i64 %idxprom85, !dbg !837
  %87 = load i16, i16* %arrayidx86, align 2, !dbg !837
  %conv87 = zext i16 %87 to i32, !dbg !837
  %idx.ext88 = sext i32 %conv87 to i64, !dbg !845
  %add.ptr89 = getelementptr inbounds i8, i8* %78, i64 %idx.ext88, !dbg !845
  %88 = load i8**, i8*** %x, align 8, !dbg !846
  %89 = load i32, i32* %c, align 4, !dbg !847
  %idx.ext90 = sext i32 %89 to i64, !dbg !848
  %add.ptr91 = getelementptr inbounds i8*, i8** %88, i64 %idx.ext90, !dbg !848
  store i8* %add.ptr89, i8** %add.ptr91, align 8, !dbg !849
  br label %for.inc, !dbg !850
  %90 = load i32, i32* %c, align 4, !dbg !851
  %inc = add nsw i32 %90, 1, !dbg !851
  store i32 %inc, i32* %c, align 4, !dbg !851
  br label %for.cond, !dbg !852, !llvm.loop !853
  br label %if.end92, !dbg !855
  %91 = load i32, i32* %i, align 4, !dbg !856
  %cmp93 = icmp eq i32 %91, 0, !dbg !858
  br i1 %cmp93, label %if.then95, label %if.else295, !dbg !859
  %92 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !860
  %locales96 = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %92, i32 0, i32 31, !dbg !862
  %93 = load i32, i32* %row, align 4, !dbg !863
  %mul97 = mul nsw i32 9, %93, !dbg !864
  %add98 = add nsw i32 %mul97, 2, !dbg !865
  %idxprom99 = sext i32 %add98 to i64, !dbg !860
  %arrayidx100 = getelementptr inbounds [2826 x i8], [2826 x i8]* %locales96, i64 0, i64 %idxprom99, !dbg !860
  %94 = load i8, i8* %arrayidx100, align 1, !dbg !860
  %conv101 = zext i8 %94 to i32, !dbg !860
  store i32 %conv101, i32* %c, align 4, !dbg !866
  %95 = load i32, i32* %c, align 4, !dbg !867
  %cmp102 = icmp sle i32 %95, 2, !dbg !869
  br i1 %cmp102, label %if.then104, label %if.else112, !dbg !870
  %96 = load i32, i32* %c, align 4, !dbg !871
  %cmp105 = icmp eq i32 %96, 2, !dbg !874
  br i1 %cmp105, label %if.then107, label %if.else, !dbg !875
  %97 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !876
  %codeset = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %97, i32 0, i32 38, !dbg !878
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @utf8, i64 0, i64 0), i8** %codeset, align 8, !dbg !879
  %98 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !880
  %encoding = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %98, i32 0, i32 9, !dbg !881
  store i8 1, i8* %encoding, align 8, !dbg !882
  %99 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !883
  %mb_cur_max = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %99, i32 0, i32 10, !dbg !884
  store i8 6, i8* %mb_cur_max, align 1, !dbg !885
  br label %if.end111, !dbg !886
  %100 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !887
  %codeset108 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %100, i32 0, i32 38, !dbg !889
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @ascii, i64 0, i64 0), i8** %codeset108, align 8, !dbg !890
  %101 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !891
  %encoding109 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %101, i32 0, i32 9, !dbg !892
  store i8 0, i8* %encoding109, align 8, !dbg !893
  %102 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !894
  %mb_cur_max110 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %102, i32 0, i32 10, !dbg !895
  store i8 1, i8* %mb_cur_max110, align 1, !dbg !896
  br label %if.end111
  br label %if.end280, !dbg !897
  call void @llvm.dbg.declare(metadata %struct.__codeset_8_bit_t.161** %c8b, metadata !1298, metadata !DIExpression()), !dbg !1310
  %103 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !911
  %codeset_list = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %103, i32 0, i32 35, !dbg !911
  %arraydecay113 = getelementptr inbounds [255 x i8], [255 x i8]* %codeset_list, i64 0, i64 0, !dbg !911
  store i8* %arraydecay113, i8** %r, align 8, !dbg !912
  %104 = load i8*, i8** %r, align 8, !dbg !913
  %105 = load i8*, i8** %r, align 8, !dbg !914
  %106 = load i32, i32* %c, align 4, !dbg !915
  %sub = sub nsw i32 %106, 3, !dbg !915
  store i32 %sub, i32* %c, align 4, !dbg !915
  %idxprom114 = sext i32 %sub to i64, !dbg !914
  %arrayidx115 = getelementptr inbounds i8, i8* %105, i64 %idxprom114, !dbg !914
  %107 = load i8, i8* %arrayidx115, align 1, !dbg !914
  %conv116 = zext i8 %107 to i32, !dbg !914
  %idx.ext117 = sext i32 %conv116 to i64, !dbg !916
  %add.ptr118 = getelementptr inbounds i8, i8* %104, i64 %idx.ext117, !dbg !916
  %108 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !917
  %codeset119 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %108, i32 0, i32 38, !dbg !918
  store i8* %add.ptr118, i8** %codeset119, align 8, !dbg !919
  %109 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !920
  %encoding120 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %109, i32 0, i32 9, !dbg !921
  store i8 2, i8* %encoding120, align 8, !dbg !922
  %110 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !923
  %mb_cur_max121 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %110, i32 0, i32 10, !dbg !924
  store i8 1, i8* %mb_cur_max121, align 1, !dbg !925
  %111 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !926
  %codeset_8_bit = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %111, i32 0, i32 12, !dbg !927
  %arraydecay122 = getelementptr inbounds [23 x %struct.__codeset_8_bit_t.161], [23 x %struct.__codeset_8_bit_t.161]* %codeset_8_bit, i64 0, i64 0, !dbg !926
  %112 = load i32, i32* %c, align 4, !dbg !928
  %idx.ext123 = sext i32 %112 to i64, !dbg !929
  %add.ptr124 = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %arraydecay122, i64 %idx.ext123, !dbg !929
  store %struct.__codeset_8_bit_t.161* %add.ptr124, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !930
  %113 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !931
  %idx8ctype = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %113, i32 0, i32 0, !dbg !932
  %arraydecay125 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8ctype, i64 0, i64 0, !dbg !931
  %114 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !933
tack: Num.219
//Instructions in stack: Num.220
//Instructions in stack: Num.221
//Instructions in stack: Num.222
//Instructions in stack: Num.223
//Instructions in stack: Num.224
//Instructions in stack: Num.225
//Instructions in stack: Num.226
//Instructions in stack: Num.227
//Instructions in stack: Num.228
//Instructions in stack: Num.229
//Instructions in stack: Num.230
//Instructions in stack: Num.231
//Instructions in stack: Num.232
//Instructions in stack: Num.233
//Instructions in stack: Num.234
//Instructions in stack: Num.235
//Instructions in stack: Num.236
//Instructions in stack: Num.237
//Instructions in stack: Num.238
//Instructions in stack: Num.239
//Instructions in stack: Num.240
//Instructions in stack: Num.241
//Instructions in stack: Num.242
//Instructions in stack: Num.243
//Instructions in stack: Num.244
//Instructions in stack: Num.245
//Instructions in stack: Num.246
//Instructions in stack: Num.247
//Instructions in stack: Num.248
//Instructions in stack: Num.249
//Instructions in stack: Num.250
//Instructions in stack: Num.251
//Instructions in stack: Num.252
//Instructions in stack: Num.253
//Instructions in stack: Num.254
//Instructions in stack: Num.255
//Instructions in stack: Num.256
//Instructions in stack: Num.257
//Instructions in stack: Num.258
//Instructions in stack: Num.259
//Instructions in stack: Num.260
//Instructions in stack: Num.261
//Instructions in stack: Num.262
//Instructions in stack: Num.263
//Instructions in stack: Num.264
//Instructions in stack: Num.265
//Instructions in stack: Num.266
//Instructions in stack: Num.267
//Instructions in stack: Num.268
//Instructions in stack: Num.269
//Instructions in stack: Num.270
//Instructions in stack: Num.271
//Instructions in stack: Num.272
//Instructions in stack: Num.273
//Instructions in stack: Num.274
//Instructions in stack: Num.275
//Instructions in stack: Num.276
//Instructions in stack: Num.277
//Instructions in stack: Num.278
//Instructions in stack: Num.279
//Instructions in stack: Num.280
//Instructions in stack: Num.281
//Instructions in stack: Num.282
//Instructions in stack: Num.283
//Instructions in stack: Num.284
//Instructions in stack: Num.285
//Instructions in stack: Num.286
//Instructions in stack: Num.287
//Instructions in stack: Num.288
//Instructions in stack: Num.289
//Instructions in stack: Num.290
//Instructions in stack: Num.291
//Instructions in stack: Num.292
//Instructions in stack: Num.293
//Instructions in stack: Num.294
//Instructions in stack: Num.295
//Instructions in stack: Num.296
//Instructions in stack: Num.297
//Instructions in stack: Num.298
//Instructions in stack: Num.299
//Instructions in stack: Num.300
//Instructions in stack: Num.301
//Instructions in stack: Num.302
//Instructions in stack: Num.303
//Instructions in stack: Num.304
//Instructions in stack: Num.305
//Instructions in stack: Num.306
//Instructions in stack: Num.307
//Instructions in stack: Num.308
//Instructions in stack: Num.309
//Instructions in stack: Num.310
//Instructions in stack: Num.311
//Instructions in stack: Num.312
//Instructions in stack: Num.313
//Instructions in stack: Num.314
//Instructions in stack: Num.315
//Instructions in stack: Num.316
//Instructions in stack: Num.317
//Instructions in stack: Num.318
//Instructions in stack: Num.319
//Instructions in stack: Num.320
//Instructions in stack: Num.321
//Instructions in stack: Num.322
//Instructions in stack: Num.323
//Instructions in stack: Num.324
//Instructions in stack: Num.325
//Instructions in stack: Num.326
//Instructions in stack: Num.327
//Instructions in stack: Num.328
//Instructions in stack: Num.329
//Instructions in stack: Num.330
//Instructions in stack: Num.331
//Instructions in stack: Num.332
//Instructions in stack: Num.333
//Instructions in stack: Num.334
//Instructions in stack: Num.335
//Instructions in stack: Num.336
//Instructions in stack: Num.337
//Instructions in stack: Num.338
//Instructions in stack: Num.339
//Instructions in stack: Num.340
//Instructions in stack: Num.341
//Instructions in stack: Num.342
//Instructions in stack  %idx8ctype126 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %114, i32 0, i32 12, !dbg !934
  store i8* %arraydecay125, i8** %idx8ctype126, align 8, !dbg !935
  %115 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !936
  %idx8uplow = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %115, i32 0, i32 1, !dbg !937
  %arraydecay127 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8uplow, i64 0, i64 0, !dbg !936
  %116 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !938
  %idx8uplow128 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %116, i32 0, i32 14, !dbg !939
  store i8* %arraydecay127, i8** %idx8uplow128, align 8, !dbg !940
  %117 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !941
  %idx8c2wc = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %117, i32 0, i32 2, !dbg !942
  %arraydecay129 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8c2wc, i64 0, i64 0, !dbg !941
  %118 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !943
  %idx8c2wc130 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %118, i32 0, i32 16, !dbg !944
  store i8* %arraydecay129, i8** %idx8c2wc130, align 8, !dbg !945
  %119 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !946
  %idx8wc2c = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %119, i32 0, i32 3, !dbg !947
  %arraydecay131 = getelementptr inbounds [38 x i8], [38 x i8]* %idx8wc2c, i64 0, i64 0, !dbg !946
  %120 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !948
  %idx8wc2c132 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %120, i32 0, i32 18, !dbg !949
  store i8* %arraydecay131, i8** %idx8wc2c132, align 8, !dbg !950
  %121 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !951
  %__ctype_b_data = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %121, i32 0, i32 3, !dbg !952
  %arraydecay133 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data, i64 0, i64 0, !dbg !951
  %122 = bitcast i16* %arraydecay133 to i8*, !dbg !951
  %123 = load i16*, i16** @__C_ctype_b, align 8, !dbg !953
  %add.ptr134 = getelementptr inbounds i16, i16* %123, i64 -128, !dbg !954
  %124 = bitcast i16* %add.ptr134 to i8*, !dbg !953
  %call135 = call i8* @memcpy(i8* %122, i8* %124, i64 768) #11, !dbg !955
  %125 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !956
  %__ctype_tolower_data = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %125, i32 0, i32 4, !dbg !957
  %arraydecay136 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data, i64 0, i64 0, !dbg !956
  %126 = bitcast i16* %arraydecay136 to i8*, !dbg !956
  %127 = load i16*, i16** @__C_ctype_tolower, align 8, !dbg !958
  %add.ptr137 = getelementptr inbounds i16, i16* %127, i64 -128, !dbg !959
  %128 = bitcast i16* %add.ptr137 to i8*, !dbg !958
  %call138 = call i8* @memcpy(i8* %126, i8* %128, i64 768) #11, !dbg !960
  %129 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !961
  %__ctype_toupper_data = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %129, i32 0, i32 5, !dbg !962
  %arraydecay139 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data, i64 0, i64 0, !dbg !961
  %130 = bitcast i16* %arraydecay139 to i8*, !dbg !961
  %131 = load i16*, i16** @__C_ctype_toupper, align 8, !dbg !963
  %add.ptr140 = getelementptr inbounds i16, i16* %131, i64 -128, !dbg !964
  %132 = bitcast i16* %add.ptr140 to i8*, !dbg !963
  %call141 = call i8* @memcpy(i8* %130, i8* %132, i64 768) #11, !dbg !965
  call void @llvm.dbg.declare(metadata i32* %u, metadata !1366, metadata !DIExpression()), !dbg !1368
  call void @llvm.dbg.declare(metadata i16* %m, metadata !1369, metadata !DIExpression()), !dbg !1370
  store i32 0, i32* %u, align 4, !dbg !971
  br label %for.cond142, !dbg !973
  %133 = load i32, i32* %u, align 4, !dbg !974
  %cmp143 = icmp slt i32 %133, 128, !dbg !976
  br i1 %cmp143, label %for.body145, label %for.end270, !dbg !977
  %134 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !978
  %tbl8ctype = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %134, i32 0, i32 13, !dbg !980
  %135 = load i8*, i8** %tbl8ctype, align 8, !dbg !980
  %136 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !981
  %idx8ctype146 = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %136, i32 0, i32 0, !dbg !982
  %137 = load i32, i32* %u, align 4, !dbg !983
  %shr = ashr i32 %137, 3, !dbg !984
  %idxprom147 = sext i32 %shr to i64, !dbg !981
  %arrayidx148 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8ctype146, i64 0, i64 %idxprom147, !dbg !981
  %138 = load i8, i8* %arrayidx148, align 1, !dbg !981
  %conv149 = zext i8 %138 to i32, !dbg !985
  %shl150 = shl i32 %conv149, 2, !dbg !986
  %139 = load i32, i32* %u, align 4, !dbg !987
  %and151 = and i32 %139, 7, !dbg !988
  %shr152 = ashr i32 %and151, 1, !dbg !989
  %add153 = add nsw i32 %shl150, %shr152, !dbg !990
  %idxprom154 = sext i32 %add153 to i64, !dbg !978
  %arrayidx155 = getelementptr inbounds i8, i8* %135, i64 %idxprom154, !dbg !978
  %140 = load i8, i8* %arrayidx155, align 1, !dbg !978
  %conv156 = zext i8 %140 to i32, !dbg !978
  store i32 %conv156, i32* %c, align 4, !dbg !991
  %141 = load i32, i32* %u, align 4, !dbg !992
  %and157 = and i32 %141, 1, !dbg !993
  %tobool158 = icmp ne i32 %and157, 0, !dbg !993
  br i1 %tobool158, label %cond.true, label %cond.false, !dbg !994
  %142 = load i32, i32* %c, align 4, !dbg !995
  %shr159 = ashr i32 %142, 4, !dbg !996
  br label %cond.end, !dbg !994
  %143 = load i32, i32* %c, align 4, !dbg !997
  %and160 = and i32 %143, 15, !dbg !998
  br label %cond.end, !dbg !994
  %cond = phi i32 [ %shr159, %cond.true ], [ %and160, %cond.false ], !dbg !994
  store i32 %cond, i32* %c, align 4, !dbg !999
  %144 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1000
  %code2flag = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %144, i32 0, i32 20, !dbg !1001
  %145 = load i16*, i16** %code2flag, align 8, !dbg !1001
  %146 = load i32, i32* %c, align 4, !dbg !1002
  %idxprom161 = sext i32 %146 to i64, !dbg !1000
  %arrayidx162 = getelementptr inbounds i16, i16* %145, i64 %idxprom161, !dbg !1000
  %147 = load i16, i16* %arrayidx162, align 2, !dbg !1000
  store i16 %147, i16* %m, align 2, !dbg !1003
  %148 = load i16, i16* %m, align 2, !dbg !1004
  %149 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1005
  %__ctype_b_data163 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %149, i32 0, i32 3, !dbg !1006
  %150 = load i32, i32* %u, align 4, !dbg !1007
  %add164 = add nsw i32 256, %150, !dbg !1008
  %idxprom165 = sext i32 %add164 to i64, !dbg !1005
  %arrayidx166 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data163, i64 0, i64 %idxprom165, !dbg !1005
  store i16 %148, i16* %arrayidx166, align 2, !dbg !1009
  %151 = load i32, i32* %u, align 4, !dbg !1010
  %add167 = add nsw i32 128, %151, !dbg !1012
  %conv168 = trunc i32 %add167 to i8, !dbg !1013
  %conv169 = sext i8 %conv168 to i32, !dbg !1014
  %cmp170 = icmp ne i32 %conv169, -1, !dbg !1015
  br i1 %cmp170, label %if.then172, label %if.end180, !dbg !1016
  %152 = load i16, i16* %m, align 2, !dbg !1017
  %153 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1019
  %__ctype_b_data173 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %153, i32 0, i32 3, !dbg !1020
  %154 = load i32, i32* %u, align 4, !dbg !1021
  %add174 = add nsw i32 128, %154, !dbg !1022
  %conv175 = trunc i32 %add174 to i8, !dbg !1023
  %conv176 = sext i8 %conv175 to i32, !dbg !1024
  %add177 = add nsw i32 128, %conv176, !dbg !1025
  %idxprom178 = sext i32 %add177 to i64, !dbg !1019
  %arrayidx179 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data173, i64 0, i64 %idxprom178, !dbg !1019
  store i16 %152, i16* %arrayidx179, align 2, !dbg !1026
  br label %if.end180, !dbg !1027
  %155 = load i32, i32* %u, align 4, !dbg !1028
  %add181 = add nsw i32 128, %155, !dbg !1029
  %conv182 = trunc i32 %add181 to i16, !dbg !1030
  %156 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1031
  %__ctype_tolower_data183 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %156, i32 0, i32 4, !dbg !1032
  %157 = load i32, i32* %u, align 4, !dbg !1033
: Num.343
//Instructions in stack: Num.344
//Instructions in stack: Num.345
//Instructions in stack: Num.346
//Instructions in stack: Num.347
//Instructions in stack: Num.348
//Instructions in stack: Num.349
//Instructions in stack: Num.350
//Instructions in stack: Num.351
//Instructions in stack: Num.352
//Instructions in stack: Num.353
//Instructions in stack: Num.354
//Instructions in stack: Num.355
//Instructions in stack: Num.356
//Instructions in stack: Num.357
//Instructions in stack: Num.358
//Instructions in stack: Num.359
//Instructions in stack: Num.360
//Instructions in stack: Num.361
//Instructions in stack: Num.362
//Instructions in stack: Num.363
//Instructions in stack: Num.364
//Instructions in stack: Num.365
//Instructions in stack: Num.366
//Instructions in stack: Num.367
//Instructions in stack: Num.368
//Instructions in stack: Num.369
//Instructions in stack: Num.370
//Instructions in stack: Num.371
//Instructions in stack: Num.372
//Instructions in stack: Num.373
//Instructions in stack: Num.374
//Instructions in stack: Num.375
//Instructions in stack: Num.376
//Instructions in stack: Num.377
//Instructions in stack: Num.378
//Instructions in stack: Num.379
//Instructions in stack: Num.380
//Instructions in stack: Num.381
//Instructions in stack: Num.382
//Instructions in stack: Num.383
//Instructions in stack: Num.384
//Instructions in stack: Num.385
//Instructions in stack: Num.386
//Instructions in stack: Num.387
//Instructions in stack: Num.388
//Instructions in stack: Num.389
//Instructions in stack: Num.390
//Instructions in stack: Num.391
//Instructions in stack: Num.392
//Instructions in stack: Num.393
//Instructions in stack: Num.394
//Instructions in stack: Num.395
//Instructions in stack: Num.396
//Instructions in stack: Num.397
//Instructions in stack: Num.398
//Instructions in stack: Num.399
//Instructions in stack: Num.400
//Instructions in stack: Num.401
//Instructions in stack: Num.402
//Instructions in stack: Num.403
//Instructions in stack: Num.404
//Instructions in stack: Num.405
//Instructions in stack: Num.406
//Instructions in stack: Num.407
//Instructions in stack: Num.408
//Instructions in stack: Num.409
//Instructions in stack: Num.410
//Instructions in stack: Num.411
//Instructions in stack: Num.412
//Instructions in stack: Num.413
//Instructions in stack: Num.414
//Instructions in stack: Num.415
//Instructions in stack: Num.416
//Instructions in stack: Num.417
//Instructions in stack: Num.418
//Instructions in stack: Num.419
//Instructions in stack: Num.420
//Instructions in stack: Num.421
//Instructions in stack: Num.422
//Instructions in stack: Num.423
//Instructions in stack: Num.424
//Instructions in stack: Num.425
//Instructions in stack: Num.426
//Instructions in stack: Num.427
//Instructions in stack: Num.428
//Instructions in stack: Num.429
//Instructions in stack: Num.430
//Instructions in stack: Num.431
//Instructions in stack: Num.432
//Instructions in stack: Num.433
//Instructions in stack: Num.434
//Instructions in stack: Num.435
//Instructions in stack: Num.436
//Instructions in stack: Num.437
//Instructions in stack: Num.438
//Instructions in stack: Num.439
//Instructions in stack: Num.440
//Instructions in stack: Num.441
//Instructions in stack: Num.442
//Instructions in stack: Num.443
//Instructions in stack: Num.444
//Instructions in stack: Num.445
//Instructions in stack: Num.446
//Instructions in stack: Num.447
//Instructions in stack: Num.448
//Instructions in stack: Num.449
//Instructions in stack: Num.450
//Instructions in stack: Num.451
//Instructions in stack: Num.452
//Instructions in stack: Num.453
//Instructions in stack: Num.454
//Instructions in stack: Num.455
//Instructions in stack: Num.456
//Instructions in stack: Num.457
//Instructions in stack: Num.458
//Instructions in stack: Num.459
//Instructions in stack: Num.460
//Instructions in stack: Num.461
//Instructions in stack: Num.462
//Instructions in stack: Num.463
//Instructions in stack: Num.464
//Instructions in stack: Num.465
//Instructions in stack: Num.466
//Instructions in stack: Nu  %add184 = add nsw i32 256, %157, !dbg !1034
  %idxprom185 = sext i32 %add184 to i64, !dbg !1031
  %arrayidx186 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data183, i64 0, i64 %idxprom185, !dbg !1031
  store i16 %conv182, i16* %arrayidx186, align 2, !dbg !1035
  %158 = load i32, i32* %u, align 4, !dbg !1036
  %add187 = add nsw i32 128, %158, !dbg !1037
  %conv188 = trunc i32 %add187 to i16, !dbg !1038
  %159 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1039
  %__ctype_toupper_data189 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %159, i32 0, i32 5, !dbg !1040
  %160 = load i32, i32* %u, align 4, !dbg !1041
  %add190 = add nsw i32 256, %160, !dbg !1042
  %idxprom191 = sext i32 %add190 to i64, !dbg !1039
  %arrayidx192 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data189, i64 0, i64 %idxprom191, !dbg !1039
  store i16 %conv188, i16* %arrayidx192, align 2, !dbg !1043
  %161 = load i16, i16* %m, align 2, !dbg !1044
  %conv193 = zext i16 %161 to i32, !dbg !1044
  %and194 = and i32 %conv193, 768, !dbg !1046
  %tobool195 = icmp ne i32 %and194, 0, !dbg !1046
  br i1 %tobool195, label %if.then196, label %if.end267, !dbg !1047
  %162 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1048
  %tbl8uplow = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %162, i32 0, i32 15, !dbg !1050
  %163 = load i8*, i8** %tbl8uplow, align 8, !dbg !1050
  %164 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !1051
  %idx8uplow197 = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %164, i32 0, i32 1, !dbg !1052
  %165 = load i32, i32* %u, align 4, !dbg !1053
  %shr198 = ashr i32 %165, 3, !dbg !1054
  %idxprom199 = sext i32 %shr198 to i64, !dbg !1051
  %arrayidx200 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8uplow197, i64 0, i64 %idxprom199, !dbg !1051
  %166 = load i8, i8* %arrayidx200, align 1, !dbg !1051
  %conv201 = zext i8 %166 to i32, !dbg !1055
  %shl202 = shl i32 %conv201, 3, !dbg !1056
  %167 = load i32, i32* %u, align 4, !dbg !1057
  %add203 = add nsw i32 128, %167, !dbg !1058
  %and204 = and i32 %add203, 7, !dbg !1059
  %add205 = add nsw i32 %shl202, %and204, !dbg !1060
  %idxprom206 = sext i32 %add205 to i64, !dbg !1048
  %arrayidx207 = getelementptr inbounds i8, i8* %163, i64 %idxprom206, !dbg !1048
  %168 = load i8, i8* %arrayidx207, align 1, !dbg !1048
  %conv208 = zext i8 %168 to i32, !dbg !1048
  store i32 %conv208, i32* %c, align 4, !dbg !1061
  %169 = load i16, i16* %m, align 2, !dbg !1062
  %conv209 = zext i16 %169 to i32, !dbg !1062
  %and210 = and i32 %conv209, 512, !dbg !1064
  %tobool211 = icmp ne i32 %and210, 0, !dbg !1064
  br i1 %tobool211, label %if.then212, label %if.else239, !dbg !1065
  %170 = load i32, i32* %u, align 4, !dbg !1066
  %add213 = add nsw i32 128, %170, !dbg !1068
  %171 = load i32, i32* %c, align 4, !dbg !1069
  %add214 = add nsw i32 %add213, %171, !dbg !1070
  %conv215 = trunc i32 %add214 to i8, !dbg !1071
  %conv216 = zext i8 %conv215 to i16, !dbg !1071
  %172 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1072
  %__ctype_toupper_data217 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %172, i32 0, i32 5, !dbg !1073
  %173 = load i32, i32* %u, align 4, !dbg !1074
  %add218 = add nsw i32 256, %173, !dbg !1075
  %idxprom219 = sext i32 %add218 to i64, !dbg !1072
  %arrayidx220 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data217, i64 0, i64 %idxprom219, !dbg !1072
  store i16 %conv216, i16* %arrayidx220, align 2, !dbg !1076
  %174 = load i32, i32* %u, align 4, !dbg !1077
  %add221 = add nsw i32 128, %174, !dbg !1079
  %conv222 = trunc i32 %add221 to i8, !dbg !1080
  %conv223 = sext i8 %conv222 to i32, !dbg !1081
  %cmp224 = icmp ne i32 %conv223, -1, !dbg !1082
  br i1 %cmp224, label %if.then226, label %if.end238, !dbg !1083
  %175 = load i32, i32* %u, align 4, !dbg !1084
  %add227 = add nsw i32 128, %175, !dbg !1086
  %176 = load i32, i32* %c, align 4, !dbg !1087
  %add228 = add nsw i32 %add227, %176, !dbg !1088
  %conv229 = trunc i32 %add228 to i8, !dbg !1089
  %conv230 = zext i8 %conv229 to i16, !dbg !1089
  %177 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1090
  %__ctype_toupper_data231 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %177, i32 0, i32 5, !dbg !1091
  %178 = load i32, i32* %u, align 4, !dbg !1092
  %add232 = add nsw i32 128, %178, !dbg !1093
  %conv233 = trunc i32 %add232 to i8, !dbg !1094
  %conv234 = sext i8 %conv233 to i32, !dbg !1095
  %add235 = add nsw i32 128, %conv234, !dbg !1096
  %idxprom236 = sext i32 %add235 to i64, !dbg !1090
  %arrayidx237 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data231, i64 0, i64 %idxprom236, !dbg !1090
  store i16 %conv230, i16* %arrayidx237, align 2, !dbg !1097
  br label %if.end238, !dbg !1098
  br label %if.end266, !dbg !1099
  %179 = load i32, i32* %u, align 4, !dbg !1100
  %add240 = add nsw i32 128, %179, !dbg !1102
  %180 = load i32, i32* %c, align 4, !dbg !1103
  %sub241 = sub nsw i32 %add240, %180, !dbg !1104
  %conv242 = trunc i32 %sub241 to i8, !dbg !1105
  %conv243 = zext i8 %conv242 to i16, !dbg !1105
  %181 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1106
  %__ctype_tolower_data244 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %181, i32 0, i32 4, !dbg !1107
  %182 = load i32, i32* %u, align 4, !dbg !1108
  %add245 = add nsw i32 256, %182, !dbg !1109
  %idxprom246 = sext i32 %add245 to i64, !dbg !1106
  %arrayidx247 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data244, i64 0, i64 %idxprom246, !dbg !1106
  store i16 %conv243, i16* %arrayidx247, align 2, !dbg !1110
  %183 = load i32, i32* %u, align 4, !dbg !1111
  %add248 = add nsw i32 128, %183, !dbg !1113
  %conv249 = trunc i32 %add248 to i8, !dbg !1114
  %conv250 = sext i8 %conv249 to i32, !dbg !1115
  %cmp251 = icmp ne i32 %conv250, -1, !dbg !1116
  br i1 %cmp251, label %if.then253, label %if.end265, !dbg !1117
  %184 = load i32, i32* %u, align 4, !dbg !1118
  %add254 = add nsw i32 128, %184, !dbg !1120
  %185 = load i32, i32* %c, align 4, !dbg !1121
  %sub255 = sub nsw i32 %add254, %185, !dbg !1122
  %conv256 = trunc i32 %sub255 to i8, !dbg !1123
  %conv257 = zext i8 %conv256 to i16, !dbg !1123
  %186 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1124
  %__ctype_tolower_data258 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %186, i32 0, i32 4, !dbg !1125
  %187 = load i32, i32* %u, align 4, !dbg !1126
  %add259 = add nsw i32 128, %187, !dbg !1127
  %conv260 = trunc i32 %add259 to i8, !dbg !1128
  %conv261 = sext i8 %conv260 to i32, !dbg !1129
  %add262 = add nsw i32 128, %conv261, !dbg !1130
  %idxprom263 = sext i32 %add262 to i64, !dbg !1124
  %arrayidx264 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data258, i64 0, i64 %idxprom263, !dbg !1124
  store i16 %conv257, i16* %arrayidx264, align 2, !dbg !1131
  br label %if.end265, !dbg !1132
  br label %if.end266
  br label %if.end267, !dbg !1133
  br label %for.inc268, !dbg !1134
  %188 = load i32, i32* %u, align 4, !dbg !1135
  %inc269 = add nsw i32 %188, 1, !dbg !1135
  store i32 %inc269, i32* %u, align 4, !dbg !1135
m.467
//Instructions in stack: Num.468
//Instructions in stack: Num.469
//Instructions in stack: Num.470
//Instructions in stack: Num.471
//Instructions in stack: Num.472
//Instructions in stack: Num.473
//Instructions in stack: Num.474
//Instructions in stack: Num.475
//Instructions in stack: Num.476
//Instructions in stack: Num.477
//Instructions in stack: Num.478
//Instructions in stack: Num.479
//Instructions in stack: Num.480
//Instructions in stack: Num.481
//Instructions in stack: Num.482
//Instructions in stack: Num.483
//Instructions in stack: Num.484
//Instructions in stack: Num.485
//Instructions in stack: Num.486
//Instructions in stack: Num.487
//Instructions in stack: Num.488
//Instructions in stack: Num.489
//Instructions in stack: Num.490
//Instructions in stack: Num.491
//Instructions in stack: Num.492
//Instructions in stack: Num.493
//Instructions in stack: Num.494
//Instructions in stack: Num.495
//Instructions in stack: Num.496
//Instructions in stack: Num.497
//Instructions in stack: Num.498
//Instructions in stack: Num.499
//Instructions in stack: Num.500
//Instructions in stack: Num.501
//Instructions in stack: Num.502
//Instructions in stack: Num.503
//Instructions in stack: Num.504
//Instructions in stack: Num.505
//Instructions in stack: Num.506
//Instructions in stack: Num.507
//Instructions in stack: Num.508
//Instructions in stack: Num.509
//Instructions in stack: Num.510
//Instructions in stack: Num.511
//Instructions in stack: Num.512
//Instructions in stack: Num.513
//Instructions in stack: Num.514
//Instructions in stack: Num.515
//Instructions in stack: Num.516
//Instructions in stack: Num.517
//Instructions in stack: Num.518
//Instructions in stack: Num.519
//Instructions in stack: Num.520
//Instructions in stack: Num.521
//Instructions in stack: Num.522
//Instructions in stack: Num.523
//Instructions in stack: Num.524
//Instructions in stack: Num.525
//Instructions in stack: Num.526
//Instructions in stack: Num.527
//Instructions in stack: Num.528
//Instructions in stack: Num.529
//Instructions in stack: Num.530
//Instructions in stack: Num.531
//Instructions in stack: Num.532
//Instructions in stack: Num.533
//Instructions in stack: Num.534
//Instructions in stack: Num.535
//Instructions in stack: Num.536
//Instructions in stack: Num.537
//Instructions in stack: Num.538
//Instructions in stack: Num.539
//Instructions in stack: Num.540
//Instructions in stack: Num.541
//Instructions in stack: Num.542
//Instructions in stack: Num.543
//Instructions in stack: Num.544
//Instructions in stack: Num.545
//Instructions in stack: Num.546
//Instructions in stack: Num.547
//Instructions in stack: Num.548
//Instructions in stack: Num.549
//Instructions in stack: Num.550
//Instructions in stack: Num.551
//Instructions in stack: Num.552
//Instructions in stack: Num.553
//Instructions in stack: Num.554
//Instructions in stack: Num.555
//Instructions in stack: Num.556
//Instructions in stack: Num.557
//Instructions in stack: Num.558
//Instructions in stack: Num.559
//Instructions in stack: Num.560
//Instructions in stack: Num.561
//Instructions in stack: Num.562
//Instructions in stack: Num.563
//Instructions in stack: Num.564
//Instructions in stack: Num.565
//Instructions in stack: Num.566
//Instructions in stack: Num.567
//Instructions in stack: Num.568
//Instructions in stack: Num.569
//Instructions in stack: Num.570
//Instructions in stack: Num.571
//Instructions in stack: Num.572
//Instructions in stack: Num.573
//Instructions in stack: Num.574
//Instructions in stack: Num.575
//Instructions in stack: Num.576
//Instructions in stack: Num.577
//Instructions in stack: Num.578
//Instructions in stack: Num.579
//Instructions in stack: Num.580
//Instructions in stack: Num.581
//Instructions in stack: Num.582
//Instructions in stack: Num.583
//Instructions in stack: Num.584
//Instructions in stack: Num.585
//Instructions in stack: Num.586
//Instructions in stack: Num.587
//Instructions in stack: Num.588
//Instructions in stack: Num.589
//Instructions in stack: Num.590
//Instructions in stack: Num.59  br label %for.cond142, !dbg !1136, !llvm.loop !1137
  %189 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1139
  %__ctype_b_data271 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %189, i32 0, i32 3, !dbg !1140
  %arraydecay272 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data271, i64 0, i64 0, !dbg !1139
  %add.ptr273 = getelementptr inbounds i16, i16* %arraydecay272, i64 128, !dbg !1141
  %190 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1142
  %__ctype_b = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %190, i32 0, i32 0, !dbg !1143
  store i16* %add.ptr273, i16** %__ctype_b, align 8, !dbg !1144
  %191 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1145
  %__ctype_tolower_data274 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %191, i32 0, i32 4, !dbg !1146
  %arraydecay275 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data274, i64 0, i64 0, !dbg !1145
  %add.ptr276 = getelementptr inbounds i16, i16* %arraydecay275, i64 128, !dbg !1147
  %192 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1148
  %__ctype_tolower = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %192, i32 0, i32 1, !dbg !1149
  store i16* %add.ptr276, i16** %__ctype_tolower, align 8, !dbg !1150
  %193 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1151
  %__ctype_toupper_data277 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %193, i32 0, i32 5, !dbg !1152
  %arraydecay278 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data277, i64 0, i64 0, !dbg !1151
  %add.ptr279 = getelementptr inbounds i16, i16* %arraydecay278, i64 128, !dbg !1153
  %194 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1154
  %__ctype_toupper = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %194, i32 0, i32 2, !dbg !1155
  store i16* %add.ptr279, i16** %__ctype_toupper, align 8, !dbg !1156
  br label %if.end280
  %195 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1157
  %outdigit_length = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %195, i32 0, i32 11, !dbg !1158
  %arraydecay281 = getelementptr inbounds [10 x i8], [10 x i8]* %outdigit_length, i64 0, i64 0, !dbg !1157
  store i8* %arraydecay281, i8** %d, align 8, !dbg !1159
  %196 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1160
  %outdigit0_mb = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %196, i32 0, i32 28, !dbg !1161
  store i8** %outdigit0_mb, i8*** %x, align 8, !dbg !1162
  store i32 0, i32* %c, align 4, !dbg !1163
  br label %for.cond282, !dbg !1165
  %197 = load i32, i32* %c, align 4, !dbg !1166
  %cmp283 = icmp slt i32 %197, 10, !dbg !1168
  br i1 %cmp283, label %for.body285, label %for.end294, !dbg !1169
  %198 = load i8**, i8*** %x, align 8, !dbg !1170
  %199 = load i32, i32* %c, align 4, !dbg !1172
  %idxprom286 = sext i32 %199 to i64, !dbg !1170
  %arrayidx287 = getelementptr inbounds i8*, i8** %198, i64 %idxprom286, !dbg !1170
  %200 = load i8*, i8** %arrayidx287, align 8, !dbg !1170
  %call288 = call i64 @strlen(i8* %200) #12, !dbg !1173
  %conv289 = trunc i64 %call288 to i8, !dbg !1173
  %201 = load i8*, i8** %d, align 8, !dbg !1174
  %202 = load i32, i32* %c, align 4, !dbg !1175
  %idxprom290 = sext i32 %202 to i64, !dbg !1176
  %arrayidx291 = getelementptr inbounds i8, i8* %201, i64 %idxprom290, !dbg !1176
  store i8 %conv289, i8* %arrayidx291, align 1, !dbg !1177
  br label %for.inc292, !dbg !1178
  %203 = load i32, i32* %c, align 4, !dbg !1179
  %inc293 = add nsw i32 %203, 1, !dbg !1179
  store i32 %inc293, i32* %c, align 4, !dbg !1179
  br label %for.cond282, !dbg !1180, !llvm.loop !1181
  br label %if.end312, !dbg !1183
  %204 = load i32, i32* %i, align 4, !dbg !1184
  %cmp296 = icmp eq i32 %204, 1, !dbg !1186
  br i1 %cmp296, label %if.then298, label %if.end311, !dbg !1187
  %205 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1188
  %decimal_point_wc = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %205, i32 0, i32 24, !dbg !1190
  %206 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1191
  %decimal_point = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %206, i32 0, i32 39, !dbg !1192
  %207 = load i8*, i8** %decimal_point, align 8, !dbg !1192
  %208 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1193
  %call299 = call i32 @__locale_mbrtowc_l(i32* %decimal_point_wc, i8* %207, %struct.__uclibc_locale_struct.160* %208) #10, !dbg !1194
  %209 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1195
  %decimal_point_len = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %209, i32 0, i32 26, !dbg !1196
  store i32 %call299, i32* %decimal_point_len, align 8, !dbg !1197
  %210 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1198
  %grouping = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %210, i32 0, i32 41, !dbg !1200
  %211 = load i8*, i8** %grouping, align 8, !dbg !1200
  %212 = load i8, i8* %211, align 1, !dbg !1201
  %tobool300 = icmp ne i8 %212, 0, !dbg !1201
  br i1 %tobool300, label %if.then301, label %if.end310, !dbg !1202
  %213 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1203
  %thousands_sep_wc = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %213, i32 0, i32 25, !dbg !1205
  %214 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1206
  %thousands_sep = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %214, i32 0, i32 40, !dbg !1207
  %215 = load i8*, i8** %thousands_sep, align 8, !dbg !1207
  %216 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1208
  %call302 = call i32 @__locale_mbrtowc_l(i32* %thousands_sep_wc, i8* %215, %struct.__uclibc_locale_struct.160* %216) #10, !dbg !1209
  %217 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1210
  %thousands_sep_len = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %217, i32 0, i32 27, !dbg !1211
  store i32 %call302, i32* %thousands_sep_len, align 4, !dbg !1212
  %218 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1213
  %thousands_sep_len303 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %218, i32 0, i32 27, !dbg !1215
  %219 = load i32, i32* %thousands_sep_len303, align 4, !dbg !1215
  %cmp304 = icmp eq i32 %219, 0, !dbg !1216
  br i1 %cmp304, label %if.then306, label %if.end309, !dbg !1217
  %220 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1218
  %thousands_sep307 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %220, i32 0, i32 40, !dbg !1220
  %221 = load i8*, i8** %thousands_sep307, align 8, !dbg !1220
  %222 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1221
  %grouping308 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %222, i32 0, i32 41, !dbg !1222
  store i8* %221, i8** %grouping308, align 8, !dbg !1223
  br label %if.end309, !dbg !1224
  br label %if.end310, !dbg !1225
  br label %if.end311, !dbg !1226
  br label %if.end312
  br label %if.end313, !dbg !1227
  %223 = load i32, i32* %i, align 4, !dbg !1228
  %inc314 = add nsw i32 %223, 1, !dbg !1228
  store i32 %inc314, i32* %i, align 4, !dbg !1228
  %224 = load i8*, i8** %p.addr, align 8, !dbg !1229
  %add.ptr315 = getelementptr inbounds i8, i8* %224, i64 2, !dbg !1229
  store i8* %add.ptr315, i8** %p.addr, align 8, !dbg !1229
  %225 = load i8*, i8** %s, align 8, !dbg !1230
  %add.ptr316 = getelementptr inbounds i8, i8* %225, i64 2, !dbg !1230
  store i8* %add.ptr316, i8** %s, align 8, !dbg !1230
  br label %do.cond, !dbg !1231
  %226 = load i32, i32* %i, align 4, !dbg !1232
  %cmp317 = icmp slt i32 %226, 6, !dbg !1233
  br i1 %cmp317, label %do.body, label %do.end, !dbg !1231, !llvm.loop !1234
  store i32 1, i32* %retval, align 4, !dbg !1236
  br label %return, !dbg !1236
  %227 = load i32, i32* %retval, align 4, !dbg !1237
  ret i32 %227, !dbg !1237
  %s.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !2692, metadata !DIExpression()), !dbg !2693
  call void @llvm.dbg.declare(metadata i8** %p, metadata !2694, metadata !DIExpression()), !dbg !2695
  %0 = load i8*, i8** %s.addr, align 8, !dbg !664
  store i8* %0, i8** %p, align 8, !dbg !666
  br label %for.cond, !dbg !667
  %1 = load i8*, i8** %p, align 8, !dbg !668
  %2 = load i8, i8* %1, align 1, !dbg !670
1
//Instructions in stack: Num.592
//Instructions in stack: Num.593
//Instructions in stack: Num.594
//Instructions in stack: Num.595
//Instructions in stack: Num.596
//Instructions in stack: Num.597
//Instructions in stack: Num.598
//Instructions in stack: Num.599
//Instructions in stack: Num.600
//Instructions in stack: Num.601
//Instructions in stack: Num.602
//Instructions in stack: Num.603
//Instructions in stack: Num.604
//Instructions in stack: Num.605
//Instructions in stack: Num.606
//Instructions in stack: Num.607
//Instructions in stack: Num.608
//Instructions in stack: Num.609
//Instructions in stack: Num.610
//Instructions in stack: Num.611
//Instructions in stack: Num.612
//Instructions in stack: Num.613
//Instructions in stack: Num.614
//Instructions in stack: Num.615
//Instructions in stack: Num.616
//Instructions in stack: Num.617
//Instructions in stack: Num.618
//Instructions in stack: Num.619
//Instructions in stack: Num.620
//Instructions in stack: Num.621
//Instructions in stack: Num.622
//Instructions in stack: Num.623
//Instructions in stack: Num.624
//Instructions in stack: Num.625
//Instructions in stack: Num.626
//Instructions in stack: Num.627
//Instructions in stack: Num.628
//Instructions in stack: Num.629
//Instructions in stack: Num.630
//Instructions in stack: Num.631
//Instructions in stack: Num.632
//Instructions in stack: Num.633
//Instructions in stack: Num.634
//Instructions in stack: Num.635
//Instructions in stack: Num.636
//Instructions in stack: Num.637
//Instructions in stack: Num.638
//Instructions in stack: Num.639
//Instructions in stack: Num.640
//Instructions in stack: Num.641
//Instructions in stack: Num.642
//Instructions in stack: Num.643
//Instructions in stack: Num.644
//Instructions in stack: Num.645
//Instructions in stack: Num.646
//Instructions in stack: Num.647
//Instructions in stack: Num.648
//Instructions in stack: Num.649
//Instructions in stack: Num.650
//Instructions in stack: Num.651
//Instructions in stack: Num.652
//Instructions in stack: Num.653
//Instructions in stack: Num.654
//Instructions in stack: Num.655
//Instructions in stack: Num.656
//Instructions in stack: Num.657
//Instructions in stack: Num.658
//Instructions in stack: Num.659
//Instructions in stack: Num.660
//Instructions in stack: Num.661
//Instructions in stack: Num.662
//Instructions in stack: Num.663
//Instructions in stack: Num.664
//Instructions in stack: Num.665
//Instructions in stack: Num.666
//Instructions in stack: Num.667
//Instructions in stack: Num.668
//Instructions in stack: Num.669
//Instructions in stack: Num.670
//Instructions in stack: Num.671
//Instructions in stack: Num.672
//Instructions in stack: Num.673
//Instructions in stack: Num.674
//Instructions in stack: Num.675
//Instructions in stack: Num.676
//Instructions in stack: Num.677
//Instructions in stack: Num.678
//Instructions in stack: Num.679
//Instructions in stack: Num.680
//Instructions in stack: Num.681
//Instructions in stack: Num.682
//Instructions in stack: Num.683
//Instructions in stack: Num.684
//Instructions in stack: Num.685
//Instructions in stack: Num.686
//Instructions in stack: Num.687
//Instructions in stack: Num.688
//Instructions in stack: Num.689
//Instructions in stack: Num.690
//Instructions in stack: Num.691
//Instructions in stack: Num.692
//Instructions in stack: Num.693
//Instructions in stack: Num.694
//Instructions in stack: Num.695
//Instructions in stack: Num.696
//Instructions in stack: Num.697
//Instructions in stack: Num.698
//Instructions in stack: Num.699
//Instructions in stack: Num.700
//Instructions in stack: Num.701
//Instructions in stack: Num.702
//Instructions in stack: Num.703
//Instructions in stack: Num.704
//Instructions in stack: Num.705
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stac  %tobool = icmp ne i8 %2, 0, !dbg !671
  br i1 %tobool, label %for.body, label %for.end, !dbg !671
  br label %for.inc, !dbg !671
  %3 = load i8*, i8** %p, align 8, !dbg !672
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !672
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !672
  br label %for.cond, !dbg !673, !llvm.loop !674
  %4 = load i8*, i8** %p, align 8, !dbg !676
  %5 = load i8*, i8** %s.addr, align 8, !dbg !677
  %sub.ptr.lhs.cast = ptrtoint i8* %4 to i64, !dbg !678
  %sub.ptr.rhs.cast = ptrtoint i8* %5 to i64, !dbg !678
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !678
  ret i64 %sub.ptr.sub, !dbg !679
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
k: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in sta  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  %0 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !657
  %tobool = icmp ne i32 %0, 0, !dbg !657
  br i1 %tobool, label %if.then, label %if.end, !dbg !659
  br label %if.end4, !dbg !660
  %1 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  %inc = add nsw i32 %1, 1, !dbg !661
  store i32 %inc, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  store i64 4096, i64* @__pagesize, align 8, !dbg !662
  br i1 true, label %if.then1, label %if.end2, !dbg !663
  call void @_locale_init() #10, !dbg !664
  br label %if.end2, !dbg !664
  br i1 true, label %if.then3, label %if.end4, !dbg !666
  call void @_stdio_init() #10, !dbg !667
  br label %if.end4, !dbg !667
  ret void, !dbg !669
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** @__global_locale, align 8, !dbg !658
  call void @_locale_init_l(%struct.__uclibc_locale_struct.160* %0) #10, !dbg !659
  ret void, !dbg !660
  %base.addr = alloca %struct.__uclibc_locale_struct.160*, align 8
  store %struct.__uclibc_locale_struct.160* %base, %struct.__uclibc_locale_struct.160** %base.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__uclibc_locale_struct.160** %base.addr, metadata !1973, metadata !DIExpression()), !dbg !1974
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !662
  %cur_locale = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %0, i32 0, i32 6, !dbg !663
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale, i64 0, i64 0, !dbg !662
  %call = call i8* @memset(i8* %arraydecay, i32 0, i64 14) #10, !dbg !664
  %1 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !665
  %cur_locale1 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %1, i32 0, i32 6, !dbg !666
  %arrayidx = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale1, i64 0, i64 0, !dbg !665
  store i8 35, i8* %arrayidx, align 8, !dbg !667
  %2 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !668
  %category_item_count = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %2, i32 0, i32 8, !dbg !669
  %arraydecay2 = getelementptr inbounds [6 x i8], [6 x i8]* %category_item_count, i64 0, i64 0, !dbg !668
  %3 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !670
  %lc_common_item_offsets_LEN = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %3, i32 0, i32 29, !dbg !671
  %arraydecay3 = getelementptr inbounds [6 x i8], [6 x i8]* %lc_common_item_offsets_LEN, i64 0, i64 0, !dbg !670
  %call4 = call i8* @memcpy(i8* %arraydecay2, i8* %arraydecay3, i64 6) #10, !dbg !672
  %4 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !673
  %category_item_count5 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %4, i32 0, i32 8, !dbg !674
  %arrayidx6 = getelementptr inbounds [6 x i8], [6 x i8]* %category_item_count5, i64 0, i64 0, !dbg !673
  %5 = load i8, i8* %arrayidx6, align 2, !dbg !675
  %inc = add i8 %5, 1, !dbg !675
  store i8 %inc, i8* %arrayidx6, align 2, !dbg !675
  %6 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !676
  %category_offsets = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %6, i32 0, i32 7, !dbg !677
  %arrayidx7 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets, i64 0, i64 0, !dbg !676
  store i16 2488, i16* %arrayidx7, align 2, !dbg !678
  %7 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !679
  %category_offsets8 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %7, i32 0, i32 7, !dbg !680
  %arrayidx9 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets8, i64 0, i64 1, !dbg !679
ck: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31  store i16 2576, i16* %arrayidx9, align 2, !dbg !681
  %8 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !682
  %category_offsets10 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %8, i32 0, i32 7, !dbg !683
  %arrayidx11 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets10, i64 0, i64 2, !dbg !682
  store i16 2600, i16* %arrayidx11, align 2, !dbg !684
  %9 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !685
  %category_offsets12 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %9, i32 0, i32 7, !dbg !686
  %arrayidx13 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets12, i64 0, i64 3, !dbg !685
  store i16 2776, i16* %arrayidx13, align 2, !dbg !687
  %10 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !688
  %category_offsets14 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %10, i32 0, i32 7, !dbg !689
  %arrayidx15 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets14, i64 0, i64 5, !dbg !688
  store i16 3176, i16* %arrayidx15, align 2, !dbg !690
  %11 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !691
  %tbl8ctype = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %11, i32 0, i32 0, !dbg !692
  %12 = bitcast [420 x i8]* %tbl8ctype to i8*, !dbg !693
  %13 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !694
  %tbl8ctype16 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %13, i32 0, i32 13, !dbg !695
  store i8* %12, i8** %tbl8ctype16, align 8, !dbg !696
  %14 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !697
  %tbl8uplow = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %14, i32 0, i32 1, !dbg !698
  %15 = bitcast [504 x i8]* %tbl8uplow to i8*, !dbg !699
  %16 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !700
  %tbl8uplow17 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %16, i32 0, i32 15, !dbg !701
  store i8* %15, i8** %tbl8uplow17, align 8, !dbg !702
  %17 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !703
  %tbl8c2wc = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %17, i32 0, i32 2, !dbg !704
  %18 = bitcast [1760 x i16]* %tbl8c2wc to i16*, !dbg !705
  %19 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !706
  %tbl8c2wc18 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %19, i32 0, i32 17, !dbg !707
  store i16* %18, i16** %tbl8c2wc18, align 8, !dbg !708
  %20 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !709
  %tbl8wc2c = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %20, i32 0, i32 3, !dbg !710
  %21 = bitcast [4528 x i8]* %tbl8wc2c to i8*, !dbg !711
  %22 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !712
  %tbl8wc2c19 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %22, i32 0, i32 19, !dbg !713
  store i8* %21, i8** %tbl8wc2c19, align 8, !dbg !714
  %23 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !715
  %tblwctype = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %23, i32 0, i32 4, !dbg !716
  %24 = bitcast [3604 x i8]* %tblwctype to i8*, !dbg !717
  %25 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !718
  %tblwctype20 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %25, i32 0, i32 21, !dbg !719
  store i8* %24, i8** %tblwctype20, align 8, !dbg !720
  %26 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !721
  %tblwuplow = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %26, i32 0, i32 5, !dbg !722
  %27 = bitcast [1680 x i8]* %tblwuplow to i8*, !dbg !723
  %28 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !724
  %tblwuplow21 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %28, i32 0, i32 22, !dbg !725
  store i8* %27, i8** %tblwuplow21, align 8, !dbg !726
  %29 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !727
  %tblwuplow_diff = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %29, i32 0, i32 6, !dbg !728
  %30 = bitcast [196 x i16]* %tblwuplow_diff to i16*, !dbg !729
  %31 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !730
  %tblwuplow_diff22 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %31, i32 0, i32 23, !dbg !731
  store i16* %30, i16** %tblwuplow_diff22, align 8, !dbg !732
  %32 = load i16*, i16** @__C_ctype_b, align 8, !dbg !733
  %33 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !734
  %__ctype_b = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %33, i32 0, i32 0, !dbg !735
  store i16* %32, i16** %__ctype_b, align 8, !dbg !736
  %34 = load i16*, i16** @__C_ctype_tolower, align 8, !dbg !737
  %35 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !738
  %__ctype_tolower = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %35, i32 0, i32 1, !dbg !739
  store i16* %34, i16** %__ctype_tolower, align 8, !dbg !740
  %36 = load i16*, i16** @__C_ctype_toupper, align 8, !dbg !741
  %37 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !742
  %__ctype_toupper = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %37, i32 0, i32 2, !dbg !743
  store i16* %36, i16** %__ctype_toupper, align 8, !dbg !744
  %38 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !745
  %code2flag = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %38, i32 0, i32 20, !dbg !746
  store i16* getelementptr inbounds ([16 x i16], [16 x i16]* @__code2flag, i64 0, i64 0), i16** %code2flag, align 8, !dbg !747
  %39 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !748
  %call23 = call i32 @_locale_set_l(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), %struct.__uclibc_locale_struct.160* %39) #11, !dbg !749
  ret void, !dbg !750
  %retval = alloca i32, align 4
  %p.addr = alloca i8*, align 8
  %base.addr = alloca %struct.__uclibc_locale_struct.160*, align 8
  %x = alloca i8**, align 8
  %s = alloca i8*, align 8
  %stp = alloca i64*, align 8
  %r = alloca i8*, align 8
  %io = alloca i16*, align 8
  %ii = alloca i16*, align 8
  %d = alloca i8*, align 8
  %row = alloca i32, align 4
  %crow = alloca i32, align 4
  %len = alloca i32, align 4
  %c = alloca i32, align 4
  %i = alloca i32, align 4
  %newcol = alloca %struct.__collate_t.159, align 8
  %c8b = alloca %struct.__codeset_8_bit_t.161*, align 8
  %u = alloca i32, align 4
  %m = alloca i16, align 2
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !1060, metadata !DIExpression()), !dbg !1061
  store %struct.__uclibc_locale_struct.160* %base, %struct.__uclibc_locale_struct.160** %base.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__uclibc_locale_struct.160** %base.addr, metadata !1062, metadata !DIExpression()), !dbg !1063
  call void @llvm.dbg.declare(metadata i8*** %x, metadata !1064, metadata !DIExpression()), !dbg !1065
  call void @llvm.dbg.declare(metadata i8** %s, metadata !1066, metadata !DIExpression()), !dbg !1067
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !668
  %cur_locale = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %0, i32 0, i32 6, !dbg !669
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale, i64 0, i64 0, !dbg !668
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 1, !dbg !670
  store i8* %add.ptr, i8** %s, align 8, !dbg !667
  call void @llvm.dbg.declare(metadata i64** %stp, metadata !1071, metadata !DIExpression()), !dbg !1074
  call void @llvm.dbg.declare(metadata i8** %r, metadata !1075, metadata !DIExpression()), !dbg !1076
  call void @llvm.dbg.declare(metadata i16** %io, metadata !1077, metadata !DIExpression()), !dbg !1078
  call void @llvm.dbg.declare(metadata i16** %ii, metadata !1079, metadata !DIExpression()), !dbg !1080
  call void @llvm.dbg.declare(metadata i8** %d, metadata !1081, metadata !DIExpression()), !dbg !1082
  call void @llvm.dbg.declare(metadata i32* %row, metadata !1083, metadata !DIExpression()), !dbg !1084
  call void @llvm.dbg.declare(metadata i32* %crow, metadata !1085, metadata !DIExpression()), !dbg !1086
  call void @llvm.dbg.declare(metadata i32* %len, metadata !1087, metadata !DIExpression()), !dbg !1088
  call void @llvm.dbg.declare(metadata i32* %c, metadata !1089, metadata !DIExpression()), !dbg !1090
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1091, metadata !DIExpression()), !dbg !1092
  store i32 0, i32* %i, align 4, !dbg !692
  call void @llvm.dbg.declare(metadata %struct.__collate_t.159* %newcol, metadata !1093, metadata !DIExpression()), !dbg !1094
  %1 = load i8*, i8** %p.addr, align 8, !dbg !695
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i32 1, !dbg !695
  store i8* %incdec.ptr, i8** %p.addr, align 8, !dbg !695
  %index2weight = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %newcol, i32 0, i32 23, !dbg !696
  store i16* null, i16** %index2weight, align 8, !dbg !697
  %2 = load i8*, i8** %p.addr, align 8, !dbg !698
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 8, !dbg !698
  %3 = load i8, i8* %arrayidx, align 1, !dbg !698
  %conv = zext i8 %3 to i32, !dbg !698
  %4 = load i8*, i8** %s, align 8, !dbg !700
  %arrayidx1 = getelementptr inbounds i8, i8* %4, i64 8, !dbg !700
  %5 = load i8, i8* %arrayidx1, align 1, !dbg !700
  %conv2 = zext i8 %5 to i32, !dbg !700
  %cmp = icmp ne i32 %conv, %conv2, !dbg !701

//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Ins  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !702
  %6 = load i8*, i8** %p.addr, align 8, !dbg !703
  %arrayidx4 = getelementptr inbounds i8, i8* %6, i64 9, !dbg !703
  %7 = load i8, i8* %arrayidx4, align 1, !dbg !703
  %conv5 = zext i8 %7 to i32, !dbg !703
  %8 = load i8*, i8** %s, align 8, !dbg !704
  %arrayidx6 = getelementptr inbounds i8, i8* %8, i64 9, !dbg !704
  %9 = load i8, i8* %arrayidx6, align 1, !dbg !704
  %conv7 = zext i8 %9 to i32, !dbg !704
  %cmp8 = icmp ne i32 %conv5, %conv7, !dbg !705
  br i1 %cmp8, label %if.then, label %if.end22, !dbg !706
  %10 = load i8*, i8** %p.addr, align 8, !dbg !707
  %11 = load i8, i8* %10, align 1, !dbg !709
  %conv10 = zext i8 %11 to i32, !dbg !709
  %and = and i32 %conv10, 127, !dbg !710
  %shl = shl i32 %and, 7, !dbg !711
  %12 = load i8*, i8** %p.addr, align 8, !dbg !712
  %arrayidx11 = getelementptr inbounds i8, i8* %12, i64 1, !dbg !712
  %13 = load i8, i8* %arrayidx11, align 1, !dbg !712
  %conv12 = zext i8 %13 to i32, !dbg !712
  %and13 = and i32 %conv12, 127, !dbg !713
  %add = add nsw i32 %shl, %and13, !dbg !714
  store i32 %add, i32* %row, align 4, !dbg !715
  %14 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !716
  %locales = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %14, i32 0, i32 31, !dbg !718
  %15 = load i32, i32* %row, align 4, !dbg !719
  %mul = mul nsw i32 9, %15, !dbg !720
  %add14 = add nsw i32 %mul, 3, !dbg !721
  %add15 = add nsw i32 %add14, 4, !dbg !722
  %idxprom = sext i32 %add15 to i64, !dbg !716
  %arrayidx16 = getelementptr inbounds [2826 x i8], [2826 x i8]* %locales, i64 0, i64 %idxprom, !dbg !716
  %16 = load i8, i8* %arrayidx16, align 1, !dbg !716
  %conv17 = zext i8 %16 to i32, !dbg !716
  %call = call i32 @init_cur_collate(i32 %conv17, %struct.__collate_t.159* %newcol) #10, !dbg !723
  %tobool = icmp ne i32 %call, 0, !dbg !723
  br i1 %tobool, label %if.end, label %if.then18, !dbg !724
  store i32 0, i32* %retval, align 4, !dbg !725
  br label %return, !dbg !725
  %17 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !727
  %collate = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %17, i32 0, i32 118, !dbg !728
  %index2weight19 = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %collate, i32 0, i32 23, !dbg !729
  %18 = load i16*, i16** %index2weight19, align 8, !dbg !729
  %19 = bitcast i16* %18 to i8*, !dbg !727
  call void @free(i8* %19) #11, !dbg !730
  %20 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !731
  %collate20 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %20, i32 0, i32 118, !dbg !732
  %21 = bitcast %struct.__collate_t.159* %collate20 to i8*, !dbg !733
  %22 = bitcast %struct.__collate_t.159* %newcol to i8*, !dbg !734
  %call21 = call i8* @memcpy(i8* %21, i8* %22, i64 112) #11, !dbg !735
  br label %if.end22, !dbg !736
  br label %do.body, !dbg !737
  %23 = load i8*, i8** %p.addr, align 8, !dbg !738
  %24 = load i8, i8* %23, align 1, !dbg !741
  %conv23 = zext i8 %24 to i32, !dbg !741
  %25 = load i8*, i8** %s, align 8, !dbg !742
  %26 = load i8, i8* %25, align 1, !dbg !743
  %conv24 = zext i8 %26 to i32, !dbg !743
  %cmp25 = icmp ne i32 %conv23, %conv24, !dbg !744
  br i1 %cmp25, label %if.then34, label %lor.lhs.false27, !dbg !745
  %27 = load i8*, i8** %p.addr, align 8, !dbg !746
  %arrayidx28 = getelementptr inbounds i8, i8* %27, i64 1, !dbg !746
  %28 = load i8, i8* %arrayidx28, align 1, !dbg !746
  %conv29 = zext i8 %28 to i32, !dbg !746
  %29 = load i8*, i8** %s, align 8, !dbg !747
  %arrayidx30 = getelementptr inbounds i8, i8* %29, i64 1, !dbg !747
  %30 = load i8, i8* %arrayidx30, align 1, !dbg !747
  %conv31 = zext i8 %30 to i32, !dbg !747
  %cmp32 = icmp ne i32 %conv29, %conv31, !dbg !748
  br i1 %cmp32, label %if.then34, label %if.end313, !dbg !749
  %31 = load i8*, i8** %p.addr, align 8, !dbg !750
  %32 = load i8, i8* %31, align 1, !dbg !752
  %conv35 = zext i8 %32 to i32, !dbg !752
  %and36 = and i32 %conv35, 127, !dbg !753
  %shl37 = shl i32 %and36, 7, !dbg !754
  %33 = load i8*, i8** %p.addr, align 8, !dbg !755
  %arrayidx38 = getelementptr inbounds i8, i8* %33, i64 1, !dbg !755
  %34 = load i8, i8* %arrayidx38, align 1, !dbg !755
  %conv39 = zext i8 %34 to i32, !dbg !755
  %and40 = and i32 %conv39, 127, !dbg !756
  %add41 = add nsw i32 %shl37, %and40, !dbg !757
  store i32 %add41, i32* %row, align 4, !dbg !758
  %35 = load i8*, i8** %p.addr, align 8, !dbg !759
  %36 = load i8, i8* %35, align 1, !dbg !760
  %37 = load i8*, i8** %s, align 8, !dbg !761
  store i8 %36, i8* %37, align 1, !dbg !762
  %38 = load i8*, i8** %p.addr, align 8, !dbg !763
  %arrayidx42 = getelementptr inbounds i8, i8* %38, i64 1, !dbg !763
  %39 = load i8, i8* %arrayidx42, align 1, !dbg !763
  %40 = load i8*, i8** %s, align 8, !dbg !764
  %arrayidx43 = getelementptr inbounds i8, i8* %40, i64 1, !dbg !764
  store i8 %39, i8* %arrayidx43, align 1, !dbg !765
  %41 = load i32, i32* %i, align 4, !dbg !766
  %cmp44 = icmp ne i32 %41, 4, !dbg !768
  br i1 %cmp44, label %land.lhs.true, label %if.end92, !dbg !769
  %42 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !770
  %lc_common_item_offsets_LEN = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %42, i32 0, i32 29, !dbg !771
  %43 = load i32, i32* %i, align 4, !dbg !772
  %idxprom46 = sext i32 %43 to i64, !dbg !770
  %arrayidx47 = getelementptr inbounds [6 x i8], [6 x i8]* %lc_common_item_offsets_LEN, i64 0, i64 %idxprom46, !dbg !770
  %44 = load i8, i8* %arrayidx47, align 1, !dbg !770
  %conv48 = zext i8 %44 to i32, !dbg !770
  store i32 %conv48, i32* %len, align 4, !dbg !773
  %cmp49 = icmp ne i32 %conv48, 0, !dbg !774
  br i1 %cmp49, label %if.then51, label %if.end92, !dbg !775
  %45 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !776
  %locales52 = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %45, i32 0, i32 31, !dbg !778
  %46 = load i32, i32* %row, align 4, !dbg !779
  %mul53 = mul nsw i32 9, %46, !dbg !780
  %add54 = add nsw i32 %mul53, 3, !dbg !781
  %47 = load i32, i32* %i, align 4, !dbg !782
  %add55 = add nsw i32 %add54, %47, !dbg !783
  %idxprom56 = sext i32 %add55 to i64, !dbg !776
  %arrayidx57 = getelementptr inbounds [2826 x i8], [2826 x i8]* %locales52, i64 0, i64 %idxprom56, !dbg !776
  %48 = load i8, i8* %arrayidx57, align 1, !dbg !776
  %conv58 = zext i8 %48 to i32, !dbg !776
  %49 = load i32, i32* %len, align 4, !dbg !784
  %mul59 = mul nsw i32 %conv58, %49, !dbg !785
  store i32 %mul59, i32* %crow, align 4, !dbg !786
  %50 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !787
  %51 = bitcast %struct.__uclibc_locale_struct.160* %50 to i8*, !dbg !788
  %52 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !789
  %category_offsets = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %52, i32 0, i32 7, !dbg !790
  %53 = load i32, i32* %i, align 4, !dbg !791
  %idxprom60 = sext i32 %53 to i64, !dbg !789
  %arrayidx61 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets, i64 0, i64 %idxprom60, !dbg !789
tructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in st  %54 = load i16, i16* %arrayidx61, align 2, !dbg !789
  %conv62 = zext i16 %54 to i32, !dbg !789
  %idx.ext = sext i32 %conv62 to i64, !dbg !792
  %add.ptr63 = getelementptr inbounds i8, i8* %51, i64 %idx.ext, !dbg !792
  %55 = bitcast i8* %add.ptr63 to i8**, !dbg !793
  store i8** %55, i8*** %x, align 8, !dbg !794
  %56 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !795
  %lc_common_tbl_offsets = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %56, i32 0, i32 30, !dbg !796
  %arraydecay64 = getelementptr inbounds [24 x i64], [24 x i64]* %lc_common_tbl_offsets, i64 0, i64 0, !dbg !795
  %57 = load i32, i32* %i, align 4, !dbg !797
  %mul65 = mul nsw i32 4, %57, !dbg !798
  %idx.ext66 = sext i32 %mul65 to i64, !dbg !799
  %add.ptr67 = getelementptr inbounds i64, i64* %arraydecay64, i64 %idx.ext66, !dbg !799
  store i64* %add.ptr67, i64** %stp, align 8, !dbg !800
  %58 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !801
  %59 = bitcast %struct.__locale_mmap_t.162* %58 to i8*, !dbg !802
  %60 = load i64*, i64** %stp, align 8, !dbg !803
  %61 = load i64, i64* %60, align 8, !dbg !804
  %add.ptr68 = getelementptr inbounds i8, i8* %59, i64 %61, !dbg !805
  store i8* %add.ptr68, i8** %r, align 8, !dbg !806
  %62 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !807
  %63 = bitcast %struct.__locale_mmap_t.162* %62 to i8*, !dbg !808
  %64 = load i64*, i64** %stp, align 8, !dbg !809
  %incdec.ptr69 = getelementptr inbounds i64, i64* %64, i32 1, !dbg !809
  store i64* %incdec.ptr69, i64** %stp, align 8, !dbg !809
  %65 = load i64, i64* %incdec.ptr69, align 8, !dbg !810
  %add.ptr70 = getelementptr inbounds i8, i8* %63, i64 %65, !dbg !811
  %66 = bitcast i8* %add.ptr70 to i16*, !dbg !812
  store i16* %66, i16** %io, align 8, !dbg !813
  %67 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !814
  %68 = bitcast %struct.__locale_mmap_t.162* %67 to i8*, !dbg !815
  %69 = load i64*, i64** %stp, align 8, !dbg !816
  %incdec.ptr71 = getelementptr inbounds i64, i64* %69, i32 1, !dbg !816
  store i64* %incdec.ptr71, i64** %stp, align 8, !dbg !816
  %70 = load i64, i64* %incdec.ptr71, align 8, !dbg !817
  %add.ptr72 = getelementptr inbounds i8, i8* %68, i64 %70, !dbg !818
  %71 = bitcast i8* %add.ptr72 to i16*, !dbg !819
  store i16* %71, i16** %ii, align 8, !dbg !820
  %72 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !821
  %73 = bitcast %struct.__locale_mmap_t.162* %72 to i8*, !dbg !822
  %74 = load i64*, i64** %stp, align 8, !dbg !823
  %incdec.ptr73 = getelementptr inbounds i64, i64* %74, i32 1, !dbg !823
  store i64* %incdec.ptr73, i64** %stp, align 8, !dbg !823
  %75 = load i64, i64* %incdec.ptr73, align 8, !dbg !824
  %add.ptr74 = getelementptr inbounds i8, i8* %73, i64 %75, !dbg !825
  store i8* %add.ptr74, i8** %d, align 8, !dbg !826
  store i32 0, i32* %c, align 4, !dbg !827
  br label %for.cond, !dbg !829
  %76 = load i32, i32* %c, align 4, !dbg !830
  %77 = load i32, i32* %len, align 4, !dbg !832
  %cmp75 = icmp slt i32 %76, %77, !dbg !833
  br i1 %cmp75, label %for.body, label %for.end, !dbg !834
  %78 = load i8*, i8** %d, align 8, !dbg !835
  %79 = load i16*, i16** %ii, align 8, !dbg !837
  %80 = load i8*, i8** %r, align 8, !dbg !838
  %81 = load i32, i32* %crow, align 4, !dbg !839
  %82 = load i32, i32* %c, align 4, !dbg !840
  %add77 = add nsw i32 %81, %82, !dbg !841
  %idxprom78 = sext i32 %add77 to i64, !dbg !838
  %arrayidx79 = getelementptr inbounds i8, i8* %80, i64 %idxprom78, !dbg !838
  %83 = load i8, i8* %arrayidx79, align 1, !dbg !838
  %conv80 = zext i8 %83 to i32, !dbg !838
  %84 = load i16*, i16** %io, align 8, !dbg !842
  %85 = load i32, i32* %c, align 4, !dbg !843
  %idxprom81 = sext i32 %85 to i64, !dbg !842
  %arrayidx82 = getelementptr inbounds i16, i16* %84, i64 %idxprom81, !dbg !842
  %86 = load i16, i16* %arrayidx82, align 2, !dbg !842
  %conv83 = zext i16 %86 to i32, !dbg !842
  %add84 = add nsw i32 %conv80, %conv83, !dbg !844
  %idxprom85 = sext i32 %add84 to i64, !dbg !837
  %arrayidx86 = getelementptr inbounds i16, i16* %79, i64 %idxprom85, !dbg !837
  %87 = load i16, i16* %arrayidx86, align 2, !dbg !837
  %conv87 = zext i16 %87 to i32, !dbg !837
  %idx.ext88 = sext i32 %conv87 to i64, !dbg !845
  %add.ptr89 = getelementptr inbounds i8, i8* %78, i64 %idx.ext88, !dbg !845
  %88 = load i8**, i8*** %x, align 8, !dbg !846
  %89 = load i32, i32* %c, align 4, !dbg !847
  %idx.ext90 = sext i32 %89 to i64, !dbg !848
  %add.ptr91 = getelementptr inbounds i8*, i8** %88, i64 %idx.ext90, !dbg !848
  store i8* %add.ptr89, i8** %add.ptr91, align 8, !dbg !849
  br label %for.inc, !dbg !850
  %90 = load i32, i32* %c, align 4, !dbg !851
  %inc = add nsw i32 %90, 1, !dbg !851
  store i32 %inc, i32* %c, align 4, !dbg !851
  br label %for.cond, !dbg !852, !llvm.loop !853
  br label %if.end92, !dbg !855
  %91 = load i32, i32* %i, align 4, !dbg !856
  %cmp93 = icmp eq i32 %91, 0, !dbg !858
  br i1 %cmp93, label %if.then95, label %if.else295, !dbg !859
  %92 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !860
  %locales96 = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %92, i32 0, i32 31, !dbg !862
  %93 = load i32, i32* %row, align 4, !dbg !863
  %mul97 = mul nsw i32 9, %93, !dbg !864
  %add98 = add nsw i32 %mul97, 2, !dbg !865
  %idxprom99 = sext i32 %add98 to i64, !dbg !860
  %arrayidx100 = getelementptr inbounds [2826 x i8], [2826 x i8]* %locales96, i64 0, i64 %idxprom99, !dbg !860
  %94 = load i8, i8* %arrayidx100, align 1, !dbg !860
  %conv101 = zext i8 %94 to i32, !dbg !860
  store i32 %conv101, i32* %c, align 4, !dbg !866
  %95 = load i32, i32* %c, align 4, !dbg !867
  %cmp102 = icmp sle i32 %95, 2, !dbg !869
  br i1 %cmp102, label %if.then104, label %if.else112, !dbg !870
  %96 = load i32, i32* %c, align 4, !dbg !871
  %cmp105 = icmp eq i32 %96, 2, !dbg !874
  br i1 %cmp105, label %if.then107, label %if.else, !dbg !875
  %97 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !876
  %codeset = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %97, i32 0, i32 38, !dbg !878
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @utf8, i64 0, i64 0), i8** %codeset, align 8, !dbg !879
  %98 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !880
  %encoding = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %98, i32 0, i32 9, !dbg !881
  store i8 1, i8* %encoding, align 8, !dbg !882
  %99 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !883
  %mb_cur_max = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %99, i32 0, i32 10, !dbg !884
  store i8 6, i8* %mb_cur_max, align 1, !dbg !885
  br label %if.end111, !dbg !886
  %100 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !887
  %codeset108 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %100, i32 0, i32 38, !dbg !889
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @ascii, i64 0, i64 0), i8** %codeset108, align 8, !dbg !890
  %101 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !891
  %encoding109 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %101, i32 0, i32 9, !dbg !892
  store i8 0, i8* %encoding109, align 8, !dbg !893
  %102 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !894
  %mb_cur_max110 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %102, i32 0, i32 10, !dbg !895
  store i8 1, i8* %mb_cur_max110, align 1, !dbg !896
ack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.190
//Instructions in stack: Num.191
//Instructions in stack: Num.192
//Instructions in stack: Num.193
//Instructions in stack: Num.194
//Instructions in stack: Num.195
//Instructions in stack: Num.196
//Instructions in stack: Num.197
//Instructions in stack: Num.198
//Instructions in stack: Num.199
//Instructions in stack: Num.200
//Instructions in stack: Num.201
//Instructions in stack: Num.202
//Instructions in stack: Num.203
//Instructions in stack: Num.204
//Instructions in stack: Num.205
//Instructions in stack: Num.206
//Instructions in stack: Num.207
//Instructions in stack: Num.208
//Instructions in stack: Num.209
//Instructions in stack: Num.210
//Instructions in stack: Num.211
//Instructions in stack: Num.212
//Instructions in stack: Num.213
//Instructions in stack: Num.214
//Instructions in stack: Num.215
//Instructions in stack: Num.216
//Instructions in stack: Num.217
//Instructions in stack: Num.218
//Instructions in stack: Num.219
//Instructions in stack: Num.220
//Instructions in stack: Num.221
//Instructions in stack: Num.222
//Instructions in stack: Num.223
//Instructions in stack: Num.224
//Instructions in stack: Num.225
//Instructions in stack: Num.226
//Instructions in stack: Num.227
//Instructions in stack: Num.228
//Instructions in stack: Num.229
//Instructions in stack: Num.230
//Instructions in stack: Num.231
//Instructions in stack: Num.232
//Instructions in stack: Num.233
//Instructions in stack: Num.234
//Instructions in stack: Num.235
//Instructions in stack: Num.236
//Instructions in stack: Num.237
//Instructions in stack: Num.238
//Instructions in stack: Num.239
//Instructions in stack: Num.240
//Instructions in stack: Num.241
//Instructions in stack: Num.242
//Instructions in stack: Num.243
//Instructions in stack: Num.244
//Instructions in stack: Num.245
//Instructions in stack: Num.246
//Instructions in stack: Num.247
//Instructions in stack: Num.248
//Instructions in stack: Num.249
//Instructions in stack: Num.250
//Instructions in stack: Num.251
//Instructions in stack: Num.252
//Instructions in stack: Num.253
//Instructions in stack: Num.254
//Instructions in stack: Num.255
//Instructions in stack: Num.256
//Instructions in stack: Num.257
//Instructions in stack: Num.258
//Instructions in stack: Num.259
//Instructions in stack: Num.260
//Instructions in stack: Num.261
//Instructions in stack: Num.262
//Instructions in stack: Num.263
//Instructions in stack: Num.264
//Instructions in stack: Num.265
//Instructions in stack: Num.266
//Instructions in stack: Num.267
//Instructions in stack: Num.268
//Instructions in stack: Num.269
//Instructions in stack: Num.270
//Instructions in stack: Num.271
//Instructions in stack: Num.272
//Instructions in stack: Num.273
//Instructions in stack: Num.274
//Instructions in stack: Num.275
//Instructions in stack: Num.276
//Instructions in stack: Num.277
//Instructions in stack: Num.278
//Instructions in stack: Num.279
//Instructions in stack: Num.280
//Instructions in stack: Num.281
//Instructions in stack: Num.282
//Instructions in stack: Num.283
//Instructions in stack: Num.284
//Instructions in stack: Num.285
//Instructions in stack: Num.286
//Instructions in stack: Num.287
//Instructions in stack: Num.288
//Instructions in stack: Num.289
//Instructions in stack: Num.290
//Instructions in stack: Num.291
//Instructions in stack: Num.292
//Instructions in stack: Num.293
//Instructions in stack: Num.294
//Instructions in stack: Num.295
//Instructions in stack: Num.296
//Instructions in stack: Num.297
//Instructions in stack: Num.298
//Instructions in stack: Num.299
//Instructions in stack: Num.300
//Instructions in stack: Num.301
//Instructions in stack: Num.302
//Instructions in stack: Num.303
//Instructions in stack: Num.304
//Instructions in stack:  br label %if.end111
  br label %if.end280, !dbg !897
  call void @llvm.dbg.declare(metadata %struct.__codeset_8_bit_t.161** %c8b, metadata !1298, metadata !DIExpression()), !dbg !1310
  %103 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !911
  %codeset_list = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %103, i32 0, i32 35, !dbg !911
  %arraydecay113 = getelementptr inbounds [255 x i8], [255 x i8]* %codeset_list, i64 0, i64 0, !dbg !911
  store i8* %arraydecay113, i8** %r, align 8, !dbg !912
  %104 = load i8*, i8** %r, align 8, !dbg !913
  %105 = load i8*, i8** %r, align 8, !dbg !914
  %106 = load i32, i32* %c, align 4, !dbg !915
  %sub = sub nsw i32 %106, 3, !dbg !915
  store i32 %sub, i32* %c, align 4, !dbg !915
  %idxprom114 = sext i32 %sub to i64, !dbg !914
  %arrayidx115 = getelementptr inbounds i8, i8* %105, i64 %idxprom114, !dbg !914
  %107 = load i8, i8* %arrayidx115, align 1, !dbg !914
  %conv116 = zext i8 %107 to i32, !dbg !914
  %idx.ext117 = sext i32 %conv116 to i64, !dbg !916
  %add.ptr118 = getelementptr inbounds i8, i8* %104, i64 %idx.ext117, !dbg !916
  %108 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !917
  %codeset119 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %108, i32 0, i32 38, !dbg !918
  store i8* %add.ptr118, i8** %codeset119, align 8, !dbg !919
  %109 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !920
  %encoding120 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %109, i32 0, i32 9, !dbg !921
  store i8 2, i8* %encoding120, align 8, !dbg !922
  %110 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !923
  %mb_cur_max121 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %110, i32 0, i32 10, !dbg !924
  store i8 1, i8* %mb_cur_max121, align 1, !dbg !925
  %111 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !926
  %codeset_8_bit = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %111, i32 0, i32 12, !dbg !927
  %arraydecay122 = getelementptr inbounds [23 x %struct.__codeset_8_bit_t.161], [23 x %struct.__codeset_8_bit_t.161]* %codeset_8_bit, i64 0, i64 0, !dbg !926
  %112 = load i32, i32* %c, align 4, !dbg !928
  %idx.ext123 = sext i32 %112 to i64, !dbg !929
  %add.ptr124 = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %arraydecay122, i64 %idx.ext123, !dbg !929
  store %struct.__codeset_8_bit_t.161* %add.ptr124, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !930
  %113 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !931
  %idx8ctype = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %113, i32 0, i32 0, !dbg !932
  %arraydecay125 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8ctype, i64 0, i64 0, !dbg !931
  %114 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !933
  %idx8ctype126 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %114, i32 0, i32 12, !dbg !934
  store i8* %arraydecay125, i8** %idx8ctype126, align 8, !dbg !935
  %115 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !936
  %idx8uplow = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %115, i32 0, i32 1, !dbg !937
  %arraydecay127 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8uplow, i64 0, i64 0, !dbg !936
  %116 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !938
  %idx8uplow128 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %116, i32 0, i32 14, !dbg !939
  store i8* %arraydecay127, i8** %idx8uplow128, align 8, !dbg !940
  %117 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !941
  %idx8c2wc = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %117, i32 0, i32 2, !dbg !942
  %arraydecay129 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8c2wc, i64 0, i64 0, !dbg !941
  %118 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !943
  %idx8c2wc130 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %118, i32 0, i32 16, !dbg !944
  store i8* %arraydecay129, i8** %idx8c2wc130, align 8, !dbg !945
  %119 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !946
  %idx8wc2c = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %119, i32 0, i32 3, !dbg !947
  %arraydecay131 = getelementptr inbounds [38 x i8], [38 x i8]* %idx8wc2c, i64 0, i64 0, !dbg !946
  %120 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !948
  %idx8wc2c132 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %120, i32 0, i32 18, !dbg !949
  store i8* %arraydecay131, i8** %idx8wc2c132, align 8, !dbg !950
  %121 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !951
  %__ctype_b_data = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %121, i32 0, i32 3, !dbg !952
  %arraydecay133 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data, i64 0, i64 0, !dbg !951
  %122 = bitcast i16* %arraydecay133 to i8*, !dbg !951
  %123 = load i16*, i16** @__C_ctype_b, align 8, !dbg !953
  %add.ptr134 = getelementptr inbounds i16, i16* %123, i64 -128, !dbg !954
  %124 = bitcast i16* %add.ptr134 to i8*, !dbg !953
  %call135 = call i8* @memcpy(i8* %122, i8* %124, i64 768) #11, !dbg !955
  %125 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !956
  %__ctype_tolower_data = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %125, i32 0, i32 4, !dbg !957
  %arraydecay136 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data, i64 0, i64 0, !dbg !956
  %126 = bitcast i16* %arraydecay136 to i8*, !dbg !956
  %127 = load i16*, i16** @__C_ctype_tolower, align 8, !dbg !958
  %add.ptr137 = getelementptr inbounds i16, i16* %127, i64 -128, !dbg !959
  %128 = bitcast i16* %add.ptr137 to i8*, !dbg !958
  %call138 = call i8* @memcpy(i8* %126, i8* %128, i64 768) #11, !dbg !960
  %129 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !961
  %__ctype_toupper_data = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %129, i32 0, i32 5, !dbg !962
  %arraydecay139 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data, i64 0, i64 0, !dbg !961
  %130 = bitcast i16* %arraydecay139 to i8*, !dbg !961
  %131 = load i16*, i16** @__C_ctype_toupper, align 8, !dbg !963
  %add.ptr140 = getelementptr inbounds i16, i16* %131, i64 -128, !dbg !964
  %132 = bitcast i16* %add.ptr140 to i8*, !dbg !963
  %call141 = call i8* @memcpy(i8* %130, i8* %132, i64 768) #11, !dbg !965
  call void @llvm.dbg.declare(metadata i32* %u, metadata !1366, metadata !DIExpression()), !dbg !1368
  call void @llvm.dbg.declare(metadata i16* %m, metadata !1369, metadata !DIExpression()), !dbg !1370
  store i32 0, i32* %u, align 4, !dbg !971
  br label %for.cond142, !dbg !973
  %133 = load i32, i32* %u, align 4, !dbg !974
  %cmp143 = icmp slt i32 %133, 128, !dbg !976
  br i1 %cmp143, label %for.body145, label %for.end270, !dbg !977
  %134 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !978
  %tbl8ctype = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %134, i32 0, i32 13, !dbg !980
  %135 = load i8*, i8** %tbl8ctype, align 8, !dbg !980
  %136 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !981
  %idx8ctype146 = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %136, i32 0, i32 0, !dbg !982
  %137 = load i32, i32* %u, align 4, !dbg !983
  %shr = ashr i32 %137, 3, !dbg !984
  %idxprom147 = sext i32 %shr to i64, !dbg !981
  %arrayidx148 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8ctype146, i64 0, i64 %idxprom147, !dbg !981
  %138 = load i8, i8* %arrayidx148, align 1, !dbg !981
  %conv149 = zext i8 %138 to i32, !dbg !985
  %shl150 = shl i32 %conv149, 2, !dbg !986
  %139 = load i32, i32* %u, align 4, !dbg !987
  %and151 = and i32 %139, 7, !dbg !988
  %shr152 = ashr i32 %and151, 1, !dbg !989
  %add153 = add nsw i32 %shl150, %shr152, !dbg !990
  %idxprom154 = sext i32 %add153 to i64, !dbg !978
  %arrayidx155 = getelementptr inbounds i8, i8* %135, i64 %idxprom154, !dbg !978
  %140 = load i8, i8* %arrayidx155, align 1, !dbg !978
  %conv156 = zext i8 %140 to i32, !dbg !978
  store i32 %conv156, i32* %c, align 4, !dbg !991
  %141 = load i32, i32* %u, align 4, !dbg !992
  %and157 = and i32 %141, 1, !dbg !993
  %tobool158 = icmp ne i32 %and157, 0, !dbg !993
  br i1 %tobool158, label %cond.true, label %cond.false, !dbg !994
  %142 = load i32, i32* %c, align 4, !dbg !995
  %shr159 = ashr i32 %142, 4, !dbg !996
  br label %cond.end, !dbg !994
  %143 = load i32, i32* %c, align 4, !dbg !997
  %and160 = and i32 %143, 15, !dbg !998
  br label %cond.end, !dbg !994
  %cond = phi i32 [ %shr159, %cond.true ], [ %and160, %cond.false ], !dbg !994
  store i32 %cond, i32* %c, align 4, !dbg !999
  %144 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1000
  %code2flag = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %144, i32 0, i32 20, !dbg !1001
 Num.305
//Instructions in stack: Num.306
//Instructions in stack: Num.307
//Instructions in stack: Num.308
//Instructions in stack: Num.309
//Instructions in stack: Num.310
//Instructions in stack: Num.311
//Instructions in stack: Num.312
//Instructions in stack: Num.313
//Instructions in stack: Num.314
//Instructions in stack: Num.315
//Instructions in stack: Num.316
//Instructions in stack: Num.317
//Instructions in stack: Num.318
//Instructions in stack: Num.319
//Instructions in stack: Num.320
//Instructions in stack: Num.321
//Instructions in stack: Num.322
//Instructions in stack: Num.323
//Instructions in stack: Num.324
//Instructions in stack: Num.325
//Instructions in stack: Num.326
//Instructions in stack: Num.327
//Instructions in stack: Num.328
//Instructions in stack: Num.329
//Instructions in stack: Num.330
//Instructions in stack: Num.331
//Instructions in stack: Num.332
//Instructions in stack: Num.333
//Instructions in stack: Num.334
//Instructions in stack: Num.335
//Instructions in stack: Num.336
//Instructions in stack: Num.337
//Instructions in stack: Num.338
//Instructions in stack: Num.339
//Instructions in stack: Num.340
//Instructions in stack: Num.341
//Instructions in stack: Num.342
//Instructions in stack: Num.343
//Instructions in stack: Num.344
//Instructions in stack: Num.345
//Instructions in stack: Num.346
//Instructions in stack: Num.347
//Instructions in stack: Num.348
//Instructions in stack: Num.349
//Instructions in stack: Num.350
//Instructions in stack: Num.351
//Instructions in stack: Num.352
//Instructions in stack: Num.353
//Instructions in stack: Num.354
//Instructions in stack: Num.355
//Instructions in stack: Num.356
//Instructions in stack: Num.357
//Instructions in stack: Num.358
//Instructions in stack: Num.359
//Instructions in stack: Num.360
//Instructions in stack: Num.361
//Instructions in stack: Num.362
//Instructions in stack: Num.363
//Instructions in stack: Num.364
//Instructions in stack: Num.365
//Instructions in stack: Num.366
//Instructions in stack: Num.367
//Instructions in stack: Num.368
//Instructions in stack: Num.369
//Instructions in stack: Num.370
//Instructions in stack: Num.371
//Instructions in stack: Num.372
//Instructions in stack: Num.373
//Instructions in stack: Num.374
//Instructions in stack: Num.375
//Instructions in stack: Num.376
//Instructions in stack: Num.377
//Instructions in stack: Num.378
//Instructions in stack: Num.379
//Instructions in stack: Num.380
//Instructions in stack: Num.381
//Instructions in stack: Num.382
//Instructions in stack: Num.383
//Instructions in stack: Num.384
//Instructions in stack: Num.385
//Instructions in stack: Num.386
//Instructions in stack: Num.387
//Instructions in stack: Num.388
//Instructions in stack: Num.389
//Instructions in stack: Num.390
//Instructions in stack: Num.391
//Instructions in stack: Num.392
//Instructions in stack: Num.393
//Instructions in stack: Num.394
//Instructions in stack: Num.395
//Instructions in stack: Num.396
//Instructions in stack: Num.397
//Instructions in stack: Num.398
//Instructions in stack: Num.399
//Instructions in stack: Num.400
//Instructions in stack: Num.401
//Instructions in stack: Num.402
//Instructions in stack: Num.403
//Instructions in stack: Num.404
//Instructions in stack: Num.405
//Instructions in stack: Num.406
//Instructions in stack: Num.407
//Instructions in stack: Num.408
//Instructions in stack: Num.409
//Instructions in stack: Num.410
//Instructions in stack: Num.411
//Instructions in stack: Num.412
//Instructions in stack: Num.413
//Instructions in stack: Num.414
//Instructions in stack: Num.415
//Instructions in stack: Num.416
//Instructions in stack: Num.417
//Instructions in stack: Num.418
//Instructions in stack: Num.419
//Instructions in stack: Num.420
//Instructions in stack: Num.421
//Instructions in stack: Num.422
//Instructions in stack: Num.423
//Instructions in stack: Num.424
//Instructions in stack: Num.425
//Instructions in stack: Num.426
//Instructions in stack: Num.427
//Instructions in stack: Num.428
//Instructions in stack: Num  %145 = load i16*, i16** %code2flag, align 8, !dbg !1001
  %146 = load i32, i32* %c, align 4, !dbg !1002
  %idxprom161 = sext i32 %146 to i64, !dbg !1000
  %arrayidx162 = getelementptr inbounds i16, i16* %145, i64 %idxprom161, !dbg !1000
  %147 = load i16, i16* %arrayidx162, align 2, !dbg !1000
  store i16 %147, i16* %m, align 2, !dbg !1003
  %148 = load i16, i16* %m, align 2, !dbg !1004
  %149 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1005
  %__ctype_b_data163 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %149, i32 0, i32 3, !dbg !1006
  %150 = load i32, i32* %u, align 4, !dbg !1007
  %add164 = add nsw i32 256, %150, !dbg !1008
  %idxprom165 = sext i32 %add164 to i64, !dbg !1005
  %arrayidx166 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data163, i64 0, i64 %idxprom165, !dbg !1005
  store i16 %148, i16* %arrayidx166, align 2, !dbg !1009
  %151 = load i32, i32* %u, align 4, !dbg !1010
  %add167 = add nsw i32 128, %151, !dbg !1012
  %conv168 = trunc i32 %add167 to i8, !dbg !1013
  %conv169 = sext i8 %conv168 to i32, !dbg !1014
  %cmp170 = icmp ne i32 %conv169, -1, !dbg !1015
  br i1 %cmp170, label %if.then172, label %if.end180, !dbg !1016
  %152 = load i16, i16* %m, align 2, !dbg !1017
  %153 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1019
  %__ctype_b_data173 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %153, i32 0, i32 3, !dbg !1020
  %154 = load i32, i32* %u, align 4, !dbg !1021
  %add174 = add nsw i32 128, %154, !dbg !1022
  %conv175 = trunc i32 %add174 to i8, !dbg !1023
  %conv176 = sext i8 %conv175 to i32, !dbg !1024
  %add177 = add nsw i32 128, %conv176, !dbg !1025
  %idxprom178 = sext i32 %add177 to i64, !dbg !1019
  %arrayidx179 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data173, i64 0, i64 %idxprom178, !dbg !1019
  store i16 %152, i16* %arrayidx179, align 2, !dbg !1026
  br label %if.end180, !dbg !1027
  %155 = load i32, i32* %u, align 4, !dbg !1028
  %add181 = add nsw i32 128, %155, !dbg !1029
  %conv182 = trunc i32 %add181 to i16, !dbg !1030
  %156 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1031
  %__ctype_tolower_data183 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %156, i32 0, i32 4, !dbg !1032
  %157 = load i32, i32* %u, align 4, !dbg !1033
  %add184 = add nsw i32 256, %157, !dbg !1034
  %idxprom185 = sext i32 %add184 to i64, !dbg !1031
  %arrayidx186 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data183, i64 0, i64 %idxprom185, !dbg !1031
  store i16 %conv182, i16* %arrayidx186, align 2, !dbg !1035
  %158 = load i32, i32* %u, align 4, !dbg !1036
  %add187 = add nsw i32 128, %158, !dbg !1037
  %conv188 = trunc i32 %add187 to i16, !dbg !1038
  %159 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1039
  %__ctype_toupper_data189 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %159, i32 0, i32 5, !dbg !1040
  %160 = load i32, i32* %u, align 4, !dbg !1041
  %add190 = add nsw i32 256, %160, !dbg !1042
  %idxprom191 = sext i32 %add190 to i64, !dbg !1039
  %arrayidx192 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data189, i64 0, i64 %idxprom191, !dbg !1039
  store i16 %conv188, i16* %arrayidx192, align 2, !dbg !1043
  %161 = load i16, i16* %m, align 2, !dbg !1044
  %conv193 = zext i16 %161 to i32, !dbg !1044
  %and194 = and i32 %conv193, 768, !dbg !1046
  %tobool195 = icmp ne i32 %and194, 0, !dbg !1046
  br i1 %tobool195, label %if.then196, label %if.end267, !dbg !1047
  %162 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1048
  %tbl8uplow = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %162, i32 0, i32 15, !dbg !1050
  %163 = load i8*, i8** %tbl8uplow, align 8, !dbg !1050
  %164 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !1051
  %idx8uplow197 = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %164, i32 0, i32 1, !dbg !1052
  %165 = load i32, i32* %u, align 4, !dbg !1053
  %shr198 = ashr i32 %165, 3, !dbg !1054
  %idxprom199 = sext i32 %shr198 to i64, !dbg !1051
  %arrayidx200 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8uplow197, i64 0, i64 %idxprom199, !dbg !1051
  %166 = load i8, i8* %arrayidx200, align 1, !dbg !1051
  %conv201 = zext i8 %166 to i32, !dbg !1055
  %shl202 = shl i32 %conv201, 3, !dbg !1056
  %167 = load i32, i32* %u, align 4, !dbg !1057
  %add203 = add nsw i32 128, %167, !dbg !1058
  %and204 = and i32 %add203, 7, !dbg !1059
  %add205 = add nsw i32 %shl202, %and204, !dbg !1060
  %idxprom206 = sext i32 %add205 to i64, !dbg !1048
  %arrayidx207 = getelementptr inbounds i8, i8* %163, i64 %idxprom206, !dbg !1048
  %168 = load i8, i8* %arrayidx207, align 1, !dbg !1048
  %conv208 = zext i8 %168 to i32, !dbg !1048
  store i32 %conv208, i32* %c, align 4, !dbg !1061
  %169 = load i16, i16* %m, align 2, !dbg !1062
  %conv209 = zext i16 %169 to i32, !dbg !1062
  %and210 = and i32 %conv209, 512, !dbg !1064
  %tobool211 = icmp ne i32 %and210, 0, !dbg !1064
  br i1 %tobool211, label %if.then212, label %if.else239, !dbg !1065
  %170 = load i32, i32* %u, align 4, !dbg !1066
  %add213 = add nsw i32 128, %170, !dbg !1068
  %171 = load i32, i32* %c, align 4, !dbg !1069
  %add214 = add nsw i32 %add213, %171, !dbg !1070
  %conv215 = trunc i32 %add214 to i8, !dbg !1071
  %conv216 = zext i8 %conv215 to i16, !dbg !1071
  %172 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1072
  %__ctype_toupper_data217 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %172, i32 0, i32 5, !dbg !1073
  %173 = load i32, i32* %u, align 4, !dbg !1074
  %add218 = add nsw i32 256, %173, !dbg !1075
  %idxprom219 = sext i32 %add218 to i64, !dbg !1072
  %arrayidx220 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data217, i64 0, i64 %idxprom219, !dbg !1072
  store i16 %conv216, i16* %arrayidx220, align 2, !dbg !1076
  %174 = load i32, i32* %u, align 4, !dbg !1077
  %add221 = add nsw i32 128, %174, !dbg !1079
  %conv222 = trunc i32 %add221 to i8, !dbg !1080
  %conv223 = sext i8 %conv222 to i32, !dbg !1081
  %cmp224 = icmp ne i32 %conv223, -1, !dbg !1082
  br i1 %cmp224, label %if.then226, label %if.end238, !dbg !1083
  %175 = load i32, i32* %u, align 4, !dbg !1084
  %add227 = add nsw i32 128, %175, !dbg !1086
  %176 = load i32, i32* %c, align 4, !dbg !1087
  %add228 = add nsw i32 %add227, %176, !dbg !1088
  %conv229 = trunc i32 %add228 to i8, !dbg !1089
  %conv230 = zext i8 %conv229 to i16, !dbg !1089
  %177 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1090
  %__ctype_toupper_data231 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %177, i32 0, i32 5, !dbg !1091
  %178 = load i32, i32* %u, align 4, !dbg !1092
  %add232 = add nsw i32 128, %178, !dbg !1093
  %conv233 = trunc i32 %add232 to i8, !dbg !1094
  %conv234 = sext i8 %conv233 to i32, !dbg !1095
  %add235 = add nsw i32 128, %conv234, !dbg !1096
  %idxprom236 = sext i32 %add235 to i64, !dbg !1090
  %arrayidx237 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data231, i64 0, i64 %idxprom236, !dbg !1090
  store i16 %conv230, i16* %arrayidx237, align 2, !dbg !1097
  br label %if.end238, !dbg !1098
  br label %if.end266, !dbg !1099
  %179 = load i32, i32* %u, align 4, !dbg !1100
  %add240 = add nsw i32 128, %179, !dbg !1102
  %180 = load i32, i32* %c, align 4, !dbg !1103
  %sub241 = sub nsw i32 %add240, %180, !dbg !1104
.429
//Instructions in stack: Num.430
//Instructions in stack: Num.431
//Instructions in stack: Num.432
//Instructions in stack: Num.433
//Instructions in stack: Num.434
//Instructions in stack: Num.435
//Instructions in stack: Num.436
//Instructions in stack: Num.437
//Instructions in stack: Num.438
//Instructions in stack: Num.439
//Instructions in stack: Num.440
//Instructions in stack: Num.441
//Instructions in stack: Num.442
//Instructions in stack: Num.443
//Instructions in stack: Num.444
//Instructions in stack: Num.445
//Instructions in stack: Num.446
//Instructions in stack: Num.447
//Instructions in stack: Num.448
//Instructions in stack: Num.449
//Instructions in stack: Num.450
//Instructions in stack: Num.451
//Instructions in stack: Num.452
//Instructions in stack: Num.453
//Instructions in stack: Num.454
//Instructions in stack: Num.455
//Instructions in stack: Num.456
//Instructions in stack: Num.457
//Instructions in stack: Num.458
//Instructions in stack: Num.459
//Instructions in stack: Num.460
//Instructions in stack: Num.461
//Instructions in stack: Num.462
//Instructions in stack: Num.463
//Instructions in stack: Num.464
//Instructions in stack: Num.465
//Instructions in stack: Num.466
//Instructions in stack: Num.467
//Instructions in stack: Num.468
//Instructions in stack: Num.469
//Instructions in stack: Num.470
//Instructions in stack: Num.471
//Instructions in stack: Num.472
//Instructions in stack: Num.473
//Instructions in stack: Num.474
//Instructions in stack: Num.475
//Instructions in stack: Num.476
//Instructions in stack: Num.477
//Instructions in stack: Num.478
//Instructions in stack: Num.479
//Instructions in stack: Num.480
//Instructions in stack: Num.481
//Instructions in stack: Num.482
//Instructions in stack: Num.483
//Instructions in stack: Num.484
//Instructions in stack: Num.485
//Instructions in stack: Num.486
//Instructions in stack: Num.487
//Instructions in stack: Num.488
//Instructions in stack: Num.489
//Instructions in stack: Num.490
//Instructions in stack: Num.491
//Instructions in stack: Num.492
//Instructions in stack: Num.493
//Instructions in stack: Num.494
//Instructions in stack: Num.495
//Instructions in stack: Num.496
//Instructions in stack: Num.497
//Instructions in stack: Num.498
//Instructions in stack: Num.499
//Instructions in stack: Num.500
//Instructions in stack: Num.501
//Instructions in stack: Num.502
//Instructions in stack: Num.503
//Instructions in stack: Num.504
//Instructions in stack: Num.505
//Instructions in stack: Num.506
//Instructions in stack: Num.507
//Instructions in stack: Num.508
//Instructions in stack: Num.509
//Instructions in stack: Num.510
//Instructions in stack: Num.511
//Instructions in stack: Num.512
//Instructions in stack: Num.513
//Instructions in stack: Num.514
//Instructions in stack: Num.515
//Instructions in stack: Num.516
//Instructions in stack: Num.517
//Instructions in stack: Num.518
//Instructions in stack: Num.519
//Instructions in stack: Num.520
//Instructions in stack: Num.521
//Instructions in stack: Num.522
//Instructions in stack: Num.523
//Instructions in stack: Num.524
//Instructions in stack: Num.525
//Instructions in stack: Num.526
//Instructions in stack: Num.527
//Instructions in stack: Num.528
//Instructions in stack: Num.529
//Instructions in stack: Num.530
//Instructions in stack: Num.531
//Instructions in stack: Num.532
//Instructions in stack: Num.533
//Instructions in stack: Num.534
//Instructions in stack: Num.535
//Instructions in stack: Num.536
//Instructions in stack: Num.537
//Instructions in stack: Num.538
//Instructions in stack: Num.539
//Instructions in stack: Num.540
//Instructions in stack: Num.541
//Instructions in stack: Num.542
//Instructions in stack: Num.543
//Instructions in stack: Num.544
//Instructions in stack: Num.545
//Instructions in stack: Num.546
//Instructions in stack: Num.547
//Instructions in stack: Num.548
//Instructions in stack: Num.549
//Instructions in stack: Num.550
//Instructions in stack: Num.551
//Instructions in stack: Num.552
//Instructions in stack: Num.553  %conv242 = trunc i32 %sub241 to i8, !dbg !1105
  %conv243 = zext i8 %conv242 to i16, !dbg !1105
  %181 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1106
  %__ctype_tolower_data244 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %181, i32 0, i32 4, !dbg !1107
  %182 = load i32, i32* %u, align 4, !dbg !1108
  %add245 = add nsw i32 256, %182, !dbg !1109
  %idxprom246 = sext i32 %add245 to i64, !dbg !1106
  %arrayidx247 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data244, i64 0, i64 %idxprom246, !dbg !1106
  store i16 %conv243, i16* %arrayidx247, align 2, !dbg !1110
  %183 = load i32, i32* %u, align 4, !dbg !1111
  %add248 = add nsw i32 128, %183, !dbg !1113
  %conv249 = trunc i32 %add248 to i8, !dbg !1114
  %conv250 = sext i8 %conv249 to i32, !dbg !1115
  %cmp251 = icmp ne i32 %conv250, -1, !dbg !1116
  br i1 %cmp251, label %if.then253, label %if.end265, !dbg !1117
  %184 = load i32, i32* %u, align 4, !dbg !1118
  %add254 = add nsw i32 128, %184, !dbg !1120
  %185 = load i32, i32* %c, align 4, !dbg !1121
  %sub255 = sub nsw i32 %add254, %185, !dbg !1122
  %conv256 = trunc i32 %sub255 to i8, !dbg !1123
  %conv257 = zext i8 %conv256 to i16, !dbg !1123
  %186 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1124
  %__ctype_tolower_data258 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %186, i32 0, i32 4, !dbg !1125
  %187 = load i32, i32* %u, align 4, !dbg !1126
  %add259 = add nsw i32 128, %187, !dbg !1127
  %conv260 = trunc i32 %add259 to i8, !dbg !1128
  %conv261 = sext i8 %conv260 to i32, !dbg !1129
  %add262 = add nsw i32 128, %conv261, !dbg !1130
  %idxprom263 = sext i32 %add262 to i64, !dbg !1124
  %arrayidx264 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data258, i64 0, i64 %idxprom263, !dbg !1124
  store i16 %conv257, i16* %arrayidx264, align 2, !dbg !1131
  br label %if.end265, !dbg !1132
  br label %if.end266
  br label %if.end267, !dbg !1133
  br label %for.inc268, !dbg !1134
  %188 = load i32, i32* %u, align 4, !dbg !1135
  %inc269 = add nsw i32 %188, 1, !dbg !1135
  store i32 %inc269, i32* %u, align 4, !dbg !1135
  br label %for.cond142, !dbg !1136, !llvm.loop !1137
  %189 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1139
  %__ctype_b_data271 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %189, i32 0, i32 3, !dbg !1140
  %arraydecay272 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data271, i64 0, i64 0, !dbg !1139
  %add.ptr273 = getelementptr inbounds i16, i16* %arraydecay272, i64 128, !dbg !1141
  %190 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1142
  %__ctype_b = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %190, i32 0, i32 0, !dbg !1143
  store i16* %add.ptr273, i16** %__ctype_b, align 8, !dbg !1144
  %191 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1145
  %__ctype_tolower_data274 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %191, i32 0, i32 4, !dbg !1146
  %arraydecay275 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data274, i64 0, i64 0, !dbg !1145
  %add.ptr276 = getelementptr inbounds i16, i16* %arraydecay275, i64 128, !dbg !1147
  %192 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1148
  %__ctype_tolower = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %192, i32 0, i32 1, !dbg !1149
  store i16* %add.ptr276, i16** %__ctype_tolower, align 8, !dbg !1150
  %193 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1151
  %__ctype_toupper_data277 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %193, i32 0, i32 5, !dbg !1152
  %arraydecay278 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data277, i64 0, i64 0, !dbg !1151
  %add.ptr279 = getelementptr inbounds i16, i16* %arraydecay278, i64 128, !dbg !1153
  %194 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1154
  %__ctype_toupper = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %194, i32 0, i32 2, !dbg !1155
  store i16* %add.ptr279, i16** %__ctype_toupper, align 8, !dbg !1156
  br label %if.end280
  %195 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1157
  %outdigit_length = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %195, i32 0, i32 11, !dbg !1158
  %arraydecay281 = getelementptr inbounds [10 x i8], [10 x i8]* %outdigit_length, i64 0, i64 0, !dbg !1157
  store i8* %arraydecay281, i8** %d, align 8, !dbg !1159
  %196 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1160
  %outdigit0_mb = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %196, i32 0, i32 28, !dbg !1161
  store i8** %outdigit0_mb, i8*** %x, align 8, !dbg !1162
  store i32 0, i32* %c, align 4, !dbg !1163
  br label %for.cond282, !dbg !1165
  %197 = load i32, i32* %c, align 4, !dbg !1166
  %cmp283 = icmp slt i32 %197, 10, !dbg !1168
  br i1 %cmp283, label %for.body285, label %for.end294, !dbg !1169
  %198 = load i8**, i8*** %x, align 8, !dbg !1170
  %199 = load i32, i32* %c, align 4, !dbg !1172
  %idxprom286 = sext i32 %199 to i64, !dbg !1170
  %arrayidx287 = getelementptr inbounds i8*, i8** %198, i64 %idxprom286, !dbg !1170
  %200 = load i8*, i8** %arrayidx287, align 8, !dbg !1170
  %call288 = call i64 @strlen(i8* %200) #12, !dbg !1173
  %conv289 = trunc i64 %call288 to i8, !dbg !1173
  %201 = load i8*, i8** %d, align 8, !dbg !1174
  %202 = load i32, i32* %c, align 4, !dbg !1175
  %idxprom290 = sext i32 %202 to i64, !dbg !1176
  %arrayidx291 = getelementptr inbounds i8, i8* %201, i64 %idxprom290, !dbg !1176
  store i8 %conv289, i8* %arrayidx291, align 1, !dbg !1177
  br label %for.inc292, !dbg !1178
  %203 = load i32, i32* %c, align 4, !dbg !1179
  %inc293 = add nsw i32 %203, 1, !dbg !1179
  store i32 %inc293, i32* %c, align 4, !dbg !1179
  br label %for.cond282, !dbg !1180, !llvm.loop !1181
  br label %if.end312, !dbg !1183
  %204 = load i32, i32* %i, align 4, !dbg !1184
  %cmp296 = icmp eq i32 %204, 1, !dbg !1186
  br i1 %cmp296, label %if.then298, label %if.end311, !dbg !1187
  %205 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1188
  %decimal_point_wc = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %205, i32 0, i32 24, !dbg !1190
  %206 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1191
  %decimal_point = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %206, i32 0, i32 39, !dbg !1192
  %207 = load i8*, i8** %decimal_point, align 8, !dbg !1192
  %208 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1193
  %call299 = call i32 @__locale_mbrtowc_l(i32* %decimal_point_wc, i8* %207, %struct.__uclibc_locale_struct.160* %208) #10, !dbg !1194
  %209 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1195
  %decimal_point_len = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %209, i32 0, i32 26, !dbg !1196
  store i32 %call299, i32* %decimal_point_len, align 8, !dbg !1197
  %210 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1198
  %grouping = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %210, i32 0, i32 41, !dbg !1200
  %211 = load i8*, i8** %grouping, align 8, !dbg !1200
  %212 = load i8, i8* %211, align 1, !dbg !1201
  %tobool300 = icmp ne i8 %212, 0, !dbg !1201
  br i1 %tobool300, label %if.then301, label %if.end310, !dbg !1202
  %213 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1203
  %thousands_sep_wc = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %213, i32 0, i32 25, !dbg !1205
  %214 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1206
  %thousands_sep = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %214, i32 0, i32 40, !dbg !1207
  %215 = load i8*, i8** %thousands_sep, align 8, !dbg !1207
  %216 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1208
  %call302 = call i32 @__locale_mbrtowc_l(i32* %thousands_sep_wc, i8* %215, %struct.__uclibc_locale_struct.160* %216) #10, !dbg !1209
  %217 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1210
  %thousands_sep_len = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %217, i32 0, i32 27, !dbg !1211
  store i32 %call302, i32* %thousands_sep_len, align 4, !dbg !1212
  %218 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1213
  %thousands_sep_len303 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %218, i32 0, i32 27, !dbg !1215
  %219 = load i32, i32* %thousands_sep_len303, align 4, !dbg !1215
  %cmp304 = icmp eq i32 %219, 0, !dbg !1216
  br i1 %cmp304, label %if.then306, label %if.end309, !dbg !1217

//Instructions in stack: Num.554
//Instructions in stack: Num.555
//Instructions in stack: Num.556
//Instructions in stack: Num.557
//Instructions in stack: Num.558
//Instructions in stack: Num.559
//Instructions in stack: Num.560
//Instructions in stack: Num.561
//Instructions in stack: Num.562
//Instructions in stack: Num.563
//Instructions in stack: Num.564
//Instructions in stack: Num.565
//Instructions in stack: Num.566
//Instructions in stack: Num.567
//Instructions in stack: Num.568
//Instructions in stack: Num.569
//Instructions in stack: Num.570
//Instructions in stack: Num.571
//Instructions in stack: Num.572
//Instructions in stack: Num.573
//Instructions in stack: Num.574
//Instructions in stack: Num.575
//Instructions in stack: Num.576
//Instructions in stack: Num.577
//Instructions in stack: Num.578
//Instructions in stack: Num.579
//Instructions in stack: Num.580
//Instructions in stack: Num.581
//Instructions in stack: Num.582
//Instructions in stack: Num.583
//Instructions in stack: Num.584
//Instructions in stack: Num.585
//Instructions in stack: Num.586
//Instructions in stack: Num.587
//Instructions in stack: Num.588
//Instructions in stack: Num.589
//Instructions in stack: Num.590
//Instructions in stack: Num.591
//Instructions in stack: Num.592
//Instructions in stack: Num.593
//Instructions in stack: Num.594
//Instructions in stack: Num.595
//Instructions in stack: Num.596
//Instructions in stack: Num.597
//Instructions in stack: Num.598
//Instructions in stack: Num.599
//Instructions in stack: Num.600
//Instructions in stack: Num.601
//Instructions in stack: Num.602
//Instructions in stack: Num.603
//Instructions in stack: Num.604
//Instructions in stack: Num.605
//Instructions in stack: Num.606
//Instructions in stack: Num.607
//Instructions in stack: Num.608
//Instructions in stack: Num.609
//Instructions in stack: Num.610
//Instructions in stack: Num.611
//Instructions in stack: Num.612
//Instructions in stack: Num.613
//Instructions in stack: Num.614
//Instructions in stack: Num.615
//Instructions in stack: Num.616
//Instructions in stack: Num.617
//Instructions in stack: Num.618
//Instructions in stack: Num.619
//Instructions in stack: Num.620
//Instructions in stack: Num.621
//Instructions in stack: Num.622
//Instructions in stack: Num.623
//Instructions in stack: Num.624
//Instructions in stack: Num.625
//Instructions in stack: Num.626
//Instructions in stack: Num.627
//Instructions in stack: Num.628
//Instructions in stack: Num.629
//Instructions in stack: Num.630
//Instructions in stack: Num.631
//Instructions in stack: Num.632
//Instructions in stack: Num.633
//Instructions in stack: Num.634
//Instructions in stack: Num.635
//Instructions in stack: Num.636
//Instructions in stack: Num.637
//Instructions in stack: Num.638
//Instructions in stack: Num.639
//Instructions in stack: Num.640
//Instructions in stack: Num.641
//Instructions in stack: Num.642
//Instructions in stack: Num.643
//Instructions in stack: Num.644
//Instructions in stack: Num.645
//Instructions in stack: Num.646
//Instructions in stack: Num.647
//Instructions in stack: Num.648
//Instructions in stack: Num.649
//Instructions in stack: Num.650
//Instructions in stack: Num.651
//Instructions in stack: Num.652
//Instructions in stack: Num.653
//Instructions in stack: Num.654
//Instructions in stack: Num.655
//Instructions in stack: Num.656
//Instructions in stack: Num.657
//Instructions in stack: Num.658
//Instructions in stack: Num.659
//Instructions in stack: Num.660
//Instructions in stack: Num.661
//Instructions in stack: Num.662
//Instructions in stack: Num.663
//Instructions in stack: Num.664
//Instructions in stack: Num.665
//Instructions in stack: Num.666
//Instructions in stack: Num.667
//Instructions in stack: Num.668
//Instructions in stack: Num.669
//Instructions in stack: Num.670
//Instructions in stack: Num.671
//Instructions in stack: Num.672
//Instructions in stack: Num.673
//Instructions in stack: Num.674
//Instructions in stack: Num.675
//Instructions in stack: Num.676
//Instructions in stack: Num.677
//I  %220 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1218
  %thousands_sep307 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %220, i32 0, i32 40, !dbg !1220
  %221 = load i8*, i8** %thousands_sep307, align 8, !dbg !1220
  %222 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1221
  %grouping308 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %222, i32 0, i32 41, !dbg !1222
  store i8* %221, i8** %grouping308, align 8, !dbg !1223
  br label %if.end309, !dbg !1224
  br label %if.end310, !dbg !1225
  br label %if.end311, !dbg !1226
  br label %if.end312
  br label %if.end313, !dbg !1227
  %223 = load i32, i32* %i, align 4, !dbg !1228
  %inc314 = add nsw i32 %223, 1, !dbg !1228
  store i32 %inc314, i32* %i, align 4, !dbg !1228
  %224 = load i8*, i8** %p.addr, align 8, !dbg !1229
  %add.ptr315 = getelementptr inbounds i8, i8* %224, i64 2, !dbg !1229
  store i8* %add.ptr315, i8** %p.addr, align 8, !dbg !1229
  %225 = load i8*, i8** %s, align 8, !dbg !1230
  %add.ptr316 = getelementptr inbounds i8, i8* %225, i64 2, !dbg !1230
  store i8* %add.ptr316, i8** %s, align 8, !dbg !1230
  br label %do.cond, !dbg !1231
  %226 = load i32, i32* %i, align 4, !dbg !1232
  %cmp317 = icmp slt i32 %226, 6, !dbg !1233
  br i1 %cmp317, label %do.body, label %do.end, !dbg !1231, !llvm.loop !1234
  store i32 1, i32* %retval, align 4, !dbg !1236
  br label %return, !dbg !1236
  %227 = load i32, i32* %retval, align 4, !dbg !1237
  ret i32 %227, !dbg !1237
  %s.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !2692, metadata !DIExpression()), !dbg !2693
  call void @llvm.dbg.declare(metadata i8** %p, metadata !2694, metadata !DIExpression()), !dbg !2695
  %0 = load i8*, i8** %s.addr, align 8, !dbg !664
  store i8* %0, i8** %p, align 8, !dbg !666
  br label %for.cond, !dbg !667
  %1 = load i8*, i8** %p, align 8, !dbg !668
  %2 = load i8, i8* %1, align 1, !dbg !670
  %tobool = icmp ne i8 %2, 0, !dbg !671
  br i1 %tobool, label %for.body, label %for.end, !dbg !671
  br label %for.inc, !dbg !671
  %3 = load i8*, i8** %p, align 8, !dbg !672
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !672
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !672
  br label %for.cond, !dbg !673, !llvm.loop !674
  %4 = load i8*, i8** %p, align 8, !dbg !676
  %5 = load i8*, i8** %s.addr, align 8, !dbg !677
  %sub.ptr.lhs.cast = ptrtoint i8* %4 to i64, !dbg !678
  %sub.ptr.rhs.cast = ptrtoint i8* %5 to i64, !dbg !678
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !678
  ret i64 %sub.ptr.sub, !dbg !679
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
nstructions in stack: Num.678
//Instructions in stack: Num.679
//Instructions in stack: Num.680
//Instructions in stack: Num.681
//Instructions in stack: Num.682
//Instructions in stack: Num.683
//Instructions in stack: Num.684
//Instructions in stack: Num.685
//Instructions in stack: Num.686
//Instructions in stack: Num.687
//Instructions in stack: Num.688
//Instructions in stack: Num.689
//Instructions in stack: Num.690
//Instructions in stack: Num.691
//Instructions in stack: Num.692
//Instructions in stack: Num.693
//Instructions in stack: Num.694
//Instructions in stack: Num.695
//Instructions in stack: Num.696
//Instructions in stack: Num.697
//Instructions in stack: Num.698
//Instructions in stack: Num.699
//Instructions in stack: Num.700
//Instructions in stack: Num.701
//Instructions in stack: Num.702
//Instructions in stack: Num.703
//Instructions in stack: Num.704
//Instructions in stack: Num.705
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  %0 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !657
  %tobool = icmp ne i32 %0, 0, !dbg !657
  br i1 %tobool, label %if.then, label %if.end, !dbg !659
  br label %if.end4, !dbg !660
  %1 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  %inc = add nsw i32 %1, 1, !dbg !661
  store i32 %inc, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  store i64 4096, i64* @__pagesize, align 8, !dbg !662
  br i1 true, label %if.then1, label %if.end2, !dbg !663
  call void @_locale_init() #10, !dbg !664
74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instruction  br label %if.end2, !dbg !664
  br i1 true, label %if.then3, label %if.end4, !dbg !666
  call void @_stdio_init() #10, !dbg !667
  br label %if.end4, !dbg !667
  ret void, !dbg !669
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** @__global_locale, align 8, !dbg !658
  call void @_locale_init_l(%struct.__uclibc_locale_struct.160* %0) #10, !dbg !659
  ret void, !dbg !660
  %base.addr = alloca %struct.__uclibc_locale_struct.160*, align 8
  store %struct.__uclibc_locale_struct.160* %base, %struct.__uclibc_locale_struct.160** %base.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__uclibc_locale_struct.160** %base.addr, metadata !1973, metadata !DIExpression()), !dbg !1974
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !662
  %cur_locale = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %0, i32 0, i32 6, !dbg !663
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale, i64 0, i64 0, !dbg !662
  %call = call i8* @memset(i8* %arraydecay, i32 0, i64 14) #10, !dbg !664
  %1 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !665
  %cur_locale1 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %1, i32 0, i32 6, !dbg !666
  %arrayidx = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale1, i64 0, i64 0, !dbg !665
  store i8 35, i8* %arrayidx, align 8, !dbg !667
  %2 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !668
  %category_item_count = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %2, i32 0, i32 8, !dbg !669
  %arraydecay2 = getelementptr inbounds [6 x i8], [6 x i8]* %category_item_count, i64 0, i64 0, !dbg !668
  %3 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !670
  %lc_common_item_offsets_LEN = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %3, i32 0, i32 29, !dbg !671
  %arraydecay3 = getelementptr inbounds [6 x i8], [6 x i8]* %lc_common_item_offsets_LEN, i64 0, i64 0, !dbg !670
  %call4 = call i8* @memcpy(i8* %arraydecay2, i8* %arraydecay3, i64 6) #10, !dbg !672
  %4 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !673
  %category_item_count5 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %4, i32 0, i32 8, !dbg !674
  %arrayidx6 = getelementptr inbounds [6 x i8], [6 x i8]* %category_item_count5, i64 0, i64 0, !dbg !673
  %5 = load i8, i8* %arrayidx6, align 2, !dbg !675
  %inc = add i8 %5, 1, !dbg !675
  store i8 %inc, i8* %arrayidx6, align 2, !dbg !675
  %6 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !676
  %category_offsets = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %6, i32 0, i32 7, !dbg !677
  %arrayidx7 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets, i64 0, i64 0, !dbg !676
  store i16 2488, i16* %arrayidx7, align 2, !dbg !678
  %7 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !679
  %category_offsets8 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %7, i32 0, i32 7, !dbg !680
  %arrayidx9 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets8, i64 0, i64 1, !dbg !679
  store i16 2576, i16* %arrayidx9, align 2, !dbg !681
  %8 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !682
  %category_offsets10 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %8, i32 0, i32 7, !dbg !683
  %arrayidx11 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets10, i64 0, i64 2, !dbg !682
  store i16 2600, i16* %arrayidx11, align 2, !dbg !684
  %9 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !685
  %category_offsets12 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %9, i32 0, i32 7, !dbg !686
  %arrayidx13 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets12, i64 0, i64 3, !dbg !685
  store i16 2776, i16* %arrayidx13, align 2, !dbg !687
  %10 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !688
  %category_offsets14 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %10, i32 0, i32 7, !dbg !689
  %arrayidx15 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets14, i64 0, i64 5, !dbg !688
  store i16 3176, i16* %arrayidx15, align 2, !dbg !690
  %11 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !691
  %tbl8ctype = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %11, i32 0, i32 0, !dbg !692
  %12 = bitcast [420 x i8]* %tbl8ctype to i8*, !dbg !693
  %13 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !694
  %tbl8ctype16 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %13, i32 0, i32 13, !dbg !695
  store i8* %12, i8** %tbl8ctype16, align 8, !dbg !696
  %14 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !697
  %tbl8uplow = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %14, i32 0, i32 1, !dbg !698
  %15 = bitcast [504 x i8]* %tbl8uplow to i8*, !dbg !699
  %16 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !700
  %tbl8uplow17 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %16, i32 0, i32 15, !dbg !701
  store i8* %15, i8** %tbl8uplow17, align 8, !dbg !702
  %17 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !703
  %tbl8c2wc = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %17, i32 0, i32 2, !dbg !704
  %18 = bitcast [1760 x i16]* %tbl8c2wc to i16*, !dbg !705
  %19 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !706
  %tbl8c2wc18 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %19, i32 0, i32 17, !dbg !707
  store i16* %18, i16** %tbl8c2wc18, align 8, !dbg !708
  %20 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !709
  %tbl8wc2c = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %20, i32 0, i32 3, !dbg !710
  %21 = bitcast [4528 x i8]* %tbl8wc2c to i8*, !dbg !711
  %22 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !712
  %tbl8wc2c19 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %22, i32 0, i32 19, !dbg !713
  store i8* %21, i8** %tbl8wc2c19, align 8, !dbg !714
  %23 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !715
  %tblwctype = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %23, i32 0, i32 4, !dbg !716
  %24 = bitcast [3604 x i8]* %tblwctype to i8*, !dbg !717
  %25 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !718
  %tblwctype20 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %25, i32 0, i32 21, !dbg !719
  store i8* %24, i8** %tblwctype20, align 8, !dbg !720
  %26 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !721
  %tblwuplow = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %26, i32 0, i32 5, !dbg !722
  %27 = bitcast [1680 x i8]* %tblwuplow to i8*, !dbg !723
  %28 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !724
  %tblwuplow21 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %28, i32 0, i32 22, !dbg !725
  store i8* %27, i8** %tblwuplow21, align 8, !dbg !726
  %29 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !727
  %tblwuplow_diff = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %29, i32 0, i32 6, !dbg !728
  %30 = bitcast [196 x i16]* %tblwuplow_diff to i16*, !dbg !729
  %31 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !730
  %tblwuplow_diff22 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %31, i32 0, i32 23, !dbg !731
  store i16* %30, i16** %tblwuplow_diff22, align 8, !dbg !732
  %32 = load i16*, i16** @__C_ctype_b, align 8, !dbg !733
  %33 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !734
  %__ctype_b = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %33, i32 0, i32 0, !dbg !735
  store i16* %32, i16** %__ctype_b, align 8, !dbg !736
  %34 = load i16*, i16** @__C_ctype_tolower, align 8, !dbg !737
  %35 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !738
  %__ctype_tolower = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %35, i32 0, i32 1, !dbg !739
  store i16* %34, i16** %__ctype_tolower, align 8, !dbg !740
  %36 = load i16*, i16** @__C_ctype_toupper, align 8, !dbg !741
  %37 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !742
  %__ctype_toupper = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %37, i32 0, i32 2, !dbg !743
  store i16* %36, i16** %__ctype_toupper, align 8, !dbg !744
  %38 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !745
  %code2flag = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %38, i32 0, i32 20, !dbg !746
  store i16* getelementptr inbounds ([16 x i16], [16 x i16]* @__code2flag, i64 0, i64 0), i16** %code2flag, align 8, !dbg !747
  %39 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !748
  %call23 = call i32 @_locale_set_l(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), %struct.__uclibc_locale_struct.160* %39) #11, !dbg !749
  ret void, !dbg !750
  %retval = alloca i32, align 4
  %p.addr = alloca i8*, align 8
  %base.addr = alloca %struct.__uclibc_locale_struct.160*, align 8
  %x = alloca i8**, align 8
  %s = alloca i8*, align 8
  %stp = alloca i64*, align 8
  %r = alloca i8*, align 8
  %io = alloca i16*, align 8
  %ii = alloca i16*, align 8
  %d = alloca i8*, align 8
  %row = alloca i32, align 4
  %crow = alloca i32, align 4
  %len = alloca i32, align 4
  %c = alloca i32, align 4
  %i = alloca i32, align 4
  %newcol = alloca %struct.__collate_t.159, align 8
  %c8b = alloca %struct.__codeset_8_bit_t.161*, align 8
s in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
  %u = alloca i32, align 4
  %m = alloca i16, align 2
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !1060, metadata !DIExpression()), !dbg !1061
  store %struct.__uclibc_locale_struct.160* %base, %struct.__uclibc_locale_struct.160** %base.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__uclibc_locale_struct.160** %base.addr, metadata !1062, metadata !DIExpression()), !dbg !1063
  call void @llvm.dbg.declare(metadata i8*** %x, metadata !1064, metadata !DIExpression()), !dbg !1065
  call void @llvm.dbg.declare(metadata i8** %s, metadata !1066, metadata !DIExpression()), !dbg !1067
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !668
  %cur_locale = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %0, i32 0, i32 6, !dbg !669
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale, i64 0, i64 0, !dbg !668
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 1, !dbg !670
  store i8* %add.ptr, i8** %s, align 8, !dbg !667
  call void @llvm.dbg.declare(metadata i64** %stp, metadata !1071, metadata !DIExpression()), !dbg !1074
  call void @llvm.dbg.declare(metadata i8** %r, metadata !1075, metadata !DIExpression()), !dbg !1076
  call void @llvm.dbg.declare(metadata i16** %io, metadata !1077, metadata !DIExpression()), !dbg !1078
  call void @llvm.dbg.declare(metadata i16** %ii, metadata !1079, metadata !DIExpression()), !dbg !1080
  call void @llvm.dbg.declare(metadata i8** %d, metadata !1081, metadata !DIExpression()), !dbg !1082
  call void @llvm.dbg.declare(metadata i32* %row, metadata !1083, metadata !DIExpression()), !dbg !1084
  call void @llvm.dbg.declare(metadata i32* %crow, metadata !1085, metadata !DIExpression()), !dbg !1086
  call void @llvm.dbg.declare(metadata i32* %len, metadata !1087, metadata !DIExpression()), !dbg !1088
  call void @llvm.dbg.declare(metadata i32* %c, metadata !1089, metadata !DIExpression()), !dbg !1090
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1091, metadata !DIExpression()), !dbg !1092
  store i32 0, i32* %i, align 4, !dbg !692
  call void @llvm.dbg.declare(metadata %struct.__collate_t.159* %newcol, metadata !1093, metadata !DIExpression()), !dbg !1094
  %1 = load i8*, i8** %p.addr, align 8, !dbg !695
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i32 1, !dbg !695
  store i8* %incdec.ptr, i8** %p.addr, align 8, !dbg !695
  %index2weight = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %newcol, i32 0, i32 23, !dbg !696
  store i16* null, i16** %index2weight, align 8, !dbg !697
  %2 = load i8*, i8** %p.addr, align 8, !dbg !698
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 8, !dbg !698
  %3 = load i8, i8* %arrayidx, align 1, !dbg !698
  %conv = zext i8 %3 to i32, !dbg !698
  %4 = load i8*, i8** %s, align 8, !dbg !700
  %arrayidx1 = getelementptr inbounds i8, i8* %4, i64 8, !dbg !700
  %5 = load i8, i8* %arrayidx1, align 1, !dbg !700
  %conv2 = zext i8 %5 to i32, !dbg !700
  %cmp = icmp ne i32 %conv, %conv2, !dbg !701
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !702
  %6 = load i8*, i8** %p.addr, align 8, !dbg !703
  %arrayidx4 = getelementptr inbounds i8, i8* %6, i64 9, !dbg !703
  %7 = load i8, i8* %arrayidx4, align 1, !dbg !703
  %conv5 = zext i8 %7 to i32, !dbg !703
  %8 = load i8*, i8** %s, align 8, !dbg !704
  %arrayidx6 = getelementptr inbounds i8, i8* %8, i64 9, !dbg !704
  %9 = load i8, i8* %arrayidx6, align 1, !dbg !704
  %conv7 = zext i8 %9 to i32, !dbg !704
  %cmp8 = icmp ne i32 %conv5, %conv7, !dbg !705
  br i1 %cmp8, label %if.then, label %if.end22, !dbg !706
  %10 = load i8*, i8** %p.addr, align 8, !dbg !707
  %11 = load i8, i8* %10, align 1, !dbg !709
  %conv10 = zext i8 %11 to i32, !dbg !709
  %and = and i32 %conv10, 127, !dbg !710
  %shl = shl i32 %and, 7, !dbg !711
  %12 = load i8*, i8** %p.addr, align 8, !dbg !712
  %arrayidx11 = getelementptr inbounds i8, i8* %12, i64 1, !dbg !712
  %13 = load i8, i8* %arrayidx11, align 1, !dbg !712
  %conv12 = zext i8 %13 to i32, !dbg !712
  %and13 = and i32 %conv12, 127, !dbg !713
  %add = add nsw i32 %shl, %and13, !dbg !714
  store i32 %add, i32* %row, align 4, !dbg !715
  %14 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !716
  %locales = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %14, i32 0, i32 31, !dbg !718
  %15 = load i32, i32* %row, align 4, !dbg !719
  %mul = mul nsw i32 9, %15, !dbg !720
  %add14 = add nsw i32 %mul, 3, !dbg !721
  %add15 = add nsw i32 %add14, 4, !dbg !722
  %idxprom = sext i32 %add15 to i64, !dbg !716
  %arrayidx16 = getelementptr inbounds [2826 x i8], [2826 x i8]* %locales, i64 0, i64 %idxprom, !dbg !716
  %16 = load i8, i8* %arrayidx16, align 1, !dbg !716
  %conv17 = zext i8 %16 to i32, !dbg !716
  %call = call i32 @init_cur_collate(i32 %conv17, %struct.__collate_t.159* %newcol) #10, !dbg !723
  %tobool = icmp ne i32 %call, 0, !dbg !723
  br i1 %tobool, label %if.end, label %if.then18, !dbg !724
  store i32 0, i32* %retval, align 4, !dbg !725
  br label %return, !dbg !725
  %17 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !727
  %collate = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %17, i32 0, i32 118, !dbg !728
  %index2weight19 = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %collate, i32 0, i32 23, !dbg !729
  %18 = load i16*, i16** %index2weight19, align 8, !dbg !729
  %19 = bitcast i16* %18 to i8*, !dbg !727
  call void @free(i8* %19) #11, !dbg !730
  %20 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !731
  %collate20 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %20, i32 0, i32 118, !dbg !732
  %21 = bitcast %struct.__collate_t.159* %collate20 to i8*, !dbg !733
  %22 = bitcast %struct.__collate_t.159* %newcol to i8*, !dbg !734
  %call21 = call i8* @memcpy(i8* %21, i8* %22, i64 112) #11, !dbg !735
  br label %if.end22, !dbg !736
  br label %do.body, !dbg !737
  %23 = load i8*, i8** %p.addr, align 8, !dbg !738
  %24 = load i8, i8* %23, align 1, !dbg !741
  %conv23 = zext i8 %24 to i32, !dbg !741
  %25 = load i8*, i8** %s, align 8, !dbg !742
  %26 = load i8, i8* %25, align 1, !dbg !743
  %conv24 = zext i8 %26 to i32, !dbg !743
  %cmp25 = icmp ne i32 %conv23, %conv24, !dbg !744
  br i1 %cmp25, label %if.then34, label %lor.lhs.false27, !dbg !745
  %27 = load i8*, i8** %p.addr, align 8, !dbg !746
  %arrayidx28 = getelementptr inbounds i8, i8* %27, i64 1, !dbg !746
  %28 = load i8, i8* %arrayidx28, align 1, !dbg !746
  %conv29 = zext i8 %28 to i32, !dbg !746
  %29 = load i8*, i8** %s, align 8, !dbg !747
  %arrayidx30 = getelementptr inbounds i8, i8* %29, i64 1, !dbg !747
  %30 = load i8, i8* %arrayidx30, align 1, !dbg !747
  %conv31 = zext i8 %30 to i32, !dbg !747
  %cmp32 = icmp ne i32 %conv29, %conv31, !dbg !748
  br i1 %cmp32, label %if.then34, label %if.end313, !dbg !749
  %31 = load i8*, i8** %p.addr, align 8, !dbg !750
  %32 = load i8, i8* %31, align 1, !dbg !752
  %conv35 = zext i8 %32 to i32, !dbg !752
  %and36 = and i32 %conv35, 127, !dbg !753
  %shl37 = shl i32 %and36, 7, !dbg !754
  %33 = load i8*, i8** %p.addr, align 8, !dbg !755
  %arrayidx38 = getelementptr inbounds i8, i8* %33, i64 1, !dbg !755
  %34 = load i8, i8* %arrayidx38, align 1, !dbg !755
  %conv39 = zext i8 %34 to i32, !dbg !755
  %and40 = and i32 %conv39, 127, !dbg !756
  %add41 = add nsw i32 %shl37, %and40, !dbg !757
  store i32 %add41, i32* %row, align 4, !dbg !758
  %35 = load i8*, i8** %p.addr, align 8, !dbg !759
  %36 = load i8, i8* %35, align 1, !dbg !760
  %37 = load i8*, i8** %s, align 8, !dbg !761
  store i8 %36, i8* %37, align 1, !dbg !762
  %38 = load i8*, i8** %p.addr, align 8, !dbg !763
  %arrayidx42 = getelementptr inbounds i8, i8* %38, i64 1, !dbg !763
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in sta  %39 = load i8, i8* %arrayidx42, align 1, !dbg !763
  %40 = load i8*, i8** %s, align 8, !dbg !764
  %arrayidx43 = getelementptr inbounds i8, i8* %40, i64 1, !dbg !764
  store i8 %39, i8* %arrayidx43, align 1, !dbg !765
  %41 = load i32, i32* %i, align 4, !dbg !766
  %cmp44 = icmp ne i32 %41, 4, !dbg !768
  br i1 %cmp44, label %land.lhs.true, label %if.end92, !dbg !769
  %42 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !770
  %lc_common_item_offsets_LEN = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %42, i32 0, i32 29, !dbg !771
  %43 = load i32, i32* %i, align 4, !dbg !772
  %idxprom46 = sext i32 %43 to i64, !dbg !770
  %arrayidx47 = getelementptr inbounds [6 x i8], [6 x i8]* %lc_common_item_offsets_LEN, i64 0, i64 %idxprom46, !dbg !770
  %44 = load i8, i8* %arrayidx47, align 1, !dbg !770
  %conv48 = zext i8 %44 to i32, !dbg !770
  store i32 %conv48, i32* %len, align 4, !dbg !773
  %cmp49 = icmp ne i32 %conv48, 0, !dbg !774
  br i1 %cmp49, label %if.then51, label %if.end92, !dbg !775
  %45 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !776
  %locales52 = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %45, i32 0, i32 31, !dbg !778
  %46 = load i32, i32* %row, align 4, !dbg !779
  %mul53 = mul nsw i32 9, %46, !dbg !780
  %add54 = add nsw i32 %mul53, 3, !dbg !781
  %47 = load i32, i32* %i, align 4, !dbg !782
  %add55 = add nsw i32 %add54, %47, !dbg !783
  %idxprom56 = sext i32 %add55 to i64, !dbg !776
  %arrayidx57 = getelementptr inbounds [2826 x i8], [2826 x i8]* %locales52, i64 0, i64 %idxprom56, !dbg !776
  %48 = load i8, i8* %arrayidx57, align 1, !dbg !776
  %conv58 = zext i8 %48 to i32, !dbg !776
  %49 = load i32, i32* %len, align 4, !dbg !784
  %mul59 = mul nsw i32 %conv58, %49, !dbg !785
  store i32 %mul59, i32* %crow, align 4, !dbg !786
  %50 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !787
  %51 = bitcast %struct.__uclibc_locale_struct.160* %50 to i8*, !dbg !788
  %52 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !789
  %category_offsets = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %52, i32 0, i32 7, !dbg !790
  %53 = load i32, i32* %i, align 4, !dbg !791
  %idxprom60 = sext i32 %53 to i64, !dbg !789
  %arrayidx61 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets, i64 0, i64 %idxprom60, !dbg !789
  %54 = load i16, i16* %arrayidx61, align 2, !dbg !789
  %conv62 = zext i16 %54 to i32, !dbg !789
  %idx.ext = sext i32 %conv62 to i64, !dbg !792
  %add.ptr63 = getelementptr inbounds i8, i8* %51, i64 %idx.ext, !dbg !792
  %55 = bitcast i8* %add.ptr63 to i8**, !dbg !793
  store i8** %55, i8*** %x, align 8, !dbg !794
  %56 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !795
  %lc_common_tbl_offsets = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %56, i32 0, i32 30, !dbg !796
  %arraydecay64 = getelementptr inbounds [24 x i64], [24 x i64]* %lc_common_tbl_offsets, i64 0, i64 0, !dbg !795
  %57 = load i32, i32* %i, align 4, !dbg !797
  %mul65 = mul nsw i32 4, %57, !dbg !798
  %idx.ext66 = sext i32 %mul65 to i64, !dbg !799
  %add.ptr67 = getelementptr inbounds i64, i64* %arraydecay64, i64 %idx.ext66, !dbg !799
  store i64* %add.ptr67, i64** %stp, align 8, !dbg !800
  %58 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !801
  %59 = bitcast %struct.__locale_mmap_t.162* %58 to i8*, !dbg !802
  %60 = load i64*, i64** %stp, align 8, !dbg !803
  %61 = load i64, i64* %60, align 8, !dbg !804
  %add.ptr68 = getelementptr inbounds i8, i8* %59, i64 %61, !dbg !805
  store i8* %add.ptr68, i8** %r, align 8, !dbg !806
  %62 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !807
  %63 = bitcast %struct.__locale_mmap_t.162* %62 to i8*, !dbg !808
  %64 = load i64*, i64** %stp, align 8, !dbg !809
  %incdec.ptr69 = getelementptr inbounds i64, i64* %64, i32 1, !dbg !809
  store i64* %incdec.ptr69, i64** %stp, align 8, !dbg !809
  %65 = load i64, i64* %incdec.ptr69, align 8, !dbg !810
  %add.ptr70 = getelementptr inbounds i8, i8* %63, i64 %65, !dbg !811
  %66 = bitcast i8* %add.ptr70 to i16*, !dbg !812
  store i16* %66, i16** %io, align 8, !dbg !813
  %67 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !814
  %68 = bitcast %struct.__locale_mmap_t.162* %67 to i8*, !dbg !815
  %69 = load i64*, i64** %stp, align 8, !dbg !816
  %incdec.ptr71 = getelementptr inbounds i64, i64* %69, i32 1, !dbg !816
  store i64* %incdec.ptr71, i64** %stp, align 8, !dbg !816
  %70 = load i64, i64* %incdec.ptr71, align 8, !dbg !817
  %add.ptr72 = getelementptr inbounds i8, i8* %68, i64 %70, !dbg !818
  %71 = bitcast i8* %add.ptr72 to i16*, !dbg !819
  store i16* %71, i16** %ii, align 8, !dbg !820
  %72 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !821
  %73 = bitcast %struct.__locale_mmap_t.162* %72 to i8*, !dbg !822
  %74 = load i64*, i64** %stp, align 8, !dbg !823
  %incdec.ptr73 = getelementptr inbounds i64, i64* %74, i32 1, !dbg !823
  store i64* %incdec.ptr73, i64** %stp, align 8, !dbg !823
  %75 = load i64, i64* %incdec.ptr73, align 8, !dbg !824
  %add.ptr74 = getelementptr inbounds i8, i8* %73, i64 %75, !dbg !825
  store i8* %add.ptr74, i8** %d, align 8, !dbg !826
  store i32 0, i32* %c, align 4, !dbg !827
  br label %for.cond, !dbg !829
  %76 = load i32, i32* %c, align 4, !dbg !830
  %77 = load i32, i32* %len, align 4, !dbg !832
  %cmp75 = icmp slt i32 %76, %77, !dbg !833
  br i1 %cmp75, label %for.body, label %for.end, !dbg !834
  %78 = load i8*, i8** %d, align 8, !dbg !835
  %79 = load i16*, i16** %ii, align 8, !dbg !837
  %80 = load i8*, i8** %r, align 8, !dbg !838
  %81 = load i32, i32* %crow, align 4, !dbg !839
  %82 = load i32, i32* %c, align 4, !dbg !840
  %add77 = add nsw i32 %81, %82, !dbg !841
  %idxprom78 = sext i32 %add77 to i64, !dbg !838
  %arrayidx79 = getelementptr inbounds i8, i8* %80, i64 %idxprom78, !dbg !838
  %83 = load i8, i8* %arrayidx79, align 1, !dbg !838
  %conv80 = zext i8 %83 to i32, !dbg !838
  %84 = load i16*, i16** %io, align 8, !dbg !842
  %85 = load i32, i32* %c, align 4, !dbg !843
  %idxprom81 = sext i32 %85 to i64, !dbg !842
  %arrayidx82 = getelementptr inbounds i16, i16* %84, i64 %idxprom81, !dbg !842
  %86 = load i16, i16* %arrayidx82, align 2, !dbg !842
  %conv83 = zext i16 %86 to i32, !dbg !842
  %add84 = add nsw i32 %conv80, %conv83, !dbg !844
  %idxprom85 = sext i32 %add84 to i64, !dbg !837
  %arrayidx86 = getelementptr inbounds i16, i16* %79, i64 %idxprom85, !dbg !837
  %87 = load i16, i16* %arrayidx86, align 2, !dbg !837
  %conv87 = zext i16 %87 to i32, !dbg !837
  %idx.ext88 = sext i32 %conv87 to i64, !dbg !845
  %add.ptr89 = getelementptr inbounds i8, i8* %78, i64 %idx.ext88, !dbg !845
  %88 = load i8**, i8*** %x, align 8, !dbg !846
  %89 = load i32, i32* %c, align 4, !dbg !847
  %idx.ext90 = sext i32 %89 to i64, !dbg !848
  %add.ptr91 = getelementptr inbounds i8*, i8** %88, i64 %idx.ext90, !dbg !848
  store i8* %add.ptr89, i8** %add.ptr91, align 8, !dbg !849
  br label %for.inc, !dbg !850
  %90 = load i32, i32* %c, align 4, !dbg !851
  %inc = add nsw i32 %90, 1, !dbg !851
  store i32 %inc, i32* %c, align 4, !dbg !851
  br label %for.cond, !dbg !852, !llvm.loop !853
  br label %if.end92, !dbg !855
ck: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.190
//Instructions in stack: Num.191
//Instructions in stack: Num.192
//Instructions in stack: Num.193
//Instructions in stack: Num.194
//Instructions in stack: Num.195
//Instructions in stack: Num.196
//Instructions in stack: Num.197
//Instructions in stack: Num.198
//Instructions in stack: Num.199
//Instructions in stack: Num.200
//Instructions in stack: Num.201
//Instructions in stack: Num.202
//Instructions in stack: Num.203
//Instructions in stack: Num.204
//Instructions in stack: Num.205
//Instructions in stack: Num.206
//Instructions in stack: Num.207
//Instructions in stack: Num.208
//Instructions in stack: Num.209
//Instructions in stack: Num.210
//Instructions in stack: Num.211
//Instructions in stack: Num.212
//Instructions in stack: Num.213
//Instructions in stack: Num.214
//Instructions in stack: Num.215
//Instructions in stack: Num.216
//Instructions in stack: Num.217
//Instructions in stack: Num.218
//Instructions in stack: Num.219
//Instructions in stack: Num.220
//Instructions in stack: Num.221
//Instructions in stack: Num.222
//Instructions in stack: Num.223
//Instructions in stack: Num.224
//Instructions in stack: Num.225
//Instructions in stack: Num.226
//Instructions in stack: Num.227
//Instructions in stack: Num.228
//Instructions in stack: Num.229
//Instructions in stack: Num.230
//Instructions in stack: Num.231
//Instructions in stack: Num.232
//Instructions in stack: Num.233
//Instructions in stack: Num.234
//Instructions in stack: Num.235
//Instructions in stack: Num.236
//Instructions in stack: Num.237
//Instructions in stack: Num.238
//Instructions in stack: Num.239
//Instructions in stack: Num.240
//Instructions in stack: Num.241
//Instructions in stack: Num.242
//Instructions in stack: Num.243
//Instructions in stack: Num.244
//Instructions in stack: Num.245
//Instructions in stack: Num.246
//Instructions in stack: Num.247
//Instructions in stack: Num.248
//Instructions in stack: Num.249
//Instructions in stack: Num.250
//Instructions in stack: Num.251
//Instructions in stack: Num.252
//Instructions in stack: Num.253
//Instructions in stack: Num.254
//Instructions in stack: Num.255
//Instructions in stack: Num.256
//Instructions in stack: Num.257
//Instructions in stack: Num.258
//Instructions in stack: Num.259
//Instructions in stack: Num.260
//Instructions in stack: Num.261
//Instructions in stack: Num.262
//Instructions in stack: Num.263
//Instructions in stack: Num.264
//Instructions in stack: Num.265
//Instructions in stack: Num.266
//Instructions in stack:   %91 = load i32, i32* %i, align 4, !dbg !856
  %cmp93 = icmp eq i32 %91, 0, !dbg !858
  br i1 %cmp93, label %if.then95, label %if.else295, !dbg !859
  %92 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !860
  %locales96 = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %92, i32 0, i32 31, !dbg !862
  %93 = load i32, i32* %row, align 4, !dbg !863
  %mul97 = mul nsw i32 9, %93, !dbg !864
  %add98 = add nsw i32 %mul97, 2, !dbg !865
  %idxprom99 = sext i32 %add98 to i64, !dbg !860
  %arrayidx100 = getelementptr inbounds [2826 x i8], [2826 x i8]* %locales96, i64 0, i64 %idxprom99, !dbg !860
  %94 = load i8, i8* %arrayidx100, align 1, !dbg !860
  %conv101 = zext i8 %94 to i32, !dbg !860
  store i32 %conv101, i32* %c, align 4, !dbg !866
  %95 = load i32, i32* %c, align 4, !dbg !867
  %cmp102 = icmp sle i32 %95, 2, !dbg !869
  br i1 %cmp102, label %if.then104, label %if.else112, !dbg !870
  %96 = load i32, i32* %c, align 4, !dbg !871
  %cmp105 = icmp eq i32 %96, 2, !dbg !874
  br i1 %cmp105, label %if.then107, label %if.else, !dbg !875
  %97 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !876
  %codeset = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %97, i32 0, i32 38, !dbg !878
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @utf8, i64 0, i64 0), i8** %codeset, align 8, !dbg !879
  %98 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !880
  %encoding = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %98, i32 0, i32 9, !dbg !881
  store i8 1, i8* %encoding, align 8, !dbg !882
  %99 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !883
  %mb_cur_max = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %99, i32 0, i32 10, !dbg !884
  store i8 6, i8* %mb_cur_max, align 1, !dbg !885
  br label %if.end111, !dbg !886
  %100 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !887
  %codeset108 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %100, i32 0, i32 38, !dbg !889
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @ascii, i64 0, i64 0), i8** %codeset108, align 8, !dbg !890
  %101 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !891
  %encoding109 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %101, i32 0, i32 9, !dbg !892
  store i8 0, i8* %encoding109, align 8, !dbg !893
  %102 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !894
  %mb_cur_max110 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %102, i32 0, i32 10, !dbg !895
  store i8 1, i8* %mb_cur_max110, align 1, !dbg !896
  br label %if.end111
  br label %if.end280, !dbg !897
  call void @llvm.dbg.declare(metadata %struct.__codeset_8_bit_t.161** %c8b, metadata !1298, metadata !DIExpression()), !dbg !1310
  %103 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !911
  %codeset_list = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %103, i32 0, i32 35, !dbg !911
  %arraydecay113 = getelementptr inbounds [255 x i8], [255 x i8]* %codeset_list, i64 0, i64 0, !dbg !911
  store i8* %arraydecay113, i8** %r, align 8, !dbg !912
  %104 = load i8*, i8** %r, align 8, !dbg !913
  %105 = load i8*, i8** %r, align 8, !dbg !914
  %106 = load i32, i32* %c, align 4, !dbg !915
  %sub = sub nsw i32 %106, 3, !dbg !915
  store i32 %sub, i32* %c, align 4, !dbg !915
  %idxprom114 = sext i32 %sub to i64, !dbg !914
  %arrayidx115 = getelementptr inbounds i8, i8* %105, i64 %idxprom114, !dbg !914
  %107 = load i8, i8* %arrayidx115, align 1, !dbg !914
  %conv116 = zext i8 %107 to i32, !dbg !914
  %idx.ext117 = sext i32 %conv116 to i64, !dbg !916
  %add.ptr118 = getelementptr inbounds i8, i8* %104, i64 %idx.ext117, !dbg !916
  %108 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !917
  %codeset119 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %108, i32 0, i32 38, !dbg !918
  store i8* %add.ptr118, i8** %codeset119, align 8, !dbg !919
  %109 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !920
  %encoding120 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %109, i32 0, i32 9, !dbg !921
  store i8 2, i8* %encoding120, align 8, !dbg !922
  %110 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !923
  %mb_cur_max121 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %110, i32 0, i32 10, !dbg !924
  store i8 1, i8* %mb_cur_max121, align 1, !dbg !925
  %111 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !926
  %codeset_8_bit = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %111, i32 0, i32 12, !dbg !927
  %arraydecay122 = getelementptr inbounds [23 x %struct.__codeset_8_bit_t.161], [23 x %struct.__codeset_8_bit_t.161]* %codeset_8_bit, i64 0, i64 0, !dbg !926
  %112 = load i32, i32* %c, align 4, !dbg !928
  %idx.ext123 = sext i32 %112 to i64, !dbg !929
  %add.ptr124 = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %arraydecay122, i64 %idx.ext123, !dbg !929
  store %struct.__codeset_8_bit_t.161* %add.ptr124, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !930
  %113 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !931
  %idx8ctype = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %113, i32 0, i32 0, !dbg !932
  %arraydecay125 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8ctype, i64 0, i64 0, !dbg !931
  %114 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !933
  %idx8ctype126 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %114, i32 0, i32 12, !dbg !934
  store i8* %arraydecay125, i8** %idx8ctype126, align 8, !dbg !935
  %115 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !936
  %idx8uplow = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %115, i32 0, i32 1, !dbg !937
  %arraydecay127 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8uplow, i64 0, i64 0, !dbg !936
  %116 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !938
  %idx8uplow128 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %116, i32 0, i32 14, !dbg !939
  store i8* %arraydecay127, i8** %idx8uplow128, align 8, !dbg !940
  %117 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !941
  %idx8c2wc = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %117, i32 0, i32 2, !dbg !942
  %arraydecay129 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8c2wc, i64 0, i64 0, !dbg !941
  %118 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !943
  %idx8c2wc130 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %118, i32 0, i32 16, !dbg !944
  store i8* %arraydecay129, i8** %idx8c2wc130, align 8, !dbg !945
  %119 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !946
  %idx8wc2c = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %119, i32 0, i32 3, !dbg !947
  %arraydecay131 = getelementptr inbounds [38 x i8], [38 x i8]* %idx8wc2c, i64 0, i64 0, !dbg !946
  %120 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !948
  %idx8wc2c132 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %120, i32 0, i32 18, !dbg !949
  store i8* %arraydecay131, i8** %idx8wc2c132, align 8, !dbg !950
  %121 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !951
  %__ctype_b_data = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %121, i32 0, i32 3, !dbg !952
  %arraydecay133 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data, i64 0, i64 0, !dbg !951
  %122 = bitcast i16* %arraydecay133 to i8*, !dbg !951
  %123 = load i16*, i16** @__C_ctype_b, align 8, !dbg !953
  %add.ptr134 = getelementptr inbounds i16, i16* %123, i64 -128, !dbg !954
  %124 = bitcast i16* %add.ptr134 to i8*, !dbg !953
  %call135 = call i8* @memcpy(i8* %122, i8* %124, i64 768) #11, !dbg !955
  %125 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !956
  %__ctype_tolower_data = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %125, i32 0, i32 4, !dbg !957
  %arraydecay136 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data, i64 0, i64 0, !dbg !956
  %126 = bitcast i16* %arraydecay136 to i8*, !dbg !956
  %127 = load i16*, i16** @__C_ctype_tolower, align 8, !dbg !958
  %add.ptr137 = getelementptr inbounds i16, i16* %127, i64 -128, !dbg !959
  %128 = bitcast i16* %add.ptr137 to i8*, !dbg !958
  %call138 = call i8* @memcpy(i8* %126, i8* %128, i64 768) #11, !dbg !960
  %129 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !961
  %__ctype_toupper_data = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %129, i32 0, i32 5, !dbg !962
  %arraydecay139 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data, i64 0, i64 0, !dbg !961
  %130 = bitcast i16* %arraydecay139 to i8*, !dbg !961
  %131 = load i16*, i16** @__C_ctype_toupper, align 8, !dbg !963
  %add.ptr140 = getelementptr inbounds i16, i16* %131, i64 -128, !dbg !964
  %132 = bitcast i16* %add.ptr140 to i8*, !dbg !963
  %call141 = call i8* @memcpy(i8* %130, i8* %132, i64 768) #11, !dbg !965
  call void @llvm.dbg.declare(metadata i32* %u, metadata !1366, metadata !DIExpression()), !dbg !1368
  call void @llvm.dbg.declare(metadata i16* %m, metadata !1369, metadata !DIExpression()), !dbg !1370
  store i32 0, i32* %u, align 4, !dbg !971
  br label %for.cond142, !dbg !973
Num.267
//Instructions in stack: Num.268
//Instructions in stack: Num.269
//Instructions in stack: Num.270
//Instructions in stack: Num.271
//Instructions in stack: Num.272
//Instructions in stack: Num.273
//Instructions in stack: Num.274
//Instructions in stack: Num.275
//Instructions in stack: Num.276
//Instructions in stack: Num.277
//Instructions in stack: Num.278
//Instructions in stack: Num.279
//Instructions in stack: Num.280
//Instructions in stack: Num.281
//Instructions in stack: Num.282
//Instructions in stack: Num.283
//Instructions in stack: Num.284
//Instructions in stack: Num.285
//Instructions in stack: Num.286
//Instructions in stack: Num.287
//Instructions in stack: Num.288
//Instructions in stack: Num.289
//Instructions in stack: Num.290
//Instructions in stack: Num.291
//Instructions in stack: Num.292
//Instructions in stack: Num.293
//Instructions in stack: Num.294
//Instructions in stack: Num.295
//Instructions in stack: Num.296
//Instructions in stack: Num.297
//Instructions in stack: Num.298
//Instructions in stack: Num.299
//Instructions in stack: Num.300
//Instructions in stack: Num.301
//Instructions in stack: Num.302
//Instructions in stack: Num.303
//Instructions in stack: Num.304
//Instructions in stack: Num.305
//Instructions in stack: Num.306
//Instructions in stack: Num.307
//Instructions in stack: Num.308
//Instructions in stack: Num.309
//Instructions in stack: Num.310
//Instructions in stack: Num.311
//Instructions in stack: Num.312
//Instructions in stack: Num.313
//Instructions in stack: Num.314
//Instructions in stack: Num.315
//Instructions in stack: Num.316
//Instructions in stack: Num.317
//Instructions in stack: Num.318
//Instructions in stack: Num.319
//Instructions in stack: Num.320
//Instructions in stack: Num.321
//Instructions in stack: Num.322
//Instructions in stack: Num.323
//Instructions in stack: Num.324
//Instructions in stack: Num.325
//Instructions in stack: Num.326
//Instructions in stack: Num.327
//Instructions in stack: Num.328
//Instructions in stack: Num.329
//Instructions in stack: Num.330
//Instructions in stack: Num.331
//Instructions in stack: Num.332
//Instructions in stack: Num.333
//Instructions in stack: Num.334
//Instructions in stack: Num.335
//Instructions in stack: Num.336
//Instructions in stack: Num.337
//Instructions in stack: Num.338
//Instructions in stack: Num.339
//Instructions in stack: Num.340
//Instructions in stack: Num.341
//Instructions in stack: Num.342
//Instructions in stack: Num.343
//Instructions in stack: Num.344
//Instructions in stack: Num.345
//Instructions in stack: Num.346
//Instructions in stack: Num.347
//Instructions in stack: Num.348
//Instructions in stack: Num.349
//Instructions in stack: Num.350
//Instructions in stack: Num.351
//Instructions in stack: Num.352
//Instructions in stack: Num.353
//Instructions in stack: Num.354
//Instructions in stack: Num.355
//Instructions in stack: Num.356
//Instructions in stack: Num.357
//Instructions in stack: Num.358
//Instructions in stack: Num.359
//Instructions in stack: Num.360
//Instructions in stack: Num.361
//Instructions in stack: Num.362
//Instructions in stack: Num.363
//Instructions in stack: Num.364
//Instructions in stack: Num.365
//Instructions in stack: Num.366
//Instructions in stack: Num.367
//Instructions in stack: Num.368
//Instructions in stack: Num.369
//Instructions in stack: Num.370
//Instructions in stack: Num.371
//Instructions in stack: Num.372
//Instructions in stack: Num.373
//Instructions in stack: Num.374
//Instructions in stack: Num.375
//Instructions in stack: Num.376
//Instructions in stack: Num.377
//Instructions in stack: Num.378
//Instructions in stack: Num.379
//Instructions in stack: Num.380
//Instructions in stack: Num.381
//Instructions in stack: Num.382
//Instructions in stack: Num.383
//Instructions in stack: Num.384
//Instructions in stack: Num.385
//Instructions in stack: Num.386
//Instructions in stack: Num.387
//Instructions in stack: Num.388
//Instructions in stack: Num.389
//Instructions in stack: Num.390
//Instructions in stack: Num.  %133 = load i32, i32* %u, align 4, !dbg !974
  %cmp143 = icmp slt i32 %133, 128, !dbg !976
  br i1 %cmp143, label %for.body145, label %for.end270, !dbg !977
  %134 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !978
  %tbl8ctype = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %134, i32 0, i32 13, !dbg !980
  %135 = load i8*, i8** %tbl8ctype, align 8, !dbg !980
  %136 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !981
  %idx8ctype146 = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %136, i32 0, i32 0, !dbg !982
  %137 = load i32, i32* %u, align 4, !dbg !983
  %shr = ashr i32 %137, 3, !dbg !984
  %idxprom147 = sext i32 %shr to i64, !dbg !981
  %arrayidx148 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8ctype146, i64 0, i64 %idxprom147, !dbg !981
  %138 = load i8, i8* %arrayidx148, align 1, !dbg !981
  %conv149 = zext i8 %138 to i32, !dbg !985
  %shl150 = shl i32 %conv149, 2, !dbg !986
  %139 = load i32, i32* %u, align 4, !dbg !987
  %and151 = and i32 %139, 7, !dbg !988
  %shr152 = ashr i32 %and151, 1, !dbg !989
  %add153 = add nsw i32 %shl150, %shr152, !dbg !990
  %idxprom154 = sext i32 %add153 to i64, !dbg !978
  %arrayidx155 = getelementptr inbounds i8, i8* %135, i64 %idxprom154, !dbg !978
  %140 = load i8, i8* %arrayidx155, align 1, !dbg !978
  %conv156 = zext i8 %140 to i32, !dbg !978
  store i32 %conv156, i32* %c, align 4, !dbg !991
  %141 = load i32, i32* %u, align 4, !dbg !992
  %and157 = and i32 %141, 1, !dbg !993
  %tobool158 = icmp ne i32 %and157, 0, !dbg !993
  br i1 %tobool158, label %cond.true, label %cond.false, !dbg !994
  %142 = load i32, i32* %c, align 4, !dbg !995
  %shr159 = ashr i32 %142, 4, !dbg !996
  br label %cond.end, !dbg !994
  %143 = load i32, i32* %c, align 4, !dbg !997
  %and160 = and i32 %143, 15, !dbg !998
  br label %cond.end, !dbg !994
  %cond = phi i32 [ %shr159, %cond.true ], [ %and160, %cond.false ], !dbg !994
  store i32 %cond, i32* %c, align 4, !dbg !999
  %144 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1000
  %code2flag = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %144, i32 0, i32 20, !dbg !1001
  %145 = load i16*, i16** %code2flag, align 8, !dbg !1001
  %146 = load i32, i32* %c, align 4, !dbg !1002
  %idxprom161 = sext i32 %146 to i64, !dbg !1000
  %arrayidx162 = getelementptr inbounds i16, i16* %145, i64 %idxprom161, !dbg !1000
  %147 = load i16, i16* %arrayidx162, align 2, !dbg !1000
  store i16 %147, i16* %m, align 2, !dbg !1003
  %148 = load i16, i16* %m, align 2, !dbg !1004
  %149 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1005
  %__ctype_b_data163 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %149, i32 0, i32 3, !dbg !1006
  %150 = load i32, i32* %u, align 4, !dbg !1007
  %add164 = add nsw i32 256, %150, !dbg !1008
  %idxprom165 = sext i32 %add164 to i64, !dbg !1005
  %arrayidx166 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data163, i64 0, i64 %idxprom165, !dbg !1005
  store i16 %148, i16* %arrayidx166, align 2, !dbg !1009
  %151 = load i32, i32* %u, align 4, !dbg !1010
  %add167 = add nsw i32 128, %151, !dbg !1012
  %conv168 = trunc i32 %add167 to i8, !dbg !1013
  %conv169 = sext i8 %conv168 to i32, !dbg !1014
  %cmp170 = icmp ne i32 %conv169, -1, !dbg !1015
  br i1 %cmp170, label %if.then172, label %if.end180, !dbg !1016
  %152 = load i16, i16* %m, align 2, !dbg !1017
  %153 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1019
  %__ctype_b_data173 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %153, i32 0, i32 3, !dbg !1020
  %154 = load i32, i32* %u, align 4, !dbg !1021
  %add174 = add nsw i32 128, %154, !dbg !1022
  %conv175 = trunc i32 %add174 to i8, !dbg !1023
  %conv176 = sext i8 %conv175 to i32, !dbg !1024
  %add177 = add nsw i32 128, %conv176, !dbg !1025
  %idxprom178 = sext i32 %add177 to i64, !dbg !1019
  %arrayidx179 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data173, i64 0, i64 %idxprom178, !dbg !1019
  store i16 %152, i16* %arrayidx179, align 2, !dbg !1026
  br label %if.end180, !dbg !1027
  %155 = load i32, i32* %u, align 4, !dbg !1028
  %add181 = add nsw i32 128, %155, !dbg !1029
  %conv182 = trunc i32 %add181 to i16, !dbg !1030
  %156 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1031
  %__ctype_tolower_data183 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %156, i32 0, i32 4, !dbg !1032
  %157 = load i32, i32* %u, align 4, !dbg !1033
  %add184 = add nsw i32 256, %157, !dbg !1034
  %idxprom185 = sext i32 %add184 to i64, !dbg !1031
  %arrayidx186 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data183, i64 0, i64 %idxprom185, !dbg !1031
  store i16 %conv182, i16* %arrayidx186, align 2, !dbg !1035
  %158 = load i32, i32* %u, align 4, !dbg !1036
  %add187 = add nsw i32 128, %158, !dbg !1037
  %conv188 = trunc i32 %add187 to i16, !dbg !1038
  %159 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1039
  %__ctype_toupper_data189 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %159, i32 0, i32 5, !dbg !1040
  %160 = load i32, i32* %u, align 4, !dbg !1041
  %add190 = add nsw i32 256, %160, !dbg !1042
  %idxprom191 = sext i32 %add190 to i64, !dbg !1039
  %arrayidx192 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data189, i64 0, i64 %idxprom191, !dbg !1039
  store i16 %conv188, i16* %arrayidx192, align 2, !dbg !1043
  %161 = load i16, i16* %m, align 2, !dbg !1044
  %conv193 = zext i16 %161 to i32, !dbg !1044
  %and194 = and i32 %conv193, 768, !dbg !1046
  %tobool195 = icmp ne i32 %and194, 0, !dbg !1046
  br i1 %tobool195, label %if.then196, label %if.end267, !dbg !1047
  %162 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1048
  %tbl8uplow = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %162, i32 0, i32 15, !dbg !1050
  %163 = load i8*, i8** %tbl8uplow, align 8, !dbg !1050
  %164 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !1051
  %idx8uplow197 = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %164, i32 0, i32 1, !dbg !1052
  %165 = load i32, i32* %u, align 4, !dbg !1053
  %shr198 = ashr i32 %165, 3, !dbg !1054
  %idxprom199 = sext i32 %shr198 to i64, !dbg !1051
  %arrayidx200 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8uplow197, i64 0, i64 %idxprom199, !dbg !1051
  %166 = load i8, i8* %arrayidx200, align 1, !dbg !1051
  %conv201 = zext i8 %166 to i32, !dbg !1055
  %shl202 = shl i32 %conv201, 3, !dbg !1056
  %167 = load i32, i32* %u, align 4, !dbg !1057
  %add203 = add nsw i32 128, %167, !dbg !1058
  %and204 = and i32 %add203, 7, !dbg !1059
  %add205 = add nsw i32 %shl202, %and204, !dbg !1060
  %idxprom206 = sext i32 %add205 to i64, !dbg !1048
  %arrayidx207 = getelementptr inbounds i8, i8* %163, i64 %idxprom206, !dbg !1048
  %168 = load i8, i8* %arrayidx207, align 1, !dbg !1048
  %conv208 = zext i8 %168 to i32, !dbg !1048
  store i32 %conv208, i32* %c, align 4, !dbg !1061
  %169 = load i16, i16* %m, align 2, !dbg !1062
  %conv209 = zext i16 %169 to i32, !dbg !1062
  %and210 = and i32 %conv209, 512, !dbg !1064
  %tobool211 = icmp ne i32 %and210, 0, !dbg !1064
  br i1 %tobool211, label %if.then212, label %if.else239, !dbg !1065
  %170 = load i32, i32* %u, align 4, !dbg !1066
  %add213 = add nsw i32 128, %170, !dbg !1068
  %171 = load i32, i32* %c, align 4, !dbg !1069
  %add214 = add nsw i32 %add213, %171, !dbg !1070
391
//Instructions in stack: Num.392
//Instructions in stack: Num.393
//Instructions in stack: Num.394
//Instructions in stack: Num.395
//Instructions in stack: Num.396
//Instructions in stack: Num.397
//Instructions in stack: Num.398
//Instructions in stack: Num.399
//Instructions in stack: Num.400
//Instructions in stack: Num.401
//Instructions in stack: Num.402
//Instructions in stack: Num.403
//Instructions in stack: Num.404
//Instructions in stack: Num.405
//Instructions in stack: Num.406
//Instructions in stack: Num.407
//Instructions in stack: Num.408
//Instructions in stack: Num.409
//Instructions in stack: Num.410
//Instructions in stack: Num.411
//Instructions in stack: Num.412
//Instructions in stack: Num.413
//Instructions in stack: Num.414
//Instructions in stack: Num.415
//Instructions in stack: Num.416
//Instructions in stack: Num.417
//Instructions in stack: Num.418
//Instructions in stack: Num.419
//Instructions in stack: Num.420
//Instructions in stack: Num.421
//Instructions in stack: Num.422
//Instructions in stack: Num.423
//Instructions in stack: Num.424
//Instructions in stack: Num.425
//Instructions in stack: Num.426
//Instructions in stack: Num.427
//Instructions in stack: Num.428
//Instructions in stack: Num.429
//Instructions in stack: Num.430
//Instructions in stack: Num.431
//Instructions in stack: Num.432
//Instructions in stack: Num.433
//Instructions in stack: Num.434
//Instructions in stack: Num.435
//Instructions in stack: Num.436
//Instructions in stack: Num.437
//Instructions in stack: Num.438
//Instructions in stack: Num.439
//Instructions in stack: Num.440
//Instructions in stack: Num.441
//Instructions in stack: Num.442
//Instructions in stack: Num.443
//Instructions in stack: Num.444
//Instructions in stack: Num.445
//Instructions in stack: Num.446
//Instructions in stack: Num.447
//Instructions in stack: Num.448
//Instructions in stack: Num.449
//Instructions in stack: Num.450
//Instructions in stack: Num.451
//Instructions in stack: Num.452
//Instructions in stack: Num.453
//Instructions in stack: Num.454
//Instructions in stack: Num.455
//Instructions in stack: Num.456
//Instructions in stack: Num.457
//Instructions in stack: Num.458
//Instructions in stack: Num.459
//Instructions in stack: Num.460
//Instructions in stack: Num.461
//Instructions in stack: Num.462
//Instructions in stack: Num.463
//Instructions in stack: Num.464
//Instructions in stack: Num.465
//Instructions in stack: Num.466
//Instructions in stack: Num.467
//Instructions in stack: Num.468
//Instructions in stack: Num.469
//Instructions in stack: Num.470
//Instructions in stack: Num.471
//Instructions in stack: Num.472
//Instructions in stack: Num.473
//Instructions in stack: Num.474
//Instructions in stack: Num.475
//Instructions in stack: Num.476
//Instructions in stack: Num.477
//Instructions in stack: Num.478
//Instructions in stack: Num.479
//Instructions in stack: Num.480
//Instructions in stack: Num.481
//Instructions in stack: Num.482
//Instructions in stack: Num.483
//Instructions in stack: Num.484
//Instructions in stack: Num.485
//Instructions in stack: Num.486
//Instructions in stack: Num.487
//Instructions in stack: Num.488
//Instructions in stack: Num.489
//Instructions in stack: Num.490
//Instructions in stack: Num.491
//Instructions in stack: Num.492
//Instructions in stack: Num.493
//Instructions in stack: Num.494
//Instructions in stack: Num.495
//Instructions in stack: Num.496
//Instructions in stack: Num.497
//Instructions in stack: Num.498
//Instructions in stack: Num.499
//Instructions in stack: Num.500
//Instructions in stack: Num.501
//Instructions in stack: Num.502
//Instructions in stack: Num.503
//Instructions in stack: Num.504
//Instructions in stack: Num.505
//Instructions in stack: Num.506
//Instructions in stack: Num.507
//Instructions in stack: Num.508
//Instructions in stack: Num.509
//Instructions in stack: Num.510
//Instructions in stack: Num.511
//Instructions in stack: Num.512
//Instructions in stack: Num.513
//Instructions in stack: Num.514
//Instructions in stack: Num.515
  %conv215 = trunc i32 %add214 to i8, !dbg !1071
  %conv216 = zext i8 %conv215 to i16, !dbg !1071
  %172 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1072
  %__ctype_toupper_data217 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %172, i32 0, i32 5, !dbg !1073
  %173 = load i32, i32* %u, align 4, !dbg !1074
  %add218 = add nsw i32 256, %173, !dbg !1075
  %idxprom219 = sext i32 %add218 to i64, !dbg !1072
  %arrayidx220 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data217, i64 0, i64 %idxprom219, !dbg !1072
  store i16 %conv216, i16* %arrayidx220, align 2, !dbg !1076
  %174 = load i32, i32* %u, align 4, !dbg !1077
  %add221 = add nsw i32 128, %174, !dbg !1079
  %conv222 = trunc i32 %add221 to i8, !dbg !1080
  %conv223 = sext i8 %conv222 to i32, !dbg !1081
  %cmp224 = icmp ne i32 %conv223, -1, !dbg !1082
  br i1 %cmp224, label %if.then226, label %if.end238, !dbg !1083
  %175 = load i32, i32* %u, align 4, !dbg !1084
  %add227 = add nsw i32 128, %175, !dbg !1086
  %176 = load i32, i32* %c, align 4, !dbg !1087
  %add228 = add nsw i32 %add227, %176, !dbg !1088
  %conv229 = trunc i32 %add228 to i8, !dbg !1089
  %conv230 = zext i8 %conv229 to i16, !dbg !1089
  %177 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1090
  %__ctype_toupper_data231 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %177, i32 0, i32 5, !dbg !1091
  %178 = load i32, i32* %u, align 4, !dbg !1092
  %add232 = add nsw i32 128, %178, !dbg !1093
  %conv233 = trunc i32 %add232 to i8, !dbg !1094
  %conv234 = sext i8 %conv233 to i32, !dbg !1095
  %add235 = add nsw i32 128, %conv234, !dbg !1096
  %idxprom236 = sext i32 %add235 to i64, !dbg !1090
  %arrayidx237 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data231, i64 0, i64 %idxprom236, !dbg !1090
  store i16 %conv230, i16* %arrayidx237, align 2, !dbg !1097
  br label %if.end238, !dbg !1098
  br label %if.end266, !dbg !1099
  %179 = load i32, i32* %u, align 4, !dbg !1100
  %add240 = add nsw i32 128, %179, !dbg !1102
  %180 = load i32, i32* %c, align 4, !dbg !1103
  %sub241 = sub nsw i32 %add240, %180, !dbg !1104
  %conv242 = trunc i32 %sub241 to i8, !dbg !1105
  %conv243 = zext i8 %conv242 to i16, !dbg !1105
  %181 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1106
  %__ctype_tolower_data244 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %181, i32 0, i32 4, !dbg !1107
  %182 = load i32, i32* %u, align 4, !dbg !1108
  %add245 = add nsw i32 256, %182, !dbg !1109
  %idxprom246 = sext i32 %add245 to i64, !dbg !1106
  %arrayidx247 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data244, i64 0, i64 %idxprom246, !dbg !1106
  store i16 %conv243, i16* %arrayidx247, align 2, !dbg !1110
  %183 = load i32, i32* %u, align 4, !dbg !1111
  %add248 = add nsw i32 128, %183, !dbg !1113
  %conv249 = trunc i32 %add248 to i8, !dbg !1114
  %conv250 = sext i8 %conv249 to i32, !dbg !1115
  %cmp251 = icmp ne i32 %conv250, -1, !dbg !1116
  br i1 %cmp251, label %if.then253, label %if.end265, !dbg !1117
  %184 = load i32, i32* %u, align 4, !dbg !1118
  %add254 = add nsw i32 128, %184, !dbg !1120
  %185 = load i32, i32* %c, align 4, !dbg !1121
  %sub255 = sub nsw i32 %add254, %185, !dbg !1122
  %conv256 = trunc i32 %sub255 to i8, !dbg !1123
  %conv257 = zext i8 %conv256 to i16, !dbg !1123
  %186 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1124
  %__ctype_tolower_data258 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %186, i32 0, i32 4, !dbg !1125
  %187 = load i32, i32* %u, align 4, !dbg !1126
  %add259 = add nsw i32 128, %187, !dbg !1127
  %conv260 = trunc i32 %add259 to i8, !dbg !1128
  %conv261 = sext i8 %conv260 to i32, !dbg !1129
  %add262 = add nsw i32 128, %conv261, !dbg !1130
  %idxprom263 = sext i32 %add262 to i64, !dbg !1124
  %arrayidx264 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data258, i64 0, i64 %idxprom263, !dbg !1124
  store i16 %conv257, i16* %arrayidx264, align 2, !dbg !1131
  br label %if.end265, !dbg !1132
  br label %if.end266
  br label %if.end267, !dbg !1133
  br label %for.inc268, !dbg !1134
  %188 = load i32, i32* %u, align 4, !dbg !1135
  %inc269 = add nsw i32 %188, 1, !dbg !1135
  store i32 %inc269, i32* %u, align 4, !dbg !1135
  br label %for.cond142, !dbg !1136, !llvm.loop !1137
  %189 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1139
  %__ctype_b_data271 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %189, i32 0, i32 3, !dbg !1140
  %arraydecay272 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data271, i64 0, i64 0, !dbg !1139
  %add.ptr273 = getelementptr inbounds i16, i16* %arraydecay272, i64 128, !dbg !1141
  %190 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1142
  %__ctype_b = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %190, i32 0, i32 0, !dbg !1143
  store i16* %add.ptr273, i16** %__ctype_b, align 8, !dbg !1144
  %191 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1145
  %__ctype_tolower_data274 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %191, i32 0, i32 4, !dbg !1146
  %arraydecay275 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data274, i64 0, i64 0, !dbg !1145
  %add.ptr276 = getelementptr inbounds i16, i16* %arraydecay275, i64 128, !dbg !1147
  %192 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1148
  %__ctype_tolower = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %192, i32 0, i32 1, !dbg !1149
  store i16* %add.ptr276, i16** %__ctype_tolower, align 8, !dbg !1150
  %193 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1151
  %__ctype_toupper_data277 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %193, i32 0, i32 5, !dbg !1152
  %arraydecay278 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data277, i64 0, i64 0, !dbg !1151
  %add.ptr279 = getelementptr inbounds i16, i16* %arraydecay278, i64 128, !dbg !1153
  %194 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1154
  %__ctype_toupper = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %194, i32 0, i32 2, !dbg !1155
  store i16* %add.ptr279, i16** %__ctype_toupper, align 8, !dbg !1156
  br label %if.end280
  %195 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1157
  %outdigit_length = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %195, i32 0, i32 11, !dbg !1158
  %arraydecay281 = getelementptr inbounds [10 x i8], [10 x i8]* %outdigit_length, i64 0, i64 0, !dbg !1157
  store i8* %arraydecay281, i8** %d, align 8, !dbg !1159
  %196 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1160
  %outdigit0_mb = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %196, i32 0, i32 28, !dbg !1161
  store i8** %outdigit0_mb, i8*** %x, align 8, !dbg !1162
  store i32 0, i32* %c, align 4, !dbg !1163
  br label %for.cond282, !dbg !1165
  %197 = load i32, i32* %c, align 4, !dbg !1166
  %cmp283 = icmp slt i32 %197, 10, !dbg !1168
  br i1 %cmp283, label %for.body285, label %for.end294, !dbg !1169
  %198 = load i8**, i8*** %x, align 8, !dbg !1170
  %199 = load i32, i32* %c, align 4, !dbg !1172
  %idxprom286 = sext i32 %199 to i64, !dbg !1170
  %arrayidx287 = getelementptr inbounds i8*, i8** %198, i64 %idxprom286, !dbg !1170
  %200 = load i8*, i8** %arrayidx287, align 8, !dbg !1170
  %call288 = call i64 @strlen(i8* %200) #12, !dbg !1173
  %conv289 = trunc i64 %call288 to i8, !dbg !1173
  %201 = load i8*, i8** %d, align 8, !dbg !1174
  %202 = load i32, i32* %c, align 4, !dbg !1175
  %idxprom290 = sext i32 %202 to i64, !dbg !1176
  %arrayidx291 = getelementptr inbounds i8, i8* %201, i64 %idxprom290, !dbg !1176
  store i8 %conv289, i8* %arrayidx291, align 1, !dbg !1177
  br label %for.inc292, !dbg !1178
  %203 = load i32, i32* %c, align 4, !dbg !1179
//Instructions in stack: Num.516
//Instructions in stack: Num.517
//Instructions in stack: Num.518
//Instructions in stack: Num.519
//Instructions in stack: Num.520
//Instructions in stack: Num.521
//Instructions in stack: Num.522
//Instructions in stack: Num.523
//Instructions in stack: Num.524
//Instructions in stack: Num.525
//Instructions in stack: Num.526
//Instructions in stack: Num.527
//Instructions in stack: Num.528
//Instructions in stack: Num.529
//Instructions in stack: Num.530
//Instructions in stack: Num.531
//Instructions in stack: Num.532
//Instructions in stack: Num.533
//Instructions in stack: Num.534
//Instructions in stack: Num.535
//Instructions in stack: Num.536
//Instructions in stack: Num.537
//Instructions in stack: Num.538
//Instructions in stack: Num.539
//Instructions in stack: Num.540
//Instructions in stack: Num.541
//Instructions in stack: Num.542
//Instructions in stack: Num.543
//Instructions in stack: Num.544
//Instructions in stack: Num.545
//Instructions in stack: Num.546
//Instructions in stack: Num.547
//Instructions in stack: Num.548
//Instructions in stack: Num.549
//Instructions in stack: Num.550
//Instructions in stack: Num.551
//Instructions in stack: Num.552
//Instructions in stack: Num.553
//Instructions in stack: Num.554
//Instructions in stack: Num.555
//Instructions in stack: Num.556
//Instructions in stack: Num.557
//Instructions in stack: Num.558
//Instructions in stack: Num.559
//Instructions in stack: Num.560
//Instructions in stack: Num.561
//Instructions in stack: Num.562
//Instructions in stack: Num.563
//Instructions in stack: Num.564
//Instructions in stack: Num.565
//Instructions in stack: Num.566
//Instructions in stack: Num.567
//Instructions in stack: Num.568
//Instructions in stack: Num.569
//Instructions in stack: Num.570
//Instructions in stack: Num.571
//Instructions in stack: Num.572
//Instructions in stack: Num.573
//Instructions in stack: Num.574
//Instructions in stack: Num.575
//Instructions in stack: Num.576
//Instructions in stack: Num.577
//Instructions in stack: Num.578
//Instructions in stack: Num.579
//Instructions in stack: Num.580
//Instructions in stack: Num.581
//Instructions in stack: Num.582
//Instructions in stack: Num.583
//Instructions in stack: Num.584
//Instructions in stack: Num.585
//Instructions in stack: Num.586
//Instructions in stack: Num.587
//Instructions in stack: Num.588
//Instructions in stack: Num.589
//Instructions in stack: Num.590
//Instructions in stack: Num.591
//Instructions in stack: Num.592
//Instructions in stack: Num.593
//Instructions in stack: Num.594
//Instructions in stack: Num.595
//Instructions in stack: Num.596
//Instructions in stack: Num.597
//Instructions in stack: Num.598
//Instructions in stack: Num.599
//Instructions in stack: Num.600
//Instructions in stack: Num.601
//Instructions in stack: Num.602
//Instructions in stack: Num.603
//Instructions in stack: Num.604
//Instructions in stack: Num.605
//Instructions in stack: Num.606
//Instructions in stack: Num.607
//Instructions in stack: Num.608
//Instructions in stack: Num.609
//Instructions in stack: Num.610
//Instructions in stack: Num.611
//Instructions in stack: Num.612
//Instructions in stack: Num.613
//Instructions in stack: Num.614
//Instructions in stack: Num.615
//Instructions in stack: Num.616
//Instructions in stack: Num.617
//Instructions in stack: Num.618
//Instructions in stack: Num.619
//Instructions in stack: Num.620
//Instructions in stack: Num.621
//Instructions in stack: Num.622
//Instructions in stack: Num.623
//Instructions in stack: Num.624
//Instructions in stack: Num.625
//Instructions in stack: Num.626
//Instructions in stack: Num.627
//Instructions in stack: Num.628
//Instructions in stack: Num.629
//Instructions in stack: Num.630
//Instructions in stack: Num.631
//Instructions in stack: Num.632
//Instructions in stack: Num.633
//Instructions in stack: Num.634
//Instructions in stack: Num.635
//Instructions in stack: Num.636
//Instructions in stack: Num.637
//Instructions in stack: Num.638
//Instructions in stack: Num.639
//In  %inc293 = add nsw i32 %203, 1, !dbg !1179
  store i32 %inc293, i32* %c, align 4, !dbg !1179
  br label %for.cond282, !dbg !1180, !llvm.loop !1181
  br label %if.end312, !dbg !1183
  %204 = load i32, i32* %i, align 4, !dbg !1184
  %cmp296 = icmp eq i32 %204, 1, !dbg !1186
  br i1 %cmp296, label %if.then298, label %if.end311, !dbg !1187
  %205 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1188
  %decimal_point_wc = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %205, i32 0, i32 24, !dbg !1190
  %206 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1191
  %decimal_point = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %206, i32 0, i32 39, !dbg !1192
  %207 = load i8*, i8** %decimal_point, align 8, !dbg !1192
  %208 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1193
  %call299 = call i32 @__locale_mbrtowc_l(i32* %decimal_point_wc, i8* %207, %struct.__uclibc_locale_struct.160* %208) #10, !dbg !1194
  %209 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1195
  %decimal_point_len = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %209, i32 0, i32 26, !dbg !1196
  store i32 %call299, i32* %decimal_point_len, align 8, !dbg !1197
  %210 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1198
  %grouping = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %210, i32 0, i32 41, !dbg !1200
  %211 = load i8*, i8** %grouping, align 8, !dbg !1200
  %212 = load i8, i8* %211, align 1, !dbg !1201
  %tobool300 = icmp ne i8 %212, 0, !dbg !1201
  br i1 %tobool300, label %if.then301, label %if.end310, !dbg !1202
  %213 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1203
  %thousands_sep_wc = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %213, i32 0, i32 25, !dbg !1205
  %214 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1206
  %thousands_sep = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %214, i32 0, i32 40, !dbg !1207
  %215 = load i8*, i8** %thousands_sep, align 8, !dbg !1207
  %216 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1208
  %call302 = call i32 @__locale_mbrtowc_l(i32* %thousands_sep_wc, i8* %215, %struct.__uclibc_locale_struct.160* %216) #10, !dbg !1209
  %217 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1210
  %thousands_sep_len = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %217, i32 0, i32 27, !dbg !1211
  store i32 %call302, i32* %thousands_sep_len, align 4, !dbg !1212
  %218 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1213
  %thousands_sep_len303 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %218, i32 0, i32 27, !dbg !1215
  %219 = load i32, i32* %thousands_sep_len303, align 4, !dbg !1215
  %cmp304 = icmp eq i32 %219, 0, !dbg !1216
  br i1 %cmp304, label %if.then306, label %if.end309, !dbg !1217
  %220 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1218
  %thousands_sep307 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %220, i32 0, i32 40, !dbg !1220
  %221 = load i8*, i8** %thousands_sep307, align 8, !dbg !1220
  %222 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1221
  %grouping308 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %222, i32 0, i32 41, !dbg !1222
  store i8* %221, i8** %grouping308, align 8, !dbg !1223
  br label %if.end309, !dbg !1224
  br label %if.end310, !dbg !1225
  br label %if.end311, !dbg !1226
  br label %if.end312
  br label %if.end313, !dbg !1227
  %223 = load i32, i32* %i, align 4, !dbg !1228
  %inc314 = add nsw i32 %223, 1, !dbg !1228
  store i32 %inc314, i32* %i, align 4, !dbg !1228
  %224 = load i8*, i8** %p.addr, align 8, !dbg !1229
  %add.ptr315 = getelementptr inbounds i8, i8* %224, i64 2, !dbg !1229
  store i8* %add.ptr315, i8** %p.addr, align 8, !dbg !1229
  %225 = load i8*, i8** %s, align 8, !dbg !1230
  %add.ptr316 = getelementptr inbounds i8, i8* %225, i64 2, !dbg !1230
  store i8* %add.ptr316, i8** %s, align 8, !dbg !1230
  br label %do.cond, !dbg !1231
  %226 = load i32, i32* %i, align 4, !dbg !1232
  %cmp317 = icmp slt i32 %226, 6, !dbg !1233
  br i1 %cmp317, label %do.body, label %do.end, !dbg !1231, !llvm.loop !1234
  store i32 1, i32* %retval, align 4, !dbg !1236
  br label %return, !dbg !1236
  %227 = load i32, i32* %retval, align 4, !dbg !1237
  ret i32 %227, !dbg !1237
  %s.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !2692, metadata !DIExpression()), !dbg !2693
  call void @llvm.dbg.declare(metadata i8** %p, metadata !2694, metadata !DIExpression()), !dbg !2695
  %0 = load i8*, i8** %s.addr, align 8, !dbg !664
  store i8* %0, i8** %p, align 8, !dbg !666
  br label %for.cond, !dbg !667
  %1 = load i8*, i8** %p, align 8, !dbg !668
  %2 = load i8, i8* %1, align 1, !dbg !670
  %tobool = icmp ne i8 %2, 0, !dbg !671
  br i1 %tobool, label %for.body, label %for.end, !dbg !671
  br label %for.inc, !dbg !671
  %3 = load i8*, i8** %p, align 8, !dbg !672
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !672
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !672
  br label %for.cond, !dbg !673, !llvm.loop !674
  %4 = load i8*, i8** %p, align 8, !dbg !676
  %5 = load i8*, i8** %s.addr, align 8, !dbg !677
  %sub.ptr.lhs.cast = ptrtoint i8* %4 to i64, !dbg !678
  %sub.ptr.rhs.cast = ptrtoint i8* %5 to i64, !dbg !678
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !678
  ret i64 %sub.ptr.sub, !dbg !679
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
structions in stack: Num.640
//Instructions in stack: Num.641
//Instructions in stack: Num.642
//Instructions in stack: Num.643
//Instructions in stack: Num.644
//Instructions in stack: Num.645
//Instructions in stack: Num.646
//Instructions in stack: Num.647
//Instructions in stack: Num.648
//Instructions in stack: Num.649
//Instructions in stack: Num.650
//Instructions in stack: Num.651
//Instructions in stack: Num.652
//Instructions in stack: Num.653
//Instructions in stack: Num.654
//Instructions in stack: Num.655
//Instructions in stack: Num.656
//Instructions in stack: Num.657
//Instructions in stack: Num.658
//Instructions in stack: Num.659
//Instructions in stack: Num.660
//Instructions in stack: Num.661
//Instructions in stack: Num.662
//Instructions in stack: Num.663
//Instructions in stack: Num.664
//Instructions in stack: Num.665
//Instructions in stack: Num.666
//Instructions in stack: Num.667
//Instructions in stack: Num.668
//Instructions in stack: Num.669
//Instructions in stack: Num.670
//Instructions in stack: Num.671
//Instructions in stack: Num.672
//Instructions in stack: Num.673
//Instructions in stack: Num.674
//Instructions in stack: Num.675
//Instructions in stack: Num.676
//Instructions in stack: Num.677
//Instructions in stack: Num.678
//Instructions in stack: Num.679
//Instructions in stack: Num.680
//Instructions in stack: Num.681
//Instructions in stack: Num.682
//Instructions in stack: Num.683
//Instructions in stack: Num.684
//Instructions in stack: Num.685
//Instructions in stack: Num.686
//Instructions in stack: Num.687
//Instructions in stack: Num.688
//Instructions in stack: Num.689
//Instructions in stack: Num.690
//Instructions in stack: Num.691
//Instructions in stack: Num.692
//Instructions in stack: Num.693
//Instructions in stack: Num.694
//Instructions in stack: Num.695
//Instructions in stack: Num.696
//Instructions in stack: Num.697
//Instructions in stack: Num.698
//Instructions in stack: Num.699
//Instructions in stack: Num.700
//Instructions in stack: Num.701
//Instructions in stack: Num.702
//Instructions in stack: Num.703
//Instructions in stack: Num.704
//Instructions in stack: Num.705
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack:  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
 Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Nu  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  %0 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !657
  %tobool = icmp ne i32 %0, 0, !dbg !657
  br i1 %tobool, label %if.then, label %if.end, !dbg !659
  br label %if.end4, !dbg !660
  %1 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  %inc = add nsw i32 %1, 1, !dbg !661
  store i32 %inc, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  store i64 4096, i64* @__pagesize, align 8, !dbg !662
  br i1 true, label %if.then1, label %if.end2, !dbg !663
  call void @_locale_init() #10, !dbg !664
  br label %if.end2, !dbg !664
  br i1 true, label %if.then3, label %if.end4, !dbg !666
  call void @_stdio_init() #10, !dbg !667
  br label %if.end4, !dbg !667
  ret void, !dbg !669
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** @__global_locale, align 8, !dbg !658
  call void @_locale_init_l(%struct.__uclibc_locale_struct.160* %0) #10, !dbg !659
  ret void, !dbg !660
  %base.addr = alloca %struct.__uclibc_locale_struct.160*, align 8
  store %struct.__uclibc_locale_struct.160* %base, %struct.__uclibc_locale_struct.160** %base.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__uclibc_locale_struct.160** %base.addr, metadata !1973, metadata !DIExpression()), !dbg !1974
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !662
  %cur_locale = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %0, i32 0, i32 6, !dbg !663
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale, i64 0, i64 0, !dbg !662
  %call = call i8* @memset(i8* %arraydecay, i32 0, i64 14) #10, !dbg !664
  %1 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !665
  %cur_locale1 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %1, i32 0, i32 6, !dbg !666
  %arrayidx = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale1, i64 0, i64 0, !dbg !665
  store i8 35, i8* %arrayidx, align 8, !dbg !667
  %2 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !668
  %category_item_count = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %2, i32 0, i32 8, !dbg !669
  %arraydecay2 = getelementptr inbounds [6 x i8], [6 x i8]* %category_item_count, i64 0, i64 0, !dbg !668
  %3 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !670
  %lc_common_item_offsets_LEN = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %3, i32 0, i32 29, !dbg !671
  %arraydecay3 = getelementptr inbounds [6 x i8], [6 x i8]* %lc_common_item_offsets_LEN, i64 0, i64 0, !dbg !670
  %call4 = call i8* @memcpy(i8* %arraydecay2, i8* %arraydecay3, i64 6) #10, !dbg !672
  %4 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !673
  %category_item_count5 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %4, i32 0, i32 8, !dbg !674
  %arrayidx6 = getelementptr inbounds [6 x i8], [6 x i8]* %category_item_count5, i64 0, i64 0, !dbg !673
  %5 = load i8, i8* %arrayidx6, align 2, !dbg !675
  %inc = add i8 %5, 1, !dbg !675
  store i8 %inc, i8* %arrayidx6, align 2, !dbg !675
  %6 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !676
  %category_offsets = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %6, i32 0, i32 7, !dbg !677
  %arrayidx7 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets, i64 0, i64 0, !dbg !676
  store i16 2488, i16* %arrayidx7, align 2, !dbg !678
  %7 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !679
  %category_offsets8 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %7, i32 0, i32 7, !dbg !680
  %arrayidx9 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets8, i64 0, i64 1, !dbg !679
  store i16 2576, i16* %arrayidx9, align 2, !dbg !681
  %8 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !682
  %category_offsets10 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %8, i32 0, i32 7, !dbg !683
  %arrayidx11 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets10, i64 0, i64 2, !dbg !682
  store i16 2600, i16* %arrayidx11, align 2, !dbg !684
  %9 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !685
  %category_offsets12 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %9, i32 0, i32 7, !dbg !686
  %arrayidx13 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets12, i64 0, i64 3, !dbg !685
  store i16 2776, i16* %arrayidx13, align 2, !dbg !687
  %10 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !688
  %category_offsets14 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %10, i32 0, i32 7, !dbg !689
  %arrayidx15 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets14, i64 0, i64 5, !dbg !688
  store i16 3176, i16* %arrayidx15, align 2, !dbg !690
  %11 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !691
  %tbl8ctype = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %11, i32 0, i32 0, !dbg !692
  %12 = bitcast [420 x i8]* %tbl8ctype to i8*, !dbg !693
  %13 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !694
  %tbl8ctype16 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %13, i32 0, i32 13, !dbg !695
  store i8* %12, i8** %tbl8ctype16, align 8, !dbg !696
  %14 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !697
  %tbl8uplow = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %14, i32 0, i32 1, !dbg !698
  %15 = bitcast [504 x i8]* %tbl8uplow to i8*, !dbg !699
  %16 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !700
  %tbl8uplow17 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %16, i32 0, i32 15, !dbg !701
  store i8* %15, i8** %tbl8uplow17, align 8, !dbg !702
  %17 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !703
  %tbl8c2wc = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %17, i32 0, i32 2, !dbg !704
  %18 = bitcast [1760 x i16]* %tbl8c2wc to i16*, !dbg !705
  %19 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !706
  %tbl8c2wc18 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %19, i32 0, i32 17, !dbg !707
  store i16* %18, i16** %tbl8c2wc18, align 8, !dbg !708
  %20 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !709
  %tbl8wc2c = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %20, i32 0, i32 3, !dbg !710
  %21 = bitcast [4528 x i8]* %tbl8wc2c to i8*, !dbg !711
  %22 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !712
  %tbl8wc2c19 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %22, i32 0, i32 19, !dbg !713
  store i8* %21, i8** %tbl8wc2c19, align 8, !dbg !714
  %23 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !715
  %tblwctype = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %23, i32 0, i32 4, !dbg !716
  %24 = bitcast [3604 x i8]* %tblwctype to i8*, !dbg !717
  %25 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !718
  %tblwctype20 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %25, i32 0, i32 21, !dbg !719
  store i8* %24, i8** %tblwctype20, align 8, !dbg !720
  %26 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !721
  %tblwuplow = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %26, i32 0, i32 5, !dbg !722
  %27 = bitcast [1680 x i8]* %tblwuplow to i8*, !dbg !723
  %28 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !724
  %tblwuplow21 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %28, i32 0, i32 22, !dbg !725
  store i8* %27, i8** %tblwuplow21, align 8, !dbg !726
  %29 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !727
m.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in sta  %tblwuplow_diff = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %29, i32 0, i32 6, !dbg !728
  %30 = bitcast [196 x i16]* %tblwuplow_diff to i16*, !dbg !729
  %31 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !730
  %tblwuplow_diff22 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %31, i32 0, i32 23, !dbg !731
  store i16* %30, i16** %tblwuplow_diff22, align 8, !dbg !732
  %32 = load i16*, i16** @__C_ctype_b, align 8, !dbg !733
  %33 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !734
  %__ctype_b = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %33, i32 0, i32 0, !dbg !735
  store i16* %32, i16** %__ctype_b, align 8, !dbg !736
  %34 = load i16*, i16** @__C_ctype_tolower, align 8, !dbg !737
  %35 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !738
  %__ctype_tolower = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %35, i32 0, i32 1, !dbg !739
  store i16* %34, i16** %__ctype_tolower, align 8, !dbg !740
  %36 = load i16*, i16** @__C_ctype_toupper, align 8, !dbg !741
  %37 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !742
  %__ctype_toupper = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %37, i32 0, i32 2, !dbg !743
  store i16* %36, i16** %__ctype_toupper, align 8, !dbg !744
  %38 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !745
  %code2flag = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %38, i32 0, i32 20, !dbg !746
  store i16* getelementptr inbounds ([16 x i16], [16 x i16]* @__code2flag, i64 0, i64 0), i16** %code2flag, align 8, !dbg !747
  %39 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !748
  %call23 = call i32 @_locale_set_l(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), %struct.__uclibc_locale_struct.160* %39) #11, !dbg !749
  ret void, !dbg !750
  %retval = alloca i32, align 4
  %p.addr = alloca i8*, align 8
  %base.addr = alloca %struct.__uclibc_locale_struct.160*, align 8
  %x = alloca i8**, align 8
  %s = alloca i8*, align 8
  %stp = alloca i64*, align 8
  %r = alloca i8*, align 8
  %io = alloca i16*, align 8
  %ii = alloca i16*, align 8
  %d = alloca i8*, align 8
  %row = alloca i32, align 4
  %crow = alloca i32, align 4
  %len = alloca i32, align 4
  %c = alloca i32, align 4
  %i = alloca i32, align 4
  %newcol = alloca %struct.__collate_t.159, align 8
  %c8b = alloca %struct.__codeset_8_bit_t.161*, align 8
  %u = alloca i32, align 4
  %m = alloca i16, align 2
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !1060, metadata !DIExpression()), !dbg !1061
  store %struct.__uclibc_locale_struct.160* %base, %struct.__uclibc_locale_struct.160** %base.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__uclibc_locale_struct.160** %base.addr, metadata !1062, metadata !DIExpression()), !dbg !1063
  call void @llvm.dbg.declare(metadata i8*** %x, metadata !1064, metadata !DIExpression()), !dbg !1065
  call void @llvm.dbg.declare(metadata i8** %s, metadata !1066, metadata !DIExpression()), !dbg !1067
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !668
  %cur_locale = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %0, i32 0, i32 6, !dbg !669
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %cur_locale, i64 0, i64 0, !dbg !668
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 1, !dbg !670
  store i8* %add.ptr, i8** %s, align 8, !dbg !667
  call void @llvm.dbg.declare(metadata i64** %stp, metadata !1071, metadata !DIExpression()), !dbg !1074
  call void @llvm.dbg.declare(metadata i8** %r, metadata !1075, metadata !DIExpression()), !dbg !1076
  call void @llvm.dbg.declare(metadata i16** %io, metadata !1077, metadata !DIExpression()), !dbg !1078
  call void @llvm.dbg.declare(metadata i16** %ii, metadata !1079, metadata !DIExpression()), !dbg !1080
  call void @llvm.dbg.declare(metadata i8** %d, metadata !1081, metadata !DIExpression()), !dbg !1082
  call void @llvm.dbg.declare(metadata i32* %row, metadata !1083, metadata !DIExpression()), !dbg !1084
  call void @llvm.dbg.declare(metadata i32* %crow, metadata !1085, metadata !DIExpression()), !dbg !1086
  call void @llvm.dbg.declare(metadata i32* %len, metadata !1087, metadata !DIExpression()), !dbg !1088
  call void @llvm.dbg.declare(metadata i32* %c, metadata !1089, metadata !DIExpression()), !dbg !1090
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1091, metadata !DIExpression()), !dbg !1092
  store i32 0, i32* %i, align 4, !dbg !692
  call void @llvm.dbg.declare(metadata %struct.__collate_t.159* %newcol, metadata !1093, metadata !DIExpression()), !dbg !1094
  %1 = load i8*, i8** %p.addr, align 8, !dbg !695
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i32 1, !dbg !695
  store i8* %incdec.ptr, i8** %p.addr, align 8, !dbg !695
  %index2weight = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %newcol, i32 0, i32 23, !dbg !696
  store i16* null, i16** %index2weight, align 8, !dbg !697
  %2 = load i8*, i8** %p.addr, align 8, !dbg !698
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 8, !dbg !698
  %3 = load i8, i8* %arrayidx, align 1, !dbg !698
  %conv = zext i8 %3 to i32, !dbg !698
  %4 = load i8*, i8** %s, align 8, !dbg !700
  %arrayidx1 = getelementptr inbounds i8, i8* %4, i64 8, !dbg !700
  %5 = load i8, i8* %arrayidx1, align 1, !dbg !700
  %conv2 = zext i8 %5 to i32, !dbg !700
  %cmp = icmp ne i32 %conv, %conv2, !dbg !701
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !702
  %6 = load i8*, i8** %p.addr, align 8, !dbg !703
  %arrayidx4 = getelementptr inbounds i8, i8* %6, i64 9, !dbg !703
  %7 = load i8, i8* %arrayidx4, align 1, !dbg !703
  %conv5 = zext i8 %7 to i32, !dbg !703
  %8 = load i8*, i8** %s, align 8, !dbg !704
  %arrayidx6 = getelementptr inbounds i8, i8* %8, i64 9, !dbg !704
  %9 = load i8, i8* %arrayidx6, align 1, !dbg !704
  %conv7 = zext i8 %9 to i32, !dbg !704
  %cmp8 = icmp ne i32 %conv5, %conv7, !dbg !705
  br i1 %cmp8, label %if.then, label %if.end22, !dbg !706
  %10 = load i8*, i8** %p.addr, align 8, !dbg !707
  %11 = load i8, i8* %10, align 1, !dbg !709
  %conv10 = zext i8 %11 to i32, !dbg !709
  %and = and i32 %conv10, 127, !dbg !710
  %shl = shl i32 %and, 7, !dbg !711
  %12 = load i8*, i8** %p.addr, align 8, !dbg !712
  %arrayidx11 = getelementptr inbounds i8, i8* %12, i64 1, !dbg !712
  %13 = load i8, i8* %arrayidx11, align 1, !dbg !712
  %conv12 = zext i8 %13 to i32, !dbg !712
  %and13 = and i32 %conv12, 127, !dbg !713
  %add = add nsw i32 %shl, %and13, !dbg !714
  store i32 %add, i32* %row, align 4, !dbg !715
  %14 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !716
  %locales = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %14, i32 0, i32 31, !dbg !718
  %15 = load i32, i32* %row, align 4, !dbg !719
  %mul = mul nsw i32 9, %15, !dbg !720
  %add14 = add nsw i32 %mul, 3, !dbg !721
  %add15 = add nsw i32 %add14, 4, !dbg !722
  %idxprom = sext i32 %add15 to i64, !dbg !716
  %arrayidx16 = getelementptr inbounds [2826 x i8], [2826 x i8]* %locales, i64 0, i64 %idxprom, !dbg !716
  %16 = load i8, i8* %arrayidx16, align 1, !dbg !716
  %conv17 = zext i8 %16 to i32, !dbg !716
  %call = call i32 @init_cur_collate(i32 %conv17, %struct.__collate_t.159* %newcol) #10, !dbg !723
  %tobool = icmp ne i32 %call, 0, !dbg !723
  br i1 %tobool, label %if.end, label %if.then18, !dbg !724
  store i32 0, i32* %retval, align 4, !dbg !725
  br label %return, !dbg !725
  %17 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !727
  %collate = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %17, i32 0, i32 118, !dbg !728
  %index2weight19 = getelementptr inbounds %struct.__collate_t.159, %struct.__collate_t.159* %collate, i32 0, i32 23, !dbg !729
  %18 = load i16*, i16** %index2weight19, align 8, !dbg !729
  %19 = bitcast i16* %18 to i8*, !dbg !727
  call void @free(i8* %19) #11, !dbg !730
  %20 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !731
  %collate20 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %20, i32 0, i32 118, !dbg !732
  %21 = bitcast %struct.__collate_t.159* %collate20 to i8*, !dbg !733
  %22 = bitcast %struct.__collate_t.159* %newcol to i8*, !dbg !734
  %call21 = call i8* @memcpy(i8* %21, i8* %22, i64 112) #11, !dbg !735
ck: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stac  br label %if.end22, !dbg !736
  br label %do.body, !dbg !737
  %23 = load i8*, i8** %p.addr, align 8, !dbg !738
  %24 = load i8, i8* %23, align 1, !dbg !741
  %conv23 = zext i8 %24 to i32, !dbg !741
  %25 = load i8*, i8** %s, align 8, !dbg !742
  %26 = load i8, i8* %25, align 1, !dbg !743
  %conv24 = zext i8 %26 to i32, !dbg !743
  %cmp25 = icmp ne i32 %conv23, %conv24, !dbg !744
  br i1 %cmp25, label %if.then34, label %lor.lhs.false27, !dbg !745
  %27 = load i8*, i8** %p.addr, align 8, !dbg !746
  %arrayidx28 = getelementptr inbounds i8, i8* %27, i64 1, !dbg !746
  %28 = load i8, i8* %arrayidx28, align 1, !dbg !746
  %conv29 = zext i8 %28 to i32, !dbg !746
  %29 = load i8*, i8** %s, align 8, !dbg !747
  %arrayidx30 = getelementptr inbounds i8, i8* %29, i64 1, !dbg !747
  %30 = load i8, i8* %arrayidx30, align 1, !dbg !747
  %conv31 = zext i8 %30 to i32, !dbg !747
  %cmp32 = icmp ne i32 %conv29, %conv31, !dbg !748
  br i1 %cmp32, label %if.then34, label %if.end313, !dbg !749
  %31 = load i8*, i8** %p.addr, align 8, !dbg !750
  %32 = load i8, i8* %31, align 1, !dbg !752
  %conv35 = zext i8 %32 to i32, !dbg !752
  %and36 = and i32 %conv35, 127, !dbg !753
  %shl37 = shl i32 %and36, 7, !dbg !754
  %33 = load i8*, i8** %p.addr, align 8, !dbg !755
  %arrayidx38 = getelementptr inbounds i8, i8* %33, i64 1, !dbg !755
  %34 = load i8, i8* %arrayidx38, align 1, !dbg !755
  %conv39 = zext i8 %34 to i32, !dbg !755
  %and40 = and i32 %conv39, 127, !dbg !756
  %add41 = add nsw i32 %shl37, %and40, !dbg !757
  store i32 %add41, i32* %row, align 4, !dbg !758
  %35 = load i8*, i8** %p.addr, align 8, !dbg !759
  %36 = load i8, i8* %35, align 1, !dbg !760
  %37 = load i8*, i8** %s, align 8, !dbg !761
  store i8 %36, i8* %37, align 1, !dbg !762
  %38 = load i8*, i8** %p.addr, align 8, !dbg !763
  %arrayidx42 = getelementptr inbounds i8, i8* %38, i64 1, !dbg !763
  %39 = load i8, i8* %arrayidx42, align 1, !dbg !763
  %40 = load i8*, i8** %s, align 8, !dbg !764
  %arrayidx43 = getelementptr inbounds i8, i8* %40, i64 1, !dbg !764
  store i8 %39, i8* %arrayidx43, align 1, !dbg !765
  %41 = load i32, i32* %i, align 4, !dbg !766
  %cmp44 = icmp ne i32 %41, 4, !dbg !768
  br i1 %cmp44, label %land.lhs.true, label %if.end92, !dbg !769
  %42 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !770
  %lc_common_item_offsets_LEN = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %42, i32 0, i32 29, !dbg !771
  %43 = load i32, i32* %i, align 4, !dbg !772
  %idxprom46 = sext i32 %43 to i64, !dbg !770
  %arrayidx47 = getelementptr inbounds [6 x i8], [6 x i8]* %lc_common_item_offsets_LEN, i64 0, i64 %idxprom46, !dbg !770
  %44 = load i8, i8* %arrayidx47, align 1, !dbg !770
  %conv48 = zext i8 %44 to i32, !dbg !770
  store i32 %conv48, i32* %len, align 4, !dbg !773
  %cmp49 = icmp ne i32 %conv48, 0, !dbg !774
  br i1 %cmp49, label %if.then51, label %if.end92, !dbg !775
  %45 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !776
  %locales52 = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %45, i32 0, i32 31, !dbg !778
  %46 = load i32, i32* %row, align 4, !dbg !779
  %mul53 = mul nsw i32 9, %46, !dbg !780
  %add54 = add nsw i32 %mul53, 3, !dbg !781
  %47 = load i32, i32* %i, align 4, !dbg !782
  %add55 = add nsw i32 %add54, %47, !dbg !783
  %idxprom56 = sext i32 %add55 to i64, !dbg !776
  %arrayidx57 = getelementptr inbounds [2826 x i8], [2826 x i8]* %locales52, i64 0, i64 %idxprom56, !dbg !776
  %48 = load i8, i8* %arrayidx57, align 1, !dbg !776
  %conv58 = zext i8 %48 to i32, !dbg !776
  %49 = load i32, i32* %len, align 4, !dbg !784
  %mul59 = mul nsw i32 %conv58, %49, !dbg !785
  store i32 %mul59, i32* %crow, align 4, !dbg !786
  %50 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !787
  %51 = bitcast %struct.__uclibc_locale_struct.160* %50 to i8*, !dbg !788
  %52 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !789
  %category_offsets = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %52, i32 0, i32 7, !dbg !790
  %53 = load i32, i32* %i, align 4, !dbg !791
  %idxprom60 = sext i32 %53 to i64, !dbg !789
  %arrayidx61 = getelementptr inbounds [6 x i16], [6 x i16]* %category_offsets, i64 0, i64 %idxprom60, !dbg !789
  %54 = load i16, i16* %arrayidx61, align 2, !dbg !789
  %conv62 = zext i16 %54 to i32, !dbg !789
  %idx.ext = sext i32 %conv62 to i64, !dbg !792
  %add.ptr63 = getelementptr inbounds i8, i8* %51, i64 %idx.ext, !dbg !792
  %55 = bitcast i8* %add.ptr63 to i8**, !dbg !793
  store i8** %55, i8*** %x, align 8, !dbg !794
  %56 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !795
  %lc_common_tbl_offsets = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %56, i32 0, i32 30, !dbg !796
  %arraydecay64 = getelementptr inbounds [24 x i64], [24 x i64]* %lc_common_tbl_offsets, i64 0, i64 0, !dbg !795
  %57 = load i32, i32* %i, align 4, !dbg !797
  %mul65 = mul nsw i32 4, %57, !dbg !798
  %idx.ext66 = sext i32 %mul65 to i64, !dbg !799
  %add.ptr67 = getelementptr inbounds i64, i64* %arraydecay64, i64 %idx.ext66, !dbg !799
  store i64* %add.ptr67, i64** %stp, align 8, !dbg !800
  %58 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !801
  %59 = bitcast %struct.__locale_mmap_t.162* %58 to i8*, !dbg !802
  %60 = load i64*, i64** %stp, align 8, !dbg !803
  %61 = load i64, i64* %60, align 8, !dbg !804
  %add.ptr68 = getelementptr inbounds i8, i8* %59, i64 %61, !dbg !805
  store i8* %add.ptr68, i8** %r, align 8, !dbg !806
  %62 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !807
  %63 = bitcast %struct.__locale_mmap_t.162* %62 to i8*, !dbg !808
  %64 = load i64*, i64** %stp, align 8, !dbg !809
  %incdec.ptr69 = getelementptr inbounds i64, i64* %64, i32 1, !dbg !809
  store i64* %incdec.ptr69, i64** %stp, align 8, !dbg !809
  %65 = load i64, i64* %incdec.ptr69, align 8, !dbg !810
  %add.ptr70 = getelementptr inbounds i8, i8* %63, i64 %65, !dbg !811
  %66 = bitcast i8* %add.ptr70 to i16*, !dbg !812
  store i16* %66, i16** %io, align 8, !dbg !813
  %67 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !814
  %68 = bitcast %struct.__locale_mmap_t.162* %67 to i8*, !dbg !815
  %69 = load i64*, i64** %stp, align 8, !dbg !816
  %incdec.ptr71 = getelementptr inbounds i64, i64* %69, i32 1, !dbg !816
  store i64* %incdec.ptr71, i64** %stp, align 8, !dbg !816
  %70 = load i64, i64* %incdec.ptr71, align 8, !dbg !817
  %add.ptr72 = getelementptr inbounds i8, i8* %68, i64 %70, !dbg !818
  %71 = bitcast i8* %add.ptr72 to i16*, !dbg !819
  store i16* %71, i16** %ii, align 8, !dbg !820
  %72 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !821
  %73 = bitcast %struct.__locale_mmap_t.162* %72 to i8*, !dbg !822
  %74 = load i64*, i64** %stp, align 8, !dbg !823
  %incdec.ptr73 = getelementptr inbounds i64, i64* %74, i32 1, !dbg !823
  store i64* %incdec.ptr73, i64** %stp, align 8, !dbg !823
  %75 = load i64, i64* %incdec.ptr73, align 8, !dbg !824
  %add.ptr74 = getelementptr inbounds i8, i8* %73, i64 %75, !dbg !825
  store i8* %add.ptr74, i8** %d, align 8, !dbg !826
  store i32 0, i32* %c, align 4, !dbg !827
  br label %for.cond, !dbg !829
k: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.190
//Instructions in stack: Num.191
//Instructions in stack: Num.192
//Instructions in stack: Num.193
//Instructions in stack: Num.194
//Instructions in stack: Num.195
//Instructions in stack: Num.196
//Instructions in stack: Num.197
//Instructions in stack: Num.198
//Instructions in stack: Num.199
//Instructions in stack: Num.200
//Instructions in stack: Num.201
//Instructions in stack: Num.202
//Instructions in stack: Num.203
//Instructions in stack: Num.204
//Instructions in stack: Num.205
//Instructions in stack: Num.206
//Instructions in stack: Num.207
//Instructions in stack: Num.208
//Instructions in stack: Num.209
//Instructions in stack: Num.210
//Instructions in stack: Num.211
//Instructions in stack: Num.212
//Instructions in stack: Num.213
//Instructions in stack: Num.214
//Instructions in stack: Num.215
//Instructions in stack: Num.216
//Instructions in stack: Num.217
//Instructions in stack: Num.218
//Instructions in stack: Num.219
//Instructions in stack: Num.220
//Instructions in stack: Num.221
//Instructions in stack: Num.222
//Instructions in stack: Num.223
//Instructions in stack: Num.224
//Instructions in stack: Num.225
//Instructions in stack: Num.226
//Instructions in stack: Num.227
//Instructions in stack: Num.228
//Instructions in stack: N  %76 = load i32, i32* %c, align 4, !dbg !830
  %77 = load i32, i32* %len, align 4, !dbg !832
  %cmp75 = icmp slt i32 %76, %77, !dbg !833
  br i1 %cmp75, label %for.body, label %for.end, !dbg !834
  %78 = load i8*, i8** %d, align 8, !dbg !835
  %79 = load i16*, i16** %ii, align 8, !dbg !837
  %80 = load i8*, i8** %r, align 8, !dbg !838
  %81 = load i32, i32* %crow, align 4, !dbg !839
  %82 = load i32, i32* %c, align 4, !dbg !840
  %add77 = add nsw i32 %81, %82, !dbg !841
  %idxprom78 = sext i32 %add77 to i64, !dbg !838
  %arrayidx79 = getelementptr inbounds i8, i8* %80, i64 %idxprom78, !dbg !838
  %83 = load i8, i8* %arrayidx79, align 1, !dbg !838
  %conv80 = zext i8 %83 to i32, !dbg !838
  %84 = load i16*, i16** %io, align 8, !dbg !842
  %85 = load i32, i32* %c, align 4, !dbg !843
  %idxprom81 = sext i32 %85 to i64, !dbg !842
  %arrayidx82 = getelementptr inbounds i16, i16* %84, i64 %idxprom81, !dbg !842
  %86 = load i16, i16* %arrayidx82, align 2, !dbg !842
  %conv83 = zext i16 %86 to i32, !dbg !842
  %add84 = add nsw i32 %conv80, %conv83, !dbg !844
  %idxprom85 = sext i32 %add84 to i64, !dbg !837
  %arrayidx86 = getelementptr inbounds i16, i16* %79, i64 %idxprom85, !dbg !837
  %87 = load i16, i16* %arrayidx86, align 2, !dbg !837
  %conv87 = zext i16 %87 to i32, !dbg !837
  %idx.ext88 = sext i32 %conv87 to i64, !dbg !845
  %add.ptr89 = getelementptr inbounds i8, i8* %78, i64 %idx.ext88, !dbg !845
  %88 = load i8**, i8*** %x, align 8, !dbg !846
  %89 = load i32, i32* %c, align 4, !dbg !847
  %idx.ext90 = sext i32 %89 to i64, !dbg !848
  %add.ptr91 = getelementptr inbounds i8*, i8** %88, i64 %idx.ext90, !dbg !848
  store i8* %add.ptr89, i8** %add.ptr91, align 8, !dbg !849
  br label %for.inc, !dbg !850
  %90 = load i32, i32* %c, align 4, !dbg !851
  %inc = add nsw i32 %90, 1, !dbg !851
  store i32 %inc, i32* %c, align 4, !dbg !851
  br label %for.cond, !dbg !852, !llvm.loop !853
  br label %if.end92, !dbg !855
  %91 = load i32, i32* %i, align 4, !dbg !856
  %cmp93 = icmp eq i32 %91, 0, !dbg !858
  br i1 %cmp93, label %if.then95, label %if.else295, !dbg !859
  %92 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !860
  %locales96 = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %92, i32 0, i32 31, !dbg !862
  %93 = load i32, i32* %row, align 4, !dbg !863
  %mul97 = mul nsw i32 9, %93, !dbg !864
  %add98 = add nsw i32 %mul97, 2, !dbg !865
  %idxprom99 = sext i32 %add98 to i64, !dbg !860
  %arrayidx100 = getelementptr inbounds [2826 x i8], [2826 x i8]* %locales96, i64 0, i64 %idxprom99, !dbg !860
  %94 = load i8, i8* %arrayidx100, align 1, !dbg !860
  %conv101 = zext i8 %94 to i32, !dbg !860
  store i32 %conv101, i32* %c, align 4, !dbg !866
  %95 = load i32, i32* %c, align 4, !dbg !867
  %cmp102 = icmp sle i32 %95, 2, !dbg !869
  br i1 %cmp102, label %if.then104, label %if.else112, !dbg !870
  %96 = load i32, i32* %c, align 4, !dbg !871
  %cmp105 = icmp eq i32 %96, 2, !dbg !874
  br i1 %cmp105, label %if.then107, label %if.else, !dbg !875
  %97 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !876
  %codeset = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %97, i32 0, i32 38, !dbg !878
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @utf8, i64 0, i64 0), i8** %codeset, align 8, !dbg !879
  %98 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !880
  %encoding = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %98, i32 0, i32 9, !dbg !881
  store i8 1, i8* %encoding, align 8, !dbg !882
  %99 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !883
  %mb_cur_max = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %99, i32 0, i32 10, !dbg !884
  store i8 6, i8* %mb_cur_max, align 1, !dbg !885
  br label %if.end111, !dbg !886
  %100 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !887
  %codeset108 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %100, i32 0, i32 38, !dbg !889
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @ascii, i64 0, i64 0), i8** %codeset108, align 8, !dbg !890
  %101 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !891
  %encoding109 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %101, i32 0, i32 9, !dbg !892
  store i8 0, i8* %encoding109, align 8, !dbg !893
  %102 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !894
  %mb_cur_max110 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %102, i32 0, i32 10, !dbg !895
  store i8 1, i8* %mb_cur_max110, align 1, !dbg !896
  br label %if.end111
  br label %if.end280, !dbg !897
  call void @llvm.dbg.declare(metadata %struct.__codeset_8_bit_t.161** %c8b, metadata !1298, metadata !DIExpression()), !dbg !1310
  %103 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !911
  %codeset_list = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %103, i32 0, i32 35, !dbg !911
  %arraydecay113 = getelementptr inbounds [255 x i8], [255 x i8]* %codeset_list, i64 0, i64 0, !dbg !911
  store i8* %arraydecay113, i8** %r, align 8, !dbg !912
  %104 = load i8*, i8** %r, align 8, !dbg !913
  %105 = load i8*, i8** %r, align 8, !dbg !914
  %106 = load i32, i32* %c, align 4, !dbg !915
  %sub = sub nsw i32 %106, 3, !dbg !915
  store i32 %sub, i32* %c, align 4, !dbg !915
  %idxprom114 = sext i32 %sub to i64, !dbg !914
  %arrayidx115 = getelementptr inbounds i8, i8* %105, i64 %idxprom114, !dbg !914
  %107 = load i8, i8* %arrayidx115, align 1, !dbg !914
  %conv116 = zext i8 %107 to i32, !dbg !914
  %idx.ext117 = sext i32 %conv116 to i64, !dbg !916
  %add.ptr118 = getelementptr inbounds i8, i8* %104, i64 %idx.ext117, !dbg !916
  %108 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !917
  %codeset119 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %108, i32 0, i32 38, !dbg !918
  store i8* %add.ptr118, i8** %codeset119, align 8, !dbg !919
  %109 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !920
  %encoding120 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %109, i32 0, i32 9, !dbg !921
  store i8 2, i8* %encoding120, align 8, !dbg !922
  %110 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !923
  %mb_cur_max121 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %110, i32 0, i32 10, !dbg !924
  store i8 1, i8* %mb_cur_max121, align 1, !dbg !925
  %111 = load %struct.__locale_mmap_t.162*, %struct.__locale_mmap_t.162** @__locale_mmap, align 8, !dbg !926
  %codeset_8_bit = getelementptr inbounds %struct.__locale_mmap_t.162, %struct.__locale_mmap_t.162* %111, i32 0, i32 12, !dbg !927
  %arraydecay122 = getelementptr inbounds [23 x %struct.__codeset_8_bit_t.161], [23 x %struct.__codeset_8_bit_t.161]* %codeset_8_bit, i64 0, i64 0, !dbg !926
  %112 = load i32, i32* %c, align 4, !dbg !928
  %idx.ext123 = sext i32 %112 to i64, !dbg !929
  %add.ptr124 = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %arraydecay122, i64 %idx.ext123, !dbg !929
  store %struct.__codeset_8_bit_t.161* %add.ptr124, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !930
  %113 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !931
  %idx8ctype = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %113, i32 0, i32 0, !dbg !932
  %arraydecay125 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8ctype, i64 0, i64 0, !dbg !931
  %114 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !933
  %idx8ctype126 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %114, i32 0, i32 12, !dbg !934
  store i8* %arraydecay125, i8** %idx8ctype126, align 8, !dbg !935
  %115 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !936
  %idx8uplow = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %115, i32 0, i32 1, !dbg !937
  %arraydecay127 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8uplow, i64 0, i64 0, !dbg !936
  %116 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !938
  %idx8uplow128 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %116, i32 0, i32 14, !dbg !939
  store i8* %arraydecay127, i8** %idx8uplow128, align 8, !dbg !940
  %117 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !941
  %idx8c2wc = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %117, i32 0, i32 2, !dbg !942
um.229
//Instructions in stack: Num.230
//Instructions in stack: Num.231
//Instructions in stack: Num.232
//Instructions in stack: Num.233
//Instructions in stack: Num.234
//Instructions in stack: Num.235
//Instructions in stack: Num.236
//Instructions in stack: Num.237
//Instructions in stack: Num.238
//Instructions in stack: Num.239
//Instructions in stack: Num.240
//Instructions in stack: Num.241
//Instructions in stack: Num.242
//Instructions in stack: Num.243
//Instructions in stack: Num.244
//Instructions in stack: Num.245
//Instructions in stack: Num.246
//Instructions in stack: Num.247
//Instructions in stack: Num.248
//Instructions in stack: Num.249
//Instructions in stack: Num.250
//Instructions in stack: Num.251
//Instructions in stack: Num.252
//Instructions in stack: Num.253
//Instructions in stack: Num.254
//Instructions in stack: Num.255
//Instructions in stack: Num.256
//Instructions in stack: Num.257
//Instructions in stack: Num.258
//Instructions in stack: Num.259
//Instructions in stack: Num.260
//Instructions in stack: Num.261
//Instructions in stack: Num.262
//Instructions in stack: Num.263
//Instructions in stack: Num.264
//Instructions in stack: Num.265
//Instructions in stack: Num.266
//Instructions in stack: Num.267
//Instructions in stack: Num.268
//Instructions in stack: Num.269
//Instructions in stack: Num.270
//Instructions in stack: Num.271
//Instructions in stack: Num.272
//Instructions in stack: Num.273
//Instructions in stack: Num.274
//Instructions in stack: Num.275
//Instructions in stack: Num.276
//Instructions in stack: Num.277
//Instructions in stack: Num.278
//Instructions in stack: Num.279
//Instructions in stack: Num.280
//Instructions in stack: Num.281
//Instructions in stack: Num.282
//Instructions in stack: Num.283
//Instructions in stack: Num.284
//Instructions in stack: Num.285
//Instructions in stack: Num.286
//Instructions in stack: Num.287
//Instructions in stack: Num.288
//Instructions in stack: Num.289
//Instructions in stack: Num.290
//Instructions in stack: Num.291
//Instructions in stack: Num.292
//Instructions in stack: Num.293
//Instructions in stack: Num.294
//Instructions in stack: Num.295
//Instructions in stack: Num.296
//Instructions in stack: Num.297
//Instructions in stack: Num.298
//Instructions in stack: Num.299
//Instructions in stack: Num.300
//Instructions in stack: Num.301
//Instructions in stack: Num.302
//Instructions in stack: Num.303
//Instructions in stack: Num.304
//Instructions in stack: Num.305
//Instructions in stack: Num.306
//Instructions in stack: Num.307
//Instructions in stack: Num.308
//Instructions in stack: Num.309
//Instructions in stack: Num.310
//Instructions in stack: Num.311
//Instructions in stack: Num.312
//Instructions in stack: Num.313
//Instructions in stack: Num.314
//Instructions in stack: Num.315
//Instructions in stack: Num.316
//Instructions in stack: Num.317
//Instructions in stack: Num.318
//Instructions in stack: Num.319
//Instructions in stack: Num.320
//Instructions in stack: Num.321
//Instructions in stack: Num.322
//Instructions in stack: Num.323
//Instructions in stack: Num.324
//Instructions in stack: Num.325
//Instructions in stack: Num.326
//Instructions in stack: Num.327
//Instructions in stack: Num.328
//Instructions in stack: Num.329
//Instructions in stack: Num.330
//Instructions in stack: Num.331
//Instructions in stack: Num.332
//Instructions in stack: Num.333
//Instructions in stack: Num.334
//Instructions in stack: Num.335
//Instructions in stack: Num.336
//Instructions in stack: Num.337
//Instructions in stack: Num.338
//Instructions in stack: Num.339
//Instructions in stack: Num.340
//Instructions in stack: Num.341
//Instructions in stack: Num.342
//Instructions in stack: Num.343
//Instructions in stack: Num.344
//Instructions in stack: Num.345
//Instructions in stack: Num.346
//Instructions in stack: Num.347
//Instructions in stack: Num.348
//Instructions in stack: Num.349
//Instructions in stack: Num.350
//Instructions in stack: Num.351
//Instructions in stack: Num.352
//Instructions in stack: Num.3  %arraydecay129 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8c2wc, i64 0, i64 0, !dbg !941
  %118 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !943
  %idx8c2wc130 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %118, i32 0, i32 16, !dbg !944
  store i8* %arraydecay129, i8** %idx8c2wc130, align 8, !dbg !945
  %119 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !946
  %idx8wc2c = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %119, i32 0, i32 3, !dbg !947
  %arraydecay131 = getelementptr inbounds [38 x i8], [38 x i8]* %idx8wc2c, i64 0, i64 0, !dbg !946
  %120 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !948
  %idx8wc2c132 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %120, i32 0, i32 18, !dbg !949
  store i8* %arraydecay131, i8** %idx8wc2c132, align 8, !dbg !950
  %121 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !951
  %__ctype_b_data = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %121, i32 0, i32 3, !dbg !952
  %arraydecay133 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data, i64 0, i64 0, !dbg !951
  %122 = bitcast i16* %arraydecay133 to i8*, !dbg !951
  %123 = load i16*, i16** @__C_ctype_b, align 8, !dbg !953
  %add.ptr134 = getelementptr inbounds i16, i16* %123, i64 -128, !dbg !954
  %124 = bitcast i16* %add.ptr134 to i8*, !dbg !953
  %call135 = call i8* @memcpy(i8* %122, i8* %124, i64 768) #11, !dbg !955
  %125 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !956
  %__ctype_tolower_data = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %125, i32 0, i32 4, !dbg !957
  %arraydecay136 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data, i64 0, i64 0, !dbg !956
  %126 = bitcast i16* %arraydecay136 to i8*, !dbg !956
  %127 = load i16*, i16** @__C_ctype_tolower, align 8, !dbg !958
  %add.ptr137 = getelementptr inbounds i16, i16* %127, i64 -128, !dbg !959
  %128 = bitcast i16* %add.ptr137 to i8*, !dbg !958
  %call138 = call i8* @memcpy(i8* %126, i8* %128, i64 768) #11, !dbg !960
  %129 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !961
  %__ctype_toupper_data = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %129, i32 0, i32 5, !dbg !962
  %arraydecay139 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data, i64 0, i64 0, !dbg !961
  %130 = bitcast i16* %arraydecay139 to i8*, !dbg !961
  %131 = load i16*, i16** @__C_ctype_toupper, align 8, !dbg !963
  %add.ptr140 = getelementptr inbounds i16, i16* %131, i64 -128, !dbg !964
  %132 = bitcast i16* %add.ptr140 to i8*, !dbg !963
  %call141 = call i8* @memcpy(i8* %130, i8* %132, i64 768) #11, !dbg !965
  call void @llvm.dbg.declare(metadata i32* %u, metadata !1366, metadata !DIExpression()), !dbg !1368
  call void @llvm.dbg.declare(metadata i16* %m, metadata !1369, metadata !DIExpression()), !dbg !1370
  store i32 0, i32* %u, align 4, !dbg !971
  br label %for.cond142, !dbg !973
  %133 = load i32, i32* %u, align 4, !dbg !974
  %cmp143 = icmp slt i32 %133, 128, !dbg !976
  br i1 %cmp143, label %for.body145, label %for.end270, !dbg !977
  %134 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !978
  %tbl8ctype = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %134, i32 0, i32 13, !dbg !980
  %135 = load i8*, i8** %tbl8ctype, align 8, !dbg !980
  %136 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !981
  %idx8ctype146 = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %136, i32 0, i32 0, !dbg !982
  %137 = load i32, i32* %u, align 4, !dbg !983
  %shr = ashr i32 %137, 3, !dbg !984
  %idxprom147 = sext i32 %shr to i64, !dbg !981
  %arrayidx148 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8ctype146, i64 0, i64 %idxprom147, !dbg !981
  %138 = load i8, i8* %arrayidx148, align 1, !dbg !981
  %conv149 = zext i8 %138 to i32, !dbg !985
  %shl150 = shl i32 %conv149, 2, !dbg !986
  %139 = load i32, i32* %u, align 4, !dbg !987
  %and151 = and i32 %139, 7, !dbg !988
  %shr152 = ashr i32 %and151, 1, !dbg !989
  %add153 = add nsw i32 %shl150, %shr152, !dbg !990
  %idxprom154 = sext i32 %add153 to i64, !dbg !978
  %arrayidx155 = getelementptr inbounds i8, i8* %135, i64 %idxprom154, !dbg !978
  %140 = load i8, i8* %arrayidx155, align 1, !dbg !978
  %conv156 = zext i8 %140 to i32, !dbg !978
  store i32 %conv156, i32* %c, align 4, !dbg !991
  %141 = load i32, i32* %u, align 4, !dbg !992
  %and157 = and i32 %141, 1, !dbg !993
  %tobool158 = icmp ne i32 %and157, 0, !dbg !993
  br i1 %tobool158, label %cond.true, label %cond.false, !dbg !994
  %142 = load i32, i32* %c, align 4, !dbg !995
  %shr159 = ashr i32 %142, 4, !dbg !996
  br label %cond.end, !dbg !994
  %143 = load i32, i32* %c, align 4, !dbg !997
  %and160 = and i32 %143, 15, !dbg !998
  br label %cond.end, !dbg !994
  %cond = phi i32 [ %shr159, %cond.true ], [ %and160, %cond.false ], !dbg !994
  store i32 %cond, i32* %c, align 4, !dbg !999
  %144 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1000
  %code2flag = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %144, i32 0, i32 20, !dbg !1001
  %145 = load i16*, i16** %code2flag, align 8, !dbg !1001
  %146 = load i32, i32* %c, align 4, !dbg !1002
  %idxprom161 = sext i32 %146 to i64, !dbg !1000
  %arrayidx162 = getelementptr inbounds i16, i16* %145, i64 %idxprom161, !dbg !1000
  %147 = load i16, i16* %arrayidx162, align 2, !dbg !1000
  store i16 %147, i16* %m, align 2, !dbg !1003
  %148 = load i16, i16* %m, align 2, !dbg !1004
  %149 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1005
  %__ctype_b_data163 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %149, i32 0, i32 3, !dbg !1006
  %150 = load i32, i32* %u, align 4, !dbg !1007
  %add164 = add nsw i32 256, %150, !dbg !1008
  %idxprom165 = sext i32 %add164 to i64, !dbg !1005
  %arrayidx166 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data163, i64 0, i64 %idxprom165, !dbg !1005
  store i16 %148, i16* %arrayidx166, align 2, !dbg !1009
  %151 = load i32, i32* %u, align 4, !dbg !1010
  %add167 = add nsw i32 128, %151, !dbg !1012
  %conv168 = trunc i32 %add167 to i8, !dbg !1013
  %conv169 = sext i8 %conv168 to i32, !dbg !1014
  %cmp170 = icmp ne i32 %conv169, -1, !dbg !1015
  br i1 %cmp170, label %if.then172, label %if.end180, !dbg !1016
  %152 = load i16, i16* %m, align 2, !dbg !1017
  %153 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1019
  %__ctype_b_data173 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %153, i32 0, i32 3, !dbg !1020
  %154 = load i32, i32* %u, align 4, !dbg !1021
  %add174 = add nsw i32 128, %154, !dbg !1022
  %conv175 = trunc i32 %add174 to i8, !dbg !1023
  %conv176 = sext i8 %conv175 to i32, !dbg !1024
  %add177 = add nsw i32 128, %conv176, !dbg !1025
  %idxprom178 = sext i32 %add177 to i64, !dbg !1019
  %arrayidx179 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data173, i64 0, i64 %idxprom178, !dbg !1019
  store i16 %152, i16* %arrayidx179, align 2, !dbg !1026
  br label %if.end180, !dbg !1027
  %155 = load i32, i32* %u, align 4, !dbg !1028
  %add181 = add nsw i32 128, %155, !dbg !1029
  %conv182 = trunc i32 %add181 to i16, !dbg !1030
  %156 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1031
  %__ctype_tolower_data183 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %156, i32 0, i32 4, !dbg !1032
  %157 = load i32, i32* %u, align 4, !dbg !1033
  %add184 = add nsw i32 256, %157, !dbg !1034
  %idxprom185 = sext i32 %add184 to i64, !dbg !1031
  %arrayidx186 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data183, i64 0, i64 %idxprom185, !dbg !1031
  store i16 %conv182, i16* %arrayidx186, align 2, !dbg !1035
  %158 = load i32, i32* %u, align 4, !dbg !1036
  %add187 = add nsw i32 128, %158, !dbg !1037
  %conv188 = trunc i32 %add187 to i16, !dbg !1038
  %159 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1039
  %__ctype_toupper_data189 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %159, i32 0, i32 5, !dbg !1040
  %160 = load i32, i32* %u, align 4, !dbg !1041
  %add190 = add nsw i32 256, %160, !dbg !1042
53
//Instructions in stack: Num.354
//Instructions in stack: Num.355
//Instructions in stack: Num.356
//Instructions in stack: Num.357
//Instructions in stack: Num.358
//Instructions in stack: Num.359
//Instructions in stack: Num.360
//Instructions in stack: Num.361
//Instructions in stack: Num.362
//Instructions in stack: Num.363
//Instructions in stack: Num.364
//Instructions in stack: Num.365
//Instructions in stack: Num.366
//Instructions in stack: Num.367
//Instructions in stack: Num.368
//Instructions in stack: Num.369
//Instructions in stack: Num.370
//Instructions in stack: Num.371
//Instructions in stack: Num.372
//Instructions in stack: Num.373
//Instructions in stack: Num.374
//Instructions in stack: Num.375
//Instructions in stack: Num.376
//Instructions in stack: Num.377
//Instructions in stack: Num.378
//Instructions in stack: Num.379
//Instructions in stack: Num.380
//Instructions in stack: Num.381
//Instructions in stack: Num.382
//Instructions in stack: Num.383
//Instructions in stack: Num.384
//Instructions in stack: Num.385
//Instructions in stack: Num.386
//Instructions in stack: Num.387
//Instructions in stack: Num.388
//Instructions in stack: Num.389
//Instructions in stack: Num.390
//Instructions in stack: Num.391
//Instructions in stack: Num.392
//Instructions in stack: Num.393
//Instructions in stack: Num.394
//Instructions in stack: Num.395
//Instructions in stack: Num.396
//Instructions in stack: Num.397
//Instructions in stack: Num.398
//Instructions in stack: Num.399
//Instructions in stack: Num.400
//Instructions in stack: Num.401
//Instructions in stack: Num.402
//Instructions in stack: Num.403
//Instructions in stack: Num.404
//Instructions in stack: Num.405
//Instructions in stack: Num.406
//Instructions in stack: Num.407
//Instructions in stack: Num.408
//Instructions in stack: Num.409
//Instructions in stack: Num.410
//Instructions in stack: Num.411
//Instructions in stack: Num.412
//Instructions in stack: Num.413
//Instructions in stack: Num.414
//Instructions in stack: Num.415
//Instructions in stack: Num.416
//Instructions in stack: Num.417
//Instructions in stack: Num.418
//Instructions in stack: Num.419
//Instructions in stack: Num.420
//Instructions in stack: Num.421
//Instructions in stack: Num.422
//Instructions in stack: Num.423
//Instructions in stack: Num.424
//Instructions in stack: Num.425
//Instructions in stack: Num.426
//Instructions in stack: Num.427
//Instructions in stack: Num.428
//Instructions in stack: Num.429
//Instructions in stack: Num.430
//Instructions in stack: Num.431
//Instructions in stack: Num.432
//Instructions in stack: Num.433
//Instructions in stack: Num.434
//Instructions in stack: Num.435
//Instructions in stack: Num.436
//Instructions in stack: Num.437
//Instructions in stack: Num.438
//Instructions in stack: Num.439
//Instructions in stack: Num.440
//Instructions in stack: Num.441
//Instructions in stack: Num.442
//Instructions in stack: Num.443
//Instructions in stack: Num.444
//Instructions in stack: Num.445
//Instructions in stack: Num.446
//Instructions in stack: Num.447
//Instructions in stack: Num.448
//Instructions in stack: Num.449
//Instructions in stack: Num.450
//Instructions in stack: Num.451
//Instructions in stack: Num.452
//Instructions in stack: Num.453
//Instructions in stack: Num.454
//Instructions in stack: Num.455
//Instructions in stack: Num.456
//Instructions in stack: Num.457
//Instructions in stack: Num.458
//Instructions in stack: Num.459
//Instructions in stack: Num.460
//Instructions in stack: Num.461
//Instructions in stack: Num.462
//Instructions in stack: Num.463
//Instructions in stack: Num.464
//Instructions in stack: Num.465
//Instructions in stack: Num.466
//Instructions in stack: Num.467
//Instructions in stack: Num.468
//Instructions in stack: Num.469
//Instructions in stack: Num.470
//Instructions in stack: Num.471
//Instructions in stack: Num.472
//Instructions in stack: Num.473
//Instructions in stack: Num.474
//Instructions in stack: Num.475
//Instructions in stack: Num.476
//Instructions in stack: Num.477
/  %idxprom191 = sext i32 %add190 to i64, !dbg !1039
  %arrayidx192 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data189, i64 0, i64 %idxprom191, !dbg !1039
  store i16 %conv188, i16* %arrayidx192, align 2, !dbg !1043
  %161 = load i16, i16* %m, align 2, !dbg !1044
  %conv193 = zext i16 %161 to i32, !dbg !1044
  %and194 = and i32 %conv193, 768, !dbg !1046
  %tobool195 = icmp ne i32 %and194, 0, !dbg !1046
  br i1 %tobool195, label %if.then196, label %if.end267, !dbg !1047
  %162 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1048
  %tbl8uplow = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %162, i32 0, i32 15, !dbg !1050
  %163 = load i8*, i8** %tbl8uplow, align 8, !dbg !1050
  %164 = load %struct.__codeset_8_bit_t.161*, %struct.__codeset_8_bit_t.161** %c8b, align 8, !dbg !1051
  %idx8uplow197 = getelementptr inbounds %struct.__codeset_8_bit_t.161, %struct.__codeset_8_bit_t.161* %164, i32 0, i32 1, !dbg !1052
  %165 = load i32, i32* %u, align 4, !dbg !1053
  %shr198 = ashr i32 %165, 3, !dbg !1054
  %idxprom199 = sext i32 %shr198 to i64, !dbg !1051
  %arrayidx200 = getelementptr inbounds [16 x i8], [16 x i8]* %idx8uplow197, i64 0, i64 %idxprom199, !dbg !1051
  %166 = load i8, i8* %arrayidx200, align 1, !dbg !1051
  %conv201 = zext i8 %166 to i32, !dbg !1055
  %shl202 = shl i32 %conv201, 3, !dbg !1056
  %167 = load i32, i32* %u, align 4, !dbg !1057
  %add203 = add nsw i32 128, %167, !dbg !1058
  %and204 = and i32 %add203, 7, !dbg !1059
  %add205 = add nsw i32 %shl202, %and204, !dbg !1060
  %idxprom206 = sext i32 %add205 to i64, !dbg !1048
  %arrayidx207 = getelementptr inbounds i8, i8* %163, i64 %idxprom206, !dbg !1048
  %168 = load i8, i8* %arrayidx207, align 1, !dbg !1048
  %conv208 = zext i8 %168 to i32, !dbg !1048
  store i32 %conv208, i32* %c, align 4, !dbg !1061
  %169 = load i16, i16* %m, align 2, !dbg !1062
  %conv209 = zext i16 %169 to i32, !dbg !1062
  %and210 = and i32 %conv209, 512, !dbg !1064
  %tobool211 = icmp ne i32 %and210, 0, !dbg !1064
  br i1 %tobool211, label %if.then212, label %if.else239, !dbg !1065
  %170 = load i32, i32* %u, align 4, !dbg !1066
  %add213 = add nsw i32 128, %170, !dbg !1068
  %171 = load i32, i32* %c, align 4, !dbg !1069
  %add214 = add nsw i32 %add213, %171, !dbg !1070
  %conv215 = trunc i32 %add214 to i8, !dbg !1071
  %conv216 = zext i8 %conv215 to i16, !dbg !1071
  %172 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1072
  %__ctype_toupper_data217 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %172, i32 0, i32 5, !dbg !1073
  %173 = load i32, i32* %u, align 4, !dbg !1074
  %add218 = add nsw i32 256, %173, !dbg !1075
  %idxprom219 = sext i32 %add218 to i64, !dbg !1072
  %arrayidx220 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data217, i64 0, i64 %idxprom219, !dbg !1072
  store i16 %conv216, i16* %arrayidx220, align 2, !dbg !1076
  %174 = load i32, i32* %u, align 4, !dbg !1077
  %add221 = add nsw i32 128, %174, !dbg !1079
  %conv222 = trunc i32 %add221 to i8, !dbg !1080
  %conv223 = sext i8 %conv222 to i32, !dbg !1081
  %cmp224 = icmp ne i32 %conv223, -1, !dbg !1082
  br i1 %cmp224, label %if.then226, label %if.end238, !dbg !1083
  %175 = load i32, i32* %u, align 4, !dbg !1084
  %add227 = add nsw i32 128, %175, !dbg !1086
  %176 = load i32, i32* %c, align 4, !dbg !1087
  %add228 = add nsw i32 %add227, %176, !dbg !1088
  %conv229 = trunc i32 %add228 to i8, !dbg !1089
  %conv230 = zext i8 %conv229 to i16, !dbg !1089
  %177 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1090
  %__ctype_toupper_data231 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %177, i32 0, i32 5, !dbg !1091
  %178 = load i32, i32* %u, align 4, !dbg !1092
  %add232 = add nsw i32 128, %178, !dbg !1093
  %conv233 = trunc i32 %add232 to i8, !dbg !1094
  %conv234 = sext i8 %conv233 to i32, !dbg !1095
  %add235 = add nsw i32 128, %conv234, !dbg !1096
  %idxprom236 = sext i32 %add235 to i64, !dbg !1090
  %arrayidx237 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data231, i64 0, i64 %idxprom236, !dbg !1090
  store i16 %conv230, i16* %arrayidx237, align 2, !dbg !1097
  br label %if.end238, !dbg !1098
  br label %if.end266, !dbg !1099
  %179 = load i32, i32* %u, align 4, !dbg !1100
  %add240 = add nsw i32 128, %179, !dbg !1102
  %180 = load i32, i32* %c, align 4, !dbg !1103
  %sub241 = sub nsw i32 %add240, %180, !dbg !1104
  %conv242 = trunc i32 %sub241 to i8, !dbg !1105
  %conv243 = zext i8 %conv242 to i16, !dbg !1105
  %181 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1106
  %__ctype_tolower_data244 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %181, i32 0, i32 4, !dbg !1107
  %182 = load i32, i32* %u, align 4, !dbg !1108
  %add245 = add nsw i32 256, %182, !dbg !1109
  %idxprom246 = sext i32 %add245 to i64, !dbg !1106
  %arrayidx247 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data244, i64 0, i64 %idxprom246, !dbg !1106
  store i16 %conv243, i16* %arrayidx247, align 2, !dbg !1110
  %183 = load i32, i32* %u, align 4, !dbg !1111
  %add248 = add nsw i32 128, %183, !dbg !1113
  %conv249 = trunc i32 %add248 to i8, !dbg !1114
  %conv250 = sext i8 %conv249 to i32, !dbg !1115
  %cmp251 = icmp ne i32 %conv250, -1, !dbg !1116
  br i1 %cmp251, label %if.then253, label %if.end265, !dbg !1117
  %184 = load i32, i32* %u, align 4, !dbg !1118
  %add254 = add nsw i32 128, %184, !dbg !1120
  %185 = load i32, i32* %c, align 4, !dbg !1121
  %sub255 = sub nsw i32 %add254, %185, !dbg !1122
  %conv256 = trunc i32 %sub255 to i8, !dbg !1123
  %conv257 = zext i8 %conv256 to i16, !dbg !1123
  %186 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1124
  %__ctype_tolower_data258 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %186, i32 0, i32 4, !dbg !1125
  %187 = load i32, i32* %u, align 4, !dbg !1126
  %add259 = add nsw i32 128, %187, !dbg !1127
  %conv260 = trunc i32 %add259 to i8, !dbg !1128
  %conv261 = sext i8 %conv260 to i32, !dbg !1129
  %add262 = add nsw i32 128, %conv261, !dbg !1130
  %idxprom263 = sext i32 %add262 to i64, !dbg !1124
  %arrayidx264 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data258, i64 0, i64 %idxprom263, !dbg !1124
  store i16 %conv257, i16* %arrayidx264, align 2, !dbg !1131
  br label %if.end265, !dbg !1132
  br label %if.end266
  br label %if.end267, !dbg !1133
  br label %for.inc268, !dbg !1134
  %188 = load i32, i32* %u, align 4, !dbg !1135
  %inc269 = add nsw i32 %188, 1, !dbg !1135
  store i32 %inc269, i32* %u, align 4, !dbg !1135
  br label %for.cond142, !dbg !1136, !llvm.loop !1137
  %189 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1139
  %__ctype_b_data271 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %189, i32 0, i32 3, !dbg !1140
  %arraydecay272 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_b_data271, i64 0, i64 0, !dbg !1139
  %add.ptr273 = getelementptr inbounds i16, i16* %arraydecay272, i64 128, !dbg !1141
  %190 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1142
  %__ctype_b = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %190, i32 0, i32 0, !dbg !1143
  store i16* %add.ptr273, i16** %__ctype_b, align 8, !dbg !1144
  %191 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1145
  %__ctype_tolower_data274 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %191, i32 0, i32 4, !dbg !1146
  %arraydecay275 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_tolower_data274, i64 0, i64 0, !dbg !1145
/Instructions in stack: Num.478
//Instructions in stack: Num.479
//Instructions in stack: Num.480
//Instructions in stack: Num.481
//Instructions in stack: Num.482
//Instructions in stack: Num.483
//Instructions in stack: Num.484
//Instructions in stack: Num.485
//Instructions in stack: Num.486
//Instructions in stack: Num.487
//Instructions in stack: Num.488
//Instructions in stack: Num.489
//Instructions in stack: Num.490
//Instructions in stack: Num.491
//Instructions in stack: Num.492
//Instructions in stack: Num.493
//Instructions in stack: Num.494
//Instructions in stack: Num.495
//Instructions in stack: Num.496
//Instructions in stack: Num.497
//Instructions in stack: Num.498
//Instructions in stack: Num.499
//Instructions in stack: Num.500
//Instructions in stack: Num.501
//Instructions in stack: Num.502
//Instructions in stack: Num.503
//Instructions in stack: Num.504
//Instructions in stack: Num.505
//Instructions in stack: Num.506
//Instructions in stack: Num.507
//Instructions in stack: Num.508
//Instructions in stack: Num.509
//Instructions in stack: Num.510
//Instructions in stack: Num.511
//Instructions in stack: Num.512
//Instructions in stack: Num.513
//Instructions in stack: Num.514
//Instructions in stack: Num.515
//Instructions in stack: Num.516
//Instructions in stack: Num.517
//Instructions in stack: Num.518
//Instructions in stack: Num.519
//Instructions in stack: Num.520
//Instructions in stack: Num.521
//Instructions in stack: Num.522
//Instructions in stack: Num.523
//Instructions in stack: Num.524
//Instructions in stack: Num.525
//Instructions in stack: Num.526
//Instructions in stack: Num.527
//Instructions in stack: Num.528
//Instructions in stack: Num.529
//Instructions in stack: Num.530
//Instructions in stack: Num.531
//Instructions in stack: Num.532
//Instructions in stack: Num.533
//Instructions in stack: Num.534
//Instructions in stack: Num.535
//Instructions in stack: Num.536
//Instructions in stack: Num.537
//Instructions in stack: Num.538
//Instructions in stack: Num.539
//Instructions in stack: Num.540
//Instructions in stack: Num.541
//Instructions in stack: Num.542
//Instructions in stack: Num.543
//Instructions in stack: Num.544
//Instructions in stack: Num.545
//Instructions in stack: Num.546
//Instructions in stack: Num.547
//Instructions in stack: Num.548
//Instructions in stack: Num.549
//Instructions in stack: Num.550
//Instructions in stack: Num.551
//Instructions in stack: Num.552
//Instructions in stack: Num.553
//Instructions in stack: Num.554
//Instructions in stack: Num.555
//Instructions in stack: Num.556
//Instructions in stack: Num.557
//Instructions in stack: Num.558
//Instructions in stack: Num.559
//Instructions in stack: Num.560
//Instructions in stack: Num.561
//Instructions in stack: Num.562
//Instructions in stack: Num.563
//Instructions in stack: Num.564
//Instructions in stack: Num.565
//Instructions in stack: Num.566
//Instructions in stack: Num.567
//Instructions in stack: Num.568
//Instructions in stack: Num.569
//Instructions in stack: Num.570
//Instructions in stack: Num.571
//Instructions in stack: Num.572
//Instructions in stack: Num.573
//Instructions in stack: Num.574
//Instructions in stack: Num.575
//Instructions in stack: Num.576
//Instructions in stack: Num.577
//Instructions in stack: Num.578
//Instructions in stack: Num.579
//Instructions in stack: Num.580
//Instructions in stack: Num.581
//Instructions in stack: Num.582
//Instructions in stack: Num.583
//Instructions in stack: Num.584
//Instructions in stack: Num.585
//Instructions in stack: Num.586
//Instructions in stack: Num.587
//Instructions in stack: Num.588
//Instructions in stack: Num.589
//Instructions in stack: Num.590
//Instructions in stack: Num.591
//Instructions in stack: Num.592
//Instructions in stack: Num.593
//Instructions in stack: Num.594
//Instructions in stack: Num.595
//Instructions in stack: Num.596
//Instructions in stack: Num.597
//Instructions in stack: Num.598
//Instructions in stack: Num.599
//Instructions in stack: Num.600
//Instructions in stack: Num.601
//Ins  %add.ptr276 = getelementptr inbounds i16, i16* %arraydecay275, i64 128, !dbg !1147
  %192 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1148
  %__ctype_tolower = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %192, i32 0, i32 1, !dbg !1149
  store i16* %add.ptr276, i16** %__ctype_tolower, align 8, !dbg !1150
  %193 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1151
  %__ctype_toupper_data277 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %193, i32 0, i32 5, !dbg !1152
  %arraydecay278 = getelementptr inbounds [384 x i16], [384 x i16]* %__ctype_toupper_data277, i64 0, i64 0, !dbg !1151
  %add.ptr279 = getelementptr inbounds i16, i16* %arraydecay278, i64 128, !dbg !1153
  %194 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1154
  %__ctype_toupper = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %194, i32 0, i32 2, !dbg !1155
  store i16* %add.ptr279, i16** %__ctype_toupper, align 8, !dbg !1156
  br label %if.end280
  %195 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1157
  %outdigit_length = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %195, i32 0, i32 11, !dbg !1158
  %arraydecay281 = getelementptr inbounds [10 x i8], [10 x i8]* %outdigit_length, i64 0, i64 0, !dbg !1157
  store i8* %arraydecay281, i8** %d, align 8, !dbg !1159
  %196 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1160
  %outdigit0_mb = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %196, i32 0, i32 28, !dbg !1161
  store i8** %outdigit0_mb, i8*** %x, align 8, !dbg !1162
  store i32 0, i32* %c, align 4, !dbg !1163
  br label %for.cond282, !dbg !1165
  %197 = load i32, i32* %c, align 4, !dbg !1166
  %cmp283 = icmp slt i32 %197, 10, !dbg !1168
  br i1 %cmp283, label %for.body285, label %for.end294, !dbg !1169
  %198 = load i8**, i8*** %x, align 8, !dbg !1170
  %199 = load i32, i32* %c, align 4, !dbg !1172
  %idxprom286 = sext i32 %199 to i64, !dbg !1170
  %arrayidx287 = getelementptr inbounds i8*, i8** %198, i64 %idxprom286, !dbg !1170
  %200 = load i8*, i8** %arrayidx287, align 8, !dbg !1170
  %call288 = call i64 @strlen(i8* %200) #12, !dbg !1173
  %conv289 = trunc i64 %call288 to i8, !dbg !1173
  %201 = load i8*, i8** %d, align 8, !dbg !1174
  %202 = load i32, i32* %c, align 4, !dbg !1175
  %idxprom290 = sext i32 %202 to i64, !dbg !1176
  %arrayidx291 = getelementptr inbounds i8, i8* %201, i64 %idxprom290, !dbg !1176
  store i8 %conv289, i8* %arrayidx291, align 1, !dbg !1177
  br label %for.inc292, !dbg !1178
  %203 = load i32, i32* %c, align 4, !dbg !1179
  %inc293 = add nsw i32 %203, 1, !dbg !1179
  store i32 %inc293, i32* %c, align 4, !dbg !1179
  br label %for.cond282, !dbg !1180, !llvm.loop !1181
  br label %if.end312, !dbg !1183
  %204 = load i32, i32* %i, align 4, !dbg !1184
  %cmp296 = icmp eq i32 %204, 1, !dbg !1186
  br i1 %cmp296, label %if.then298, label %if.end311, !dbg !1187
  %205 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1188
  %decimal_point_wc = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %205, i32 0, i32 24, !dbg !1190
  %206 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1191
  %decimal_point = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %206, i32 0, i32 39, !dbg !1192
  %207 = load i8*, i8** %decimal_point, align 8, !dbg !1192
  %208 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1193
  %call299 = call i32 @__locale_mbrtowc_l(i32* %decimal_point_wc, i8* %207, %struct.__uclibc_locale_struct.160* %208) #10, !dbg !1194
  %209 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1195
  %decimal_point_len = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %209, i32 0, i32 26, !dbg !1196
  store i32 %call299, i32* %decimal_point_len, align 8, !dbg !1197
  %210 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1198
  %grouping = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %210, i32 0, i32 41, !dbg !1200
  %211 = load i8*, i8** %grouping, align 8, !dbg !1200
  %212 = load i8, i8* %211, align 1, !dbg !1201
  %tobool300 = icmp ne i8 %212, 0, !dbg !1201
  br i1 %tobool300, label %if.then301, label %if.end310, !dbg !1202
  %213 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1203
  %thousands_sep_wc = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %213, i32 0, i32 25, !dbg !1205
  %214 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1206
  %thousands_sep = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %214, i32 0, i32 40, !dbg !1207
  %215 = load i8*, i8** %thousands_sep, align 8, !dbg !1207
  %216 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1208
  %call302 = call i32 @__locale_mbrtowc_l(i32* %thousands_sep_wc, i8* %215, %struct.__uclibc_locale_struct.160* %216) #10, !dbg !1209
  %217 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1210
  %thousands_sep_len = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %217, i32 0, i32 27, !dbg !1211
  store i32 %call302, i32* %thousands_sep_len, align 4, !dbg !1212
  %218 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1213
  %thousands_sep_len303 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %218, i32 0, i32 27, !dbg !1215
  %219 = load i32, i32* %thousands_sep_len303, align 4, !dbg !1215
  %cmp304 = icmp eq i32 %219, 0, !dbg !1216
  br i1 %cmp304, label %if.then306, label %if.end309, !dbg !1217
  %220 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1218
  %thousands_sep307 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %220, i32 0, i32 40, !dbg !1220
  %221 = load i8*, i8** %thousands_sep307, align 8, !dbg !1220
  %222 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %base.addr, align 8, !dbg !1221
  %grouping308 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %222, i32 0, i32 41, !dbg !1222
  store i8* %221, i8** %grouping308, align 8, !dbg !1223
  br label %if.end309, !dbg !1224
  br label %if.end310, !dbg !1225
  br label %if.end311, !dbg !1226
  br label %if.end312
  br label %if.end313, !dbg !1227
  %223 = load i32, i32* %i, align 4, !dbg !1228
  %inc314 = add nsw i32 %223, 1, !dbg !1228
  store i32 %inc314, i32* %i, align 4, !dbg !1228
  %224 = load i8*, i8** %p.addr, align 8, !dbg !1229
  %add.ptr315 = getelementptr inbounds i8, i8* %224, i64 2, !dbg !1229
  store i8* %add.ptr315, i8** %p.addr, align 8, !dbg !1229
  %225 = load i8*, i8** %s, align 8, !dbg !1230
  %add.ptr316 = getelementptr inbounds i8, i8* %225, i64 2, !dbg !1230
  store i8* %add.ptr316, i8** %s, align 8, !dbg !1230
  br label %do.cond, !dbg !1231
  %226 = load i32, i32* %i, align 4, !dbg !1232
  %cmp317 = icmp slt i32 %226, 6, !dbg !1233
  br i1 %cmp317, label %do.body, label %do.end, !dbg !1231, !llvm.loop !1234
  store i32 1, i32* %retval, align 4, !dbg !1236
  br label %return, !dbg !1236
  %227 = load i32, i32* %retval, align 4, !dbg !1237
  ret i32 %227, !dbg !1237
  %retval = alloca i32, align 4
  %dst.addr = alloca i32*, align 8
  %src.addr = alloca i8*, align 8
  %loc.addr = alloca %struct.__uclibc_locale_struct.160*, align 8
  %ps = alloca %struct.__mbstate_t.518, align 4
  %p = alloca i8*, align 8
  %r = alloca i64, align 8
  %wc = alloca i32, align 4
  store i32* %dst, i32** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %dst.addr, metadata !2365, metadata !DIExpression()), !dbg !2366
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !2367, metadata !DIExpression()), !dbg !2368
  store %struct.__uclibc_locale_struct.160* %loc, %struct.__uclibc_locale_struct.160** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__uclibc_locale_struct.160** %loc.addr, metadata !2369, metadata !DIExpression()), !dbg !2370
  %0 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %loc.addr, align 8, !dbg !820
  %encoding = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %0, i32 0, i32 9, !dbg !822
  %1 = load i8, i8* %encoding, align 8, !dbg !822
  %conv = zext i8 %1 to i32, !dbg !820
  %cmp = icmp eq i32 %conv, 1, !dbg !823
  br i1 %cmp, label %if.then, label %if.end, !dbg !824
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t.518* %ps, metadata !2376, metadata !DIExpression()), !dbg !2384
tructions in stack: Num.602
//Instructions in stack: Num.603
//Instructions in stack: Num.604
//Instructions in stack: Num.605
//Instructions in stack: Num.606
//Instructions in stack: Num.607
//Instructions in stack: Num.608
//Instructions in stack: Num.609
//Instructions in stack: Num.610
//Instructions in stack: Num.611
//Instructions in stack: Num.612
//Instructions in stack: Num.613
//Instructions in stack: Num.614
//Instructions in stack: Num.615
//Instructions in stack: Num.616
//Instructions in stack: Num.617
//Instructions in stack: Num.618
//Instructions in stack: Num.619
//Instructions in stack: Num.620
//Instructions in stack: Num.621
//Instructions in stack: Num.622
//Instructions in stack: Num.623
//Instructions in stack: Num.624
//Instructions in stack: Num.625
//Instructions in stack: Num.626
//Instructions in stack: Num.627
//Instructions in stack: Num.628
//Instructions in stack: Num.629
//Instructions in stack: Num.630
//Instructions in stack: Num.631
//Instructions in stack: Num.632
//Instructions in stack: Num.633
//Instructions in stack: Num.634
//Instructions in stack: Num.635
//Instructions in stack: Num.636
//Instructions in stack: Num.637
//Instructions in stack: Num.638
//Instructions in stack: Num.639
//Instructions in stack: Num.640
//Instructions in stack: Num.641
//Instructions in stack: Num.642
//Instructions in stack: Num.643
//Instructions in stack: Num.644
//Instructions in stack: Num.645
//Instructions in stack: Num.646
//Instructions in stack: Num.647
//Instructions in stack: Num.648
//Instructions in stack: Num.649
//Instructions in stack: Num.650
//Instructions in stack: Num.651
//Instructions in stack: Num.652
//Instructions in stack: Num.653
//Instructions in stack: Num.654
//Instructions in stack: Num.655
//Instructions in stack: Num.656
//Instructions in stack: Num.657
//Instructions in stack: Num.658
//Instructions in stack: Num.659
//Instructions in stack: Num.660
//Instructions in stack: Num.661
//Instructions in stack: Num.662
//Instructions in stack: Num.663
//Instructions in stack: Num.664
//Instructions in stack: Num.665
//Instructions in stack: Num.666
//Instructions in stack: Num.667
//Instructions in stack: Num.668
//Instructions in stack: Num.669
//Instructions in stack: Num.670
//Instructions in stack: Num.671
//Instructions in stack: Num.672
//Instructions in stack: Num.673
//Instructions in stack: Num.674
//Instructions in stack: Num.675
//Instructions in stack: Num.676
//Instructions in stack: Num.677
//Instructions in stack: Num.678
//Instructions in stack: Num.679
//Instructions in stack: Num.680
//Instructions in stack: Num.681
//Instructions in stack: Num.682
//Instructions in stack: Num.683
//Instructions in stack: Num.684
//Instructions in stack: Num.685
//Instructions in stack: Num.686
//Instructions in stack: Num.687
//Instructions in stack: Num.688
//Instructions in stack: Num.689
//Instructions in stack: Num.690
//Instructions in stack: Num.691
//Instructions in stack: Num.692
//Instructions in stack: Num.693
//Instructions in stack: Num.694
//Instructions in stack: Num.695
//Instructions in stack: Num.696
//Instructions in stack: Num.697
//Instructions in stack: Num.698
//Instructions in stack: Num.699
//Instructions in stack: Num.700
//Instructions in stack: Num.701
//Instructions in stack: Num.702
//Instructions in stack: Num.703
//Instructions in stack: Num.704
//Instructions in stack: Num.705
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instr  call void @llvm.dbg.declare(metadata i8** %p, metadata !2385, metadata !DIExpression()), !dbg !2386
  %2 = load i8*, i8** %src.addr, align 8, !dbg !836
  store i8* %2, i8** %p, align 8, !dbg !835
  call void @llvm.dbg.declare(metadata i64* %r, metadata !2388, metadata !DIExpression()), !dbg !2389
  %__mask = getelementptr inbounds %struct.__mbstate_t.518, %struct.__mbstate_t.518* %ps, i32 0, i32 0, !dbg !839
  store i32 0, i32* %__mask, align 4, !dbg !840
  %3 = load i32*, i32** %dst.addr, align 8, !dbg !841
  %call = call i64 @_wchar_utf8sntowcs(i32* %3, i64 1, i8** %p, i64 -1, %struct.__mbstate_t.518* %ps, i32 1) #10, !dbg !842
  store i64 %call, i64* %r, align 8, !dbg !843
  %4 = load i64, i64* %r, align 8, !dbg !844
  %cmp2 = icmp eq i64 %4, 1, !dbg !845
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !846
  %5 = load i8*, i8** %p, align 8, !dbg !847
  %6 = load i8*, i8** %src.addr, align 8, !dbg !848
  %sub.ptr.lhs.cast = ptrtoint i8* %5 to i64, !dbg !849
  %sub.ptr.rhs.cast = ptrtoint i8* %6 to i64, !dbg !849
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !849
  br label %cond.end, !dbg !846
  %7 = load i64, i64* %r, align 8, !dbg !850
  br label %cond.end, !dbg !846
  %cond = phi i64 [ %sub.ptr.sub, %cond.true ], [ %7, %cond.false ], !dbg !846
  %conv4 = trunc i64 %cond to i32, !dbg !846
  store i32 %conv4, i32* %retval, align 4, !dbg !851
  br label %return, !dbg !851
  %8 = load i8*, i8** %src.addr, align 8, !dbg !852
  %9 = load i8, i8* %8, align 1, !dbg !854
  %conv5 = zext i8 %9 to i32, !dbg !855
  %10 = load i32*, i32** %dst.addr, align 8, !dbg !856
  store i32 %conv5, i32* %10, align 4, !dbg !857
  %cmp6 = icmp slt i32 %conv5, 128, !dbg !858
  br i1 %cmp6, label %if.then8, label %if.end12, !dbg !859
  %11 = load i8*, i8** %src.addr, align 8, !dbg !860
  %12 = load i8, i8* %11, align 1, !dbg !862
  %conv9 = sext i8 %12 to i32, !dbg !862
  %cmp10 = icmp ne i32 %conv9, 0, !dbg !863
  %conv11 = zext i1 %cmp10 to i32, !dbg !863
  store i32 %conv11, i32* %retval, align 4, !dbg !864
  br label %return, !dbg !864
  %13 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %loc.addr, align 8, !dbg !865
  %encoding13 = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %13, i32 0, i32 9, !dbg !867
  %14 = load i8, i8* %encoding13, align 8, !dbg !867
  %conv14 = zext i8 %14 to i32, !dbg !865
  %cmp15 = icmp eq i32 %conv14, 2, !dbg !868
  br i1 %cmp15, label %if.then17, label %if.end24, !dbg !869
  call void @llvm.dbg.declare(metadata i32* %wc, metadata !2421, metadata !DIExpression()), !dbg !2423
  %15 = load i32*, i32** %dst.addr, align 8, !dbg !873
  %16 = load i32, i32* %15, align 4, !dbg !874
  %sub = sub nsw i32 %16, 128, !dbg !875
  store i32 %sub, i32* %wc, align 4, !dbg !872
  %17 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %loc.addr, align 8, !dbg !876
  %tbl8c2wc = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %17, i32 0, i32 17, !dbg !877
  %18 = load i16*, i16** %tbl8c2wc, align 8, !dbg !877
  %19 = load %struct.__uclibc_locale_struct.160*, %struct.__uclibc_locale_struct.160** %loc.addr, align 8, !dbg !878
  %idx8c2wc = getelementptr inbounds %struct.__uclibc_locale_struct.160, %struct.__uclibc_locale_struct.160* %19, i32 0, i32 16, !dbg !879
  %20 = load i8*, i8** %idx8c2wc, align 8, !dbg !879
  %21 = load i32, i32* %wc, align 4, !dbg !880
  %shr = ashr i32 %21, 3, !dbg !881
  %idxprom = sext i32 %shr to i64, !dbg !878
  %arrayidx = getelementptr inbounds i8, i8* %20, i64 %idxprom, !dbg !878
  %22 = load i8, i8* %arrayidx, align 1, !dbg !878
  %conv18 = zext i8 %22 to i32, !dbg !878
  %shl = shl i32 %conv18, 3, !dbg !882
  %23 = load i32, i32* %wc, align 4, !dbg !883
  %and = and i32 %23, 7, !dbg !884
  %add = add nsw i32 %shl, %and, !dbg !885
  %idxprom19 = sext i32 %add to i64, !dbg !876
  %arrayidx20 = getelementptr inbounds i16, i16* %18, i64 %idxprom19, !dbg !876
  %24 = load i16, i16* %arrayidx20, align 2, !dbg !876
  %conv21 = zext i16 %24 to i32, !dbg !876
  %25 = load i32*, i32** %dst.addr, align 8, !dbg !886
  store i32 %conv21, i32* %25, align 4, !dbg !887
  %26 = load i32*, i32** %dst.addr, align 8, !dbg !888
  %27 = load i32, i32* %26, align 4, !dbg !890
  %tobool = icmp ne i32 %27, 0, !dbg !890
  br i1 %tobool, label %if.then22, label %if.end23, !dbg !891
  store i32 1, i32* %retval, align 4, !dbg !892
  br label %return, !dbg !892
  br label %if.end24, !dbg !894
  store i32 -1, i32* %retval, align 4, !dbg !895
  br label %return, !dbg !895
  %28 = load i32, i32* %retval, align 4, !dbg !896
  ret i32 %28, !dbg !896
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
uctions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions i  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
n stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instruct  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  %0 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !657
  %tobool = icmp ne i32 %0, 0, !dbg !657
  br i1 %tobool, label %if.then, label %if.end, !dbg !659
  br label %if.end4, !dbg !660
  %1 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  %inc = add nsw i32 %1, 1, !dbg !661
  store i32 %inc, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  store i64 4096, i64* @__pagesize, align 8, !dbg !662
  br i1 true, label %if.then1, label %if.end2, !dbg !663
  call void @_locale_init() #10, !dbg !664
  br label %if.end2, !dbg !664
  br i1 true, label %if.then3, label %if.end4, !dbg !666
  call void @_stdio_init() #10, !dbg !667
  br label %if.end4, !dbg !667
  ret void, !dbg !669
  %old_errno = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %old_errno, metadata !2094, metadata !DIExpression()), !dbg !2095
  %0 = load i32, i32* @errno, align 4, !dbg !660
  store i32 %0, i32* %old_errno, align 4, !dbg !659
  %call = call i32 @isatty(i32 0) #10, !dbg !661
  %sub = sub nsw i32 1, %call, !dbg !662
  %mul = mul i32 %sub, 256, !dbg !663
  %1 = load i16, i16* getelementptr inbounds ([3 x %struct.__STDIO_FILE_STRUCT.519], [3 x %struct.__STDIO_FILE_STRUCT.519]* @_stdio_streams, i64 0, i64 0, i32 0), align 16, !dbg !664
  %conv = zext i16 %1 to i32, !dbg !664
  %xor = xor i32 %conv, %mul, !dbg !664
  %conv1 = trunc i32 %xor to i16, !dbg !664
  store i16 %conv1, i16* getelementptr inbounds ([3 x %struct.__STDIO_FILE_STRUCT.519], [3 x %struct.__STDIO_FILE_STRUCT.519]* @_stdio_streams, i64 0, i64 0, i32 0), align 16, !dbg !664
  %call2 = call i32 @isatty(i32 1) #10, !dbg !665
  %sub3 = sub nsw i32 1, %call2, !dbg !666
  %mul4 = mul i32 %sub3, 256, !dbg !667
  %2 = load i16, i16* getelementptr inbounds ([3 x %struct.__STDIO_FILE_STRUCT.519], [3 x %struct.__STDIO_FILE_STRUCT.519]* @_stdio_streams, i64 0, i64 1, i32 0), align 8, !dbg !668
  %conv5 = zext i16 %2 to i32, !dbg !668
  %xor6 = xor i32 %conv5, %mul4, !dbg !668
  %conv7 = trunc i32 %xor6 to i16, !dbg !668
  store i16 %conv7, i16* getelementptr inbounds ([3 x %struct.__STDIO_FILE_STRUCT.519], [3 x %struct.__STDIO_FILE_STRUCT.519]* @_stdio_streams, i64 0, i64 1, i32 0), align 8, !dbg !668
  %3 = load i32, i32* %old_errno, align 4, !dbg !669
  store i32 %3, i32* @errno, align 4, !dbg !669
  ret void, !dbg !670
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
ions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stac  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  %0 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !657
  %tobool = icmp ne i32 %0, 0, !dbg !657
  br i1 %tobool, label %if.then, label %if.end, !dbg !659
  br label %if.end4, !dbg !660
k: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
  %1 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  %inc = add nsw i32 %1, 1, !dbg !661
  store i32 %inc, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  store i64 4096, i64* @__pagesize, align 8, !dbg !662
  br i1 true, label %if.then1, label %if.end2, !dbg !663
  call void @_locale_init() #10, !dbg !664
  br label %if.end2, !dbg !664
  br i1 true, label %if.then3, label %if.end4, !dbg !666
  call void @_stdio_init() #10, !dbg !667
  br label %if.end4, !dbg !667
  ret void, !dbg !669
  %old_errno = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %old_errno, metadata !2094, metadata !DIExpression()), !dbg !2095
  %0 = load i32, i32* @errno, align 4, !dbg !660
  store i32 %0, i32* %old_errno, align 4, !dbg !659
  %call = call i32 @isatty(i32 0) #10, !dbg !661
  %sub = sub nsw i32 1, %call, !dbg !662
  %mul = mul i32 %sub, 256, !dbg !663
  %1 = load i16, i16* getelementptr inbounds ([3 x %struct.__STDIO_FILE_STRUCT.519], [3 x %struct.__STDIO_FILE_STRUCT.519]* @_stdio_streams, i64 0, i64 0, i32 0), align 16, !dbg !664
  %conv = zext i16 %1 to i32, !dbg !664
  %xor = xor i32 %conv, %mul, !dbg !664
  %conv1 = trunc i32 %xor to i16, !dbg !664
  store i16 %conv1, i16* getelementptr inbounds ([3 x %struct.__STDIO_FILE_STRUCT.519], [3 x %struct.__STDIO_FILE_STRUCT.519]* @_stdio_streams, i64 0, i64 0, i32 0), align 16, !dbg !664
  %call2 = call i32 @isatty(i32 1) #10, !dbg !665
  %sub3 = sub nsw i32 1, %call2, !dbg !666
  %mul4 = mul i32 %sub3, 256, !dbg !667
  %2 = load i16, i16* getelementptr inbounds ([3 x %struct.__STDIO_FILE_STRUCT.519], [3 x %struct.__STDIO_FILE_STRUCT.519]* @_stdio_streams, i64 0, i64 1, i32 0), align 8, !dbg !668
  %conv5 = zext i16 %2 to i32, !dbg !668
  %xor6 = xor i32 %conv5, %mul4, !dbg !668
  %conv7 = trunc i32 %xor6 to i16, !dbg !668
  store i16 %conv7, i16* getelementptr inbounds ([3 x %struct.__STDIO_FILE_STRUCT.519], [3 x %struct.__STDIO_FILE_STRUCT.519]* @_stdio_streams, i64 0, i64 1, i32 0), align 8, !dbg !668
  %3 = load i32, i32* %old_errno, align 4, !dbg !669
  store i32 %3, i32* @errno, align 4, !dbg !669
  ret void, !dbg !670
  %fd.addr = alloca i32, align 4
  %term = alloca %struct.termios.834, align 4
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !2713, metadata !DIExpression()), !dbg !2714
  call void @llvm.dbg.declare(metadata %struct.termios.834* %term, metadata !2715, metadata !DIExpression()), !dbg !2733
  %0 = load i32, i32* %fd.addr, align 4, !dbg !679
  %call = call i32 @tcgetattr(i32 %0, %struct.termios.834* %term) #10, !dbg !680
  %cmp = icmp eq i32 %call, 0, !dbg !681
  %conv = zext i1 %cmp to i32, !dbg !681
  ret i32 %conv, !dbg !682
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Inst  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  %0 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !657
  %tobool = icmp ne i32 %0, 0, !dbg !657
  br i1 %tobool, label %if.then, label %if.end, !dbg !659
  br label %if.end4, !dbg !660
  %1 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  %inc = add nsw i32 %1, 1, !dbg !661
  store i32 %inc, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  store i64 4096, i64* @__pagesize, align 8, !dbg !662
  br i1 true, label %if.then1, label %if.end2, !dbg !663
  call void @_locale_init() #10, !dbg !664
  br label %if.end2, !dbg !664
  br i1 true, label %if.then3, label %if.end4, !dbg !666
  call void @_stdio_init() #10, !dbg !667
  br label %if.end4, !dbg !667
  ret void, !dbg !669
  %old_errno = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %old_errno, metadata !2094, metadata !DIExpression()), !dbg !2095
  %0 = load i32, i32* @errno, align 4, !dbg !660
ructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack:   store i32 %0, i32* %old_errno, align 4, !dbg !659
  %call = call i32 @isatty(i32 0) #10, !dbg !661
  %sub = sub nsw i32 1, %call, !dbg !662
  %mul = mul i32 %sub, 256, !dbg !663
  %1 = load i16, i16* getelementptr inbounds ([3 x %struct.__STDIO_FILE_STRUCT.519], [3 x %struct.__STDIO_FILE_STRUCT.519]* @_stdio_streams, i64 0, i64 0, i32 0), align 16, !dbg !664
  %conv = zext i16 %1 to i32, !dbg !664
  %xor = xor i32 %conv, %mul, !dbg !664
  %conv1 = trunc i32 %xor to i16, !dbg !664
  store i16 %conv1, i16* getelementptr inbounds ([3 x %struct.__STDIO_FILE_STRUCT.519], [3 x %struct.__STDIO_FILE_STRUCT.519]* @_stdio_streams, i64 0, i64 0, i32 0), align 16, !dbg !664
  %call2 = call i32 @isatty(i32 1) #10, !dbg !665
  %sub3 = sub nsw i32 1, %call2, !dbg !666
  %mul4 = mul i32 %sub3, 256, !dbg !667
  %2 = load i16, i16* getelementptr inbounds ([3 x %struct.__STDIO_FILE_STRUCT.519], [3 x %struct.__STDIO_FILE_STRUCT.519]* @_stdio_streams, i64 0, i64 1, i32 0), align 8, !dbg !668
  %conv5 = zext i16 %2 to i32, !dbg !668
  %xor6 = xor i32 %conv5, %mul4, !dbg !668
  %conv7 = trunc i32 %xor6 to i16, !dbg !668
  store i16 %conv7, i16* getelementptr inbounds ([3 x %struct.__STDIO_FILE_STRUCT.519], [3 x %struct.__STDIO_FILE_STRUCT.519]* @_stdio_streams, i64 0, i64 1, i32 0), align 8, !dbg !668
  %3 = load i32, i32* %old_errno, align 4, !dbg !669
  store i32 %3, i32* @errno, align 4, !dbg !669
  ret void, !dbg !670
  %fd.addr = alloca i32, align 4
  %term = alloca %struct.termios.834, align 4
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !2713, metadata !DIExpression()), !dbg !2714
  call void @llvm.dbg.declare(metadata %struct.termios.834* %term, metadata !2715, metadata !DIExpression()), !dbg !2733
  %0 = load i32, i32* %fd.addr, align 4, !dbg !679
  %call = call i32 @tcgetattr(i32 %0, %struct.termios.834* %term) #10, !dbg !680
  %cmp = icmp eq i32 %call, 0, !dbg !681
  %conv = zext i1 %cmp to i32, !dbg !681
  ret i32 %conv, !dbg !682
  %fd.addr = alloca i32, align 4
  %termios_p.addr = alloca %struct.termios.834*, align 8
  %k_termios = alloca %struct.__kernel_termios, align 4
  %retval1 = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !3141, metadata !DIExpression()), !dbg !3142
  store %struct.termios.834* %termios_p, %struct.termios.834** %termios_p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.termios.834** %termios_p.addr, metadata !3143, metadata !DIExpression()), !dbg !3144
  call void @llvm.dbg.declare(metadata %struct.__kernel_termios* %k_termios, metadata !3145, metadata !DIExpression()), !dbg !3158
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !3159, metadata !DIExpression()), !dbg !3160
  %0 = load i32, i32* %fd.addr, align 4, !dbg !698
  %call = call i32 (i32, i64, ...) @ioctl(i32 %0, i64 21505, %struct.__kernel_termios* %k_termios) #10, !dbg !699
  store i32 %call, i32* %retval1, align 4, !dbg !700
  %c_iflag = getelementptr inbounds %struct.__kernel_termios, %struct.__kernel_termios* %k_termios, i32 0, i32 0, !dbg !701
  %1 = load i32, i32* %c_iflag, align 4, !dbg !701
  %2 = load %struct.termios.834*, %struct.termios.834** %termios_p.addr, align 8, !dbg !702
  %c_iflag2 = getelementptr inbounds %struct.termios.834, %struct.termios.834* %2, i32 0, i32 0, !dbg !703
  store i32 %1, i32* %c_iflag2, align 4, !dbg !704
  %c_oflag = getelementptr inbounds %struct.__kernel_termios, %struct.__kernel_termios* %k_termios, i32 0, i32 1, !dbg !705
  %3 = load i32, i32* %c_oflag, align 4, !dbg !705
  %4 = load %struct.termios.834*, %struct.termios.834** %termios_p.addr, align 8, !dbg !706
  %c_oflag3 = getelementptr inbounds %struct.termios.834, %struct.termios.834* %4, i32 0, i32 1, !dbg !707
  store i32 %3, i32* %c_oflag3, align 4, !dbg !708
  %c_cflag = getelementptr inbounds %struct.__kernel_termios, %struct.__kernel_termios* %k_termios, i32 0, i32 2, !dbg !709
  %5 = load i32, i32* %c_cflag, align 4, !dbg !709
  %6 = load %struct.termios.834*, %struct.termios.834** %termios_p.addr, align 8, !dbg !710
  %c_cflag4 = getelementptr inbounds %struct.termios.834, %struct.termios.834* %6, i32 0, i32 2, !dbg !711
  store i32 %5, i32* %c_cflag4, align 4, !dbg !712
  %c_lflag = getelementptr inbounds %struct.__kernel_termios, %struct.__kernel_termios* %k_termios, i32 0, i32 3, !dbg !713
  %7 = load i32, i32* %c_lflag, align 4, !dbg !713
  %8 = load %struct.termios.834*, %struct.termios.834** %termios_p.addr, align 8, !dbg !714
  %c_lflag5 = getelementptr inbounds %struct.termios.834, %struct.termios.834* %8, i32 0, i32 3, !dbg !715
  store i32 %7, i32* %c_lflag5, align 4, !dbg !716
  %c_line = getelementptr inbounds %struct.__kernel_termios, %struct.__kernel_termios* %k_termios, i32 0, i32 4, !dbg !717
  %9 = load i8, i8* %c_line, align 4, !dbg !717
  %10 = load %struct.termios.834*, %struct.termios.834** %termios_p.addr, align 8, !dbg !718
  %c_line6 = getelementptr inbounds %struct.termios.834, %struct.termios.834* %10, i32 0, i32 4, !dbg !719
  store i8 %9, i8* %c_line6, align 4, !dbg !720
  %11 = load %struct.termios.834*, %struct.termios.834** %termios_p.addr, align 8, !dbg !721
  %c_cc = getelementptr inbounds %struct.termios.834, %struct.termios.834* %11, i32 0, i32 5, !dbg !724
  %arrayidx = getelementptr inbounds [32 x i8], [32 x i8]* %c_cc, i64 0, i64 0, !dbg !721
  %c_cc7 = getelementptr inbounds %struct.__kernel_termios, %struct.__kernel_termios* %k_termios, i32 0, i32 5, !dbg !725
  %arrayidx8 = getelementptr inbounds [19 x i8], [19 x i8]* %c_cc7, i64 0, i64 0, !dbg !726
  %call9 = call i8* @mempcpy(i8* %arrayidx, i8* %arrayidx8, i64 19) #10, !dbg !727
  %call10 = call i8* @memset(i8* %call9, i32 0, i64 13) #10, !dbg !728
  %12 = load i32, i32* %retval1, align 4, !dbg !729
  ret i32 %12, !dbg !730
KLEE: WARNING ONCE: calling external: ioctl(0, 21505, 114807584) at libc/termios/tcgetattr.c:43 12
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in st  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  %0 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !657
  %tobool = icmp ne i32 %0, 0, !dbg !657
  br i1 %tobool, label %if.then, label %if.end, !dbg !659
  br label %if.end4, !dbg !660
  %1 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  %inc = add nsw i32 %1, 1, !dbg !661
  store i32 %inc, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  store i64 4096, i64* @__pagesize, align 8, !dbg !662
  br i1 true, label %if.then1, label %if.end2, !dbg !663
  call void @_locale_init() #10, !dbg !664
  br label %if.end2, !dbg !664
  br i1 true, label %if.then3, label %if.end4, !dbg !666
  call void @_stdio_init() #10, !dbg !667
  br label %if.end4, !dbg !667
  ret void, !dbg !669
  %old_errno = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %old_errno, metadata !2094, metadata !DIExpression()), !dbg !2095
  %0 = load i32, i32* @errno, align 4, !dbg !660
  store i32 %0, i32* %old_errno, align 4, !dbg !659
  %call = call i32 @isatty(i32 0) #10, !dbg !661
  %sub = sub nsw i32 1, %call, !dbg !662
  %mul = mul i32 %sub, 256, !dbg !663
  %1 = load i16, i16* getelementptr inbounds ([3 x %struct.__STDIO_FILE_STRUCT.519], [3 x %struct.__STDIO_FILE_STRUCT.519]* @_stdio_streams, i64 0, i64 0, i32 0), align 16, !dbg !664
  %conv = zext i16 %1 to i32, !dbg !664
  %xor = xor i32 %conv, %mul, !dbg !664
  %conv1 = trunc i32 %xor to i16, !dbg !664
  store i16 %conv1, i16* getelementptr inbounds ([3 x %struct.__STDIO_FILE_STRUCT.519], [3 x %struct.__STDIO_FILE_STRUCT.519]* @_stdio_streams, i64 0, i64 0, i32 0), align 16, !dbg !664
  %call2 = call i32 @isatty(i32 1) #10, !dbg !665
  %sub3 = sub nsw i32 1, %call2, !dbg !666
  %mul4 = mul i32 %sub3, 256, !dbg !667
  %2 = load i16, i16* getelementptr inbounds ([3 x %struct.__STDIO_FILE_STRUCT.519], [3 x %struct.__STDIO_FILE_STRUCT.519]* @_stdio_streams, i64 0, i64 1, i32 0), align 8, !dbg !668
  %conv5 = zext i16 %2 to i32, !dbg !668
  %xor6 = xor i32 %conv5, %mul4, !dbg !668
  %conv7 = trunc i32 %xor6 to i16, !dbg !668
  store i16 %conv7, i16* getelementptr inbounds ([3 x %struct.__STDIO_FILE_STRUCT.519], [3 x %struct.__STDIO_FILE_STRUCT.519]* @_stdio_streams, i64 0, i64 1, i32 0), align 8, !dbg !668
  %3 = load i32, i32* %old_errno, align 4, !dbg !669
  store i32 %3, i32* @errno, align 4, !dbg !669
  ret void, !dbg !670
  %fd.addr = alloca i32, align 4
  %term = alloca %struct.termios.834, align 4
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !2713, metadata !DIExpression()), !dbg !2714
  call void @llvm.dbg.declare(metadata %struct.termios.834* %term, metadata !2715, metadata !DIExpression()), !dbg !2733
  %0 = load i32, i32* %fd.addr, align 4, !dbg !679
  %call = call i32 @tcgetattr(i32 %0, %struct.termios.834* %term) #10, !dbg !680
  %cmp = icmp eq i32 %call, 0, !dbg !681
  %conv = zext i1 %cmp to i32, !dbg !681
  ret i32 %conv, !dbg !682
  %fd.addr = alloca i32, align 4
  %termios_p.addr = alloca %struct.termios.834*, align 8
  %k_termios = alloca %struct.__kernel_termios, align 4
  %retval1 = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !3141, metadata !DIExpression()), !dbg !3142
  store %struct.termios.834* %termios_p, %struct.termios.834** %termios_p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.termios.834** %termios_p.addr, metadata !3143, metadata !DIExpression()), !dbg !3144
  call void @llvm.dbg.declare(metadata %struct.__kernel_termios* %k_termios, metadata !3145, metadata !DIExpression()), !dbg !3158
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !3159, metadata !DIExpression()), !dbg !3160
  %0 = load i32, i32* %fd.addr, align 4, !dbg !698
  %call = call i32 (i32, i64, ...) @ioctl(i32 %0, i64 21505, %struct.__kernel_termios* %k_termios) #10, !dbg !699
  store i32 %call, i32* %retval1, align 4, !dbg !700
  %c_iflag = getelementptr inbounds %struct.__kernel_termios, %struct.__kernel_termios* %k_termios, i32 0, i32 0, !dbg !701
  %1 = load i32, i32* %c_iflag, align 4, !dbg !701
  %2 = load %struct.termios.834*, %struct.termios.834** %termios_p.addr, align 8, !dbg !702
  %c_iflag2 = getelementptr inbounds %struct.termios.834, %struct.termios.834* %2, i32 0, i32 0, !dbg !703
  store i32 %1, i32* %c_iflag2, align 4, !dbg !704
  %c_oflag = getelementptr inbounds %struct.__kernel_termios, %struct.__kernel_termios* %k_termios, i32 0, i32 1, !dbg !705
  %3 = load i32, i32* %c_oflag, align 4, !dbg !705
  %4 = load %struct.termios.834*, %struct.termios.834** %termios_p.addr, align 8, !dbg !706
  %c_oflag3 = getelementptr inbounds %struct.termios.834, %struct.termios.834* %4, i32 0, i32 1, !dbg !707
  store i32 %3, i32* %c_oflag3, align 4, !dbg !708
  %c_cflag = getelementptr inbounds %struct.__kernel_termios, %struct.__kernel_termios* %k_termios, i32 0, i32 2, !dbg !709
  %5 = load i32, i32* %c_cflag, align 4, !dbg !709
  %6 = load %struct.termios.834*, %struct.termios.834** %termios_p.addr, align 8, !dbg !710
  %c_cflag4 = getelementptr inbounds %struct.termios.834, %struct.termios.834* %6, i32 0, i32 2, !dbg !711
  store i32 %5, i32* %c_cflag4, align 4, !dbg !712
  %c_lflag = getelementptr inbounds %struct.__kernel_termios, %struct.__kernel_termios* %k_termios, i32 0, i32 3, !dbg !713
  %7 = load i32, i32* %c_lflag, align 4, !dbg !713
  %8 = load %struct.termios.834*, %struct.termios.834** %termios_p.addr, align 8, !dbg !714
  %c_lflag5 = getelementptr inbounds %struct.termios.834, %struct.termios.834* %8, i32 0, i32 3, !dbg !715
  store i32 %7, i32* %c_lflag5, align 4, !dbg !716
  %c_line = getelementptr inbounds %struct.__kernel_termios, %struct.__kernel_termios* %k_termios, i32 0, i32 4, !dbg !717
  %9 = load i8, i8* %c_line, align 4, !dbg !717
  %10 = load %struct.termios.834*, %struct.termios.834** %termios_p.addr, align 8, !dbg !718
  %c_line6 = getelementptr inbounds %struct.termios.834, %struct.termios.834* %10, i32 0, i32 4, !dbg !719
  store i8 %9, i8* %c_line6, align 4, !dbg !720
  %11 = load %struct.termios.834*, %struct.termios.834** %termios_p.addr, align 8, !dbg !721
  %c_cc = getelementptr inbounds %struct.termios.834, %struct.termios.834* %11, i32 0, i32 5, !dbg !724
  %arrayidx = getelementptr inbounds [32 x i8], [32 x i8]* %c_cc, i64 0, i64 0, !dbg !721
  %c_cc7 = getelementptr inbounds %struct.__kernel_termios, %struct.__kernel_termios* %k_termios, i32 0, i32 5, !dbg !725
  %arrayidx8 = getelementptr inbounds [19 x i8], [19 x i8]* %c_cc7, i64 0, i64 0, !dbg !726
  %call9 = call i8* @mempcpy(i8* %arrayidx, i8* %arrayidx8, i64 19) #10, !dbg !727
  %call10 = call i8* @memset(i8* %call9, i32 0, i64 13) #10, !dbg !728
  %12 = load i32, i32* %retval1, align 4, !dbg !729
  ret i32 %12, !dbg !730
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
ack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: N  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
um.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instruction  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  %0 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !657
  %tobool = icmp ne i32 %0, 0, !dbg !657
  br i1 %tobool, label %if.then, label %if.end, !dbg !659
  br label %if.end4, !dbg !660
  %1 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  %inc = add nsw i32 %1, 1, !dbg !661
  store i32 %inc, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  store i64 4096, i64* @__pagesize, align 8, !dbg !662
  br i1 true, label %if.then1, label %if.end2, !dbg !663
  call void @_locale_init() #10, !dbg !664
  br label %if.end2, !dbg !664
  br i1 true, label %if.then3, label %if.end4, !dbg !666
  call void @_stdio_init() #10, !dbg !667
  br label %if.end4, !dbg !667
  ret void, !dbg !669
  %old_errno = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %old_errno, metadata !2094, metadata !DIExpression()), !dbg !2095
  %0 = load i32, i32* @errno, align 4, !dbg !660
  store i32 %0, i32* %old_errno, align 4, !dbg !659
  %call = call i32 @isatty(i32 0) #10, !dbg !661
  %sub = sub nsw i32 1, %call, !dbg !662
  %mul = mul i32 %sub, 256, !dbg !663
  %1 = load i16, i16* getelementptr inbounds ([3 x %struct.__STDIO_FILE_STRUCT.519], [3 x %struct.__STDIO_FILE_STRUCT.519]* @_stdio_streams, i64 0, i64 0, i32 0), align 16, !dbg !664
  %conv = zext i16 %1 to i32, !dbg !664
  %xor = xor i32 %conv, %mul, !dbg !664
  %conv1 = trunc i32 %xor to i16, !dbg !664
  store i16 %conv1, i16* getelementptr inbounds ([3 x %struct.__STDIO_FILE_STRUCT.519], [3 x %struct.__STDIO_FILE_STRUCT.519]* @_stdio_streams, i64 0, i64 0, i32 0), align 16, !dbg !664
  %call2 = call i32 @isatty(i32 1) #10, !dbg !665
  %sub3 = sub nsw i32 1, %call2, !dbg !666
  %mul4 = mul i32 %sub3, 256, !dbg !667
  %2 = load i16, i16* getelementptr inbounds ([3 x %struct.__STDIO_FILE_STRUCT.519], [3 x %struct.__STDIO_FILE_STRUCT.519]* @_stdio_streams, i64 0, i64 1, i32 0), align 8, !dbg !668
  %conv5 = zext i16 %2 to i32, !dbg !668
  %xor6 = xor i32 %conv5, %mul4, !dbg !668
  %conv7 = trunc i32 %xor6 to i16, !dbg !668
  store i16 %conv7, i16* getelementptr inbounds ([3 x %struct.__STDIO_FILE_STRUCT.519], [3 x %struct.__STDIO_FILE_STRUCT.519]* @_stdio_streams, i64 0, i64 1, i32 0), align 8, !dbg !668
  %3 = load i32, i32* %old_errno, align 4, !dbg !669
  store i32 %3, i32* @errno, align 4, !dbg !669
  ret void, !dbg !670
  %fd.addr = alloca i32, align 4
  %term = alloca %struct.termios.834, align 4
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !2713, metadata !DIExpression()), !dbg !2714
  call void @llvm.dbg.declare(metadata %struct.termios.834* %term, metadata !2715, metadata !DIExpression()), !dbg !2733
  %0 = load i32, i32* %fd.addr, align 4, !dbg !679
  %call = call i32 @tcgetattr(i32 %0, %struct.termios.834* %term) #10, !dbg !680
  %cmp = icmp eq i32 %call, 0, !dbg !681
  %conv = zext i1 %cmp to i32, !dbg !681
  ret i32 %conv, !dbg !682
  %fd.addr = alloca i32, align 4
  %termios_p.addr = alloca %struct.termios.834*, align 8
  %k_termios = alloca %struct.__kernel_termios, align 4
  %retval1 = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !3141, metadata !DIExpression()), !dbg !3142
  store %struct.termios.834* %termios_p, %struct.termios.834** %termios_p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.termios.834** %termios_p.addr, metadata !3143, metadata !DIExpression()), !dbg !3144
  call void @llvm.dbg.declare(metadata %struct.__kernel_termios* %k_termios, metadata !3145, metadata !DIExpression()), !dbg !3158
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !3159, metadata !DIExpression()), !dbg !3160
  %0 = load i32, i32* %fd.addr, align 4, !dbg !698
  %call = call i32 (i32, i64, ...) @ioctl(i32 %0, i64 21505, %struct.__kernel_termios* %k_termios) #10, !dbg !699
  store i32 %call, i32* %retval1, align 4, !dbg !700
  %c_iflag = getelementptr inbounds %struct.__kernel_termios, %struct.__kernel_termios* %k_termios, i32 0, i32 0, !dbg !701
  %1 = load i32, i32* %c_iflag, align 4, !dbg !701
  %2 = load %struct.termios.834*, %struct.termios.834** %termios_p.addr, align 8, !dbg !702
  %c_iflag2 = getelementptr inbounds %struct.termios.834, %struct.termios.834* %2, i32 0, i32 0, !dbg !703
  store i32 %1, i32* %c_iflag2, align 4, !dbg !704
  %c_oflag = getelementptr inbounds %struct.__kernel_termios, %struct.__kernel_termios* %k_termios, i32 0, i32 1, !dbg !705
  %3 = load i32, i32* %c_oflag, align 4, !dbg !705
  %4 = load %struct.termios.834*, %struct.termios.834** %termios_p.addr, align 8, !dbg !706
  %c_oflag3 = getelementptr inbounds %struct.termios.834, %struct.termios.834* %4, i32 0, i32 1, !dbg !707
  store i32 %3, i32* %c_oflag3, align 4, !dbg !708
  %c_cflag = getelementptr inbounds %struct.__kernel_termios, %struct.__kernel_termios* %k_termios, i32 0, i32 2, !dbg !709
  %5 = load i32, i32* %c_cflag, align 4, !dbg !709
  %6 = load %struct.termios.834*, %struct.termios.834** %termios_p.addr, align 8, !dbg !710
  %c_cflag4 = getelementptr inbounds %struct.termios.834, %struct.termios.834* %6, i32 0, i32 2, !dbg !711
  store i32 %5, i32* %c_cflag4, align 4, !dbg !712
  %c_lflag = getelementptr inbounds %struct.__kernel_termios, %struct.__kernel_termios* %k_termios, i32 0, i32 3, !dbg !713
  %7 = load i32, i32* %c_lflag, align 4, !dbg !713
  %8 = load %struct.termios.834*, %struct.termios.834** %termios_p.addr, align 8, !dbg !714
  %c_lflag5 = getelementptr inbounds %struct.termios.834, %struct.termios.834* %8, i32 0, i32 3, !dbg !715
  store i32 %7, i32* %c_lflag5, align 4, !dbg !716
  %c_line = getelementptr inbounds %struct.__kernel_termios, %struct.__kernel_termios* %k_termios, i32 0, i32 4, !dbg !717
  %9 = load i8, i8* %c_line, align 4, !dbg !717
s in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instru  %10 = load %struct.termios.834*, %struct.termios.834** %termios_p.addr, align 8, !dbg !718
  %c_line6 = getelementptr inbounds %struct.termios.834, %struct.termios.834* %10, i32 0, i32 4, !dbg !719
  store i8 %9, i8* %c_line6, align 4, !dbg !720
  %11 = load %struct.termios.834*, %struct.termios.834** %termios_p.addr, align 8, !dbg !721
  %c_cc = getelementptr inbounds %struct.termios.834, %struct.termios.834* %11, i32 0, i32 5, !dbg !724
  %arrayidx = getelementptr inbounds [32 x i8], [32 x i8]* %c_cc, i64 0, i64 0, !dbg !721
  %c_cc7 = getelementptr inbounds %struct.__kernel_termios, %struct.__kernel_termios* %k_termios, i32 0, i32 5, !dbg !725
  %arrayidx8 = getelementptr inbounds [19 x i8], [19 x i8]* %c_cc7, i64 0, i64 0, !dbg !726
  %call9 = call i8* @mempcpy(i8* %arrayidx, i8* %arrayidx8, i64 19) #10, !dbg !727
  %call10 = call i8* @memset(i8* %call9, i32 0, i64 13) #10, !dbg !728
  %12 = load i32, i32* %retval1, align 4, !dbg !729
  ret i32 %12, !dbg !730
  %s1.addr = alloca i8*, align 8
  %s2.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %r1 = alloca i8*, align 8
  %r2 = alloca i8*, align 8
  store i8* %s1, i8** %s1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !3195, metadata !DIExpression()), !dbg !3196
  store i8* %s2, i8** %s2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !3197, metadata !DIExpression()), !dbg !3198
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !3199, metadata !DIExpression()), !dbg !3200
  call void @llvm.dbg.declare(metadata i8** %r1, metadata !3201, metadata !DIExpression()), !dbg !3202
  %0 = load i8*, i8** %s1.addr, align 8, !dbg !672
  store i8* %0, i8** %r1, align 8, !dbg !671
  call void @llvm.dbg.declare(metadata i8** %r2, metadata !3204, metadata !DIExpression()), !dbg !3205
  %1 = load i8*, i8** %s2.addr, align 8, !dbg !675
  store i8* %1, i8** %r2, align 8, !dbg !674
  br label %while.cond, !dbg !676
  %2 = load i64, i64* %n.addr, align 8, !dbg !677
  %tobool = icmp ne i64 %2, 0, !dbg !676
  br i1 %tobool, label %while.body, label %while.end, !dbg !676
  %3 = load i8*, i8** %r2, align 8, !dbg !678
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !678
  store i8* %incdec.ptr, i8** %r2, align 8, !dbg !678
  %4 = load i8, i8* %3, align 1, !dbg !680
  %5 = load i8*, i8** %r1, align 8, !dbg !681
  %incdec.ptr1 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !681
  store i8* %incdec.ptr1, i8** %r1, align 8, !dbg !681
  store i8 %4, i8* %5, align 1, !dbg !682
  %6 = load i64, i64* %n.addr, align 8, !dbg !683
  %dec = add i64 %6, -1, !dbg !683
  store i64 %dec, i64* %n.addr, align 8, !dbg !683
  br label %while.cond, !dbg !676, !llvm.loop !684
  %7 = load i8*, i8** %r1, align 8, !dbg !686
  ret i8* %7, !dbg !687
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
ctions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.7  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  %0 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !657
  %tobool = icmp ne i32 %0, 0, !dbg !657
  br i1 %tobool, label %if.then, label %if.end, !dbg !659
  br label %if.end4, !dbg !660
  %1 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  %inc = add nsw i32 %1, 1, !dbg !661
  store i32 %inc, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  store i64 4096, i64* @__pagesize, align 8, !dbg !662
  br i1 true, label %if.then1, label %if.end2, !dbg !663
  call void @_locale_init() #10, !dbg !664
  br label %if.end2, !dbg !664
  br i1 true, label %if.then3, label %if.end4, !dbg !666
  call void @_stdio_init() #10, !dbg !667
  br label %if.end4, !dbg !667
  ret void, !dbg !669
9
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions  %old_errno = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %old_errno, metadata !2094, metadata !DIExpression()), !dbg !2095
  %0 = load i32, i32* @errno, align 4, !dbg !660
  store i32 %0, i32* %old_errno, align 4, !dbg !659
  %call = call i32 @isatty(i32 0) #10, !dbg !661
  %sub = sub nsw i32 1, %call, !dbg !662
  %mul = mul i32 %sub, 256, !dbg !663
  %1 = load i16, i16* getelementptr inbounds ([3 x %struct.__STDIO_FILE_STRUCT.519], [3 x %struct.__STDIO_FILE_STRUCT.519]* @_stdio_streams, i64 0, i64 0, i32 0), align 16, !dbg !664
  %conv = zext i16 %1 to i32, !dbg !664
  %xor = xor i32 %conv, %mul, !dbg !664
  %conv1 = trunc i32 %xor to i16, !dbg !664
  store i16 %conv1, i16* getelementptr inbounds ([3 x %struct.__STDIO_FILE_STRUCT.519], [3 x %struct.__STDIO_FILE_STRUCT.519]* @_stdio_streams, i64 0, i64 0, i32 0), align 16, !dbg !664
  %call2 = call i32 @isatty(i32 1) #10, !dbg !665
  %sub3 = sub nsw i32 1, %call2, !dbg !666
  %mul4 = mul i32 %sub3, 256, !dbg !667
  %2 = load i16, i16* getelementptr inbounds ([3 x %struct.__STDIO_FILE_STRUCT.519], [3 x %struct.__STDIO_FILE_STRUCT.519]* @_stdio_streams, i64 0, i64 1, i32 0), align 8, !dbg !668
  %conv5 = zext i16 %2 to i32, !dbg !668
  %xor6 = xor i32 %conv5, %mul4, !dbg !668
  %conv7 = trunc i32 %xor6 to i16, !dbg !668
  store i16 %conv7, i16* getelementptr inbounds ([3 x %struct.__STDIO_FILE_STRUCT.519], [3 x %struct.__STDIO_FILE_STRUCT.519]* @_stdio_streams, i64 0, i64 1, i32 0), align 8, !dbg !668
  %3 = load i32, i32* %old_errno, align 4, !dbg !669
  store i32 %3, i32* @errno, align 4, !dbg !669
  ret void, !dbg !670
  %fd.addr = alloca i32, align 4
  %term = alloca %struct.termios.834, align 4
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !2713, metadata !DIExpression()), !dbg !2714
  call void @llvm.dbg.declare(metadata %struct.termios.834* %term, metadata !2715, metadata !DIExpression()), !dbg !2733
  %0 = load i32, i32* %fd.addr, align 4, !dbg !679
  %call = call i32 @tcgetattr(i32 %0, %struct.termios.834* %term) #10, !dbg !680
  %cmp = icmp eq i32 %call, 0, !dbg !681
  %conv = zext i1 %cmp to i32, !dbg !681
  ret i32 %conv, !dbg !682
  %fd.addr = alloca i32, align 4
  %termios_p.addr = alloca %struct.termios.834*, align 8
  %k_termios = alloca %struct.__kernel_termios, align 4
  %retval1 = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !3141, metadata !DIExpression()), !dbg !3142
  store %struct.termios.834* %termios_p, %struct.termios.834** %termios_p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.termios.834** %termios_p.addr, metadata !3143, metadata !DIExpression()), !dbg !3144
  call void @llvm.dbg.declare(metadata %struct.__kernel_termios* %k_termios, metadata !3145, metadata !DIExpression()), !dbg !3158
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !3159, metadata !DIExpression()), !dbg !3160
  %0 = load i32, i32* %fd.addr, align 4, !dbg !698
  %call = call i32 (i32, i64, ...) @ioctl(i32 %0, i64 21505, %struct.__kernel_termios* %k_termios) #10, !dbg !699
  store i32 %call, i32* %retval1, align 4, !dbg !700
  %c_iflag = getelementptr inbounds %struct.__kernel_termios, %struct.__kernel_termios* %k_termios, i32 0, i32 0, !dbg !701
  %1 = load i32, i32* %c_iflag, align 4, !dbg !701
  %2 = load %struct.termios.834*, %struct.termios.834** %termios_p.addr, align 8, !dbg !702
  %c_iflag2 = getelementptr inbounds %struct.termios.834, %struct.termios.834* %2, i32 0, i32 0, !dbg !703
  store i32 %1, i32* %c_iflag2, align 4, !dbg !704
  %c_oflag = getelementptr inbounds %struct.__kernel_termios, %struct.__kernel_termios* %k_termios, i32 0, i32 1, !dbg !705
  %3 = load i32, i32* %c_oflag, align 4, !dbg !705
  %4 = load %struct.termios.834*, %struct.termios.834** %termios_p.addr, align 8, !dbg !706
  %c_oflag3 = getelementptr inbounds %struct.termios.834, %struct.termios.834* %4, i32 0, i32 1, !dbg !707
  store i32 %3, i32* %c_oflag3, align 4, !dbg !708
  %c_cflag = getelementptr inbounds %struct.__kernel_termios, %struct.__kernel_termios* %k_termios, i32 0, i32 2, !dbg !709
  %5 = load i32, i32* %c_cflag, align 4, !dbg !709
  %6 = load %struct.termios.834*, %struct.termios.834** %termios_p.addr, align 8, !dbg !710
  %c_cflag4 = getelementptr inbounds %struct.termios.834, %struct.termios.834* %6, i32 0, i32 2, !dbg !711
  store i32 %5, i32* %c_cflag4, align 4, !dbg !712
  %c_lflag = getelementptr inbounds %struct.__kernel_termios, %struct.__kernel_termios* %k_termios, i32 0, i32 3, !dbg !713
  %7 = load i32, i32* %c_lflag, align 4, !dbg !713
  %8 = load %struct.termios.834*, %struct.termios.834** %termios_p.addr, align 8, !dbg !714
  %c_lflag5 = getelementptr inbounds %struct.termios.834, %struct.termios.834* %8, i32 0, i32 3, !dbg !715
  store i32 %7, i32* %c_lflag5, align 4, !dbg !716
  %c_line = getelementptr inbounds %struct.__kernel_termios, %struct.__kernel_termios* %k_termios, i32 0, i32 4, !dbg !717
  %9 = load i8, i8* %c_line, align 4, !dbg !717
  %10 = load %struct.termios.834*, %struct.termios.834** %termios_p.addr, align 8, !dbg !718
  %c_line6 = getelementptr inbounds %struct.termios.834, %struct.termios.834* %10, i32 0, i32 4, !dbg !719
  store i8 %9, i8* %c_line6, align 4, !dbg !720
  %11 = load %struct.termios.834*, %struct.termios.834** %termios_p.addr, align 8, !dbg !721
  %c_cc = getelementptr inbounds %struct.termios.834, %struct.termios.834* %11, i32 0, i32 5, !dbg !724
  %arrayidx = getelementptr inbounds [32 x i8], [32 x i8]* %c_cc, i64 0, i64 0, !dbg !721
  %c_cc7 = getelementptr inbounds %struct.__kernel_termios, %struct.__kernel_termios* %k_termios, i32 0, i32 5, !dbg !725
  %arrayidx8 = getelementptr inbounds [19 x i8], [19 x i8]* %c_cc7, i64 0, i64 0, !dbg !726
  %call9 = call i8* @mempcpy(i8* %arrayidx, i8* %arrayidx8, i64 19) #10, !dbg !727
  %call10 = call i8* @memset(i8* %call9, i32 0, i64 13) #10, !dbg !728
  %12 = load i32, i32* %retval1, align 4, !dbg !729
  ret i32 %12, !dbg !730
  %s.addr = alloca i8*, align 8
  %c.addr = alloca i32, align 4
  %n.addr = alloca i64, align 8
  %p = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !2157, metadata !DIExpression()), !dbg !2158
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !2159, metadata !DIExpression()), !dbg !2160
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !2161, metadata !DIExpression()), !dbg !2162
  call void @llvm.dbg.declare(metadata i8** %p, metadata !2163, metadata !DIExpression()), !dbg !2164
  %0 = load i8*, i8** %s.addr, align 8, !dbg !668
  store i8* %0, i8** %p, align 8, !dbg !667
  br label %while.cond, !dbg !669
  %1 = load i64, i64* %n.addr, align 8, !dbg !670
  %tobool = icmp ne i64 %1, 0, !dbg !669
  br i1 %tobool, label %while.body, label %while.end, !dbg !669
  %2 = load i32, i32* %c.addr, align 4, !dbg !671
  %conv = trunc i32 %2 to i8, !dbg !673
  %3 = load i8*, i8** %p, align 8, !dbg !674
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !674
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !674
  store i8 %conv, i8* %3, align 1, !dbg !675
  %4 = load i64, i64* %n.addr, align 8, !dbg !676
  %dec = add i64 %4, -1, !dbg !676
  store i64 %dec, i64* %n.addr, align 8, !dbg !676
  br label %while.cond, !dbg !669, !llvm.loop !677
  %5 = load i8*, i8** %s.addr, align 8, !dbg !679
  ret i8* %5, !dbg !680
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
 in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in sta  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  %0 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !657
  %tobool = icmp ne i32 %0, 0, !dbg !657
  br i1 %tobool, label %if.then, label %if.end, !dbg !659
  br label %if.end4, !dbg !660
  %1 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  %inc = add nsw i32 %1, 1, !dbg !661
  store i32 %inc, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  store i64 4096, i64* @__pagesize, align 8, !dbg !662
  br i1 true, label %if.then1, label %if.end2, !dbg !663
  call void @_locale_init() #10, !dbg !664
  br label %if.end2, !dbg !664
  br i1 true, label %if.then3, label %if.end4, !dbg !666
  call void @_stdio_init() #10, !dbg !667
  br label %if.end4, !dbg !667
  ret void, !dbg !669
  %old_errno = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %old_errno, metadata !2094, metadata !DIExpression()), !dbg !2095
  %0 = load i32, i32* @errno, align 4, !dbg !660
  store i32 %0, i32* %old_errno, align 4, !dbg !659
  %call = call i32 @isatty(i32 0) #10, !dbg !661
  %sub = sub nsw i32 1, %call, !dbg !662
  %mul = mul i32 %sub, 256, !dbg !663
  %1 = load i16, i16* getelementptr inbounds ([3 x %struct.__STDIO_FILE_STRUCT.519], [3 x %struct.__STDIO_FILE_STRUCT.519]* @_stdio_streams, i64 0, i64 0, i32 0), align 16, !dbg !664
  %conv = zext i16 %1 to i32, !dbg !664
  %xor = xor i32 %conv, %mul, !dbg !664
  %conv1 = trunc i32 %xor to i16, !dbg !664
  store i16 %conv1, i16* getelementptr inbounds ([3 x %struct.__STDIO_FILE_STRUCT.519], [3 x %struct.__STDIO_FILE_STRUCT.519]* @_stdio_streams, i64 0, i64 0, i32 0), align 16, !dbg !664
  %call2 = call i32 @isatty(i32 1) #10, !dbg !665
  %sub3 = sub nsw i32 1, %call2, !dbg !666
  %mul4 = mul i32 %sub3, 256, !dbg !667
  %2 = load i16, i16* getelementptr inbounds ([3 x %struct.__STDIO_FILE_STRUCT.519], [3 x %struct.__STDIO_FILE_STRUCT.519]* @_stdio_streams, i64 0, i64 1, i32 0), align 8, !dbg !668
  %conv5 = zext i16 %2 to i32, !dbg !668
  %xor6 = xor i32 %conv5, %mul4, !dbg !668
  %conv7 = trunc i32 %xor6 to i16, !dbg !668
  store i16 %conv7, i16* getelementptr inbounds ([3 x %struct.__STDIO_FILE_STRUCT.519], [3 x %struct.__STDIO_FILE_STRUCT.519]* @_stdio_streams, i64 0, i64 1, i32 0), align 8, !dbg !668
  %3 = load i32, i32* %old_errno, align 4, !dbg !669
  store i32 %3, i32* @errno, align 4, !dbg !669
  ret void, !dbg !670
  %fd.addr = alloca i32, align 4
  %term = alloca %struct.termios.834, align 4
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !2713, metadata !DIExpression()), !dbg !2714
  call void @llvm.dbg.declare(metadata %struct.termios.834* %term, metadata !2715, metadata !DIExpression()), !dbg !2733
  %0 = load i32, i32* %fd.addr, align 4, !dbg !679
  %call = call i32 @tcgetattr(i32 %0, %struct.termios.834* %term) #10, !dbg !680
  %cmp = icmp eq i32 %call, 0, !dbg !681
  %conv = zext i1 %cmp to i32, !dbg !681
  ret i32 %conv, !dbg !682
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
ck: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in   %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  %0 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !657
  %tobool = icmp ne i32 %0, 0, !dbg !657
  br i1 %tobool, label %if.then, label %if.end, !dbg !659
  br label %if.end4, !dbg !660
  %1 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  %inc = add nsw i32 %1, 1, !dbg !661
  store i32 %inc, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  store i64 4096, i64* @__pagesize, align 8, !dbg !662
  br i1 true, label %if.then1, label %if.end2, !dbg !663
  call void @_locale_init() #10, !dbg !664
  br label %if.end2, !dbg !664
  br i1 true, label %if.then3, label %if.end4, !dbg !666
  call void @_stdio_init() #10, !dbg !667
  br label %if.end4, !dbg !667
  ret void, !dbg !669
  %old_errno = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %old_errno, metadata !2094, metadata !DIExpression()), !dbg !2095
  %0 = load i32, i32* @errno, align 4, !dbg !660
  store i32 %0, i32* %old_errno, align 4, !dbg !659
  %call = call i32 @isatty(i32 0) #10, !dbg !661
  %sub = sub nsw i32 1, %call, !dbg !662
  %mul = mul i32 %sub, 256, !dbg !663
  %1 = load i16, i16* getelementptr inbounds ([3 x %struct.__STDIO_FILE_STRUCT.519], [3 x %struct.__STDIO_FILE_STRUCT.519]* @_stdio_streams, i64 0, i64 0, i32 0), align 16, !dbg !664
  %conv = zext i16 %1 to i32, !dbg !664
  %xor = xor i32 %conv, %mul, !dbg !664
  %conv1 = trunc i32 %xor to i16, !dbg !664
  store i16 %conv1, i16* getelementptr inbounds ([3 x %struct.__STDIO_FILE_STRUCT.519], [3 x %struct.__STDIO_FILE_STRUCT.519]* @_stdio_streams, i64 0, i64 0, i32 0), align 16, !dbg !664
  %call2 = call i32 @isatty(i32 1) #10, !dbg !665
  %sub3 = sub nsw i32 1, %call2, !dbg !666
  %mul4 = mul i32 %sub3, 256, !dbg !667
  %2 = load i16, i16* getelementptr inbounds ([3 x %struct.__STDIO_FILE_STRUCT.519], [3 x %struct.__STDIO_FILE_STRUCT.519]* @_stdio_streams, i64 0, i64 1, i32 0), align 8, !dbg !668
  %conv5 = zext i16 %2 to i32, !dbg !668
  %xor6 = xor i32 %conv5, %mul4, !dbg !668
  %conv7 = trunc i32 %xor6 to i16, !dbg !668
  store i16 %conv7, i16* getelementptr inbounds ([3 x %struct.__STDIO_FILE_STRUCT.519], [3 x %struct.__STDIO_FILE_STRUCT.519]* @_stdio_streams, i64 0, i64 1, i32 0), align 8, !dbg !668
  %3 = load i32, i32* %old_errno, align 4, !dbg !669
  store i32 %3, i32* @errno, align 4, !dbg !669
  ret void, !dbg !670
  %fd.addr = alloca i32, align 4
  %term = alloca %struct.termios.834, align 4
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !2713, metadata !DIExpression()), !dbg !2714
  call void @llvm.dbg.declare(metadata %struct.termios.834* %term, metadata !2715, metadata !DIExpression()), !dbg !2733
  %0 = load i32, i32* %fd.addr, align 4, !dbg !679
  %call = call i32 @tcgetattr(i32 %0, %struct.termios.834* %term) #10, !dbg !680
  %cmp = icmp eq i32 %call, 0, !dbg !681
  %conv = zext i1 %cmp to i32, !dbg !681
  ret i32 %conv, !dbg !682
  %fd.addr = alloca i32, align 4
  %termios_p.addr = alloca %struct.termios.834*, align 8
  %k_termios = alloca %struct.__kernel_termios, align 4
  %retval1 = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !3141, metadata !DIExpression()), !dbg !3142
  store %struct.termios.834* %termios_p, %struct.termios.834** %termios_p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.termios.834** %termios_p.addr, metadata !3143, metadata !DIExpression()), !dbg !3144
  call void @llvm.dbg.declare(metadata %struct.__kernel_termios* %k_termios, metadata !3145, metadata !DIExpression()), !dbg !3158
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !3159, metadata !DIExpression()), !dbg !3160
  %0 = load i32, i32* %fd.addr, align 4, !dbg !698
  %call = call i32 (i32, i64, ...) @ioctl(i32 %0, i64 21505, %struct.__kernel_termios* %k_termios) #10, !dbg !699
  store i32 %call, i32* %retval1, align 4, !dbg !700
  %c_iflag = getelementptr inbounds %struct.__kernel_termios, %struct.__kernel_termios* %k_termios, i32 0, i32 0, !dbg !701
  %1 = load i32, i32* %c_iflag, align 4, !dbg !701
  %2 = load %struct.termios.834*, %struct.termios.834** %termios_p.addr, align 8, !dbg !702
  %c_iflag2 = getelementptr inbounds %struct.termios.834, %struct.termios.834* %2, i32 0, i32 0, !dbg !703
  store i32 %1, i32* %c_iflag2, align 4, !dbg !704
  %c_oflag = getelementptr inbounds %struct.__kernel_termios, %struct.__kernel_termios* %k_termios, i32 0, i32 1, !dbg !705
  %3 = load i32, i32* %c_oflag, align 4, !dbg !705
  %4 = load %struct.termios.834*, %struct.termios.834** %termios_p.addr, align 8, !dbg !706
  %c_oflag3 = getelementptr inbounds %struct.termios.834, %struct.termios.834* %4, i32 0, i32 1, !dbg !707
  store i32 %3, i32* %c_oflag3, align 4, !dbg !708
  %c_cflag = getelementptr inbounds %struct.__kernel_termios, %struct.__kernel_termios* %k_termios, i32 0, i32 2, !dbg !709
  %5 = load i32, i32* %c_cflag, align 4, !dbg !709
  %6 = load %struct.termios.834*, %struct.termios.834** %termios_p.addr, align 8, !dbg !710
  %c_cflag4 = getelementptr inbounds %struct.termios.834, %struct.termios.834* %6, i32 0, i32 2, !dbg !711
  store i32 %5, i32* %c_cflag4, align 4, !dbg !712
  %c_lflag = getelementptr inbounds %struct.__kernel_termios, %struct.__kernel_termios* %k_termios, i32 0, i32 3, !dbg !713
  %7 = load i32, i32* %c_lflag, align 4, !dbg !713
  %8 = load %struct.termios.834*, %struct.termios.834** %termios_p.addr, align 8, !dbg !714
  %c_lflag5 = getelementptr inbounds %struct.termios.834, %struct.termios.834* %8, i32 0, i32 3, !dbg !715
  store i32 %7, i32* %c_lflag5, align 4, !dbg !716
  %c_line = getelementptr inbounds %struct.__kernel_termios, %struct.__kernel_termios* %k_termios, i32 0, i32 4, !dbg !717
  %9 = load i8, i8* %c_line, align 4, !dbg !717
  %10 = load %struct.termios.834*, %struct.termios.834** %termios_p.addr, align 8, !dbg !718
  %c_line6 = getelementptr inbounds %struct.termios.834, %struct.termios.834* %10, i32 0, i32 4, !dbg !719
  store i8 %9, i8* %c_line6, align 4, !dbg !720
  %11 = load %struct.termios.834*, %struct.termios.834** %termios_p.addr, align 8, !dbg !721
  %c_cc = getelementptr inbounds %struct.termios.834, %struct.termios.834* %11, i32 0, i32 5, !dbg !724
  %arrayidx = getelementptr inbounds [32 x i8], [32 x i8]* %c_cc, i64 0, i64 0, !dbg !721
  %c_cc7 = getelementptr inbounds %struct.__kernel_termios, %struct.__kernel_termios* %k_termios, i32 0, i32 5, !dbg !725
  %arrayidx8 = getelementptr inbounds [19 x i8], [19 x i8]* %c_cc7, i64 0, i64 0, !dbg !726
  %call9 = call i8* @mempcpy(i8* %arrayidx, i8* %arrayidx8, i64 19) #10, !dbg !727
  %call10 = call i8* @memset(i8* %call9, i32 0, i64 13) #10, !dbg !728
  %12 = load i32, i32* %retval1, align 4, !dbg !729
  ret i32 %12, !dbg !730
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.0
//I  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
nstructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions i  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  %0 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !657
  %tobool = icmp ne i32 %0, 0, !dbg !657
  br i1 %tobool, label %if.then, label %if.end, !dbg !659
  br label %if.end4, !dbg !660
  %1 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  %inc = add nsw i32 %1, 1, !dbg !661
  store i32 %inc, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  store i64 4096, i64* @__pagesize, align 8, !dbg !662
  br i1 true, label %if.then1, label %if.end2, !dbg !663
  call void @_locale_init() #10, !dbg !664
  br label %if.end2, !dbg !664
  br i1 true, label %if.then3, label %if.end4, !dbg !666
  call void @_stdio_init() #10, !dbg !667
  br label %if.end4, !dbg !667
  ret void, !dbg !669
  %old_errno = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %old_errno, metadata !2094, metadata !DIExpression()), !dbg !2095
  %0 = load i32, i32* @errno, align 4, !dbg !660
  store i32 %0, i32* %old_errno, align 4, !dbg !659
  %call = call i32 @isatty(i32 0) #10, !dbg !661
  %sub = sub nsw i32 1, %call, !dbg !662
  %mul = mul i32 %sub, 256, !dbg !663
  %1 = load i16, i16* getelementptr inbounds ([3 x %struct.__STDIO_FILE_STRUCT.519], [3 x %struct.__STDIO_FILE_STRUCT.519]* @_stdio_streams, i64 0, i64 0, i32 0), align 16, !dbg !664
  %conv = zext i16 %1 to i32, !dbg !664
  %xor = xor i32 %conv, %mul, !dbg !664
  %conv1 = trunc i32 %xor to i16, !dbg !664
  store i16 %conv1, i16* getelementptr inbounds ([3 x %struct.__STDIO_FILE_STRUCT.519], [3 x %struct.__STDIO_FILE_STRUCT.519]* @_stdio_streams, i64 0, i64 0, i32 0), align 16, !dbg !664
  %call2 = call i32 @isatty(i32 1) #10, !dbg !665
  %sub3 = sub nsw i32 1, %call2, !dbg !666
  %mul4 = mul i32 %sub3, 256, !dbg !667
  %2 = load i16, i16* getelementptr inbounds ([3 x %struct.__STDIO_FILE_STRUCT.519], [3 x %struct.__STDIO_FILE_STRUCT.519]* @_stdio_streams, i64 0, i64 1, i32 0), align 8, !dbg !668
  %conv5 = zext i16 %2 to i32, !dbg !668
  %xor6 = xor i32 %conv5, %mul4, !dbg !668
  %conv7 = trunc i32 %xor6 to i16, !dbg !668
  store i16 %conv7, i16* getelementptr inbounds ([3 x %struct.__STDIO_FILE_STRUCT.519], [3 x %struct.__STDIO_FILE_STRUCT.519]* @_stdio_streams, i64 0, i64 1, i32 0), align 8, !dbg !668
  %3 = load i32, i32* %old_errno, align 4, !dbg !669
  store i32 %3, i32* @errno, align 4, !dbg !669
  ret void, !dbg !670
  %fd.addr = alloca i32, align 4
  %term = alloca %struct.termios.834, align 4
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !2713, metadata !DIExpression()), !dbg !2714
  call void @llvm.dbg.declare(metadata %struct.termios.834* %term, metadata !2715, metadata !DIExpression()), !dbg !2733
  %0 = load i32, i32* %fd.addr, align 4, !dbg !679
  %call = call i32 @tcgetattr(i32 %0, %struct.termios.834* %term) #10, !dbg !680
  %cmp = icmp eq i32 %call, 0, !dbg !681
  %conv = zext i1 %cmp to i32, !dbg !681
  ret i32 %conv, !dbg !682
  %fd.addr = alloca i32, align 4
  %termios_p.addr = alloca %struct.termios.834*, align 8
  %k_termios = alloca %struct.__kernel_termios, align 4
  %retval1 = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !3141, metadata !DIExpression()), !dbg !3142
  store %struct.termios.834* %termios_p, %struct.termios.834** %termios_p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.termios.834** %termios_p.addr, metadata !3143, metadata !DIExpression()), !dbg !3144
  call void @llvm.dbg.declare(metadata %struct.__kernel_termios* %k_termios, metadata !3145, metadata !DIExpression()), !dbg !3158
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !3159, metadata !DIExpression()), !dbg !3160
  %0 = load i32, i32* %fd.addr, align 4, !dbg !698
  %call = call i32 (i32, i64, ...) @ioctl(i32 %0, i64 21505, %struct.__kernel_termios* %k_termios) #10, !dbg !699
  store i32 %call, i32* %retval1, align 4, !dbg !700
  %c_iflag = getelementptr inbounds %struct.__kernel_termios, %struct.__kernel_termios* %k_termios, i32 0, i32 0, !dbg !701
  %1 = load i32, i32* %c_iflag, align 4, !dbg !701
  %2 = load %struct.termios.834*, %struct.termios.834** %termios_p.addr, align 8, !dbg !702
  %c_iflag2 = getelementptr inbounds %struct.termios.834, %struct.termios.834* %2, i32 0, i32 0, !dbg !703
n stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: N  store i32 %1, i32* %c_iflag2, align 4, !dbg !704
  %c_oflag = getelementptr inbounds %struct.__kernel_termios, %struct.__kernel_termios* %k_termios, i32 0, i32 1, !dbg !705
  %3 = load i32, i32* %c_oflag, align 4, !dbg !705
  %4 = load %struct.termios.834*, %struct.termios.834** %termios_p.addr, align 8, !dbg !706
  %c_oflag3 = getelementptr inbounds %struct.termios.834, %struct.termios.834* %4, i32 0, i32 1, !dbg !707
  store i32 %3, i32* %c_oflag3, align 4, !dbg !708
  %c_cflag = getelementptr inbounds %struct.__kernel_termios, %struct.__kernel_termios* %k_termios, i32 0, i32 2, !dbg !709
  %5 = load i32, i32* %c_cflag, align 4, !dbg !709
  %6 = load %struct.termios.834*, %struct.termios.834** %termios_p.addr, align 8, !dbg !710
  %c_cflag4 = getelementptr inbounds %struct.termios.834, %struct.termios.834* %6, i32 0, i32 2, !dbg !711
  store i32 %5, i32* %c_cflag4, align 4, !dbg !712
  %c_lflag = getelementptr inbounds %struct.__kernel_termios, %struct.__kernel_termios* %k_termios, i32 0, i32 3, !dbg !713
  %7 = load i32, i32* %c_lflag, align 4, !dbg !713
  %8 = load %struct.termios.834*, %struct.termios.834** %termios_p.addr, align 8, !dbg !714
  %c_lflag5 = getelementptr inbounds %struct.termios.834, %struct.termios.834* %8, i32 0, i32 3, !dbg !715
  store i32 %7, i32* %c_lflag5, align 4, !dbg !716
  %c_line = getelementptr inbounds %struct.__kernel_termios, %struct.__kernel_termios* %k_termios, i32 0, i32 4, !dbg !717
  %9 = load i8, i8* %c_line, align 4, !dbg !717
  %10 = load %struct.termios.834*, %struct.termios.834** %termios_p.addr, align 8, !dbg !718
  %c_line6 = getelementptr inbounds %struct.termios.834, %struct.termios.834* %10, i32 0, i32 4, !dbg !719
  store i8 %9, i8* %c_line6, align 4, !dbg !720
  %11 = load %struct.termios.834*, %struct.termios.834** %termios_p.addr, align 8, !dbg !721
  %c_cc = getelementptr inbounds %struct.termios.834, %struct.termios.834* %11, i32 0, i32 5, !dbg !724
  %arrayidx = getelementptr inbounds [32 x i8], [32 x i8]* %c_cc, i64 0, i64 0, !dbg !721
  %c_cc7 = getelementptr inbounds %struct.__kernel_termios, %struct.__kernel_termios* %k_termios, i32 0, i32 5, !dbg !725
  %arrayidx8 = getelementptr inbounds [19 x i8], [19 x i8]* %c_cc7, i64 0, i64 0, !dbg !726
  %call9 = call i8* @mempcpy(i8* %arrayidx, i8* %arrayidx8, i64 19) #10, !dbg !727
  %call10 = call i8* @memset(i8* %call9, i32 0, i64 13) #10, !dbg !728
  %12 = load i32, i32* %retval1, align 4, !dbg !729
  ret i32 %12, !dbg !730
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
um.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Inst  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  %0 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !657
  %tobool = icmp ne i32 %0, 0, !dbg !657
  br i1 %tobool, label %if.then, label %if.end, !dbg !659
  br label %if.end4, !dbg !660
  %1 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  %inc = add nsw i32 %1, 1, !dbg !661
  store i32 %inc, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  store i64 4096, i64* @__pagesize, align 8, !dbg !662
  br i1 true, label %if.then1, label %if.end2, !dbg !663
  call void @_locale_init() #10, !dbg !664
  br label %if.end2, !dbg !664
  br i1 true, label %if.then3, label %if.end4, !dbg !666
  call void @_stdio_init() #10, !dbg !667
  br label %if.end4, !dbg !667
  ret void, !dbg !669
  %old_errno = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %old_errno, metadata !2094, metadata !DIExpression()), !dbg !2095
  %0 = load i32, i32* @errno, align 4, !dbg !660
  store i32 %0, i32* %old_errno, align 4, !dbg !659
  %call = call i32 @isatty(i32 0) #10, !dbg !661
  %sub = sub nsw i32 1, %call, !dbg !662
  %mul = mul i32 %sub, 256, !dbg !663
  %1 = load i16, i16* getelementptr inbounds ([3 x %struct.__STDIO_FILE_STRUCT.519], [3 x %struct.__STDIO_FILE_STRUCT.519]* @_stdio_streams, i64 0, i64 0, i32 0), align 16, !dbg !664
  %conv = zext i16 %1 to i32, !dbg !664
  %xor = xor i32 %conv, %mul, !dbg !664
  %conv1 = trunc i32 %xor to i16, !dbg !664
  store i16 %conv1, i16* getelementptr inbounds ([3 x %struct.__STDIO_FILE_STRUCT.519], [3 x %struct.__STDIO_FILE_STRUCT.519]* @_stdio_streams, i64 0, i64 0, i32 0), align 16, !dbg !664
  %call2 = call i32 @isatty(i32 1) #10, !dbg !665
  %sub3 = sub nsw i32 1, %call2, !dbg !666
  %mul4 = mul i32 %sub3, 256, !dbg !667
  %2 = load i16, i16* getelementptr inbounds ([3 x %struct.__STDIO_FILE_STRUCT.519], [3 x %struct.__STDIO_FILE_STRUCT.519]* @_stdio_streams, i64 0, i64 1, i32 0), align 8, !dbg !668
  %conv5 = zext i16 %2 to i32, !dbg !668
  %xor6 = xor i32 %conv5, %mul4, !dbg !668
ructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
  %conv7 = trunc i32 %xor6 to i16, !dbg !668
  store i16 %conv7, i16* getelementptr inbounds ([3 x %struct.__STDIO_FILE_STRUCT.519], [3 x %struct.__STDIO_FILE_STRUCT.519]* @_stdio_streams, i64 0, i64 1, i32 0), align 8, !dbg !668
  %3 = load i32, i32* %old_errno, align 4, !dbg !669
  store i32 %3, i32* @errno, align 4, !dbg !669
  ret void, !dbg !670
  %fd.addr = alloca i32, align 4
  %term = alloca %struct.termios.834, align 4
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !2713, metadata !DIExpression()), !dbg !2714
  call void @llvm.dbg.declare(metadata %struct.termios.834* %term, metadata !2715, metadata !DIExpression()), !dbg !2733
  %0 = load i32, i32* %fd.addr, align 4, !dbg !679
  %call = call i32 @tcgetattr(i32 %0, %struct.termios.834* %term) #10, !dbg !680
  %cmp = icmp eq i32 %call, 0, !dbg !681
  %conv = zext i1 %cmp to i32, !dbg !681
  ret i32 %conv, !dbg !682
  %fd.addr = alloca i32, align 4
  %termios_p.addr = alloca %struct.termios.834*, align 8
  %k_termios = alloca %struct.__kernel_termios, align 4
  %retval1 = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !3141, metadata !DIExpression()), !dbg !3142
  store %struct.termios.834* %termios_p, %struct.termios.834** %termios_p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.termios.834** %termios_p.addr, metadata !3143, metadata !DIExpression()), !dbg !3144
  call void @llvm.dbg.declare(metadata %struct.__kernel_termios* %k_termios, metadata !3145, metadata !DIExpression()), !dbg !3158
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !3159, metadata !DIExpression()), !dbg !3160
  %0 = load i32, i32* %fd.addr, align 4, !dbg !698
  %call = call i32 (i32, i64, ...) @ioctl(i32 %0, i64 21505, %struct.__kernel_termios* %k_termios) #10, !dbg !699
  store i32 %call, i32* %retval1, align 4, !dbg !700
  %c_iflag = getelementptr inbounds %struct.__kernel_termios, %struct.__kernel_termios* %k_termios, i32 0, i32 0, !dbg !701
  %1 = load i32, i32* %c_iflag, align 4, !dbg !701
  %2 = load %struct.termios.834*, %struct.termios.834** %termios_p.addr, align 8, !dbg !702
  %c_iflag2 = getelementptr inbounds %struct.termios.834, %struct.termios.834* %2, i32 0, i32 0, !dbg !703
  store i32 %1, i32* %c_iflag2, align 4, !dbg !704
  %c_oflag = getelementptr inbounds %struct.__kernel_termios, %struct.__kernel_termios* %k_termios, i32 0, i32 1, !dbg !705
  %3 = load i32, i32* %c_oflag, align 4, !dbg !705
  %4 = load %struct.termios.834*, %struct.termios.834** %termios_p.addr, align 8, !dbg !706
  %c_oflag3 = getelementptr inbounds %struct.termios.834, %struct.termios.834* %4, i32 0, i32 1, !dbg !707
  store i32 %3, i32* %c_oflag3, align 4, !dbg !708
  %c_cflag = getelementptr inbounds %struct.__kernel_termios, %struct.__kernel_termios* %k_termios, i32 0, i32 2, !dbg !709
  %5 = load i32, i32* %c_cflag, align 4, !dbg !709
  %6 = load %struct.termios.834*, %struct.termios.834** %termios_p.addr, align 8, !dbg !710
  %c_cflag4 = getelementptr inbounds %struct.termios.834, %struct.termios.834* %6, i32 0, i32 2, !dbg !711
  store i32 %5, i32* %c_cflag4, align 4, !dbg !712
  %c_lflag = getelementptr inbounds %struct.__kernel_termios, %struct.__kernel_termios* %k_termios, i32 0, i32 3, !dbg !713
  %7 = load i32, i32* %c_lflag, align 4, !dbg !713
  %8 = load %struct.termios.834*, %struct.termios.834** %termios_p.addr, align 8, !dbg !714
  %c_lflag5 = getelementptr inbounds %struct.termios.834, %struct.termios.834* %8, i32 0, i32 3, !dbg !715
  store i32 %7, i32* %c_lflag5, align 4, !dbg !716
  %c_line = getelementptr inbounds %struct.__kernel_termios, %struct.__kernel_termios* %k_termios, i32 0, i32 4, !dbg !717
  %9 = load i8, i8* %c_line, align 4, !dbg !717
  %10 = load %struct.termios.834*, %struct.termios.834** %termios_p.addr, align 8, !dbg !718
  %c_line6 = getelementptr inbounds %struct.termios.834, %struct.termios.834* %10, i32 0, i32 4, !dbg !719
  store i8 %9, i8* %c_line6, align 4, !dbg !720
  %11 = load %struct.termios.834*, %struct.termios.834** %termios_p.addr, align 8, !dbg !721
  %c_cc = getelementptr inbounds %struct.termios.834, %struct.termios.834* %11, i32 0, i32 5, !dbg !724
  %arrayidx = getelementptr inbounds [32 x i8], [32 x i8]* %c_cc, i64 0, i64 0, !dbg !721
  %c_cc7 = getelementptr inbounds %struct.__kernel_termios, %struct.__kernel_termios* %k_termios, i32 0, i32 5, !dbg !725
  %arrayidx8 = getelementptr inbounds [19 x i8], [19 x i8]* %c_cc7, i64 0, i64 0, !dbg !726
  %call9 = call i8* @mempcpy(i8* %arrayidx, i8* %arrayidx8, i64 19) #10, !dbg !727
  %call10 = call i8* @memset(i8* %call9, i32 0, i64 13) #10, !dbg !728
  %12 = load i32, i32* %retval1, align 4, !dbg !729
  ret i32 %12, !dbg !730
  %s1.addr = alloca i8*, align 8
  %s2.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %r1 = alloca i8*, align 8
  %r2 = alloca i8*, align 8
  store i8* %s1, i8** %s1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !3195, metadata !DIExpression()), !dbg !3196
  store i8* %s2, i8** %s2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !3197, metadata !DIExpression()), !dbg !3198
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !3199, metadata !DIExpression()), !dbg !3200
  call void @llvm.dbg.declare(metadata i8** %r1, metadata !3201, metadata !DIExpression()), !dbg !3202
  %0 = load i8*, i8** %s1.addr, align 8, !dbg !672
  store i8* %0, i8** %r1, align 8, !dbg !671
  call void @llvm.dbg.declare(metadata i8** %r2, metadata !3204, metadata !DIExpression()), !dbg !3205
  %1 = load i8*, i8** %s2.addr, align 8, !dbg !675
  store i8* %1, i8** %r2, align 8, !dbg !674
  br label %while.cond, !dbg !676
  %2 = load i64, i64* %n.addr, align 8, !dbg !677
  %tobool = icmp ne i64 %2, 0, !dbg !676
  br i1 %tobool, label %while.body, label %while.end, !dbg !676
  %3 = load i8*, i8** %r2, align 8, !dbg !678
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !678
  store i8* %incdec.ptr, i8** %r2, align 8, !dbg !678
  %4 = load i8, i8* %3, align 1, !dbg !680
  %5 = load i8*, i8** %r1, align 8, !dbg !681
  %incdec.ptr1 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !681
  store i8* %incdec.ptr1, i8** %r1, align 8, !dbg !681
  store i8 %4, i8* %5, align 1, !dbg !682
  %6 = load i64, i64* %n.addr, align 8, !dbg !683
  %dec = add i64 %6, -1, !dbg !683
  store i64 %dec, i64* %n.addr, align 8, !dbg !683
  br label %while.cond, !dbg !676, !llvm.loop !684
  %7 = load i8*, i8** %r1, align 8, !dbg !686
  ret i8* %7, !dbg !687
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instruct  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
ions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in   store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  %0 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !657
  %tobool = icmp ne i32 %0, 0, !dbg !657
  br i1 %tobool, label %if.then, label %if.end, !dbg !659
  br label %if.end4, !dbg !660
  %1 = load i32, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  %inc = add nsw i32 %1, 1, !dbg !661
  store i32 %inc, i32* @__uClibc_init.been_there_done_that, align 4, !dbg !661
  store i64 4096, i64* @__pagesize, align 8, !dbg !662
  br i1 true, label %if.then1, label %if.end2, !dbg !663
  call void @_locale_init() #10, !dbg !664
  br label %if.end2, !dbg !664
  br i1 true, label %if.then3, label %if.end4, !dbg !666
  call void @_stdio_init() #10, !dbg !667
  br label %if.end4, !dbg !667
  ret void, !dbg !669
  %old_errno = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %old_errno, metadata !2094, metadata !DIExpression()), !dbg !2095
  %0 = load i32, i32* @errno, align 4, !dbg !660
  store i32 %0, i32* %old_errno, align 4, !dbg !659
  %call = call i32 @isatty(i32 0) #10, !dbg !661
  %sub = sub nsw i32 1, %call, !dbg !662
  %mul = mul i32 %sub, 256, !dbg !663
  %1 = load i16, i16* getelementptr inbounds ([3 x %struct.__STDIO_FILE_STRUCT.519], [3 x %struct.__STDIO_FILE_STRUCT.519]* @_stdio_streams, i64 0, i64 0, i32 0), align 16, !dbg !664
  %conv = zext i16 %1 to i32, !dbg !664
  %xor = xor i32 %conv, %mul, !dbg !664
  %conv1 = trunc i32 %xor to i16, !dbg !664
  store i16 %conv1, i16* getelementptr inbounds ([3 x %struct.__STDIO_FILE_STRUCT.519], [3 x %struct.__STDIO_FILE_STRUCT.519]* @_stdio_streams, i64 0, i64 0, i32 0), align 16, !dbg !664
  %call2 = call i32 @isatty(i32 1) #10, !dbg !665
  %sub3 = sub nsw i32 1, %call2, !dbg !666
  %mul4 = mul i32 %sub3, 256, !dbg !667
  %2 = load i16, i16* getelementptr inbounds ([3 x %struct.__STDIO_FILE_STRUCT.519], [3 x %struct.__STDIO_FILE_STRUCT.519]* @_stdio_streams, i64 0, i64 1, i32 0), align 8, !dbg !668
  %conv5 = zext i16 %2 to i32, !dbg !668
  %xor6 = xor i32 %conv5, %mul4, !dbg !668
  %conv7 = trunc i32 %xor6 to i16, !dbg !668
  store i16 %conv7, i16* getelementptr inbounds ([3 x %struct.__STDIO_FILE_STRUCT.519], [3 x %struct.__STDIO_FILE_STRUCT.519]* @_stdio_streams, i64 0, i64 1, i32 0), align 8, !dbg !668
  %3 = load i32, i32* %old_errno, align 4, !dbg !669
  store i32 %3, i32* @errno, align 4, !dbg !669
  ret void, !dbg !670
  %fd.addr = alloca i32, align 4
  %term = alloca %struct.termios.834, align 4
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !2713, metadata !DIExpression()), !dbg !2714
  call void @llvm.dbg.declare(metadata %struct.termios.834* %term, metadata !2715, metadata !DIExpression()), !dbg !2733
  %0 = load i32, i32* %fd.addr, align 4, !dbg !679
  %call = call i32 @tcgetattr(i32 %0, %struct.termios.834* %term) #10, !dbg !680
  %cmp = icmp eq i32 %call, 0, !dbg !681
  %conv = zext i1 %cmp to i32, !dbg !681
  ret i32 %conv, !dbg !682
  %fd.addr = alloca i32, align 4
  %termios_p.addr = alloca %struct.termios.834*, align 8
  %k_termios = alloca %struct.__kernel_termios, align 4
  %retval1 = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !3141, metadata !DIExpression()), !dbg !3142
  store %struct.termios.834* %termios_p, %struct.termios.834** %termios_p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.termios.834** %termios_p.addr, metadata !3143, metadata !DIExpression()), !dbg !3144
  call void @llvm.dbg.declare(metadata %struct.__kernel_termios* %k_termios, metadata !3145, metadata !DIExpression()), !dbg !3158
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !3159, metadata !DIExpression()), !dbg !3160
  %0 = load i32, i32* %fd.addr, align 4, !dbg !698
  %call = call i32 (i32, i64, ...) @ioctl(i32 %0, i64 21505, %struct.__kernel_termios* %k_termios) #10, !dbg !699
  store i32 %call, i32* %retval1, align 4, !dbg !700
  %c_iflag = getelementptr inbounds %struct.__kernel_termios, %struct.__kernel_termios* %k_termios, i32 0, i32 0, !dbg !701
  %1 = load i32, i32* %c_iflag, align 4, !dbg !701
  %2 = load %struct.termios.834*, %struct.termios.834** %termios_p.addr, align 8, !dbg !702
  %c_iflag2 = getelementptr inbounds %struct.termios.834, %struct.termios.834* %2, i32 0, i32 0, !dbg !703
  store i32 %1, i32* %c_iflag2, align 4, !dbg !704
  %c_oflag = getelementptr inbounds %struct.__kernel_termios, %struct.__kernel_termios* %k_termios, i32 0, i32 1, !dbg !705
  %3 = load i32, i32* %c_oflag, align 4, !dbg !705
  %4 = load %struct.termios.834*, %struct.termios.834** %termios_p.addr, align 8, !dbg !706
  %c_oflag3 = getelementptr inbounds %struct.termios.834, %struct.termios.834* %4, i32 0, i32 1, !dbg !707
  store i32 %3, i32* %c_oflag3, align 4, !dbg !708
  %c_cflag = getelementptr inbounds %struct.__kernel_termios, %struct.__kernel_termios* %k_termios, i32 0, i32 2, !dbg !709
  %5 = load i32, i32* %c_cflag, align 4, !dbg !709
  %6 = load %struct.termios.834*, %struct.termios.834** %termios_p.addr, align 8, !dbg !710
  %c_cflag4 = getelementptr inbounds %struct.termios.834, %struct.termios.834* %6, i32 0, i32 2, !dbg !711
  store i32 %5, i32* %c_cflag4, align 4, !dbg !712
  %c_lflag = getelementptr inbounds %struct.__kernel_termios, %struct.__kernel_termios* %k_termios, i32 0, i32 3, !dbg !713
  %7 = load i32, i32* %c_lflag, align 4, !dbg !713
  %8 = load %struct.termios.834*, %struct.termios.834** %termios_p.addr, align 8, !dbg !714
  %c_lflag5 = getelementptr inbounds %struct.termios.834, %struct.termios.834* %8, i32 0, i32 3, !dbg !715
  store i32 %7, i32* %c_lflag5, align 4, !dbg !716
  %c_line = getelementptr inbounds %struct.__kernel_termios, %struct.__kernel_termios* %k_termios, i32 0, i32 4, !dbg !717
  %9 = load i8, i8* %c_line, align 4, !dbg !717
  %10 = load %struct.termios.834*, %struct.termios.834** %termios_p.addr, align 8, !dbg !718
  %c_line6 = getelementptr inbounds %struct.termios.834, %struct.termios.834* %10, i32 0, i32 4, !dbg !719
  store i8 %9, i8* %c_line6, align 4, !dbg !720
  %11 = load %struct.termios.834*, %struct.termios.834** %termios_p.addr, align 8, !dbg !721
  %c_cc = getelementptr inbounds %struct.termios.834, %struct.termios.834* %11, i32 0, i32 5, !dbg !724
  %arrayidx = getelementptr inbounds [32 x i8], [32 x i8]* %c_cc, i64 0, i64 0, !dbg !721
  %c_cc7 = getelementptr inbounds %struct.__kernel_termios, %struct.__kernel_termios* %k_termios, i32 0, i32 5, !dbg !725
  %arrayidx8 = getelementptr inbounds [19 x i8], [19 x i8]* %c_cc7, i64 0, i64 0, !dbg !726
  %call9 = call i8* @mempcpy(i8* %arrayidx, i8* %arrayidx8, i64 19) #10, !dbg !727
  %call10 = call i8* @memset(i8* %call9, i32 0, i64 13) #10, !dbg !728
  %12 = load i32, i32* %retval1, align 4, !dbg !729
stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack:  ret i32 %12, !dbg !730
  %s.addr = alloca i8*, align 8
  %c.addr = alloca i32, align 4
  %n.addr = alloca i64, align 8
  %p = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !2157, metadata !DIExpression()), !dbg !2158
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !2159, metadata !DIExpression()), !dbg !2160
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !2161, metadata !DIExpression()), !dbg !2162
  call void @llvm.dbg.declare(metadata i8** %p, metadata !2163, metadata !DIExpression()), !dbg !2164
  %0 = load i8*, i8** %s.addr, align 8, !dbg !668
  store i8* %0, i8** %p, align 8, !dbg !667
  br label %while.cond, !dbg !669
  %1 = load i64, i64* %n.addr, align 8, !dbg !670
  %tobool = icmp ne i64 %1, 0, !dbg !669
  br i1 %tobool, label %while.body, label %while.end, !dbg !669
  %2 = load i32, i32* %c.addr, align 4, !dbg !671
  %conv = trunc i32 %2 to i8, !dbg !673
  %3 = load i8*, i8** %p, align 8, !dbg !674
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !674
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !674
  store i8 %conv, i8* %3, align 1, !dbg !675
  %4 = load i64, i64* %n.addr, align 8, !dbg !676
  %dec = add i64 %4, -1, !dbg !676
  store i64 %dec, i64* %n.addr, align 8, !dbg !676
  br label %while.cond, !dbg !669, !llvm.loop !677
  %5 = load i8*, i8** %s.addr, align 8, !dbg !679
  ret i8* %5, !dbg !680
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
 Num.46
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  %s.addr = alloca i8*, align 8
  %c.addr = alloca i32, align 4
  %p = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !2181, metadata !DIExpression()), !dbg !2182
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !2183, metadata !DIExpression()), !dbg !2184
  call void @llvm.dbg.declare(metadata i8** %p, metadata !2185, metadata !DIExpression()), !dbg !2186
  store i8* null, i8** %p, align 8, !dbg !666
  br label %do.body, !dbg !667
  %0 = load i8*, i8** %s.addr, align 8, !dbg !668
  %1 = load i8, i8* %0, align 1, !dbg !671
  %conv = sext i8 %1 to i32, !dbg !671
  %2 = load i32, i32* %c.addr, align 4, !dbg !672
  %conv1 = trunc i32 %2 to i8, !dbg !673
  %conv2 = sext i8 %conv1 to i32, !dbg !673
  %cmp = icmp eq i32 %conv, %conv2, !dbg !674
  br i1 %cmp, label %if.then, label %if.end, !dbg !675
  %3 = load i8*, i8** %s.addr, align 8, !dbg !676
  store i8* %3, i8** %p, align 8, !dbg !678
  br label %if.end, !dbg !679
  br label %do.cond, !dbg !680
  %4 = load i8*, i8** %s.addr, align 8, !dbg !681
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 1, !dbg !681
  store i8* %incdec.ptr, i8** %s.addr, align 8, !dbg !681
  %5 = load i8, i8* %4, align 1, !dbg !682
  %tobool = icmp ne i8 %5, 0, !dbg !680
  br i1 %tobool, label %do.body, label %do.end, !dbg !680, !llvm.loop !683
  %6 = load i8*, i8** %p, align 8, !dbg !685
  ret i8* %6, !dbg !686
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
 in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.0
/  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
/Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
 in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//In  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  ret i32* @h_errno, !dbg !660
111133704
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
structions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.0
------ InDirect function call executed!
Location of the instruction : libc/misc/internals/__uClibc_main.c:401 5
// This the current instruction : 
  dest = 194, operand = 190
//We found the operand instruction in current stack!
  opnd_name = main.addr
Function call address is 111133704
//In indirect call : Instructions in stack: Num.0
//In indirect call : Instructions in stack: Num.1
//In indirect call : Instructions in stack: Num.0
//In indirect call : Instructions in stack: Num.1
//In indirect call : Instructions in stack: Num.2
//In indirect call : Instructions in stack: Num.3
//In indirect call : Instructions in stack: Num.4
//In indirect call : Instructions in stack: Num.5
//In indirect call : Instructions in stack: Num.6
//In indirect call : Instructions in stack: Num.7
//In indirect call : Instructions in stack: Num.8
//In indirect call : Instructions in stack: Num.9
//In indirect call : Instructions in stack: Num.10
//In indirect call : Instructions in stack: Num.11
//In indirect call : Instructions in stack: Num.12
//In indirect call : Instructions in stack: Num.13
//In indirect call : Instructions in stack: Num.14
//In indirect call : Instructions in stack: Num.15
//In indirect call : Instructions in stack: Num.16
//In indirect call : Instructions in stack: Num.17
//In indirect call : Instructions in stack: Num.18
//In indirect call : Instructions in stack: Num.19
//In indirect call : Instructions in stack: Num.20
//In indirect call : Instructions in stack: Num.21
//In indirect call : Instructions in stack: Num.22
//In indirect call : Instructions in stack: Num.23
//In indirect call : Instructions in stack: Num.24
//In indirect call : Instructions in stack: Num.25
//In indirect call : Instructions in stack: Num.26
//In indirect call : Instructions in stack: Num.27
//In indirect call : Instructions in stack: Num.28
//In indirect call : Instructions in stack: Num.29
//In indirect call : Instructions in stack: Num.30
//In indirect call : Instructions in stack: Num.31
//In indirect call : Instructions in stack: Num.32
//In indirect call : Instructions in stack: Num.33
//In indirect call : Instructions in stack: Num.34
//In indirect call : Instructions in stack: Num.35
//In indirect call : Instructions in stack: Num.36
//In indirect call : Instructions in stack: Num.37
//In indirect call : Instructions in stack: Num.38
//In indirect call : Instructions in stack: Num.39
//In indirect call : Instructions in stack: Num.40
//In indirect call : Instructions in stack: Num.41
//In indirect call : Instructions in stack: Num.42
//In indirect call : Instructions in stack: Num.43
//In indirect call : Instructions in stack: Num.44
//In indirect call : Instructions in stack: Num.45
//In indirect call : Instructions in stack: Num.46
//In indirect call : Instructions in stack: Num.47
//In indirect call : Instructions in stack: Num.48
//In indirect call : Instructions in stack: Num.49
//In indirect call : Instructions in stack: Num.50
//In indirect call : Instructions in stack: Num.51
//In indirect call : Instructions in stack: Num.52
//In indirect call : Instructions in stack: Num.53
//In indirect call : Instructions in stack: Num.54
//In indirect call : Instructions in stack: Num.55
//In indirect call : Instructions in stack: Num.56
//In indirect call : Instructions in stack: Num.57
//In indirect call : Instructions in stack: Num.58
//In indirect call : Instructions in stack: Num.59
//In indirect call : Instructions in stack: Num.60
//In indirect call : Instructions in stack: Num.61
//In indirect call : Instructions in stack: Num.62
//In indirect call : Instructions in stack: Num.63
//In indirect call : Instructions in stack: Num.64
//In indirect call : Instructions in stack: Num.65
//In indirect call : Instructions in stack: Num.66
//In indirect call : Instructions in stack: Num.67
//In indirect call : Instructions in stack: Num.68
//In indirect call : Instructions in stack: Num.69
//In indirect call : Instructions in stack: Num.70
//In   call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
indirect call : Instructions in stack: Num.71
//In indirect call : Instructions in stack: Num.72
//In indirect call : Instructions in stack: Num.73
//In indirect call : Instructions in stack: Num.74
//In indirect call : Instructions in stack: Num.75
//In indirect call : Instructions in stack: Num.76
//In indirect call : Instructions in stack: Num.77
//In indirect call : Instructions in stack: Num.78
//In indirect call : Instructions in stack: Num.79
//In indirect call : Instructions in stack: Num.80
//In indirect call : Instructions in stack: Num.81
//In indirect call : Instructions in stack: Num.82
//In indirect call : Instructions in stack: Num.83
//In indirect call : Instructions in stack: Num.84
//In indirect call : Instructions in stack: Num.85
//In indirect call : Instructions in stack: Num.86
//In indirect call : Instructions in stack: Num.87
//In indirect call : Instructions in stack: Num.88
//In indirect call : Instructions in stack: Num.89
//In indirect call : Instructions in stack: Num.90
//In indirect call : Instructions in stack: Num.91
//In indirect call : Instructions in stack: Num.92
//In indirect call : Instructions in stack: Num.93
//In indirect call : Instructions in stack: Num.94
//In indirect call : Instructions in stack: Num.95
//In indirect call : Instructions in stack: Num.96
//In indirect call : Instructions in stack: Num.97
//In indirect call : Instructions in stack: Num.98
//In indirect call : Instructions in stack: Num.99
//In indirect call : Instructions in stack: Num.100
//In indirect call : Instructions in stack: Num.101
//In indirect call : Instructions in stack: Num.102
//In indirect call : Instructions in stack: Num.103
//In indirect call : Instructions in stack: Num.104
//In indirect call : Instructions in stack: Num.105
//In indirect call : Instructions in stack: Num.106
//In indirect call : Instructions in stack: Num.107
//In indirect call : Instructions in stack: Num.108
//In indirect call : Instructions in stack: Num.109
//In indirect call : Instructions in stack: Num.110
//In indirect call : Instructions in stack: Num.111
//In indirect call : Instructions in stack: Num.112
//In indirect call : Instructions in stack: Num.113
//In indirect call : Instructions in stack: Num.114
//In indirect call : Instructions in stack: Num.115
//In indirect call : Instructions in stack: Num.116
//In indirect call : Instructions in stack: Num.117
//In indirect call : Instructions in stack: Num.118
//In indirect call : Instructions in stack: Num.119
//In indirect call : Instructions in stack: Num.120
//In indirect call : Instructions in stack: Num.121
//In indirect call : Instructions in stack: Num.122
//In indirect call : Instructions in stack: Num.123
//In indirect call : Instructions in stack: Num.124
//In indirect call : Instructions in stack: Num.125
//In indirect call : Instructions in stack: Num.126
//In indirect call : Instructions in stack: Num.127
//In indirect call : Instructions in stack: Num.128
//In indirect call : Instructions in stack: Num.129
//In indirect call : Instructions in stack: Num.130
//In indirect call : Instructions in stack: Num.131
//In indirect call : Instructions in stack: Num.132
//In indirect call : Instructions in stack: Num.133
//In indirect call : Instructions in stack: Num.134
//In indirect call : Instructions in stack: Num.135
//In indirect call : Instructions in stack: Num.136
//In indirect call : Instructions in stack: Num.137
//In indirect call : Instructions in stack: Num.138
//In indirect call : Instructions in stack: Num.139
//In indirect call : Instructions in stack: Num.140
//In indirect call : Instructions in stack: Num.141
//In indirect call : Instructions in stack: Num.142
//In indirect call : Instructions in stack: Num.143
//In indirect call : Instructions in stack: Num.144
//In indirect call : Instructions in stack: Num.145
//In indirect call : Instructions in stack: Num.146
//In indirect call : Instructions in stack: Num.147
//In indirect call : Instructions in stack: Num.148
//In indirect call : Instructions in stack: Num.149
//In indirect call : I  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
KLEE: WARNING ONCE: calling __user_main with extra arguments.
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
nstructions in stack: Num.150
//In indirect call : Instructions in stack: Num.151
//In indirect call : Instructions in stack: Num.152
//In indirect call : Instructions in stack: Num.153
//In indirect call : Instructions in stack: Num.154
//In indirect call : Instructions in stack: Num.155
//In indirect call : Instructions in stack: Num.156
//In indirect call : Instructions in stack: Num.157
//In indirect call : Instructions in stack: Num.158
//In indirect call : Instructions in stack: Num.159
//In indirect call : Instructions in stack: Num.160
//In indirect call : Instructions in stack: Num.161
//In indirect call : Instructions in stack: Num.162
//In indirect call : Instructions in stack: Num.163
//In indirect call : Instructions in stack: Num.164
//In indirect call : Instructions in stack: Num.165
//In indirect call : Instructions in stack: Num.166
//In indirect call : Instructions in stack: Num.167
//In indirect call : Instructions in stack: Num.168
//In indirect call : Instructions in stack: Num.169
//In indirect call : Instructions in stack: Num.170
//In indirect call : Instructions in stack: Num.171
//In indirect call : Instructions in stack: Num.172
//In indirect call : Instructions in stack: Num.173
//In indirect call : Instructions in stack: Num.174
//In indirect call : Instructions in stack: Num.175
//In indirect call : Instructions in stack: Num.176
//In indirect call : Instructions in stack: Num.177
//In indirect call : Instructions in stack: Num.178
//In indirect call : Instructions in stack: Num.179
//In indirect call : Instructions in stack: Num.180
//In indirect call : Instructions in stack: Num.181
//In indirect call : Instructions in stack: Num.182
//In indirect call : Instructions in stack: Num.183
//In indirect call : Instructions in stack: Num.184
//In indirect call : Instructions in stack: Num.185
//In indirect call : Instructions in stack: Num.186
//In indirect call : Instructions in stack: Num.187
//In indirect call : Instructions in stack: Num.188
//In indirect call : Instructions in stack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructi  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %res = alloca i32, align 4
  %temp = alloca [16 x i8], align 16
  %buf = alloca i8*, align 8
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  store i32 0, i32* %retval, align 4
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !996, metadata !DIExpression()), !dbg !997
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !998, metadata !DIExpression()), !dbg !999
  %call = call noalias i8* @malloc(i64 8) #10, !dbg !664
  %0 = bitcast i8* %call to %struct.Type1*, !dbg !665
  store %struct.Type1* %0, %struct.Type1** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 0), align 8, !dbg !666
  %call1 = call noalias i8* @malloc(i64 16) #10, !dbg !667
  %1 = bitcast i8* %call1 to %struct.Type2*, !dbg !668
  store %struct.Type2* %1, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !669
  call void @llvm.dbg.declare(metadata i32* %res, metadata !1006, metadata !DIExpression()), !dbg !1007
  call void @llvm.dbg.declare(metadata [16 x i8]* %temp, metadata !1008, metadata !DIExpression()), !dbg !1010
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %temp, i64 0, i64 0, !dbg !675
  call void @klee_make_symbolic(i8* %arraydecay, i64 16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.6, i64 0, i64 0)), !dbg !676
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !1013, metadata !DIExpression()), !dbg !1014
  %arraydecay2 = getelementptr inbounds [16 x i8], [16 x i8]* %temp, i64 0, i64 0, !dbg !679
  store i8* %arraydecay2, i8** %buf, align 8, !dbg !678
  %2 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !680
  %status = getelementptr inbounds %struct.Type2, %struct.Type2* %2, i32 0, i32 0, !dbg !681
  %3 = bitcast i32* %status to i8*, !dbg !682
  %4 = load i8*, i8** %buf, align 8, !dbg !683
  %5 = call i8* @memcpy(i8* %3, i8* %4, i64 16), !dbg !682
  store i32 (i32)* bitcast (i32 (i32*)* @goodFunc to i32 (i32)*), i32 (i32)** @handler, align 8, !dbg !684
  %6 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !685
  %status3 = getelementptr inbounds %struct.Type2, %struct.Type2* %6, i32 0, i32 0, !dbg !687
  %7 = load i32, i32* %status3, align 8, !dbg !687
  %tobool = icmp ne i32 %7, 0, !dbg !688
  br i1 %tobool, label %if.then, label %if.else, !dbg !689
  %call4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0)), !dbg !690
  %8 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !692
  %ptr = getelementptr inbounds %struct.Type2, %struct.Type2* %8, i32 0, i32 1, !dbg !693
  %9 = load i32*, i32** %ptr, align 8, !dbg !693
  %10 = load i32, i32* %9, align 4, !dbg !694
  store i32 %10, i32* %res, align 4, !dbg !695
  br label %if.end, !dbg !696
  %call5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)), !dbg !697
  %11 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !699
  %ptr6 = getelementptr inbounds %struct.Type2, %struct.Type2* %11, i32 0, i32 1, !dbg !700
  %12 = load i32*, i32** %ptr6, align 8, !dbg !700
  store i32 4660, i32* %12, align 4, !dbg !701
  call void @llvm.dbg.declare(metadata i32* %a, metadata !1038, metadata !DIExpression()), !dbg !1039
  store i32 100, i32* %a, align 4, !dbg !703
  call void @llvm.dbg.declare(metadata i32* %b, metadata !1040, metadata !DIExpression()), !dbg !1041
  %13 = load i32, i32* %a, align 4, !dbg !706
  %add = add nsw i32 %13, 100, !dbg !707
  store i32 %add, i32* %b, align 4, !dbg !705
  %14 = load i32, i32* %b, align 4, !dbg !708
  %add7 = add nsw i32 %14, 100, !dbg !709
  %conv = sext i32 %add7 to i64, !dbg !708
  %15 = inttoptr i64 %conv to i32 (i32)*, !dbg !708
  store i32 (i32)* %15, i32 (i32)** @handler, align 8, !dbg !710
  br label %if.end
  %16 = load i32 (i32)*, i32 (i32)** @handler, align 8, !dbg !711
  %17 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !712
  %ptr8 = getelementptr inbounds %struct.Type2, %struct.Type2* %17, i32 0, i32 1, !dbg !713
  %18 = load i32*, i32** %ptr8, align 8, !dbg !713
  %19 = ptrtoint i32* %18 to i32, !dbg !714
  %call9 = call i32 %16(i32 %19), !dbg !711
  %20 = load i32, i32* %res, align 4, !dbg !715
  ret i32 %20, !dbg !716
KLEE: WARNING ONCE: Alignment of memory from call "malloc" is not modelled. Using alignment of 8.
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
ons in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
ki->getSourceLocation = test.c:15 0
ki->info->line = 15
ki->getSourceLocation = test.c:15 0
ki->info->line = 15
ki->getSourceLocation = test.c:15 0
ki->info->line = 15
ki->getSourceLocation = test.c:15 0
ki->info->line = 15
ki->getSourceLocation = test.c:15 0
ki->info->line = 15
ki->getSourceLocation = test.c:15 0
ki->info->line = 15
ki->getSourceLocation = test.c:15 0
ki->info->line = 15
ki->getSourceLocation = test.c:15 0
ki->info->line = 15
ki->getSourceLocation = test.c:15 0
ki->info->line = 15
ki->getSourceLocation = test.c:15 0
ki->info->line = 15
ki->getSourceLocation = test.c:15 14
ki->info->line = 15
ki->getSourceLocation = test.c:15 0
ki->info->line = 15
ki->getSourceLocation = test.c:15 26
ki->info->line = 15
ki->getSourceLocation = test.c:16 32
ki->info->line = 16
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructi  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
ons in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in s  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %res = alloca i32, align 4
  %temp = alloca [16 x i8], align 16
  %buf = alloca i8*, align 8
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  store i32 0, i32* %retval, align 4
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !996, metadata !DIExpression()), !dbg !997
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !998, metadata !DIExpression()), !dbg !999
  %call = call noalias i8* @malloc(i64 8) #10, !dbg !664
  %0 = bitcast i8* %call to %struct.Type1*, !dbg !665
  store %struct.Type1* %0, %struct.Type1** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 0), align 8, !dbg !666
  %call1 = call noalias i8* @malloc(i64 16) #10, !dbg !667
  %1 = bitcast i8* %call1 to %struct.Type2*, !dbg !668
  store %struct.Type2* %1, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !669
  call void @llvm.dbg.declare(metadata i32* %res, metadata !1006, metadata !DIExpression()), !dbg !1007
  call void @llvm.dbg.declare(metadata [16 x i8]* %temp, metadata !1008, metadata !DIExpression()), !dbg !1010
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %temp, i64 0, i64 0, !dbg !675
  call void @klee_make_symbolic(i8* %arraydecay, i64 16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.6, i64 0, i64 0)), !dbg !676
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !1013, metadata !DIExpression()), !dbg !1014
  %arraydecay2 = getelementptr inbounds [16 x i8], [16 x i8]* %temp, i64 0, i64 0, !dbg !679
  store i8* %arraydecay2, i8** %buf, align 8, !dbg !678
  %2 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !680
  %status = getelementptr inbounds %struct.Type2, %struct.Type2* %2, i32 0, i32 0, !dbg !681
  %3 = bitcast i32* %status to i8*, !dbg !682
  %4 = load i8*, i8** %buf, align 8, !dbg !683
  %5 = call i8* @memcpy(i8* %3, i8* %4, i64 16), !dbg !682
  store i32 (i32)* bitcast (i32 (i32*)* @goodFunc to i32 (i32)*), i32 (i32)** @handler, align 8, !dbg !684
  %6 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !685
  %status3 = getelementptr inbounds %struct.Type2, %struct.Type2* %6, i32 0, i32 0, !dbg !687
  %7 = load i32, i32* %status3, align 8, !dbg !687
  %tobool = icmp ne i32 %7, 0, !dbg !688
  br i1 %tobool, label %if.then, label %if.else, !dbg !689
  %call4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0)), !dbg !690
  %8 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !692
  %ptr = getelementptr inbounds %struct.Type2, %struct.Type2* %8, i32 0, i32 1, !dbg !693
  %9 = load i32*, i32** %ptr, align 8, !dbg !693
  %10 = load i32, i32* %9, align 4, !dbg !694
  store i32 %10, i32* %res, align 4, !dbg !695
  br label %if.end, !dbg !696
  %call5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)), !dbg !697
  %11 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !699
  %ptr6 = getelementptr inbounds %struct.Type2, %struct.Type2* %11, i32 0, i32 1, !dbg !700
  %12 = load i32*, i32** %ptr6, align 8, !dbg !700
  store i32 4660, i32* %12, align 4, !dbg !701
  call void @llvm.dbg.declare(metadata i32* %a, metadata !1038, metadata !DIExpression()), !dbg !1039
  store i32 100, i32* %a, align 4, !dbg !703
  call void @llvm.dbg.declare(metadata i32* %b, metadata !1040, metadata !DIExpression()), !dbg !1041
  %13 = load i32, i32* %a, align 4, !dbg !706
  %add = add nsw i32 %13, 100, !dbg !707
  store i32 %add, i32* %b, align 4, !dbg !705
  %14 = load i32, i32* %b, align 4, !dbg !708
  %add7 = add nsw i32 %14, 100, !dbg !709
  %conv = sext i32 %add7 to i64, !dbg !708
  %15 = inttoptr i64 %conv to i32 (i32)*, !dbg !708
  store i32 (i32)* %15, i32 (i32)** @handler, align 8, !dbg !710
  br label %if.end
  %16 = load i32 (i32)*, i32 (i32)** @handler, align 8, !dbg !711
  %17 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !712
  %ptr8 = getelementptr inbounds %struct.Type2, %struct.Type2* %17, i32 0, i32 1, !dbg !713
  %18 = load i32*, i32** %ptr8, align 8, !dbg !713
  %19 = ptrtoint i32* %18 to i32, !dbg !714
  %call9 = call i32 %16(i32 %19), !dbg !711
  %20 = load i32, i32* %res, align 4, !dbg !715
  ret i32 %20, !dbg !716
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
tack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
ki->getSourceLocation = test.c:16 17
ki->info->line = 16
ki->getSourceLocation = test.c:16 15
ki->info->line = 16
ki->getSourceLocation = test.c:17 32
ki->info->line = 17
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions i  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %res = alloca i32, align 4
  %temp = alloca [16 x i8], align 16
  %buf = alloca i8*, align 8
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  store i32 0, i32* %retval, align 4
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !996, metadata !DIExpression()), !dbg !997
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !998, metadata !DIExpression()), !dbg !999
  %call = call noalias i8* @malloc(i64 8) #10, !dbg !664
  %0 = bitcast i8* %call to %struct.Type1*, !dbg !665
  store %struct.Type1* %0, %struct.Type1** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 0), align 8, !dbg !666
  %call1 = call noalias i8* @malloc(i64 16) #10, !dbg !667
  %1 = bitcast i8* %call1 to %struct.Type2*, !dbg !668
  store %struct.Type2* %1, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !669
  call void @llvm.dbg.declare(metadata i32* %res, metadata !1006, metadata !DIExpression()), !dbg !1007
  call void @llvm.dbg.declare(metadata [16 x i8]* %temp, metadata !1008, metadata !DIExpression()), !dbg !1010
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %temp, i64 0, i64 0, !dbg !675
  call void @klee_make_symbolic(i8* %arraydecay, i64 16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.6, i64 0, i64 0)), !dbg !676
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !1013, metadata !DIExpression()), !dbg !1014
  %arraydecay2 = getelementptr inbounds [16 x i8], [16 x i8]* %temp, i64 0, i64 0, !dbg !679
  store i8* %arraydecay2, i8** %buf, align 8, !dbg !678
  %2 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !680
  %status = getelementptr inbounds %struct.Type2, %struct.Type2* %2, i32 0, i32 0, !dbg !681
  %3 = bitcast i32* %status to i8*, !dbg !682
  %4 = load i8*, i8** %buf, align 8, !dbg !683
  %5 = call i8* @memcpy(i8* %3, i8* %4, i64 16), !dbg !682
  store i32 (i32)* bitcast (i32 (i32*)* @goodFunc to i32 (i32)*), i32 (i32)** @handler, align 8, !dbg !684
  %6 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !685
  %status3 = getelementptr inbounds %struct.Type2, %struct.Type2* %6, i32 0, i32 0, !dbg !687
  %7 = load i32, i32* %status3, align 8, !dbg !687
  %tobool = icmp ne i32 %7, 0, !dbg !688
  br i1 %tobool, label %if.then, label %if.else, !dbg !689
  %call4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0)), !dbg !690
  %8 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !692
  %ptr = getelementptr inbounds %struct.Type2, %struct.Type2* %8, i32 0, i32 1, !dbg !693
  %9 = load i32*, i32** %ptr, align 8, !dbg !693
  %10 = load i32, i32* %9, align 4, !dbg !694
  store i32 %10, i32* %res, align 4, !dbg !695
  br label %if.end, !dbg !696
  %call5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)), !dbg !697
  %11 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !699
  %ptr6 = getelementptr inbounds %struct.Type2, %struct.Type2* %11, i32 0, i32 1, !dbg !700
  %12 = load i32*, i32** %ptr6, align 8, !dbg !700
  store i32 4660, i32* %12, align 4, !dbg !701
  call void @llvm.dbg.declare(metadata i32* %a, metadata !1038, metadata !DIExpression()), !dbg !1039
  store i32 100, i32* %a, align 4, !dbg !703
  call void @llvm.dbg.declare(metadata i32* %b, metadata !1040, metadata !DIExpression()), !dbg !1041
  %13 = load i32, i32* %a, align 4, !dbg !706
  %add = add nsw i32 %13, 100, !dbg !707
  store i32 %add, i32* %b, align 4, !dbg !705
  %14 = load i32, i32* %b, align 4, !dbg !708
  %add7 = add nsw i32 %14, 100, !dbg !709
  %conv = sext i32 %add7 to i64, !dbg !708
  %15 = inttoptr i64 %conv to i32 (i32)*, !dbg !708
  store i32 (i32)* %15, i32 (i32)** @handler, align 8, !dbg !710
  br label %if.end
  %16 = load i32 (i32)*, i32 (i32)** @handler, align 8, !dbg !711
  %17 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !712
  %ptr8 = getelementptr inbounds %struct.Type2, %struct.Type2* %17, i32 0, i32 1, !dbg !713
  %18 = load i32*, i32** %ptr8, align 8, !dbg !713
  %19 = ptrtoint i32* %18 to i32, !dbg !714
  %call9 = call i32 %16(i32 %19), !dbg !711
  %20 = load i32, i32* %res, align 4, !dbg !715
  ret i32 %20, !dbg !716
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
n stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
ki->getSourceLocation = test.c:17 17
ki->info->line = 17
ki->getSourceLocation = test.c:17 15
ki->info->line = 17
ki->getSourceLocation = test.c:18 9
ki->info->line = 18
ki->getSourceLocation = test.c:19 10
ki->info->line = 19
ki->getSourceLocation = test.c:20 24
ki->info->line = 20
ki->getSourceLocation = test.c:20 5
ki->info->line = 20
//Instructions in stack: Num.0
//Instructions in stack:   unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
Num.1
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instruc  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %res = alloca i32, align 4
  %temp = alloca [16 x i8], align 16
  %buf = alloca i8*, align 8
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  store i32 0, i32* %retval, align 4
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !996, metadata !DIExpression()), !dbg !997
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !998, metadata !DIExpression()), !dbg !999
  %call = call noalias i8* @malloc(i64 8) #10, !dbg !664
  %0 = bitcast i8* %call to %struct.Type1*, !dbg !665
  store %struct.Type1* %0, %struct.Type1** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 0), align 8, !dbg !666
  %call1 = call noalias i8* @malloc(i64 16) #10, !dbg !667
  %1 = bitcast i8* %call1 to %struct.Type2*, !dbg !668
  store %struct.Type2* %1, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !669
  call void @llvm.dbg.declare(metadata i32* %res, metadata !1006, metadata !DIExpression()), !dbg !1007
  call void @llvm.dbg.declare(metadata [16 x i8]* %temp, metadata !1008, metadata !DIExpression()), !dbg !1010
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %temp, i64 0, i64 0, !dbg !675
  call void @klee_make_symbolic(i8* %arraydecay, i64 16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.6, i64 0, i64 0)), !dbg !676
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !1013, metadata !DIExpression()), !dbg !1014
  %arraydecay2 = getelementptr inbounds [16 x i8], [16 x i8]* %temp, i64 0, i64 0, !dbg !679
  store i8* %arraydecay2, i8** %buf, align 8, !dbg !678
  %2 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !680
  %status = getelementptr inbounds %struct.Type2, %struct.Type2* %2, i32 0, i32 0, !dbg !681
  %3 = bitcast i32* %status to i8*, !dbg !682
  %4 = load i8*, i8** %buf, align 8, !dbg !683
  %5 = call i8* @memcpy(i8* %3, i8* %4, i64 16), !dbg !682
  store i32 (i32)* bitcast (i32 (i32*)* @goodFunc to i32 (i32)*), i32 (i32)** @handler, align 8, !dbg !684
  %6 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !685
  %status3 = getelementptr inbounds %struct.Type2, %struct.Type2* %6, i32 0, i32 0, !dbg !687
  %7 = load i32, i32* %status3, align 8, !dbg !687
  %tobool = icmp ne i32 %7, 0, !dbg !688
  br i1 %tobool, label %if.then, label %if.else, !dbg !689
  %call4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0)), !dbg !690
  %8 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !692
  %ptr = getelementptr inbounds %struct.Type2, %struct.Type2* %8, i32 0, i32 1, !dbg !693
  %9 = load i32*, i32** %ptr, align 8, !dbg !693
  %10 = load i32, i32* %9, align 4, !dbg !694
  store i32 %10, i32* %res, align 4, !dbg !695
  br label %if.end, !dbg !696
  %call5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)), !dbg !697
  %11 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !699
  %ptr6 = getelementptr inbounds %struct.Type2, %struct.Type2* %11, i32 0, i32 1, !dbg !700
  %12 = load i32*, i32** %ptr6, align 8, !dbg !700
  store i32 4660, i32* %12, align 4, !dbg !701
  call void @llvm.dbg.declare(metadata i32* %a, metadata !1038, metadata !DIExpression()), !dbg !1039
  store i32 100, i32* %a, align 4, !dbg !703
  call void @llvm.dbg.declare(metadata i32* %b, metadata !1040, metadata !DIExpression()), !dbg !1041
  %13 = load i32, i32* %a, align 4, !dbg !706
  %add = add nsw i32 %13, 100, !dbg !707
  store i32 %add, i32* %b, align 4, !dbg !705
  %14 = load i32, i32* %b, align 4, !dbg !708
  %add7 = add nsw i32 %14, 100, !dbg !709
  %conv = sext i32 %add7 to i64, !dbg !708
  %15 = inttoptr i64 %conv to i32 (i32)*, !dbg !708
  store i32 (i32)* %15, i32 (i32)** @handler, align 8, !dbg !710
  br label %if.end
  %16 = load i32 (i32)*, i32 (i32)** @handler, align 8, !dbg !711
  %17 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !712
tions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in st  %ptr8 = getelementptr inbounds %struct.Type2, %struct.Type2* %17, i32 0, i32 1, !dbg !713
  %18 = load i32*, i32** %ptr8, align 8, !dbg !713
  %19 = ptrtoint i32* %18 to i32, !dbg !714
  %call9 = call i32 %16(i32 %19), !dbg !711
  %20 = load i32, i32* %res, align 4, !dbg !715
  ret i32 %20, !dbg !716
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
ack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
ki->getSourceLocation = test.c:22 11
ki->info->line = 22
ki->getSourceLocation = test.c:22 17
ki->info->line = 22
ki->getSourceLocation = test.c:22 11
ki->info->line = 22
ki->getSourceLocation = test.c:23 19
ki->info->line = 23
ki->getSourceLocation = test.c:23 25
ki->info->line = 23
ki->getSourceLocation = test.c:23 5
ki->info->line = 23
ki->getSourceLocation = test.c:23 33
ki->info->line = 23
ki->getSourceLocation = test.c:23 5
ki->info->line = 23
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in st  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %res = alloca i32, align 4
  %temp = alloca [16 x i8], align 16
  %buf = alloca i8*, align 8
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  store i32 0, i32* %retval, align 4
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !996, metadata !DIExpression()), !dbg !997
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !998, metadata !DIExpression()), !dbg !999
  %call = call noalias i8* @malloc(i64 8) #10, !dbg !664
  %0 = bitcast i8* %call to %struct.Type1*, !dbg !665
  store %struct.Type1* %0, %struct.Type1** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 0), align 8, !dbg !666
  %call1 = call noalias i8* @malloc(i64 16) #10, !dbg !667
  %1 = bitcast i8* %call1 to %struct.Type2*, !dbg !668
  store %struct.Type2* %1, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !669
  call void @llvm.dbg.declare(metadata i32* %res, metadata !1006, metadata !DIExpression()), !dbg !1007
  call void @llvm.dbg.declare(metadata [16 x i8]* %temp, metadata !1008, metadata !DIExpression()), !dbg !1010
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %temp, i64 0, i64 0, !dbg !675
  call void @klee_make_symbolic(i8* %arraydecay, i64 16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.6, i64 0, i64 0)), !dbg !676
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !1013, metadata !DIExpression()), !dbg !1014
  %arraydecay2 = getelementptr inbounds [16 x i8], [16 x i8]* %temp, i64 0, i64 0, !dbg !679
  store i8* %arraydecay2, i8** %buf, align 8, !dbg !678
  %2 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !680
  %status = getelementptr inbounds %struct.Type2, %struct.Type2* %2, i32 0, i32 0, !dbg !681
  %3 = bitcast i32* %status to i8*, !dbg !682
  %4 = load i8*, i8** %buf, align 8, !dbg !683
  %5 = call i8* @memcpy(i8* %3, i8* %4, i64 16), !dbg !682
  store i32 (i32)* bitcast (i32 (i32*)* @goodFunc to i32 (i32)*), i32 (i32)** @handler, align 8, !dbg !684
  %6 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !685
  %status3 = getelementptr inbounds %struct.Type2, %struct.Type2* %6, i32 0, i32 0, !dbg !687
  %7 = load i32, i32* %status3, align 8, !dbg !687
  %tobool = icmp ne i32 %7, 0, !dbg !688
  br i1 %tobool, label %if.then, label %if.else, !dbg !689
  %call4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0)), !dbg !690
  %8 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !692
  %ptr = getelementptr inbounds %struct.Type2, %struct.Type2* %8, i32 0, i32 1, !dbg !693
  %9 = load i32*, i32** %ptr, align 8, !dbg !693
  %10 = load i32, i32* %9, align 4, !dbg !694
ack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instruct  store i32 %10, i32* %res, align 4, !dbg !695
  br label %if.end, !dbg !696
  %call5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)), !dbg !697
  %11 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !699
  %ptr6 = getelementptr inbounds %struct.Type2, %struct.Type2* %11, i32 0, i32 1, !dbg !700
  %12 = load i32*, i32** %ptr6, align 8, !dbg !700
  store i32 4660, i32* %12, align 4, !dbg !701
  call void @llvm.dbg.declare(metadata i32* %a, metadata !1038, metadata !DIExpression()), !dbg !1039
  store i32 100, i32* %a, align 4, !dbg !703
  call void @llvm.dbg.declare(metadata i32* %b, metadata !1040, metadata !DIExpression()), !dbg !1041
  %13 = load i32, i32* %a, align 4, !dbg !706
  %add = add nsw i32 %13, 100, !dbg !707
  store i32 %add, i32* %b, align 4, !dbg !705
  %14 = load i32, i32* %b, align 4, !dbg !708
  %add7 = add nsw i32 %14, 100, !dbg !709
  %conv = sext i32 %add7 to i64, !dbg !708
  %15 = inttoptr i64 %conv to i32 (i32)*, !dbg !708
  store i32 (i32)* %15, i32 (i32)** @handler, align 8, !dbg !710
  br label %if.end
  %16 = load i32 (i32)*, i32 (i32)** @handler, align 8, !dbg !711
  %17 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !712
  %ptr8 = getelementptr inbounds %struct.Type2, %struct.Type2* %17, i32 0, i32 1, !dbg !713
  %18 = load i32*, i32** %ptr8, align 8, !dbg !713
  %19 = ptrtoint i32* %18 to i32, !dbg !714
  %call9 = call i32 %16(i32 %19), !dbg !711
  %20 = load i32, i32* %res, align 4, !dbg !715
  ret i32 %20, !dbg !716
  %s1.addr = alloca i8*, align 8
  %s2.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %r1 = alloca i8*, align 8
  %r2 = alloca i8*, align 8
  store i8* %s1, i8** %s1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !2130, metadata !DIExpression()), !dbg !2131
  store i8* %s2, i8** %s2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !2132, metadata !DIExpression()), !dbg !2133
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !2134, metadata !DIExpression()), !dbg !2135
  call void @llvm.dbg.declare(metadata i8** %r1, metadata !2136, metadata !DIExpression()), !dbg !2137
  %0 = load i8*, i8** %s1.addr, align 8, !dbg !672
  store i8* %0, i8** %r1, align 8, !dbg !671
  call void @llvm.dbg.declare(metadata i8** %r2, metadata !2139, metadata !DIExpression()), !dbg !2140
  %1 = load i8*, i8** %s2.addr, align 8, !dbg !675
  store i8* %1, i8** %r2, align 8, !dbg !674
  br label %while.cond, !dbg !676
  %2 = load i64, i64* %n.addr, align 8, !dbg !677
  %tobool = icmp ne i64 %2, 0, !dbg !676
  br i1 %tobool, label %while.body, label %while.end, !dbg !676
  %3 = load i8*, i8** %r2, align 8, !dbg !678
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !678
  store i8* %incdec.ptr, i8** %r2, align 8, !dbg !678
  %4 = load i8, i8* %3, align 1, !dbg !680
  %5 = load i8*, i8** %r1, align 8, !dbg !681
  %incdec.ptr1 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !681
  store i8* %incdec.ptr1, i8** %r1, align 8, !dbg !681
  store i8 %4, i8* %5, align 1, !dbg !682
  %6 = load i64, i64* %n.addr, align 8, !dbg !683
  %dec = add i64 %6, -1, !dbg !683
  store i64 %dec, i64* %n.addr, align 8, !dbg !683
  br label %while.cond, !dbg !676, !llvm.loop !684
  %7 = load i8*, i8** %s1.addr, align 8, !dbg !686
  ret i8* %7, !dbg !687
ions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
ki->getSourceLocation = test.c:24 13
ki->info->line = 24
ki->getSourceLocation = test.c:25 13
ki->info->line = 25
ki->getSourceLocation = test.c:25 19
ki->info->line = 25
ki->getSourceLocation = test.c:25 19
ki->info->line = 25
ki->getSourceLocation = test.c:25 8
ki->info->line = 25
ki->getSourceLocation = test.c:25 8
ki->info->line = 25
KLEE: WARNING ONCE: calling external: printf(114205856) at test.c:28 21
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
ki->getSourceLocation = test.c:27 9
ki->info->line = 27
crashing path is taken. 
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//In  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %res = alloca i32, align 4
  %temp = alloca [16 x i8], align 16
  %buf = alloca i8*, align 8
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  store i32 0, i32* %retval, align 4
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !996, metadata !DIExpression()), !dbg !997
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !998, metadata !DIExpression()), !dbg !999
  %call = call noalias i8* @malloc(i64 8) #10, !dbg !664
  %0 = bitcast i8* %call to %struct.Type1*, !dbg !665
  store %struct.Type1* %0, %struct.Type1** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 0), align 8, !dbg !666
  %call1 = call noalias i8* @malloc(i64 16) #10, !dbg !667
  %1 = bitcast i8* %call1 to %struct.Type2*, !dbg !668
  store %struct.Type2* %1, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !669
  call void @llvm.dbg.declare(metadata i32* %res, metadata !1006, metadata !DIExpression()), !dbg !1007
  call void @llvm.dbg.declare(metadata [16 x i8]* %temp, metadata !1008, metadata !DIExpression()), !dbg !1010
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %temp, i64 0, i64 0, !dbg !675
  call void @klee_make_symbolic(i8* %arraydecay, i64 16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.6, i64 0, i64 0)), !dbg !676
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !1013, metadata !DIExpression()), !dbg !1014
  %arraydecay2 = getelementptr inbounds [16 x i8], [16 x i8]* %temp, i64 0, i64 0, !dbg !679
  store i8* %arraydecay2, i8** %buf, align 8, !dbg !678
  %2 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !680
  %status = getelementptr inbounds %struct.Type2, %struct.Type2* %2, i32 0, i32 0, !dbg !681
  %3 = bitcast i32* %status to i8*, !dbg !682
  %4 = load i8*, i8** %buf, align 8, !dbg !683
  %5 = call i8* @memcpy(i8* %3, i8* %4, i64 16), !dbg !682
  store i32 (i32)* bitcast (i32 (i32*)* @goodFunc to i32 (i32)*), i32 (i32)** @handler, align 8, !dbg !684
  %6 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !685
  %status3 = getelementptr inbounds %struct.Type2, %struct.Type2* %6, i32 0, i32 0, !dbg !687
  %7 = load i32, i32* %status3, align 8, !dbg !687
  %tobool = icmp ne i32 %7, 0, !dbg !688
  br i1 %tobool, label %if.then, label %if.else, !dbg !689
  %call4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0)), !dbg !690
  %8 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !692
  %ptr = getelementptr inbounds %struct.Type2, %struct.Type2* %8, i32 0, i32 1, !dbg !693
  %9 = load i32*, i32** %ptr, align 8, !dbg !693
  %10 = load i32, i32* %9, align 4, !dbg !694
  store i32 %10, i32* %res, align 4, !dbg !695
  br label %if.end, !dbg !696
  %call5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)), !dbg !697
  %11 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !699
  %ptr6 = getelementptr inbounds %struct.Type2, %struct.Type2* %11, i32 0, i32 1, !dbg !700
  %12 = load i32*, i32** %ptr6, align 8, !dbg !700
  store i32 4660, i32* %12, align 4, !dbg !701
  call void @llvm.dbg.declare(metadata i32* %a, metadata !1038, metadata !DIExpression()), !dbg !1039
  store i32 100, i32* %a, align 4, !dbg !703
  call void @llvm.dbg.declare(metadata i32* %b, metadata !1040, metadata !DIExpression()), !dbg !1041
  %13 = load i32, i32* %a, align 4, !dbg !706
  %add = add nsw i32 %13, 100, !dbg !707
  store i32 %add, i32* %b, align 4, !dbg !705
  %14 = load i32, i32* %b, align 4, !dbg !708
  %add7 = add nsw i32 %14, 100, !dbg !709
  %conv = sext i32 %add7 to i64, !dbg !708
  %15 = inttoptr i64 %conv to i32 (i32)*, !dbg !708
structions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructi  store i32 (i32)* %15, i32 (i32)** @handler, align 8, !dbg !710
  br label %if.end
  %16 = load i32 (i32)*, i32 (i32)** @handler, align 8, !dbg !711
  %17 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !712
  %ptr8 = getelementptr inbounds %struct.Type2, %struct.Type2* %17, i32 0, i32 1, !dbg !713
  %18 = load i32*, i32** %ptr8, align 8, !dbg !713
  %19 = ptrtoint i32* %18 to i32, !dbg !714
  %call9 = call i32 %16(i32 %19), !dbg !711
  %20 = load i32, i32* %res, align 4, !dbg !715
  ret i32 %20, !dbg !716
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
ons in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
ki->getSourceLocation = test.c:28 21
ki->info->line = 28
ki->getSourceLocation = test.c:32 9
ki->info->line = 32
..........exploiting path is taken. 
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stac  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %res = alloca i32, align 4
  %temp = alloca [16 x i8], align 16
  %buf = alloca i8*, align 8
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  store i32 0, i32* %retval, align 4
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !996, metadata !DIExpression()), !dbg !997
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !998, metadata !DIExpression()), !dbg !999
  %call = call noalias i8* @malloc(i64 8) #10, !dbg !664
  %0 = bitcast i8* %call to %struct.Type1*, !dbg !665
  store %struct.Type1* %0, %struct.Type1** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 0), align 8, !dbg !666
  %call1 = call noalias i8* @malloc(i64 16) #10, !dbg !667
  %1 = bitcast i8* %call1 to %struct.Type2*, !dbg !668
  store %struct.Type2* %1, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !669
  call void @llvm.dbg.declare(metadata i32* %res, metadata !1006, metadata !DIExpression()), !dbg !1007
  call void @llvm.dbg.declare(metadata [16 x i8]* %temp, metadata !1008, metadata !DIExpression()), !dbg !1010
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %temp, i64 0, i64 0, !dbg !675
  call void @klee_make_symbolic(i8* %arraydecay, i64 16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.6, i64 0, i64 0)), !dbg !676
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !1013, metadata !DIExpression()), !dbg !1014
  %arraydecay2 = getelementptr inbounds [16 x i8], [16 x i8]* %temp, i64 0, i64 0, !dbg !679
  store i8* %arraydecay2, i8** %buf, align 8, !dbg !678
  %2 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !680
  %status = getelementptr inbounds %struct.Type2, %struct.Type2* %2, i32 0, i32 0, !dbg !681
  %3 = bitcast i32* %status to i8*, !dbg !682
  %4 = load i8*, i8** %buf, align 8, !dbg !683
  %5 = call i8* @memcpy(i8* %3, i8* %4, i64 16), !dbg !682
  store i32 (i32)* bitcast (i32 (i32*)* @goodFunc to i32 (i32)*), i32 (i32)** @handler, align 8, !dbg !684
  %6 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !685
  %status3 = getelementptr inbounds %struct.Type2, %struct.Type2* %6, i32 0, i32 0, !dbg !687
  %7 = load i32, i32* %status3, align 8, !dbg !687
  %tobool = icmp ne i32 %7, 0, !dbg !688
  br i1 %tobool, label %if.then, label %if.else, !dbg !689
  %call4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0)), !dbg !690
  %8 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !692
  %ptr = getelementptr inbounds %struct.Type2, %struct.Type2* %8, i32 0, i32 1, !dbg !693
  %9 = load i32*, i32** %ptr, align 8, !dbg !693
  %10 = load i32, i32* %9, align 4, !dbg !694
  store i32 %10, i32* %res, align 4, !dbg !695
  br label %if.end, !dbg !696
  %call5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)), !dbg !697
  %11 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !699
  %ptr6 = getelementptr inbounds %struct.Type2, %struct.Type2* %11, i32 0, i32 1, !dbg !700
k: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in  %12 = load i32*, i32** %ptr6, align 8, !dbg !700
  store i32 4660, i32* %12, align 4, !dbg !701
  call void @llvm.dbg.declare(metadata i32* %a, metadata !1038, metadata !DIExpression()), !dbg !1039
  store i32 100, i32* %a, align 4, !dbg !703
  call void @llvm.dbg.declare(metadata i32* %b, metadata !1040, metadata !DIExpression()), !dbg !1041
  %13 = load i32, i32* %a, align 4, !dbg !706
  %add = add nsw i32 %13, 100, !dbg !707
  store i32 %add, i32* %b, align 4, !dbg !705
  %14 = load i32, i32* %b, align 4, !dbg !708
  %add7 = add nsw i32 %14, 100, !dbg !709
  %conv = sext i32 %add7 to i64, !dbg !708
  %15 = inttoptr i64 %conv to i32 (i32)*, !dbg !708
  store i32 (i32)* %15, i32 (i32)** @handler, align 8, !dbg !710
  br label %if.end
  %16 = load i32 (i32)*, i32 (i32)** @handler, align 8, !dbg !711
  %17 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !712
  %ptr8 = getelementptr inbounds %struct.Type2, %struct.Type2* %17, i32 0, i32 1, !dbg !713
  %18 = load i32*, i32** %ptr8, align 8, !dbg !713
  %19 = ptrtoint i32* %18 to i32, !dbg !714
  %call9 = call i32 %16(i32 %19), !dbg !711
  %20 = load i32, i32* %res, align 4, !dbg !715
  ret i32 %20, !dbg !716
(ReadLSB w64 8 temp)
111840608
111840144
111216384
111840128
111216384
111840336
107391488
111840352
103736320
111840368
92106240
111839936
0
111839968
111839880
111839984
111839880
111840000
111839880
111840016
87615632
111840064
0
111840080
0
111839984
111839880
111840000
111839880
111840016
87615632
111840272
87477920
111840256
87478008
111840240
87477920
111840224
87478096
111840192
87477920
111840208
87478008
111840304
0
111840320
114253824
111840096
110931976
(ReadLSB w64 8 temp)
110931976
  %call9 = call i32 %16(i32 %19), !dbg !711
  %16 = load i32 (i32)*, i32 (i32)** @handler, align 8, !dbg !711
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
 stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
ki->getSourceLocation = test.c:33 15
ki->info->line = 33
ki->getSourceLocation = test.c:28 27
ki->info->line = 28
ki->getSourceLocation = test.c:28 27
ki->info->line = 28
ki->getSourceLocation = test.c:33 21
ki->info->line = 33
ki->getSourceLocation = test.c:28 15
ki->info->line = 28
ReadExploitCapability.size() = 1
+++This is a symbolic Load instruction!
ki->getSourceLocation = test.c:28 13
ki->info->line = 28
+++This is a symbolic Store after Load instruction!
ki->getSourceLocation = test.c:29 5
ki->info->line = 29
ki->getSourceLocation = test.c:33 21
ki->info->line = 33
ki->getSourceLocation = test.c:39 5
ki->info->line = 39
ki->getSourceLocation = test.c:39 18
ki->info->line = 39
ki->getSourceLocation = test.c:39 24
ki->info->line = 39
ki->getSourceLocation = test.c:39 24
ki->info->line = 39
ki->getSourceLocation = test.c:33 25
ki->info->line = 33
WriteExploitCapability.size() = 1
+++This is a symbolic Store instruction!
name : __curlocale_var
name : __global_locale
name : __C_ctype_b
name : __C_ctype_tolower
name : __C_ctype_toupper
name : __libc_stack_end
name : __uclibc_progname
name : program_invocation_short_name
name : program_invocation_name
name : __environ
name : __app_fini
name : __rtld_fini
name : __progname
name : __progname_full
name : environ
name : _stdio_openlist
name : __stdout
name : __stdin
name : stderr
name : stdin
name : stdout
name : __exit_cleanup
name : __locale_mmap
name : handler
ki->getSourceLocation = test.c:39 13
ki->info->line = 39
ki->getSourceLocation = test.c:34 13
ki->info->line = 34
ki->getSourceLocation = test.c:34 13
ki->info->line = 34
ki->getSourceLocation = test.c:35 13
ki->info->line = 35
ki->getSourceLocation = test.c:39 5
ki->info->line = 39
------ InDirect function call executed!
Location of the instruction : test.c:40 12
// This the current instruction : 
  dest = 68, operand = 63
//We found the operand instruction in current stack!
  opnd_name = handler
Function call address is 110931976
//In indirect call : Instructions in stack: Num.0
//In indirect call : Instructions in stack: Num.1
//In indirect call : Instructions in stack: Num.0
//In indirect call : Instructions in stack: Num.1
//In indirect call : Instructions in stack: Num.2
//In indirect call : Instructions in stack: Num.3
//In indirect call : Instructions in stack: Num.4
//In indirect call : Instructions in stack: Num.5
//In indirect call : Instructions in stack: Num.6
//In indirect call : Instructions in stack: Num.7
//In indirect call : Instructions in stack: Num.8
//In indirect call : Instructions in stack: Num.9
//In indirect call : Instructions in stack: Num.10
//In indirect call : Instructions in stack: Num.11
//In indirect call : Instructions in stack: Num.12
//In indirect call : Instructions in stack: Num.13
//In indirect call : Instructions in stack: Num.14
//In indirect call : Instructions in stack: Num.15
//In indirect call : Instructions in stack: Num.16
//In indirect call : Instructions in stack: Num.17
//In indirect call : Instructions in stack: Num.18
//In indirect call : Instructions in stack: Num.19
//In indirect call : Instructions in stack: Num.20
//In indirect call : Instructions in stack: Num.21
//In indirect call : Instructions in stack: Num.22
//In indirect call : Instructions in stack: Num.23
//In indirect call : Instructions in stack: Num.24
//In indirect call : Instructions in stack: Num.25
//In indirect call :   %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
Instructions in stack: Num.26
//In indirect call : Instructions in stack: Num.27
//In indirect call : Instructions in stack: Num.28
//In indirect call : Instructions in stack: Num.29
//In indirect call : Instructions in stack: Num.30
//In indirect call : Instructions in stack: Num.31
//In indirect call : Instructions in stack: Num.32
//In indirect call : Instructions in stack: Num.33
//In indirect call : Instructions in stack: Num.34
//In indirect call : Instructions in stack: Num.35
//In indirect call : Instructions in stack: Num.36
//In indirect call : Instructions in stack: Num.37
//In indirect call : Instructions in stack: Num.38
//In indirect call : Instructions in stack: Num.39
//In indirect call : Instructions in stack: Num.40
//In indirect call : Instructions in stack: Num.41
//In indirect call : Instructions in stack: Num.42
//In indirect call : Instructions in stack: Num.43
//In indirect call : Instructions in stack: Num.44
//In indirect call : Instructions in stack: Num.45
//In indirect call : Instructions in stack: Num.46
//In indirect call : Instructions in stack: Num.47
//In indirect call : Instructions in stack: Num.48
//In indirect call : Instructions in stack: Num.49
//In indirect call : Instructions in stack: Num.50
//In indirect call : Instructions in stack: Num.51
//In indirect call : Instructions in stack: Num.52
//In indirect call : Instructions in stack: Num.53
//In indirect call : Instructions in stack: Num.54
//In indirect call : Instructions in stack: Num.55
//In indirect call : Instructions in stack: Num.56
//In indirect call : Instructions in stack: Num.57
//In indirect call : Instructions in stack: Num.58
//In indirect call : Instructions in stack: Num.59
//In indirect call : Instructions in stack: Num.60
//In indirect call : Instructions in stack: Num.61
//In indirect call : Instructions in stack: Num.62
//In indirect call : Instructions in stack: Num.63
//In indirect call : Instructions in stack: Num.64
//In indirect call : Instructions in stack: Num.65
//In indirect call : Instructions in stack: Num.66
//In indirect call : Instructions in stack: Num.67
//In indirect call : Instructions in stack: Num.68
//In indirect call : Instructions in stack: Num.69
//In indirect call : Instructions in stack: Num.70
//In indirect call : Instructions in stack: Num.71
//In indirect call : Instructions in stack: Num.72
//In indirect call : Instructions in stack: Num.73
//In indirect call : Instructions in stack: Num.74
//In indirect call : Instructions in stack: Num.75
//In indirect call : Instructions in stack: Num.76
//In indirect call : Instructions in stack: Num.77
//In indirect call : Instructions in stack: Num.78
//In indirect call : Instructions in stack: Num.79
//In indirect call : Instructions in stack: Num.80
//In indirect call : Instructions in stack: Num.81
//In indirect call : Instructions in stack: Num.82
//In indirect call : Instructions in stack: Num.83
//In indirect call : Instructions in stack: Num.84
//In indirect call : Instructions in stack: Num.85
//In indirect call : Instructions in stack: Num.86
//In indirect call : Instructions in stack: Num.87
//In indirect call : Instructions in stack: Num.88
//In indirect call : Instructions in stack: Num.89
//In indirect call : Instructions in stack: Num.90
//In indirect call : Instructions in stack: Num.91
//In indirect call : Instructions in stack: Num.92
//In indirect call : Instructions in stack: Num.93
//In indirect call : Instructions in stack: Num.94
//In indirect call : Instructions in stack: Num.95
//In indirect call : Instructions in stack: Num.96
//In indirect call : Instructions in stack: Num.97
//In indirect call : Instructions in stack: Num.98
//In indirect call : Instructions in stack: Num.99
//In indirect call : Instructions in stack: Num.100
//In indirect call : Instructions in stack: Num.101
//In indirect call : Instructions in stack: Num.102
//In indirect call : Instructions in stack: Num.103
//In indirect call : Instructions in stack: Num.104
//In indirect call : Instructions in stack: Num.105
//In indirect call : Instructio  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
ns in stack: Num.106
//In indirect call : Instructions in stack: Num.107
//In indirect call : Instructions in stack: Num.108
//In indirect call : Instructions in stack: Num.109
//In indirect call : Instructions in stack: Num.110
//In indirect call : Instructions in stack: Num.111
//In indirect call : Instructions in stack: Num.112
//In indirect call : Instructions in stack: Num.113
//In indirect call : Instructions in stack: Num.114
//In indirect call : Instructions in stack: Num.115
//In indirect call : Instructions in stack: Num.116
//In indirect call : Instructions in stack: Num.117
//In indirect call : Instructions in stack: Num.118
//In indirect call : Instructions in stack: Num.119
//In indirect call : Instructions in stack: Num.120
//In indirect call : Instructions in stack: Num.121
//In indirect call : Instructions in stack: Num.122
//In indirect call : Instructions in stack: Num.123
//In indirect call : Instructions in stack: Num.124
//In indirect call : Instructions in stack: Num.125
//In indirect call : Instructions in stack: Num.126
//In indirect call : Instructions in stack: Num.127
//In indirect call : Instructions in stack: Num.128
//In indirect call : Instructions in stack: Num.129
//In indirect call : Instructions in stack: Num.130
//In indirect call : Instructions in stack: Num.131
//In indirect call : Instructions in stack: Num.132
//In indirect call : Instructions in stack: Num.133
//In indirect call : Instructions in stack: Num.134
//In indirect call : Instructions in stack: Num.135
//In indirect call : Instructions in stack: Num.136
//In indirect call : Instructions in stack: Num.137
//In indirect call : Instructions in stack: Num.138
//In indirect call : Instructions in stack: Num.139
//In indirect call : Instructions in stack: Num.140
//In indirect call : Instructions in stack: Num.141
//In indirect call : Instructions in stack: Num.142
//In indirect call : Instructions in stack: Num.143
//In indirect call : Instructions in stack: Num.144
//In indirect call : Instructions in stack: Num.145
//In indirect call : Instructions in stack: Num.146
//In indirect call : Instructions in stack: Num.147
//In indirect call : Instructions in stack: Num.148
//In indirect call : Instructions in stack: Num.149
//In indirect call : Instructions in stack: Num.150
//In indirect call : Instructions in stack: Num.151
//In indirect call : Instructions in stack: Num.152
//In indirect call : Instructions in stack: Num.153
//In indirect call : Instructions in stack: Num.154
//In indirect call : Instructions in stack: Num.155
//In indirect call : Instructions in stack: Num.156
//In indirect call : Instructions in stack: Num.157
//In indirect call : Instructions in stack: Num.158
//In indirect call : Instructions in stack: Num.159
//In indirect call : Instructions in stack: Num.160
//In indirect call : Instructions in stack: Num.161
//In indirect call : Instructions in stack: Num.162
//In indirect call : Instructions in stack: Num.163
//In indirect call : Instructions in stack: Num.164
//In indirect call : Instructions in stack: Num.165
//In indirect call : Instructions in stack: Num.166
//In indirect call : Instructions in stack: Num.167
//In indirect call : Instructions in stack: Num.168
//In indirect call : Instructions in stack: Num.169
//In indirect call : Instructions in stack: Num.170
//In indirect call : Instructions in stack: Num.171
//In indirect call : Instructions in stack: Num.172
//In indirect call : Instructions in stack: Num.173
//In indirect call : Instructions in stack: Num.174
//In indirect call : Instructions in stack: Num.175
//In indirect call : Instructions in stack: Num.176
//In indirect call : Instructions in stack: Num.177
//In indirect call : Instructions in stack: Num.178
//In indirect call : Instructions in stack: Num.179
//In indirect call : Instructions in stack: Num.180
//In indirect call : Instructions in stack: Num.181
//In indirect call : Instructions in stack: Num.182
//In indirect call : Instructions in stack: Num.183
//In indirect call : Instructions in stack: Num.184
//In indirect call   %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %res = alloca i32, align 4
  %temp = alloca [16 x i8], align 16
  %buf = alloca i8*, align 8
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  store i32 0, i32* %retval, align 4
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !996, metadata !DIExpression()), !dbg !997
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !998, metadata !DIExpression()), !dbg !999
  %call = call noalias i8* @malloc(i64 8) #10, !dbg !664
  %0 = bitcast i8* %call to %struct.Type1*, !dbg !665
  store %struct.Type1* %0, %struct.Type1** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 0), align 8, !dbg !666
  %call1 = call noalias i8* @malloc(i64 16) #10, !dbg !667
  %1 = bitcast i8* %call1 to %struct.Type2*, !dbg !668
  store %struct.Type2* %1, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !669
  call void @llvm.dbg.declare(metadata i32* %res, metadata !1006, metadata !DIExpression()), !dbg !1007
  call void @llvm.dbg.declare(metadata [16 x i8]* %temp, metadata !1008, metadata !DIExpression()), !dbg !1010
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %temp, i64 0, i64 0, !dbg !675
  call void @klee_make_symbolic(i8* %arraydecay, i64 16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.6, i64 0, i64 0)), !dbg !676
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !1013, metadata !DIExpression()), !dbg !1014
  %arraydecay2 = getelementptr inbounds [16 x i8], [16 x i8]* %temp, i64 0, i64 0, !dbg !679
  store i8* %arraydecay2, i8** %buf, align 8, !dbg !678
  %2 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !680
  %status = getelementptr inbounds %struct.Type2, %struct.Type2* %2, i32 0, i32 0, !dbg !681
  %3 = bitcast i32* %status to i8*, !dbg !682
  %4 = load i8*, i8** %buf, align 8, !dbg !683
  %5 = call i8* @memcpy(i8* %3, i8* %4, i64 16), !dbg !682
  store i32 (i32)* bitcast (i32 (i32*)* @goodFunc to i32 (i32)*), i32 (i32)** @handler, align 8, !dbg !684
  %6 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !685
  %status3 = getelementptr inbounds %struct.Type2, %struct.Type2* %6, i32 0, i32 0, !dbg !687
  %7 = load i32, i32* %status3, align 8, !dbg !687
  %tobool = icmp ne i32 %7, 0, !dbg !688
  br i1 %tobool, label %if.then, label %if.else, !dbg !689
  %call4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0)), !dbg !690
  %8 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !692
  %ptr = getelementptr inbounds %struct.Type2, %struct.Type2* %8, i32 0, i32 1, !dbg !693
  %9 = load i32*, i32** %ptr, align 8, !dbg !693
  %10 = load i32, i32* %9, align 4, !dbg !694
  store i32 %10, i32* %res, align 4, !dbg !695
  br label %if.end, !dbg !696
  %call5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)), !dbg !697
  %11 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !699
  %ptr6 = getelementptr inbounds %struct.Type2, %struct.Type2* %11, i32 0, i32 1, !dbg !700
  %12 = load i32*, i32** %ptr6, align 8, !dbg !700
  store i32 4660, i32* %12, align 4, !dbg !701
  call void @llvm.dbg.declare(metadata i32* %a, metadata !1038, metadata !DIExpression()), !dbg !1039
  store i32 100, i32* %a, align 4, !dbg !703
  call void @llvm.dbg.declare(metadata i32* %b, metadata !1040, metadata !DIExpression()), !dbg !1041
  %13 = load i32, i32* %a, align 4, !dbg !706
  %add = add nsw i32 %13, 100, !dbg !707
  store i32 %add, i32* %b, align 4, !dbg !705
  %14 = load i32, i32* %b, align 4, !dbg !708
  %add7 = add nsw i32 %14, 100, !dbg !709
  %conv = sext i32 %add7 to i64, !dbg !708
  %15 = inttoptr i64 %conv to i32 (i32)*, !dbg !708
  store i32 (i32)* %15, i32 (i32)** @handler, align 8, !dbg !710
  br label %if.end
  %16 = load i32 (i32)*, i32 (i32)** @handler, align 8, !dbg !711
  %17 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !712
  %ptr8 = getelementptr inbounds %struct.Type2, %struct.Type2* %17, i32 0, i32 1, !dbg !713
  %18 = load i32*, i32** %ptr8, align 8, !dbg !713
  %19 = ptrtoint i32* %18 to i32, !dbg !714
  %call9 = call i32 %16(i32 %19), !dbg !711
  %20 = load i32, i32* %res, align 4, !dbg !715
  ret i32 %20, !dbg !716
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
: Instructions in stack: Num.185
//In indirect call : Instructions in stack: Num.186
//In indirect call : Instructions in stack: Num.187
//In indirect call : Instructions in stack: Num.188
//In indirect call : Instructions in stack: Num.189
//In indirect call : Instructions in stack: Num.0
//In indirect call : Instructions in stack: Num.1
//In indirect call : Instructions in stack: Num.2
//In indirect call : Instructions in stack: Num.3
//In indirect call : Instructions in stack: Num.4
//In indirect call : Instructions in stack: Num.5
//In indirect call : Instructions in stack: Num.6
//In indirect call : Instructions in stack: Num.7
//In indirect call : Instructions in stack: Num.8
//In indirect call : Instructions in stack: Num.9
//In indirect call : Instructions in stack: Num.10
//In indirect call : Instructions in stack: Num.11
//In indirect call : Instructions in stack: Num.12
//In indirect call : Instructions in stack: Num.13
//In indirect call : Instructions in stack: Num.14
//In indirect call : Instructions in stack: Num.15
//In indirect call : Instructions in stack: Num.16
//In indirect call : Instructions in stack: Num.17
//In indirect call : Instructions in stack: Num.18
//In indirect call : Instructions in stack: Num.19
//In indirect call : Instructions in stack: Num.20
//In indirect call : Instructions in stack: Num.21
//In indirect call : Instructions in stack: Num.22
//In indirect call : Instructions in stack: Num.23
//In indirect call : Instructions in stack: Num.24
//In indirect call : Instructions in stack: Num.25
//In indirect call : Instructions in stack: Num.26
//In indirect call : Instructions in stack: Num.27
//In indirect call : Instructions in stack: Num.28
//In indirect call : Instructions in stack: Num.29
//In indirect call : Instructions in stack: Num.30
//In indirect call : Instructions in stack: Num.31
//In indirect call : Instructions in stack: Num.32
//In indirect call : Instructions in stack: Num.33
//In indirect call : Instructions in stack: Num.34
//In indirect call : Instructions in stack: Num.35
//In indirect call : Instructions in stack: Num.36
//In indirect call : Instructions in stack: Num.37
//In indirect call : Instructions in stack: Num.38
//In indirect call : Instructions in stack: Num.39
//In indirect call : Instructions in stack: Num.40
//In indirect call : Instructions in stack: Num.41
//In indirect call : Instructions in stack: Num.42
//In indirect call : Instructions in stack: Num.43
//In indirect call : Instructions in stack: Num.44
//In indirect call : Instructions in stack: Num.45
//In indirect call : Instructions in stack: Num.46
//In indirect call : Instructions in stack: Num.47
//In indirect call : Instructions in stack: Num.48
//In indirect call : Instructions in stack: Num.49
//In indirect call : Instructions in stack: Num.50
//In indirect call : Instructions in stack: Num.51
//In indirect call : Instructions in stack: Num.52
//In indirect call : Instructions in stack: Num.53
//In indirect call : Instructions in stack: Num.54
//In indirect call : Instructions in stack: Num.55
//In indirect call : Instructions in stack: Num.56
//In indirect call : Instructions in stack: Num.57
//In indirect call : Instructions in stack: Num.58
//In indirect call : Instructions in stack: Num.59
//In indirect call : Instructions in stack: Num.60
//In indirect call : Instructions in stack: Num.61
//In indirect call : Instructions in stack: Num.62
//In indirect call : Instructions in stack: Num.63
//In indirect call : Instructions in stack: Num.64
//In indirect call : Instructions in stack: Num.65
//In indirect call : Instructions in stack: Num.66
//In indirect call : Instructions in stack: Num.67
//In indirect call : Instructions in stack: Num.68
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Ins  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
tructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %res = alloca i32, align 4
  %temp = alloca [16 x i8], align 16
  %buf = alloca i8*, align 8
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  store i32 0, i32* %retval, align 4
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !996, metadata !DIExpression()), !dbg !997
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !998, metadata !DIExpression()), !dbg !999
  %call = call noalias i8* @malloc(i64 8) #10, !dbg !664
  %0 = bitcast i8* %call to %struct.Type1*, !dbg !665
  store %struct.Type1* %0, %struct.Type1** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 0), align 8, !dbg !666
  %call1 = call noalias i8* @malloc(i64 16) #10, !dbg !667
  %1 = bitcast i8* %call1 to %struct.Type2*, !dbg !668
  store %struct.Type2* %1, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !669
  call void @llvm.dbg.declare(metadata i32* %res, metadata !1006, metadata !DIExpression()), !dbg !1007
  call void @llvm.dbg.declare(metadata [16 x i8]* %temp, metadata !1008, metadata !DIExpression()), !dbg !1010
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %temp, i64 0, i64 0, !dbg !675
  call void @klee_make_symbolic(i8* %arraydecay, i64 16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.6, i64 0, i64 0)), !dbg !676
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !1013, metadata !DIExpression()), !dbg !1014
  %arraydecay2 = getelementptr inbounds [16 x i8], [16 x i8]* %temp, i64 0, i64 0, !dbg !679
  store i8* %arraydecay2, i8** %buf, align 8, !dbg !678
  %2 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !680
  %status = getelementptr inbounds %struct.Type2, %struct.Type2* %2, i32 0, i32 0, !dbg !681
  %3 = bitcast i32* %status to i8*, !dbg !682
  %4 = load i8*, i8** %buf, align 8, !dbg !683
  %5 = call i8* @memcpy(i8* %3, i8* %4, i64 16), !dbg !682
  store i32 (i32)* bitcast (i32 (i32*)* @goodFunc to i32 (i32)*), i32 (i32)** @handler, align 8, !dbg !684
  %6 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !685
  %status3 = getelementptr inbounds %struct.Type2, %struct.Type2* %6, i32 0, i32 0, !dbg !687
  %7 = load i32, i32* %status3, align 8, !dbg !687
  %tobool = icmp ne i32 %7, 0, !dbg !688
  br i1 %tobool, label %if.then, label %if.else, !dbg !689
  %call4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0)), !dbg !690
  %8 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !692
  %ptr = getelementptr inbounds %struct.Type2, %struct.Type2* %8, i32 0, i32 1, !dbg !693
  %9 = load i32*, i32** %ptr, align 8, !dbg !693
  %10 = load i32, i32* %9, align 4, !dbg !694
  store i32 %10, i32* %res, align 4, !dbg !695
  br label %if.end, !dbg !696
  %call5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)), !dbg !697
  %11 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !699
  %ptr6 = getelementptr inbounds %struct.Type2, %struct.Type2* %11, i32 0, i32 1, !dbg !700
  %12 = load i32*, i32** %ptr6, align 8, !dbg !700
  store i32 4660, i32* %12, align 4, !dbg !701
  call void @llvm.dbg.declare(metadata i32* %a, metadata !1038, metadata !DIExpression()), !dbg !1039
  store i32 100, i32* %a, align 4, !dbg !703
  call void @llvm.dbg.declare(metadata i32* %b, metadata !1040, metadata !DIExpression()), !dbg !1041
  %13 = load i32, i32* %a, align 4, !dbg !706
  %add = add nsw i32 %13, 100, !dbg !707
  store i32 %add, i32* %b, align 4, !dbg !705
  %14 = load i32, i32* %b, align 4, !dbg !708
  %add7 = add nsw i32 %14, 100, !dbg !709
  %conv = sext i32 %add7 to i64, !dbg !708
  %15 = inttoptr i64 %conv to i32 (i32)*, !dbg !708
  store i32 (i32)* %15, i32 (i32)** @handler, align 8, !dbg !710
  br label %if.end
  %16 = load i32 (i32)*, i32 (i32)** @handler, align 8, !dbg !711
  %17 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !712
  %ptr8 = getelementptr inbounds %struct.Type2, %struct.Type2* %17, i32 0, i32 1, !dbg !713
  %18 = load i32*, i32** %ptr8, align 8, !dbg !713
  %19 = ptrtoint i32* %18 to i32, !dbg !714
  %call9 = call i32 %16(i32 %19), !dbg !711
  %20 = load i32, i32* %res, align 4, !dbg !715
  ret i32 %20, !dbg !716
  %var.addr = alloca i32*, align 8
  store i32* %var, i32** %var.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %var.addr, metadata !984, metadata !DIExpression()), !dbg !985
Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack:   %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i64 0, i64 0)), !dbg !664
  ret i32 0, !dbg !665
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
Num.3
//Instructions in stack: Num.4
ki->getSourceLocation = test.c:11 0
ki->info->line = 11
ki->getSourceLocation = test.c:11 0
ki->info->line = 11
ki->getSourceLocation = test.c:35 17
ki->info->line = 35
ki->getSourceLocation = test.c:35 19
ki->info->line = 35
ki->getSourceLocation = test.c:11 25
ki->info->line = 11
ki->getSourceLocation = test.c:35 13
ki->info->line = 35
ki->getSourceLocation = test.c:11 30
ki->info->line = 11
/////This is a Good function
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in   %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %res = alloca i32, align 4
  %temp = alloca [16 x i8], align 16
  %buf = alloca i8*, align 8
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  store i32 0, i32* %retval, align 4
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !996, metadata !DIExpression()), !dbg !997
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !998, metadata !DIExpression()), !dbg !999
  %call = call noalias i8* @malloc(i64 8) #10, !dbg !664
  %0 = bitcast i8* %call to %struct.Type1*, !dbg !665
  store %struct.Type1* %0, %struct.Type1** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 0), align 8, !dbg !666
  %call1 = call noalias i8* @malloc(i64 16) #10, !dbg !667
  %1 = bitcast i8* %call1 to %struct.Type2*, !dbg !668
  store %struct.Type2* %1, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !669
  call void @llvm.dbg.declare(metadata i32* %res, metadata !1006, metadata !DIExpression()), !dbg !1007
  call void @llvm.dbg.declare(metadata [16 x i8]* %temp, metadata !1008, metadata !DIExpression()), !dbg !1010
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %temp, i64 0, i64 0, !dbg !675
  call void @klee_make_symbolic(i8* %arraydecay, i64 16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.6, i64 0, i64 0)), !dbg !676
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !1013, metadata !DIExpression()), !dbg !1014
  %arraydecay2 = getelementptr inbounds [16 x i8], [16 x i8]* %temp, i64 0, i64 0, !dbg !679
  store i8* %arraydecay2, i8** %buf, align 8, !dbg !678
  %2 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !680
  %status = getelementptr inbounds %struct.Type2, %struct.Type2* %2, i32 0, i32 0, !dbg !681
  %3 = bitcast i32* %status to i8*, !dbg !682
  %4 = load i8*, i8** %buf, align 8, !dbg !683
  %5 = call i8* @memcpy(i8* %3, i8* %4, i64 16), !dbg !682
  store i32 (i32)* bitcast (i32 (i32*)* @goodFunc to i32 (i32)*), i32 (i32)** @handler, align 8, !dbg !684
  %6 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !685
  %status3 = getelementptr inbounds %struct.Type2, %struct.Type2* %6, i32 0, i32 0, !dbg !687
  %7 = load i32, i32* %status3, align 8, !dbg !687
  %tobool = icmp ne i32 %7, 0, !dbg !688
  br i1 %tobool, label %if.then, label %if.else, !dbg !689
  %call4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0)), !dbg !690
  %8 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !692
  %ptr = getelementptr inbounds %struct.Type2, %struct.Type2* %8, i32 0, i32 1, !dbg !693
  %9 = load i32*, i32** %ptr, align 8, !dbg !693
  %10 = load i32, i32* %9, align 4, !dbg !694
  store i32 %10, i32* %res, align 4, !dbg !695
  br label %if.end, !dbg !696
  %call5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)), !dbg !697
  %11 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !699
  %ptr6 = getelementptr inbounds %struct.Type2, %struct.Type2* %11, i32 0, i32 1, !dbg !700
stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instruction  %12 = load i32*, i32** %ptr6, align 8, !dbg !700
  store i32 4660, i32* %12, align 4, !dbg !701
  call void @llvm.dbg.declare(metadata i32* %a, metadata !1038, metadata !DIExpression()), !dbg !1039
  store i32 100, i32* %a, align 4, !dbg !703
  call void @llvm.dbg.declare(metadata i32* %b, metadata !1040, metadata !DIExpression()), !dbg !1041
  %13 = load i32, i32* %a, align 4, !dbg !706
  %add = add nsw i32 %13, 100, !dbg !707
  store i32 %add, i32* %b, align 4, !dbg !705
  %14 = load i32, i32* %b, align 4, !dbg !708
  %add7 = add nsw i32 %14, 100, !dbg !709
  %conv = sext i32 %add7 to i64, !dbg !708
  %15 = inttoptr i64 %conv to i32 (i32)*, !dbg !708
  store i32 (i32)* %15, i32 (i32)** @handler, align 8, !dbg !710
  br label %if.end
  %16 = load i32 (i32)*, i32 (i32)** @handler, align 8, !dbg !711
  %17 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !712
  %ptr8 = getelementptr inbounds %struct.Type2, %struct.Type2* %17, i32 0, i32 1, !dbg !713
  %18 = load i32*, i32** %ptr8, align 8, !dbg !713
  %19 = ptrtoint i32* %18 to i32, !dbg !714
  %call9 = call i32 %16(i32 %19), !dbg !711
  %20 = load i32, i32* %res, align 4, !dbg !715
  ret i32 %20, !dbg !716
  %var.addr = alloca i32*, align 8
  store i32* %var, i32** %var.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %var.addr, metadata !984, metadata !DIExpression()), !dbg !985
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i64 0, i64 0)), !dbg !664
  ret i32 0, !dbg !665
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
s in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
ki->getSourceLocation = test.c:11 71
ki->info->line = 11
ki->getSourceLocation = test.c:36 19
ki->info->line = 36
ki->getSourceLocation = test.c:40 12
ki->info->line = 40
ki->getSourceLocation = test.c:40 5
ki->info->line = 40
ki->getSourceLocation = test.c:36 21
ki->info->line = 36
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  %rv.addr = alloca i32, align 4
  store i32 %rv, i32* %rv.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rv.addr, metadata !2108, metadata !DIExpression()), !dbg !2109
  %0 = load void (i32)*, void (i32)** @__exit_cleanup, align 8, !dbg !660
  %tobool = icmp ne void (i32)* %0, null, !dbg !660
  br i1 %tobool, label %if.then, label %if.end, !dbg !662
  %1 = load void (i32)*, void (i32)** @__exit_cleanup, align 8, !dbg !663
  %2 = load i32, i32* %rv.addr, align 4, !dbg !665
  call void %1(i32 %2) #10, !dbg !663
  br label %if.end, !dbg !666
  call void @__uClibc_fini() #10, !dbg !667
  br i1 true, label %if.then1, label %if.end2, !dbg !668
  call void @_stdio_term() #10, !dbg !669
  br label %if.end2, !dbg !669
  %3 = load i32, i32* %rv.addr, align 4, !dbg !671
  call void @_exit(i32 %3) #11, !dbg !672
  unreachable, !dbg !672
Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
ki->getSourceLocation = test.c:36 19
ki->info->line = 36
ki->getSourceLocation = test.c:36 19
ki->info->line = 36
ki->getSourceLocation = test.c:36 17
ki->info->line = 36
ki->getSourceLocation = test.c:15 0
ki->info->line = 15
ki->getSourceLocation = test.c:39 5
ki->info->line = 39
//Instructions in stack  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instruc  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  %rv.addr = alloca i32, align 4
  store i32 %rv, i32* %rv.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rv.addr, metadata !2108, metadata !DIExpression()), !dbg !2109
  %0 = load void (i32)*, void (i32)** @__exit_cleanup, align 8, !dbg !660
  %tobool = icmp ne void (i32)* %0, null, !dbg !660
  br i1 %tobool, label %if.then, label %if.end, !dbg !662
  %1 = load void (i32)*, void (i32)** @__exit_cleanup, align 8, !dbg !663
  %2 = load i32, i32* %rv.addr, align 4, !dbg !665
  call void %1(i32 %2) #10, !dbg !663
  br label %if.end, !dbg !666
  call void @__uClibc_fini() #10, !dbg !667
  br i1 true, label %if.then1, label %if.end2, !dbg !668
  call void @_stdio_term() #10, !dbg !669
  br label %if.end2, !dbg !669
  %3 = load i32, i32* %rv.addr, align 4, !dbg !671
  call void @_exit(i32 %3) #11, !dbg !672
  unreachable, !dbg !672
  %0 = load void ()*, void ()** @__app_fini, align 8, !dbg !658
  %cmp = icmp ne void ()* %0, null, !dbg !660
  br i1 %cmp, label %if.then, label %if.end, !dbg !661
  %1 = load void ()*, void ()** @__app_fini, align 8, !dbg !662
  call void %1() #10, !dbg !663
  br label %if.end, !dbg !663
  %2 = load void ()*, void ()** @__rtld_fini, align 8, !dbg !664
  %cmp1 = icmp ne void ()* %2, null, !dbg !666
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !667
  %3 = load void ()*, void ()** @__rtld_fini, align 8, !dbg !668
  call void %3() #10, !dbg !669
  br label %if.end3, !dbg !669
  ret void, !dbg !670
300
  %call9 = call i32 %16(i32 %19), !dbg !711
  %16 = load i32 (i32)*, i32 (i32)** @handler, align 8, !dbg !711
(ReadLSB w64 8 temp)
111840096
111840096
300
110931976
KLEE: WARNING: Current path can not be exploited
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
tions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
ki->getSourceLocation = test.c:39 18
ki->info->line = 39
ki->getSourceLocation = test.c:39 24
ki->info->line = 39
ki->getSourceLocation = test.c:39 24
ki->info->line = 39
ki->getSourceLocation = test.c:39 13
ki->info->line = 39
ki->getSourceLocation = test.c:39 5
ki->info->line = 39
------ InDirect function call executed!
Location of the instruction : test.c:40 12
// This the current instruction : 
  dest = 68, operand = 63
//We found the operand instruction in current stack!
  opnd_name = handler
**************We have found an exploitable point************
size of FunctionCalls = 107
handler's address = 111840096
-------------------------Now handling AAW Exploit----------------------------------
fp_expr's value: 111840096
*************Write the first constraint***********
fp_expr's value:
This is fp's os value in hajacking point
This is fp's os value in exploit point
Function call address is 300
//In indirect call : Instructions in stack: Num.0
//In indirect call : Instructions in stack: Num.1
//In indirect call : Instructions in stack:  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
 Num.0
//In indirect call : Instructions in stack: Num.1
//In indirect call : Instructions in stack: Num.2
//In indirect call : Instructions in stack: Num.3
//In indirect call : Instructions in stack: Num.4
//In indirect call : Instructions in stack: Num.5
//In indirect call : Instructions in stack: Num.6
//In indirect call : Instructions in stack: Num.7
//In indirect call : Instructions in stack: Num.8
//In indirect call : Instructions in stack: Num.9
//In indirect call : Instructions in stack: Num.10
//In indirect call : Instructions in stack: Num.11
//In indirect call : Instructions in stack: Num.12
//In indirect call : Instructions in stack: Num.13
//In indirect call : Instructions in stack: Num.14
//In indirect call : Instructions in stack: Num.15
//In indirect call : Instructions in stack: Num.16
//In indirect call : Instructions in stack: Num.17
//In indirect call : Instructions in stack: Num.18
//In indirect call : Instructions in stack: Num.19
//In indirect call : Instructions in stack: Num.20
//In indirect call : Instructions in stack: Num.21
//In indirect call : Instructions in stack: Num.22
//In indirect call : Instructions in stack: Num.23
//In indirect call : Instructions in stack: Num.24
//In indirect call : Instructions in stack: Num.25
//In indirect call : Instructions in stack: Num.26
//In indirect call : Instructions in stack: Num.27
//In indirect call : Instructions in stack: Num.28
//In indirect call : Instructions in stack: Num.29
//In indirect call : Instructions in stack: Num.30
//In indirect call : Instructions in stack: Num.31
//In indirect call : Instructions in stack: Num.32
//In indirect call : Instructions in stack: Num.33
//In indirect call : Instructions in stack: Num.34
//In indirect call : Instructions in stack: Num.35
//In indirect call : Instructions in stack: Num.36
//In indirect call : Instructions in stack: Num.37
//In indirect call : Instructions in stack: Num.38
//In indirect call : Instructions in stack: Num.39
//In indirect call : Instructions in stack: Num.40
//In indirect call : Instructions in stack: Num.41
//In indirect call : Instructions in stack: Num.42
//In indirect call : Instructions in stack: Num.43
//In indirect call : Instructions in stack: Num.44
//In indirect call : Instructions in stack: Num.45
//In indirect call : Instructions in stack: Num.46
//In indirect call : Instructions in stack: Num.47
//In indirect call : Instructions in stack: Num.48
//In indirect call : Instructions in stack: Num.49
//In indirect call : Instructions in stack: Num.50
//In indirect call : Instructions in stack: Num.51
//In indirect call : Instructions in stack: Num.52
//In indirect call : Instructions in stack: Num.53
//In indirect call : Instructions in stack: Num.54
//In indirect call : Instructions in stack: Num.55
//In indirect call : Instructions in stack: Num.56
//In indirect call : Instructions in stack: Num.57
//In indirect call : Instructions in stack: Num.58
//In indirect call : Instructions in stack: Num.59
//In indirect call : Instructions in stack: Num.60
//In indirect call : Instructions in stack: Num.61
//In indirect call : Instructions in stack: Num.62
//In indirect call : Instructions in stack: Num.63
//In indirect call : Instructions in stack: Num.64
//In indirect call : Instructions in stack: Num.65
//In indirect call : Instructions in stack: Num.66
//In indirect call : Instructions in stack: Num.67
//In indirect call : Instructions in stack: Num.68
//In indirect call : Instructions in stack: Num.69
//In indirect call : Instructions in stack: Num.70
//In indirect call : Instructions in stack: Num.71
//In indirect call : Instructions in stack: Num.72
//In indirect call : Instructions in stack: Num.73
//In indirect call : Instructions in stack: Num.74
//In indirect call : Instructions in stack: Num.75
//In indirect call : Instructions in stack: Num.76
//In indirect call : Instructions in stack: Num.77
//In indirect call : Instructions in stack: Num.78
//In indirect call : Instructions in stack: Num.79
//In indirect call : Instructions in stack: Num.80
//In indirect call  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
 : Instructions in stack: Num.81
//In indirect call : Instructions in stack: Num.82
//In indirect call : Instructions in stack: Num.83
//In indirect call : Instructions in stack: Num.84
//In indirect call : Instructions in stack: Num.85
//In indirect call : Instructions in stack: Num.86
//In indirect call : Instructions in stack: Num.87
//In indirect call : Instructions in stack: Num.88
//In indirect call : Instructions in stack: Num.89
//In indirect call : Instructions in stack: Num.90
//In indirect call : Instructions in stack: Num.91
//In indirect call : Instructions in stack: Num.92
//In indirect call : Instructions in stack: Num.93
//In indirect call : Instructions in stack: Num.94
//In indirect call : Instructions in stack: Num.95
//In indirect call : Instructions in stack: Num.96
//In indirect call : Instructions in stack: Num.97
//In indirect call : Instructions in stack: Num.98
//In indirect call : Instructions in stack: Num.99
//In indirect call : Instructions in stack: Num.100
//In indirect call : Instructions in stack: Num.101
//In indirect call : Instructions in stack: Num.102
//In indirect call : Instructions in stack: Num.103
//In indirect call : Instructions in stack: Num.104
//In indirect call : Instructions in stack: Num.105
//In indirect call : Instructions in stack: Num.106
//In indirect call : Instructions in stack: Num.107
//In indirect call : Instructions in stack: Num.108
//In indirect call : Instructions in stack: Num.109
//In indirect call : Instructions in stack: Num.110
//In indirect call : Instructions in stack: Num.111
//In indirect call : Instructions in stack: Num.112
//In indirect call : Instructions in stack: Num.113
//In indirect call : Instructions in stack: Num.114
//In indirect call : Instructions in stack: Num.115
//In indirect call : Instructions in stack: Num.116
//In indirect call : Instructions in stack: Num.117
//In indirect call : Instructions in stack: Num.118
//In indirect call : Instructions in stack: Num.119
//In indirect call : Instructions in stack: Num.120
//In indirect call : Instructions in stack: Num.121
//In indirect call : Instructions in stack: Num.122
//In indirect call : Instructions in stack: Num.123
//In indirect call : Instructions in stack: Num.124
//In indirect call : Instructions in stack: Num.125
//In indirect call : Instructions in stack: Num.126
//In indirect call : Instructions in stack: Num.127
//In indirect call : Instructions in stack: Num.128
//In indirect call : Instructions in stack: Num.129
//In indirect call : Instructions in stack: Num.130
//In indirect call : Instructions in stack: Num.131
//In indirect call : Instructions in stack: Num.132
//In indirect call : Instructions in stack: Num.133
//In indirect call : Instructions in stack: Num.134
//In indirect call : Instructions in stack: Num.135
//In indirect call : Instructions in stack: Num.136
//In indirect call : Instructions in stack: Num.137
//In indirect call : Instructions in stack: Num.138
//In indirect call : Instructions in stack: Num.139
//In indirect call : Instructions in stack: Num.140
//In indirect call : Instructions in stack: Num.141
//In indirect call : Instructions in stack: Num.142
//In indirect call : Instructions in stack: Num.143
//In indirect call : Instructions in stack: Num.144
//In indirect call : Instructions in stack: Num.145
//In indirect call : Instructions in stack: Num.146
//In indirect call : Instructions in stack: Num.147
//In indirect call : Instructions in stack: Num.148
//In indirect call : Instructions in stack: Num.149
//In indirect call : Instructions in stack: Num.150
//In indirect call : Instructions in stack: Num.151
//In indirect call : Instructions in stack: Num.152
//In indirect call : Instructions in stack: Num.153
//In indirect call : Instructions in stack: Num.154
//In indirect call : Instructions in stack: Num.155
//In indirect call : Instructions in stack: Num.156
//In indirect call : Instructions in stack: Num.157
//In indirect call : Instructions in stack: Num.158
//In indirect call : Instructions in stack: Num.159
//In indirect call : Inst  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %res = alloca i32, align 4
  %temp = alloca [16 x i8], align 16
  %buf = alloca i8*, align 8
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  store i32 0, i32* %retval, align 4
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !996, metadata !DIExpression()), !dbg !997
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !998, metadata !DIExpression()), !dbg !999
  %call = call noalias i8* @malloc(i64 8) #10, !dbg !664
  %0 = bitcast i8* %call to %struct.Type1*, !dbg !665
  store %struct.Type1* %0, %struct.Type1** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 0), align 8, !dbg !666
  %call1 = call noalias i8* @malloc(i64 16) #10, !dbg !667
  %1 = bitcast i8* %call1 to %struct.Type2*, !dbg !668
  store %struct.Type2* %1, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !669
  call void @llvm.dbg.declare(metadata i32* %res, metadata !1006, metadata !DIExpression()), !dbg !1007
  call void @llvm.dbg.declare(metadata [16 x i8]* %temp, metadata !1008, metadata !DIExpression()), !dbg !1010
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %temp, i64 0, i64 0, !dbg !675
  call void @klee_make_symbolic(i8* %arraydecay, i64 16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.6, i64 0, i64 0)), !dbg !676
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !1013, metadata !DIExpression()), !dbg !1014
  %arraydecay2 = getelementptr inbounds [16 x i8], [16 x i8]* %temp, i64 0, i64 0, !dbg !679
  store i8* %arraydecay2, i8** %buf, align 8, !dbg !678
  %2 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !680
  %status = getelementptr inbounds %struct.Type2, %struct.Type2* %2, i32 0, i32 0, !dbg !681
  %3 = bitcast i32* %status to i8*, !dbg !682
  %4 = load i8*, i8** %buf, align 8, !dbg !683
  %5 = call i8* @memcpy(i8* %3, i8* %4, i64 16), !dbg !682
  store i32 (i32)* bitcast (i32 (i32*)* @goodFunc to i32 (i32)*), i32 (i32)** @handler, align 8, !dbg !684
  %6 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !685
  %status3 = getelementptr inbounds %struct.Type2, %struct.Type2* %6, i32 0, i32 0, !dbg !687
  %7 = load i32, i32* %status3, align 8, !dbg !687
  %tobool = icmp ne i32 %7, 0, !dbg !688
  br i1 %tobool, label %if.then, label %if.else, !dbg !689
  %call4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0)), !dbg !690
  %8 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !692
  %ptr = getelementptr inbounds %struct.Type2, %struct.Type2* %8, i32 0, i32 1, !dbg !693
  %9 = load i32*, i32** %ptr, align 8, !dbg !693
  %10 = load i32, i32* %9, align 4, !dbg !694
  store i32 %10, i32* %res, align 4, !dbg !695
  br label %if.end, !dbg !696
  %call5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)), !dbg !697
  %11 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !699
  %ptr6 = getelementptr inbounds %struct.Type2, %struct.Type2* %11, i32 0, i32 1, !dbg !700
  %12 = load i32*, i32** %ptr6, align 8, !dbg !700
  store i32 4660, i32* %12, align 4, !dbg !701
  call void @llvm.dbg.declare(metadata i32* %a, metadata !1038, metadata !DIExpression()), !dbg !1039
ructions in stack: Num.160
//In indirect call : Instructions in stack: Num.161
//In indirect call : Instructions in stack: Num.162
//In indirect call : Instructions in stack: Num.163
//In indirect call : Instructions in stack: Num.164
//In indirect call : Instructions in stack: Num.165
//In indirect call : Instructions in stack: Num.166
//In indirect call : Instructions in stack: Num.167
//In indirect call : Instructions in stack: Num.168
//In indirect call : Instructions in stack: Num.169
//In indirect call : Instructions in stack: Num.170
//In indirect call : Instructions in stack: Num.171
//In indirect call : Instructions in stack: Num.172
//In indirect call : Instructions in stack: Num.173
//In indirect call : Instructions in stack: Num.174
//In indirect call : Instructions in stack: Num.175
//In indirect call : Instructions in stack: Num.176
//In indirect call : Instructions in stack: Num.177
//In indirect call : Instructions in stack: Num.178
//In indirect call : Instructions in stack: Num.179
//In indirect call : Instructions in stack: Num.180
//In indirect call : Instructions in stack: Num.181
//In indirect call : Instructions in stack: Num.182
//In indirect call : Instructions in stack: Num.183
//In indirect call : Instructions in stack: Num.184
//In indirect call : Instructions in stack: Num.185
//In indirect call : Instructions in stack: Num.186
//In indirect call : Instructions in stack: Num.187
//In indirect call : Instructions in stack: Num.188
//In indirect call : Instructions in stack: Num.189
//In indirect call : Instructions in stack: Num.0
//In indirect call : Instructions in stack: Num.1
//In indirect call : Instructions in stack: Num.2
//In indirect call : Instructions in stack: Num.3
//In indirect call : Instructions in stack: Num.4
//In indirect call : Instructions in stack: Num.5
//In indirect call : Instructions in stack: Num.6
//In indirect call : Instructions in stack: Num.7
//In indirect call : Instructions in stack: Num.8
//In indirect call : Instructions in stack: Num.9
//In indirect call : Instructions in stack: Num.10
//In indirect call : Instructions in stack: Num.11
//In indirect call : Instructions in stack: Num.12
//In indirect call : Instructions in stack: Num.13
//In indirect call : Instructions in stack: Num.14
//In indirect call : Instructions in stack: Num.15
//In indirect call : Instructions in stack: Num.16
//In indirect call : Instructions in stack: Num.17
//In indirect call : Instructions in stack: Num.18
//In indirect call : Instructions in stack: Num.19
//In indirect call : Instructions in stack: Num.20
//In indirect call : Instructions in stack: Num.21
//In indirect call : Instructions in stack: Num.22
//In indirect call : Instructions in stack: Num.23
//In indirect call : Instructions in stack: Num.24
//In indirect call : Instructions in stack: Num.25
//In indirect call : Instructions in stack: Num.26
//In indirect call : Instructions in stack: Num.27
//In indirect call : Instructions in stack: Num.28
//In indirect call : Instructions in stack: Num.29
//In indirect call : Instructions in stack: Num.30
//In indirect call : Instructions in stack: Num.31
//In indirect call : Instructions in stack: Num.32
//In indirect call : Instructions in stack: Num.33
//In indirect call : Instructions in stack: Num.34
//In indirect call : Instructions in stack: Num.35
//In indirect call : Instructions in stack: Num.36
//In indirect call : Instructions in stack: Num.37
//In indirect call : Instructions in stack: Num.38
//In indirect call : Instructions in stack: Num.39
//In indirect call : Instructions in stack: Num.40
//In indirect call : Instructions in stack: Num.41
//In indirect call : Instructions in stack: Num.42
//In indirect call : Instructions in stack: Num.43
//In indirect call : Instructions in stack: Num.44
//In indirect call : Instructions in stack: Num.45
//In indirect call : Instructions in stack: Num.46
//In indirect call : Instructions in stack: Num.47
//In indirect call : Instructions in stack: Num.48
//In indirect call : Instructions in stack: Num.49
//In indirect call :   store i32 100, i32* %a, align 4, !dbg !703
  call void @llvm.dbg.declare(metadata i32* %b, metadata !1040, metadata !DIExpression()), !dbg !1041
  %13 = load i32, i32* %a, align 4, !dbg !706
  %add = add nsw i32 %13, 100, !dbg !707
  store i32 %add, i32* %b, align 4, !dbg !705
  %14 = load i32, i32* %b, align 4, !dbg !708
  %add7 = add nsw i32 %14, 100, !dbg !709
  %conv = sext i32 %add7 to i64, !dbg !708
  %15 = inttoptr i64 %conv to i32 (i32)*, !dbg !708
  store i32 (i32)* %15, i32 (i32)** @handler, align 8, !dbg !710
  br label %if.end
  %16 = load i32 (i32)*, i32 (i32)** @handler, align 8, !dbg !711
  %17 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !712
  %ptr8 = getelementptr inbounds %struct.Type2, %struct.Type2* %17, i32 0, i32 1, !dbg !713
  %18 = load i32*, i32** %ptr8, align 8, !dbg !713
  %19 = ptrtoint i32* %18 to i32, !dbg !714
  %call9 = call i32 %16(i32 %19), !dbg !711
  %20 = load i32, i32* %res, align 4, !dbg !715
  ret i32 %20, !dbg !716
KLEE: ERROR: test.c:39: invalid function pointer
KLEE: NOTE: now ignoring this error at this location
Instructions in stack: Num.50
//In indirect call : Instructions in stack: Num.51
//In indirect call : Instructions in stack: Num.52
//In indirect call : Instructions in stack: Num.53
//In indirect call : Instructions in stack: Num.54
//In indirect call : Instructions in stack: Num.55
//In indirect call : Instructions in stack: Num.56
//In indirect call : Instructions in stack: Num.57
//In indirect call : Instructions in stack: Num.58
//In indirect call : Instructions in stack: Num.59
//In indirect call : Instructions in stack: Num.60
//In indirect call : Instructions in stack: Num.61
//In indirect call : Instructions in stack: Num.62
//In indirect call : Instructions in stack: Num.63
//In indirect call : Instructions in stack: Num.64
//In indirect call : Instructions in stack: Num.65
//In indirect call : Instructions in stack: Num.66
//In indirect call : Instructions in stack: Num.67
//In indirect call : Instructions in stack: Num.68
symbolic mo->address = 111783552
symbolic array->name = temp
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in s  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %res = alloca i32, align 4
  %temp = alloca [16 x i8], align 16
  %buf = alloca i8*, align 8
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  store i32 0, i32* %retval, align 4
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !996, metadata !DIExpression()), !dbg !997
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !998, metadata !DIExpression()), !dbg !999
  %call = call noalias i8* @malloc(i64 8) #10, !dbg !664
  %0 = bitcast i8* %call to %struct.Type1*, !dbg !665
  store %struct.Type1* %0, %struct.Type1** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 0), align 8, !dbg !666
  %call1 = call noalias i8* @malloc(i64 16) #10, !dbg !667
  %1 = bitcast i8* %call1 to %struct.Type2*, !dbg !668
  store %struct.Type2* %1, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !669
  call void @llvm.dbg.declare(metadata i32* %res, metadata !1006, metadata !DIExpression()), !dbg !1007
  call void @llvm.dbg.declare(metadata [16 x i8]* %temp, metadata !1008, metadata !DIExpression()), !dbg !1010
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %temp, i64 0, i64 0, !dbg !675
  call void @klee_make_symbolic(i8* %arraydecay, i64 16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.6, i64 0, i64 0)), !dbg !676
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !1013, metadata !DIExpression()), !dbg !1014
  %arraydecay2 = getelementptr inbounds [16 x i8], [16 x i8]* %temp, i64 0, i64 0, !dbg !679
  store i8* %arraydecay2, i8** %buf, align 8, !dbg !678
  %2 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !680
  %status = getelementptr inbounds %struct.Type2, %struct.Type2* %2, i32 0, i32 0, !dbg !681
  %3 = bitcast i32* %status to i8*, !dbg !682
  %4 = load i8*, i8** %buf, align 8, !dbg !683
  %5 = call i8* @memcpy(i8* %3, i8* %4, i64 16), !dbg !682
  store i32 (i32)* bitcast (i32 (i32*)* @goodFunc to i32 (i32)*), i32 (i32)** @handler, align 8, !dbg !684
  %6 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !685
  %status3 = getelementptr inbounds %struct.Type2, %struct.Type2* %6, i32 0, i32 0, !dbg !687
  %7 = load i32, i32* %status3, align 8, !dbg !687
  %tobool = icmp ne i32 %7, 0, !dbg !688
  br i1 %tobool, label %if.then, label %if.else, !dbg !689
  %call4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0)), !dbg !690
  %8 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !692
  %ptr = getelementptr inbounds %struct.Type2, %struct.Type2* %8, i32 0, i32 1, !dbg !693
  %9 = load i32*, i32** %ptr, align 8, !dbg !693
  %10 = load i32, i32* %9, align 4, !dbg !694
  store i32 %10, i32* %res, align 4, !dbg !695
  br label %if.end, !dbg !696
  %call5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)), !dbg !697
  %11 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !699
  %ptr6 = getelementptr inbounds %struct.Type2, %struct.Type2* %11, i32 0, i32 1, !dbg !700
  %12 = load i32*, i32** %ptr6, align 8, !dbg !700
  store i32 4660, i32* %12, align 4, !dbg !701
  call void @llvm.dbg.declare(metadata i32* %a, metadata !1038, metadata !DIExpression()), !dbg !1039
  store i32 100, i32* %a, align 4, !dbg !703
  call void @llvm.dbg.declare(metadata i32* %b, metadata !1040, metadata !DIExpression()), !dbg !1041
  %13 = load i32, i32* %a, align 4, !dbg !706
  %add = add nsw i32 %13, 100, !dbg !707
  store i32 %add, i32* %b, align 4, !dbg !705
  %14 = load i32, i32* %b, align 4, !dbg !708
  %add7 = add nsw i32 %14, 100, !dbg !709
  %conv = sext i32 %add7 to i64, !dbg !708
  %15 = inttoptr i64 %conv to i32 (i32)*, !dbg !708
  store i32 (i32)* %15, i32 (i32)** @handler, align 8, !dbg !710
  br label %if.end
tack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num  %16 = load i32 (i32)*, i32 (i32)** @handler, align 8, !dbg !711
  %17 = load %struct.Type2*, %struct.Type2** getelementptr inbounds (%struct.anon, %struct.anon* @gvar, i32 0, i32 1), align 8, !dbg !712
  %ptr8 = getelementptr inbounds %struct.Type2, %struct.Type2* %17, i32 0, i32 1, !dbg !713
  %18 = load i32*, i32** %ptr8, align 8, !dbg !713
  %19 = ptrtoint i32* %18 to i32, !dbg !714
  %call9 = call i32 %16(i32 %19), !dbg !711
  %20 = load i32, i32* %res, align 4, !dbg !715
  ret i32 %20, !dbg !716
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stac  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  %rv.addr = alloca i32, align 4
  store i32 %rv, i32* %rv.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rv.addr, metadata !2108, metadata !DIExpression()), !dbg !2109
  %0 = load void (i32)*, void (i32)** @__exit_cleanup, align 8, !dbg !660
  %tobool = icmp ne void (i32)* %0, null, !dbg !660
  br i1 %tobool, label %if.then, label %if.end, !dbg !662
  %1 = load void (i32)*, void (i32)** @__exit_cleanup, align 8, !dbg !663
  %2 = load i32, i32* %rv.addr, align 4, !dbg !665
  call void %1(i32 %2) #10, !dbg !663
  br label %if.end, !dbg !666
  call void @__uClibc_fini() #10, !dbg !667
  br i1 true, label %if.then1, label %if.end2, !dbg !668
  call void @_stdio_term() #10, !dbg !669
  br label %if.end2, !dbg !669
  %3 = load i32, i32* %rv.addr, align 4, !dbg !671
  call void @_exit(i32 %3) #11, !dbg !672
  unreachable, !dbg !672
  %ptr = alloca %struct.__STDIO_FILE_STRUCT.519*, align 8
  call void @llvm.dbg.declare(metadata %struct.__STDIO_FILE_STRUCT.519** %ptr, metadata !2069, metadata !DIExpression()), !dbg !2070
  %0 = load %struct.__STDIO_FILE_STRUCT.519*, %struct.__STDIO_FILE_STRUCT.519** @_stdio_openlist, align 8, !dbg !660
  store %struct.__STDIO_FILE_STRUCT.519* %0, %struct.__STDIO_FILE_STRUCT.519** %ptr, align 8, !dbg !662
  br label %for.cond, !dbg !663
  %1 = load %struct.__STDIO_FILE_STRUCT.519*, %struct.__STDIO_FILE_STRUCT.519** %ptr, align 8, !dbg !664
  %tobool = icmp ne %struct.__STDIO_FILE_STRUCT.519* %1, null, !dbg !666
  br i1 %tobool, label %for.body, label %for.end, !dbg !666
  %2 = load %struct.__STDIO_FILE_STRUCT.519*, %struct.__STDIO_FILE_STRUCT.519** %ptr, align 8, !dbg !667
  %__modeflags = getelementptr inbounds %struct.__STDIO_FILE_STRUCT.519, %struct.__STDIO_FILE_STRUCT.519* %2, i32 0, i32 0, !dbg !667
  %3 = load i16, i16* %__modeflags, align 8, !dbg !667
  %conv = zext i16 %3 to i32, !dbg !667
  %and = and i32 %conv, 64, !dbg !667
  %tobool1 = icmp ne i32 %and, 0, !dbg !667
  br i1 %tobool1, label %if.then, label %if.end, !dbg !670
  %4 = load %struct.__STDIO_FILE_STRUCT.519*, %struct.__STDIO_FILE_STRUCT.519** %ptr, align 8, !dbg !671
  %call = call i64 @__stdio_wcommit(%struct.__STDIO_FILE_STRUCT.519* %4) #10, !dbg !671
  br label %if.end, !dbg !673
  br label %for.inc, !dbg !674
  %5 = load %struct.__STDIO_FILE_STRUCT.519*, %struct.__STDIO_FILE_STRUCT.519** %ptr, align 8, !dbg !675
  %__nextopen = getelementptr inbounds %struct.__STDIO_FILE_STRUCT.519, %struct.__STDIO_FILE_STRUCT.519* %5, i32 0, i32 9, !dbg !676
  %6 = load %struct.__STDIO_FILE_STRUCT.519*, %struct.__STDIO_FILE_STRUCT.519** %__nextopen, align 8, !dbg !676
  store %struct.__STDIO_FILE_STRUCT.519* %6, %struct.__STDIO_FILE_STRUCT.519** %ptr, align 8, !dbg !677
  br label %for.cond, !dbg !678, !llvm.loop !679
  ret void, !dbg !681
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
  %main.addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %app_init.addr = alloca void ()*, align 8
  %app_fini.addr = alloca void ()*, align 8
  %rtld_fini.addr = alloca void ()*, align 8
  %stack_end.addr = alloca i8*, align 8
  %aux_dat = alloca i64*, align 8
  %auxvt = alloca [15 x %struct.Elf64_auxv_t], align 16
k: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instructions in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
symbolic mo->address = 111783552
symbolic array->name = temp
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions i  %auxv_entry = alloca %struct.Elf64_auxv_t*, align 8
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8**, i8**)** %main.addr, metadata !690, metadata !DIExpression()), !dbg !691
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !692, metadata !DIExpression()), !dbg !693
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !694, metadata !DIExpression()), !dbg !695
  store void ()* %app_init, void ()** %app_init.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_init.addr, metadata !696, metadata !DIExpression()), !dbg !697
  store void ()* %app_fini, void ()** %app_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %app_fini.addr, metadata !698, metadata !DIExpression()), !dbg !699
  store void ()* %rtld_fini, void ()** %rtld_fini.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %rtld_fini.addr, metadata !700, metadata !DIExpression()), !dbg !701
  store i8* %stack_end, i8** %stack_end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stack_end.addr, metadata !702, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.declare(metadata i64** %aux_dat, metadata !704, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.declare(metadata [15 x %struct.Elf64_auxv_t]* %auxvt, metadata !706, metadata !DIExpression()), !dbg !708
  %0 = load i8*, i8** %stack_end.addr, align 8, !dbg !682
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !683
  %1 = load void ()*, void ()** %rtld_fini.addr, align 8, !dbg !684
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !685
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !686
  %3 = load i32, i32* %argc.addr, align 4, !dbg !687
  %add = add nsw i32 %3, 1, !dbg !688
  %idxprom = sext i32 %add to i64, !dbg !686
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !686
  store i8** %arrayidx, i8*** @__environ, align 8, !dbg !689
  %4 = load i8**, i8*** @__environ, align 8, !dbg !690
  %5 = bitcast i8** %4 to i8*, !dbg !692
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %7 = load i8*, i8** %6, align 8, !dbg !694
  %cmp = icmp eq i8* %5, %7, !dbg !695
  br i1 %cmp, label %if.then, label %if.end, !dbg !696
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !697
  %9 = load i32, i32* %argc.addr, align 4, !dbg !699
  %idxprom1 = sext i32 %9 to i64, !dbg !697
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %idxprom1, !dbg !697
  store i8** %arrayidx2, i8*** @__environ, align 8, !dbg !700
  br label %if.end, !dbg !701
  %arraydecay = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 0, !dbg !702
  %10 = bitcast %struct.Elf64_auxv_t* %arraydecay to i8*, !dbg !702
  %call = call i8* @memset(i8* %10, i32 0, i64 240) #10, !dbg !703
  %11 = load i8**, i8*** @__environ, align 8, !dbg !704
  %12 = bitcast i8** %11 to i64*, !dbg !705
  store i64* %12, i64** %aux_dat, align 8, !dbg !706
  br label %while.cond, !dbg !707
  %13 = load i64*, i64** %aux_dat, align 8, !dbg !708
  %14 = load i64, i64* %13, align 8, !dbg !709
  %tobool = icmp ne i64 %14, 0, !dbg !707
  br i1 %tobool, label %while.body, label %while.end, !dbg !707
  %15 = load i64*, i64** %aux_dat, align 8, !dbg !710
  %incdec.ptr = getelementptr inbounds i64, i64* %15, i32 1, !dbg !710
  store i64* %incdec.ptr, i64** %aux_dat, align 8, !dbg !710
  br label %while.cond, !dbg !707, !llvm.loop !712
  %16 = load i64*, i64** %aux_dat, align 8, !dbg !714
  %incdec.ptr3 = getelementptr inbounds i64, i64* %16, i32 1, !dbg !714
  store i64* %incdec.ptr3, i64** %aux_dat, align 8, !dbg !714
  br label %while.cond4, !dbg !715
  %17 = load i64*, i64** %aux_dat, align 8, !dbg !716
  %18 = load i64, i64* %17, align 8, !dbg !717
  %tobool5 = icmp ne i64 %18, 0, !dbg !715
  br i1 %tobool5, label %while.body6, label %while.end13, !dbg !715
  call void @llvm.dbg.declare(metadata %struct.Elf64_auxv_t** %auxv_entry, metadata !745, metadata !DIExpression()), !dbg !747
  %19 = load i64*, i64** %aux_dat, align 8, !dbg !721
  %20 = bitcast i64* %19 to %struct.Elf64_auxv_t*, !dbg !722
  store %struct.Elf64_auxv_t* %20, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !720
  %21 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !723
  %a_type = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %21, i32 0, i32 0, !dbg !725
  %22 = load i64, i64* %a_type, align 8, !dbg !725
  %cmp7 = icmp ule i64 %22, 14, !dbg !726
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !727
  %23 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !728
  %a_type9 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %23, i32 0, i32 0, !dbg !730
  %24 = load i64, i64* %a_type9, align 8, !dbg !730
  %arrayidx10 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %24, !dbg !731
  %25 = bitcast %struct.Elf64_auxv_t* %arrayidx10 to i8*, !dbg !732
  %26 = load %struct.Elf64_auxv_t*, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !733
  %27 = bitcast %struct.Elf64_auxv_t* %26 to i8*, !dbg !733
  %call11 = call i8* @memcpy(i8* %25, i8* %27, i64 16) #10, !dbg !734
  br label %if.end12, !dbg !735
  %28 = load i64*, i64** %aux_dat, align 8, !dbg !736
  %add.ptr = getelementptr inbounds i64, i64* %28, i64 2, !dbg !736
  store i64* %add.ptr, i64** %aux_dat, align 8, !dbg !736
  br label %while.cond4, !dbg !715, !llvm.loop !737
  call void @__uClibc_init() #11, !dbg !739
  %arrayidx14 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !740
  %a_un = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx14, i32 0, i32 1, !dbg !741
  %a_val = bitcast %union.anon.153* %a_un to i64*, !dbg !742
  %29 = load i64, i64* %a_val, align 8, !dbg !742
  %tobool15 = icmp ne i64 %29, 0, !dbg !743
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !743
  %arrayidx16 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !744
  %a_un17 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx16, i32 0, i32 1, !dbg !745
  %a_val18 = bitcast %union.anon.153* %a_un17 to i64*, !dbg !746
  %30 = load i64, i64* %a_val18, align 8, !dbg !746
  br label %cond.end, !dbg !743
  br label %cond.end, !dbg !743
  %cond = phi i64 [ %30, %cond.true ], [ 4096, %cond.false ], !dbg !743
  store i64 %cond, i64* @__pagesize, align 8, !dbg !747
  %arrayidx19 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !748
  %a_un20 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx19, i32 0, i32 1, !dbg !750
  %a_val21 = bitcast %union.anon.153* %a_un20 to i64*, !dbg !751
  %31 = load i64, i64* %a_val21, align 8, !dbg !751
  %cmp22 = icmp eq i64 %31, -1, !dbg !752
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !753
  %call23 = call i32 @__check_suid() #11, !dbg !754
  %tobool24 = icmp ne i32 %call23, 0, !dbg !754
  br i1 %tobool24, label %if.then45, label %lor.lhs.false, !dbg !755
  %arrayidx25 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !756
  %a_un26 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx25, i32 0, i32 1, !dbg !757
  %a_val27 = bitcast %union.anon.153* %a_un26 to i64*, !dbg !758
  %32 = load i64, i64* %a_val27, align 8, !dbg !758
  %cmp28 = icmp ne i64 %32, -1, !dbg !759
  br i1 %cmp28, label %land.lhs.true29, label %if.end46, !dbg !760
  %arrayidx30 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !761
  %a_un31 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx30, i32 0, i32 1, !dbg !762
  %a_val32 = bitcast %union.anon.153* %a_un31 to i64*, !dbg !763
  %33 = load i64, i64* %a_val32, align 8, !dbg !763
  %arrayidx33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !764
  %a_un34 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx33, i32 0, i32 1, !dbg !765
  %a_val35 = bitcast %union.anon.153* %a_un34 to i64*, !dbg !766
  %34 = load i64, i64* %a_val35, align 8, !dbg !766
  %cmp36 = icmp ne i64 %33, %34, !dbg !767
  br i1 %cmp36, label %if.then45, label %lor.lhs.false37, !dbg !768
  %arrayidx38 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !769
  %a_un39 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx38, i32 0, i32 1, !dbg !770
  %a_val40 = bitcast %union.anon.153* %a_un39 to i64*, !dbg !771
n stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
//Instructions in stack: Num.17
//Instructions in stack: Num.18
//Instructions in stack: Num.19
//Instructions in stack: Num.20
//Instructions in stack: Num.21
//Instructions in stack: Num.22
//Instructions in stack: Num.23
//Instructions in stack: Num.24
//Instructions in stack: Num.25
//Instructions in stack: Num.26
//Instructions in stack: Num.27
//Instructions in stack: Num.28
//Instructions in stack: Num.29
//Instructions in stack: Num.30
//Instructions in stack: Num.31
//Instructions in stack: Num.32
//Instructions in stack: Num.33
//Instructions in stack: Num.34
//Instructions in stack: Num.35
//Instructions in stack: Num.36
//Instructions in stack: Num.37
//Instructions in stack: Num.38
//Instructions in stack: Num.39
//Instructions in stack: Num.40
//Instructions in stack: Num.41
//Instructions in stack: Num.42
//Instructions in stack: Num.43
//Instructions in stack: Num.44
//Instructions in stack: Num.45
//Instructions in stack: Num.46
//Instructions in stack: Num.47
//Instructions in stack: Num.48
//Instructions in stack: Num.49
//Instructions in stack: Num.50
//Instructions in stack: Num.51
//Instructions in stack: Num.52
//Instructions in stack: Num.53
//Instructions in stack: Num.54
//Instructions in stack: Num.55
//Instructions in stack: Num.56
//Instructions in stack: Num.57
//Instructions in stack: Num.58
//Instructions in stack: Num.59
//Instructions in stack: Num.60
//Instructions in stack: Num.61
//Instructions in stack: Num.62
//Instructions in stack: Num.63
//Instructions in stack: Num.64
//Instructions in stack: Num.65
//Instructions in stack: Num.66
//Instructions in stack: Num.67
//Instructions in stack: Num.68
//Instructions in stack: Num.69
//Instructions in stack: Num.70
//Instructions in stack: Num.71
//Instructions in stack: Num.72
//Instructions in stack: Num.73
//Instructions in stack: Num.74
//Instructions in stack: Num.75
//Instructions in stack: Num.76
//Instructions in stack: Num.77
//Instructions in stack: Num.78
//Instructions in stack: Num.79
//Instructions in stack: Num.80
//Instructions in stack: Num.81
//Instructions in stack: Num.82
//Instructions in stack: Num.83
//Instructions in stack: Num.84
//Instructions in stack: Num.85
//Instructions in stack: Num.86
//Instructions in stack: Num.87
//Instructions in stack: Num.88
//Instructions in stack: Num.89
//Instructions in stack: Num.90
//Instructions in stack: Num.91
//Instructions in stack: Num.92
//Instructions in stack: Num.93
//Instructions in stack: Num.94
//Instructions in stack: Num.95
//Instructions in stack: Num.96
//Instructions in stack: Num.97
//Instructions in stack: Num.98
//Instructions in stack: Num.99
//Instructions in stack: Num.100
//Instructions in stack: Num.101
//Instructions in stack: Num.102
//Instructions in stack: Num.103
//Instructions in stack: Num.104
//Instructions in stack: Num.105
//Instructions in stack: Num.106
//Instructions in stack: Num.107
//Instructions in stack: Num.108
//Instructions in stack: Num.109
//Instructions in stack: Num.110
//Instructions in stack: Num.111
//Instructions in stack: Num.112
//Instructions in stack: Num.113
//Instructions in stack: Num.114
//Instructions in stack: Num.115
//Instructions in stack: Num.116
//Instructions in stack: Num.117
//Instructions in stack: Num.118
//Instructions in stack: Num.119
//Instructions in stack: Num.120
//Instructions in stack: Num.121
//Instructions in stack: Num.122
//Instructions in stack: Num.123
//Instructions in stack: Num.124
//Instructions in stack: Num.125
//Instructions in stack: Num.126
//Instructions in stack: Num.127
//Instructions in stack: Num.128
//Instructions in stack: Num.129
//Instructions in stack: Num.130
//Instructions in stack: Num.131
//Instructions in stack: Num.132
//Instructions in stack: Num.133
//Instructions in stack: Num.134
//Instructions in stack: Num.135
//Instruction  %35 = load i64, i64* %a_val40, align 8, !dbg !771
  %arrayidx41 = getelementptr inbounds [15 x %struct.Elf64_auxv_t], [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !772
  %a_un42 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %arrayidx41, i32 0, i32 1, !dbg !773
  %a_val43 = bitcast %union.anon.153* %a_un42 to i64*, !dbg !774
  %36 = load i64, i64* %a_val43, align 8, !dbg !774
  %cmp44 = icmp ne i64 %35, %36, !dbg !775
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !776
  call void @__check_one_fd(i32 0, i32 131072) #11, !dbg !777
  call void @__check_one_fd(i32 1, i32 131074) #11, !dbg !779
  call void @__check_one_fd(i32 2, i32 131074) #11, !dbg !780
  br label %if.end46, !dbg !781
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !782
  %38 = load i8*, i8** %37, align 8, !dbg !783
  store i8* %38, i8** @__uclibc_progname, align 8, !dbg !784
  %39 = load i8**, i8*** %argv.addr, align 8, !dbg !785
  %40 = load i8*, i8** %39, align 8, !dbg !786
  store i8* %40, i8** @program_invocation_name, align 8, !dbg !787
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !788
  %42 = load i8*, i8** %41, align 8, !dbg !789
  %call47 = call i8* @strrchr(i8* %42, i32 47) #12, !dbg !790
  store i8* %call47, i8** @program_invocation_short_name, align 8, !dbg !791
  %43 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !792
  %cmp48 = icmp ne i8* %43, null, !dbg !794
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !795
  %44 = load i8*, i8** @program_invocation_short_name, align 8, !dbg !796
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !796
  store i8* %incdec.ptr50, i8** @program_invocation_short_name, align 8, !dbg !796
  br label %if.end51, !dbg !796
  %45 = load i8*, i8** @program_invocation_name, align 8, !dbg !797
  store i8* %45, i8** @program_invocation_short_name, align 8, !dbg !798
  br label %if.end51
  %46 = load void ()*, void ()** %app_fini.addr, align 8, !dbg !799
  store void ()* %46, void ()** @__app_fini, align 8, !dbg !800
  %47 = load void ()*, void ()** %app_init.addr, align 8, !dbg !801
  %cmp52 = icmp ne void ()* %47, null, !dbg !803
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !804
  %48 = load void ()*, void ()** %app_init.addr, align 8, !dbg !805
  call void %48() #11, !dbg !805
  br label %if.end54, !dbg !807
  br i1 true, label %if.then55, label %if.end57, !dbg !808
  %call56 = call i32* @__errno_location() #13, !dbg !809
  store i32 0, i32* %call56, align 4, !dbg !811
  br label %if.end57, !dbg !812
  br i1 true, label %if.then58, label %if.end60, !dbg !813
  %call59 = call i32* @__h_errno_location() #13, !dbg !814
  store i32 0, i32* %call59, align 4, !dbg !816
  br label %if.end60, !dbg !817
  %49 = load i32 (i32, i8**, i8**)*, i32 (i32, i8**, i8**)** %main.addr, align 8, !dbg !818
  %50 = load i32, i32* %argc.addr, align 4, !dbg !819
  %51 = load i8**, i8*** %argv.addr, align 8, !dbg !820
  %52 = load i8**, i8*** @__environ, align 8, !dbg !821
  %call61 = call i32 %49(i32 %50, i8** %51, i8** %52) #11, !dbg !818
  call void @exit(i32 %call61) #14, !dbg !822
  unreachable, !dbg !822
  %rv.addr = alloca i32, align 4
  store i32 %rv, i32* %rv.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rv.addr, metadata !2108, metadata !DIExpression()), !dbg !2109
  %0 = load void (i32)*, void (i32)** @__exit_cleanup, align 8, !dbg !660
  %tobool = icmp ne void (i32)* %0, null, !dbg !660
  br i1 %tobool, label %if.then, label %if.end, !dbg !662
  %1 = load void (i32)*, void (i32)** @__exit_cleanup, align 8, !dbg !663
  %2 = load i32, i32* %rv.addr, align 4, !dbg !665
  call void %1(i32 %2) #10, !dbg !663
  br label %if.end, !dbg !666
  call void @__uClibc_fini() #10, !dbg !667
  br i1 true, label %if.then1, label %if.end2, !dbg !668
  call void @_stdio_term() #10, !dbg !669
  br label %if.end2, !dbg !669
  %3 = load i32, i32* %rv.addr, align 4, !dbg !671
  call void @_exit(i32 %3) #11, !dbg !672
  unreachable, !dbg !672

KLEE: done: total instructions = 12349
KLEE: done: completed paths = 2
KLEE: done: generated tests = 2
s in stack: Num.136
//Instructions in stack: Num.137
//Instructions in stack: Num.138
//Instructions in stack: Num.139
//Instructions in stack: Num.140
//Instructions in stack: Num.141
//Instructions in stack: Num.142
//Instructions in stack: Num.143
//Instructions in stack: Num.144
//Instructions in stack: Num.145
//Instructions in stack: Num.146
//Instructions in stack: Num.147
//Instructions in stack: Num.148
//Instructions in stack: Num.149
//Instructions in stack: Num.150
//Instructions in stack: Num.151
//Instructions in stack: Num.152
//Instructions in stack: Num.153
//Instructions in stack: Num.154
//Instructions in stack: Num.155
//Instructions in stack: Num.156
//Instructions in stack: Num.157
//Instructions in stack: Num.158
//Instructions in stack: Num.159
//Instructions in stack: Num.160
//Instructions in stack: Num.161
//Instructions in stack: Num.162
//Instructions in stack: Num.163
//Instructions in stack: Num.164
//Instructions in stack: Num.165
//Instructions in stack: Num.166
//Instructions in stack: Num.167
//Instructions in stack: Num.168
//Instructions in stack: Num.169
//Instructions in stack: Num.170
//Instructions in stack: Num.171
//Instructions in stack: Num.172
//Instructions in stack: Num.173
//Instructions in stack: Num.174
//Instructions in stack: Num.175
//Instructions in stack: Num.176
//Instructions in stack: Num.177
//Instructions in stack: Num.178
//Instructions in stack: Num.179
//Instructions in stack: Num.180
//Instructions in stack: Num.181
//Instructions in stack: Num.182
//Instructions in stack: Num.183
//Instructions in stack: Num.184
//Instructions in stack: Num.185
//Instructions in stack: Num.186
//Instructions in stack: Num.187
//Instructions in stack: Num.188
//Instructions in stack: Num.189
//Instructions in stack: Num.0
//Instructions in stack: Num.1
//Instructions in stack: Num.2
//Instructions in stack: Num.3
//Instructions in stack: Num.4
//Instructions in stack: Num.5
//Instructions in stack: Num.6
//Instructions in stack: Num.7
//Instructions in stack: Num.8
//Instructions in stack: Num.9
//Instructions in stack: Num.10
//Instructions in stack: Num.11
//Instructions in stack: Num.12
//Instructions in stack: Num.13
//Instructions in stack: Num.14
//Instructions in stack: Num.15
//Instructions in stack: Num.16
