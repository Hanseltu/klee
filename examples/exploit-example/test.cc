#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <new>
#include <iostream>
#include "klee/klee.h"
struct Type1 {char data [8];};
struct Type2 {
    int status;
    int* ptr;
    void init() {};
};
int (*handler)(const int*);
struct {Type1* obj1; Type2* obj2;} gvar = {};
int main(int argc, char* argv[]){
    gvar.obj1 = new Type1;
    gvar.obj2 = new Type2;
    int res;
    char temp[12];
    klee_make_symbolic(temp, 12, "temp");
    int a;
    klee_make_symbolic(&a, sizeof(int), "a");
    int b = a;
    char* buf = temp;
    memcpy (&gvar.obj2->status, buf, 12);
    if(gvar.obj2->status)
    {
        printf ("crashing path is taken. \n");
        //res = *gvar.obj2->ptr;
    }
    else
    {
        printf ("..........exploiting path is taken. \n");
        //*gvar.obj2->ptr = 0x1234;
    }
    handler(gvar.obj2->ptr);
    return res;
}
